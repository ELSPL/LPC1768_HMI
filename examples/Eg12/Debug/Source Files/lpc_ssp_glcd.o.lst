   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"lpc_ssp_glcd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	1
  19              		.thumb
  20              		.thumb_func
  22              	wr_dat_start:
  23              	.LFB65:
  24              		.file 1 "../Source Files/lpc_ssp_glcd.c"
   1:../Source Files/lpc_ssp_glcd.c **** /**********************************************************************
   2:../Source Files/lpc_ssp_glcd.c **** * $Id$		lpc_ssp_glcd.c
   3:../Source Files/lpc_ssp_glcd.c **** *//**
   4:../Source Files/lpc_ssp_glcd.c **** * @file		lpc_ssp_glcd.c
   5:../Source Files/lpc_ssp_glcd.c **** * @brief	Contains all functions support for SSP based GLCD
   6:../Source Files/lpc_ssp_glcd.c **** *           library on LPC17xx
   7:../Source Files/lpc_ssp_glcd.c **** * @version	1.0
   8:../Source Files/lpc_ssp_glcd.c **** * @date		18. Dec. 2013
   9:../Source Files/lpc_ssp_glcd.c **** * @author	Dwijay.Edutech Learning Solutions
  10:../Source Files/lpc_ssp_glcd.c **** ***********************************************************************
  11:../Source Files/lpc_ssp_glcd.c **** * Software that is described herein is for illustrative purposes only
  12:../Source Files/lpc_ssp_glcd.c **** * which provides customers with programming information regarding the
  13:../Source Files/lpc_ssp_glcd.c **** * products. This software is supplied "AS IS" without any warranties.
  14:../Source Files/lpc_ssp_glcd.c **** * NXP Semiconductors assumes no responsibility or liability for the
  15:../Source Files/lpc_ssp_glcd.c **** * use of the software, conveys no license or title under any patent,
  16:../Source Files/lpc_ssp_glcd.c **** * copyright, or mask work right to the product. NXP Semiconductors
  17:../Source Files/lpc_ssp_glcd.c **** * reserves the right to make changes in the software without
  18:../Source Files/lpc_ssp_glcd.c **** * notification. NXP Semiconductors also make no representation or
  19:../Source Files/lpc_ssp_glcd.c **** * warranty that such application will be suitable for the specified
  20:../Source Files/lpc_ssp_glcd.c **** * use without further testing or modification.
  21:../Source Files/lpc_ssp_glcd.c **** **********************************************************************/
  22:../Source Files/lpc_ssp_glcd.c **** 
  23:../Source Files/lpc_ssp_glcd.c **** /* Peripheral group ----------------------------------------------------------- */
  24:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD
  25:../Source Files/lpc_ssp_glcd.c ****  * @{
  26:../Source Files/lpc_ssp_glcd.c ****  */
  27:../Source Files/lpc_ssp_glcd.c **** 
  28:../Source Files/lpc_ssp_glcd.c **** /* Includes ------------------------------------------------------------------- */
  29:../Source Files/lpc_ssp_glcd.c **** #include "lpc_ssp_glcd.h"
  30:../Source Files/lpc_ssp_glcd.c **** #include "math.h"
  31:../Source Files/lpc_ssp_glcd.c **** #include "Font_24x16.h"
  32:../Source Files/lpc_ssp_glcd.c **** 
  33:../Source Files/lpc_ssp_glcd.c **** 
  34:../Source Files/lpc_ssp_glcd.c **** /* If this source file built with example, the LPC17xx FW library configuration
  35:../Source Files/lpc_ssp_glcd.c ****  * file in each example directory ("lpc17xx_libcfg.h") must be included,
  36:../Source Files/lpc_ssp_glcd.c ****  * otherwise the default FW library configuration file must be included instead
  37:../Source Files/lpc_ssp_glcd.c ****  */
  38:../Source Files/lpc_ssp_glcd.c **** 
  39:../Source Files/lpc_ssp_glcd.c **** /******************************************************************************/
  40:../Source Files/lpc_ssp_glcd.c **** static volatile uint16_t TextColor = Black, BackColor = White;
  41:../Source Files/lpc_ssp_glcd.c **** 
  42:../Source Files/lpc_ssp_glcd.c **** // Swap two bytes
  43:../Source Files/lpc_ssp_glcd.c **** #define SWAP(x,y) do { (x)=(x)^(y); (y)=(x)^(y); (x)=(x)^(y); } while(0)
  44:../Source Files/lpc_ssp_glcd.c **** #define bit_test(D,i) (D & (0x01 << i))
  45:../Source Files/lpc_ssp_glcd.c **** 
  46:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD_Public_Functions
  47:../Source Files/lpc_ssp_glcd.c ****  * @{
  48:../Source Files/lpc_ssp_glcd.c ****  */
  49:../Source Files/lpc_ssp_glcd.c **** 
  50:../Source Files/lpc_ssp_glcd.c **** /* Public Functions ----------------------------------------------------------- */
  51:../Source Files/lpc_ssp_glcd.c **** 
  52:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  53:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls Backlight
  54:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	NewState	ENABLE/DISABLE the Backlight
  55:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  56:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  57:../Source Files/lpc_ssp_glcd.c **** void GLCD_Backlight (FunctionalState NewState)
  58:../Source Files/lpc_ssp_glcd.c **** {
  59:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
  60:../Source Files/lpc_ssp_glcd.c **** 	{
  61:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
  62:../Source Files/lpc_ssp_glcd.c **** 	}
  63:../Source Files/lpc_ssp_glcd.c **** 	else
  64:../Source Files/lpc_ssp_glcd.c **** 	{
  65:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
  66:../Source Files/lpc_ssp_glcd.c **** 	}
  67:../Source Files/lpc_ssp_glcd.c **** }
  68:../Source Files/lpc_ssp_glcd.c **** 
  69:../Source Files/lpc_ssp_glcd.c **** 
  70:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  71:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function resets GLCD
  72:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
  73:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  74:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  75:../Source Files/lpc_ssp_glcd.c **** void GLCD_Reset (void)
  76:../Source Files/lpc_ssp_glcd.c **** {
  77:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
  78:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
  79:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
  80:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
  81:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
  82:../Source Files/lpc_ssp_glcd.c **** }
  83:../Source Files/lpc_ssp_glcd.c **** 
  84:../Source Files/lpc_ssp_glcd.c **** 
  85:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  86:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls GLCD Output
  87:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	drv	    Output Format
  88:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_LEFT
  89:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_RIGHT
  90:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_LEFT
  91:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_RIGHT
  92:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  93:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  94:../Source Files/lpc_ssp_glcd.c **** void GLCD_Driver_OutCtrl (DRIVER_OUT_Type drv)
  95:../Source Files/lpc_ssp_glcd.c **** {
  96:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
  97:../Source Files/lpc_ssp_glcd.c **** 
  98:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
  99:../Source Files/lpc_ssp_glcd.c **** 	{
 100:../Source Files/lpc_ssp_glcd.c **** 	case TOP_LEFT:
 101:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 102:../Source Files/lpc_ssp_glcd.c **** 		break;
 103:../Source Files/lpc_ssp_glcd.c **** 
 104:../Source Files/lpc_ssp_glcd.c **** 	case TOP_RIGHT:
 105:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 106:../Source Files/lpc_ssp_glcd.c **** 		break;
 107:../Source Files/lpc_ssp_glcd.c **** 
 108:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_LEFT:
 109:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 110:../Source Files/lpc_ssp_glcd.c **** 		break;
 111:../Source Files/lpc_ssp_glcd.c **** 
 112:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_RIGHT:
 113:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 114:../Source Files/lpc_ssp_glcd.c **** 		break;
 115:../Source Files/lpc_ssp_glcd.c **** 
 116:../Source Files/lpc_ssp_glcd.c **** 	default:
 117:../Source Files/lpc_ssp_glcd.c **** 		break;
 118:../Source Files/lpc_ssp_glcd.c **** 	}
 119:../Source Files/lpc_ssp_glcd.c **** }
 120:../Source Files/lpc_ssp_glcd.c **** 
 121:../Source Files/lpc_ssp_glcd.c **** 
 122:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 123:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set draw window region to required width and height
 124:../Source Files/lpc_ssp_glcd.c ****  *              as well as location
 125:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 126:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 127:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 128:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 129:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 130:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 131:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 132:../Source Files/lpc_ssp_glcd.c **** {
 133:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 134:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 135:../Source Files/lpc_ssp_glcd.c **** 
 136:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 137:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 138:../Source Files/lpc_ssp_glcd.c **** 
 139:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 140:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 141:../Source Files/lpc_ssp_glcd.c **** 
 142:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 143:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 144:../Source Files/lpc_ssp_glcd.c **** }
 145:../Source Files/lpc_ssp_glcd.c **** 
 146:../Source Files/lpc_ssp_glcd.c **** 
 147:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 148:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to to desired location
 149:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 150:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 151:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 152:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 153:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 154:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 155:../Source Files/lpc_ssp_glcd.c **** void GLCD_Set_Loc (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 156:../Source Files/lpc_ssp_glcd.c **** {
 157:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 158:../Source Files/lpc_ssp_glcd.c **** 
 159:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 160:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 161:../Source Files/lpc_ssp_glcd.c **** 
 162:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 163:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 164:../Source Files/lpc_ssp_glcd.c **** 
 165:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 166:../Source Files/lpc_ssp_glcd.c **** }
 167:../Source Files/lpc_ssp_glcd.c **** 
 168:../Source Files/lpc_ssp_glcd.c **** 
 169:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 170:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to Home
 171:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 172:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 173:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 174:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Home (void)
 175:../Source Files/lpc_ssp_glcd.c **** {
 176:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 177:../Source Files/lpc_ssp_glcd.c **** }
 178:../Source Files/lpc_ssp_glcd.c **** 
 179:../Source Files/lpc_ssp_glcd.c **** 
 180:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 181:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Initializes GLCD
 182:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 183:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 184:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 185:../Source Files/lpc_ssp_glcd.c **** void GLCD_Init (void)
 186:../Source Files/lpc_ssp_glcd.c **** {
 187:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 189:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 190:../Source Files/lpc_ssp_glcd.c **** 
 191:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 192:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 193:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 194:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 195:../Source Files/lpc_ssp_glcd.c **** 
 196:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 197:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 198:../Source Files/lpc_ssp_glcd.c **** 
 199:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 200:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 201:../Source Files/lpc_ssp_glcd.c **** 
 202:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 203:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 204:../Source Files/lpc_ssp_glcd.c **** 
 205:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 206:../Source Files/lpc_ssp_glcd.c **** 
 207:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 208:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 209:../Source Files/lpc_ssp_glcd.c **** 
 210:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 211:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 212:../Source Files/lpc_ssp_glcd.c **** 
 213:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 214:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 215:../Source Files/lpc_ssp_glcd.c **** 
 216:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 217:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 218:../Source Files/lpc_ssp_glcd.c **** 
 219:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 220:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 221:../Source Files/lpc_ssp_glcd.c **** 
 222:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 223:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 224:../Source Files/lpc_ssp_glcd.c **** 
 225:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 226:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 227:../Source Files/lpc_ssp_glcd.c **** 
 228:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 229:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 230:../Source Files/lpc_ssp_glcd.c **** 
 231:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 232:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 233:../Source Files/lpc_ssp_glcd.c **** 
 234:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 235:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 236:../Source Files/lpc_ssp_glcd.c **** 
 237:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 238:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 239:../Source Files/lpc_ssp_glcd.c **** 
 240:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 241:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 242:../Source Files/lpc_ssp_glcd.c **** 
 243:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 244:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 245:../Source Files/lpc_ssp_glcd.c **** 
 246:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 247:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 248:../Source Files/lpc_ssp_glcd.c **** 
 249:../Source Files/lpc_ssp_glcd.c **** 	// Gamma Control (R30h to R3Bh) -- Page 56 of SSD2119 datasheet
 250:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 251:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 252:../Source Files/lpc_ssp_glcd.c **** 
 253:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 254:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 255:../Source Files/lpc_ssp_glcd.c **** 
 256:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 257:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 258:../Source Files/lpc_ssp_glcd.c **** 
 259:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 260:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 261:../Source Files/lpc_ssp_glcd.c **** 
 262:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 263:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 264:../Source Files/lpc_ssp_glcd.c **** 
 265:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 266:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 267:../Source Files/lpc_ssp_glcd.c **** 
 268:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 269:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 270:../Source Files/lpc_ssp_glcd.c **** 
 271:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 272:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 273:../Source Files/lpc_ssp_glcd.c **** 
 274:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 275:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 276:../Source Files/lpc_ssp_glcd.c **** 
 277:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 278:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 279:../Source Files/lpc_ssp_glcd.c **** 
 280:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 281:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 282:../Source Files/lpc_ssp_glcd.c **** 
 283:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 284:../Source Files/lpc_ssp_glcd.c **** 
 285:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 286:../Source Files/lpc_ssp_glcd.c **** }
 287:../Source Files/lpc_ssp_glcd.c **** 
 288:../Source Files/lpc_ssp_glcd.c **** 
 289:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 290:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a pixel in foreground color
 291:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 292:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 293:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 294:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 295:../Source Files/lpc_ssp_glcd.c **** void GLCD_PutPixel (uint16_t x, uint16_t y, uint16_t color)
 296:../Source Files/lpc_ssp_glcd.c **** {
 297:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 298:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 299:../Source Files/lpc_ssp_glcd.c **** 
 300:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 301:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 302:../Source Files/lpc_ssp_glcd.c **** 
 303:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 304:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 305:../Source Files/lpc_ssp_glcd.c **** }
 306:../Source Files/lpc_ssp_glcd.c **** 
 307:../Source Files/lpc_ssp_glcd.c **** 
 308:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 309:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set foreground color
 310:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    foreground color
 311:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 312:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 313:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetTextColor (uint16_t color)
 314:../Source Files/lpc_ssp_glcd.c **** {
 315:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 316:../Source Files/lpc_ssp_glcd.c **** }
 317:../Source Files/lpc_ssp_glcd.c **** 
 318:../Source Files/lpc_ssp_glcd.c **** 
 319:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 320:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set background color
 321:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    background color
 322:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 323:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 324:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetBackColor (uint16_t color)
 325:../Source Files/lpc_ssp_glcd.c **** {
 326:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 327:../Source Files/lpc_ssp_glcd.c **** }
 328:../Source Files/lpc_ssp_glcd.c **** 
 329:../Source Files/lpc_ssp_glcd.c **** 
 330:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 331:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Start of data writing to LCD controller
 332:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 333:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 334:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 335:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_start (void)
 336:../Source Files/lpc_ssp_glcd.c **** {
  25              		.loc 1 336 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
 337:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);
  29              		.loc 1 337 0
  30 0000 0021     		movs	r1, #0
 336:../Source Files/lpc_ssp_glcd.c **** {
  31              		.loc 1 336 0
  32 0002 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              		.loc 1 337 0
  38 0004 0448     		ldr	r0, .L2
  39 0006 FFF7FEFF 		bl	CS_Force1
  40              	.LVL0:
 338:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  41              		.loc 1 338 0
  42 000a 0220     		movs	r0, #2
  43 000c 0121     		movs	r1, #1
 339:../Source Files/lpc_ssp_glcd.c **** }
  44              		.loc 1 339 0
  45 000e BDE80840 		pop	{r3, lr}
 338:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  46              		.loc 1 338 0
  47 0012 FFF7FEBF 		b	GPIO_SetValue
  48              	.LVL1:
  49              	.L3:
  50 0016 00BF     		.align	2
  51              	.L2:
  52 0018 00000340 		.word	1073938432
  53              		.cfi_endproc
  54              	.LFE65:
  56              		.align	1
  57              		.thumb
  58              		.thumb_func
  60              	wr_dat_stop:
  61              	.LFB66:
 340:../Source Files/lpc_ssp_glcd.c **** 
 341:../Source Files/lpc_ssp_glcd.c **** 
 342:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 343:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Stop of data writing to LCD controller
 344:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 345:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 346:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 347:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_stop (void)
 348:../Source Files/lpc_ssp_glcd.c **** {
  62              		.loc 1 348 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 349:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  67              		.loc 1 349 0
  68 001c 0148     		ldr	r0, .L5
  69 001e 0121     		movs	r1, #1
 350:../Source Files/lpc_ssp_glcd.c **** }
  70              		.loc 1 350 0
 349:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  71              		.loc 1 349 0
  72 0020 FFF7FEBF 		b	CS_Force1
  73              	.LVL2:
  74              	.L6:
  75              		.align	2
  76              	.L5:
  77 0024 00000340 		.word	1073938432
  78              		.cfi_endproc
  79              	.LFE66:
  81              		.align	1
  82              		.thumb
  83              		.thumb_func
  85              	wr_dat_only:
  86              	.LFB67:
 351:../Source Files/lpc_ssp_glcd.c **** 
 352:../Source Files/lpc_ssp_glcd.c **** 
 353:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 354:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Data writing to LCD controller
 355:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	c     data to be written
 356:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 357:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 358:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_only (uint16_t c)
 359:../Source Files/lpc_ssp_glcd.c **** {
  87              		.loc 1 359 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 24
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL3:
  92 0028 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 32
  95              		.cfi_offset 0, -32
  96              		.cfi_offset 1, -28
  97              		.cfi_offset 2, -24
  98              		.cfi_offset 3, -20
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 6, -8
 102              		.cfi_offset 14, -4
 360:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
 361:../Source Files/lpc_ssp_glcd.c **** 
 362:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 103              		.loc 1 362 0
 104 002a 074B     		ldr	r3, .L8
 105 002c 020A     		lsrs	r2, r0, #8
 363:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) c;        // 2nd byte extract
 106              		.loc 1 363 0
 107 002e 5870     		strb	r0, [r3, #1]
 364:../Source Files/lpc_ssp_glcd.c **** 
 365:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 366:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 367:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 108              		.loc 1 367 0
 109 0030 0220     		movs	r0, #2
 110              	.LVL4:
 362:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 111              		.loc 1 362 0
 112 0032 1A70     		strb	r2, [r3, #0]
 113              		.loc 1 367 0
 114 0034 0490     		str	r0, [sp, #16]
 366:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 115              		.loc 1 366 0
 116 0036 0022     		movs	r2, #0
 368:../Source Files/lpc_ssp_glcd.c **** 	SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 117              		.loc 1 368 0
 118 0038 6946     		mov	r1, sp
 119 003a 0448     		ldr	r0, .L8+4
 365:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 120              		.loc 1 365 0
 121 003c 0093     		str	r3, [sp, #0]
 366:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 122              		.loc 1 366 0
 123 003e 0292     		str	r2, [sp, #8]
 124              		.loc 1 368 0
 125 0040 FFF7FEFF 		bl	SSP_ReadWrite
 126              	.LVL5:
 369:../Source Files/lpc_ssp_glcd.c **** }
 127              		.loc 1 369 0
 128 0044 07B0     		add	sp, sp, #28
 129 0046 00BD     		pop	{pc}
 130              	.L9:
 131              		.align	2
 132              	.L8:
 133 0048 00000000 		.word	Tx_Buf1
 134 004c 00000340 		.word	1073938432
 135              		.cfi_endproc
 136              	.LFE67:
 138              		.align	1
 139              		.global	GLCD_Backlight
 140              		.thumb
 141              		.thumb_func
 143              	GLCD_Backlight:
 144              	.LFB55:
  58:../Source Files/lpc_ssp_glcd.c **** {
 145              		.loc 1 58 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150              	.LVL6:
  59:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
 151              		.loc 1 59 0
 152 0050 20B1     		cbz	r0, .L11
  61:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 153              		.loc 1 61 0
 154 0052 0220     		movs	r0, #2
 155              	.LVL7:
 156 0054 4FF48071 		mov	r1, #256
  67:../Source Files/lpc_ssp_glcd.c **** }
 157              		.loc 1 67 0
  61:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 158              		.loc 1 61 0
 159 0058 FFF7FEBF 		b	GPIO_SetValue
 160              	.LVL8:
 161              	.L11:
  65:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 162              		.loc 1 65 0
 163 005c 0220     		movs	r0, #2
 164              	.LVL9:
 165 005e 4FF48071 		mov	r1, #256
  67:../Source Files/lpc_ssp_glcd.c **** }
 166              		.loc 1 67 0
  65:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 167              		.loc 1 65 0
 168 0062 FFF7FEBF 		b	GPIO_ClearValue
 169              	.LVL10:
 170              		.cfi_endproc
 171              	.LFE55:
 173              		.align	1
 174              		.global	GLCD_Reset
 175              		.thumb
 176              		.thumb_func
 178              	GLCD_Reset:
 179              	.LFB56:
  76:../Source Files/lpc_ssp_glcd.c **** {
 180              		.loc 1 76 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0066 08B5     		push	{r3, lr}
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
  77:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
 189              		.loc 1 77 0
 190 0068 2021     		movs	r1, #32
 191 006a 0020     		movs	r0, #0
 192 006c FFF7FEFF 		bl	GPIO_SetValue
 193              	.LVL11:
  78:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 194              		.loc 1 78 0
 195 0070 0220     		movs	r0, #2
 196 0072 FFF7FEFF 		bl	delay_ms
 197              	.LVL12:
  79:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
 198              		.loc 1 79 0
 199 0076 2021     		movs	r1, #32
 200 0078 0020     		movs	r0, #0
 201 007a FFF7FEFF 		bl	GPIO_ClearValue
 202              	.LVL13:
  80:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
 203              		.loc 1 80 0
 204 007e 0420     		movs	r0, #4
 205 0080 FFF7FEFF 		bl	delay_ms
 206              	.LVL14:
  81:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 207              		.loc 1 81 0
 208 0084 0020     		movs	r0, #0
 209 0086 2021     		movs	r1, #32
  82:../Source Files/lpc_ssp_glcd.c **** }
 210              		.loc 1 82 0
 211 0088 BDE80840 		pop	{r3, lr}
  81:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 212              		.loc 1 81 0
 213 008c FFF7FEBF 		b	GPIO_SetValue
 214              	.LVL15:
 215              		.cfi_endproc
 216              	.LFE56:
 218              		.align	1
 219              		.global	GLCD_SetTextColor
 220              		.thumb
 221              		.thumb_func
 223              	GLCD_SetTextColor:
 224              	.LFB63:
 314:../Source Files/lpc_ssp_glcd.c **** {
 225              		.loc 1 314 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL16:
 315:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 231              		.loc 1 315 0
 232 0090 014B     		ldr	r3, .L15
 233 0092 1880     		strh	r0, [r3, #0]	@ movhi
 234 0094 7047     		bx	lr
 235              	.L16:
 236 0096 00BF     		.align	2
 237              	.L15:
 238 0098 00000000 		.word	.LANCHOR0
 239              		.cfi_endproc
 240              	.LFE63:
 242              		.align	1
 243              		.global	GLCD_SetBackColor
 244              		.thumb
 245              		.thumb_func
 247              	GLCD_SetBackColor:
 248              	.LFB64:
 325:../Source Files/lpc_ssp_glcd.c **** {
 249              		.loc 1 325 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL17:
 326:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 255              		.loc 1 326 0
 256 009c 014B     		ldr	r3, .L18
 257 009e 1880     		strh	r0, [r3, #0]	@ movhi
 258 00a0 7047     		bx	lr
 259              	.L19:
 260 00a2 00BF     		.align	2
 261              	.L18:
 262 00a4 00000000 		.word	.LANCHOR1
 263              		.cfi_endproc
 264              	.LFE64:
 266              		.align	1
 267              		.global	Write_Command_Glcd
 268              		.thumb
 269              		.thumb_func
 271              	Write_Command_Glcd:
 272              	.LFB82:
 370:../Source Files/lpc_ssp_glcd.c **** 
 371:../Source Files/lpc_ssp_glcd.c **** 
 372:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 373:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear display
 374:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    display clearing color
 375:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 376:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 377:../Source Files/lpc_ssp_glcd.c **** void GLCD_Clear (uint16_t color)
 378:../Source Files/lpc_ssp_glcd.c **** {
 379:../Source Files/lpc_ssp_glcd.c **** 	unsigned int   i;
 380:../Source Files/lpc_ssp_glcd.c **** 
 381:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 382:../Source Files/lpc_ssp_glcd.c **** 
 383:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 384:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 385:../Source Files/lpc_ssp_glcd.c **** 
 386:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 387:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 388:../Source Files/lpc_ssp_glcd.c **** 
 389:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 390:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 391:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 392:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 393:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 394:../Source Files/lpc_ssp_glcd.c **** }
 395:../Source Files/lpc_ssp_glcd.c **** 
 396:../Source Files/lpc_ssp_glcd.c **** 
 397:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 398:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw character on given position
 399:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x       horizontal position
 400:../Source Files/lpc_ssp_glcd.c ****  *              y       vertical position
 401:../Source Files/lpc_ssp_glcd.c ****  *              c       pointer to character bitmap
 402:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 403:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 404:../Source Files/lpc_ssp_glcd.c **** void GLCD_Draw_Char (uint16_t x, uint16_t y, uint16_t *c)
 405:../Source Files/lpc_ssp_glcd.c **** {
 406:../Source Files/lpc_ssp_glcd.c **** 	int idx = 0, i, j;
 407:../Source Files/lpc_ssp_glcd.c **** 
 408:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 409:../Source Files/lpc_ssp_glcd.c **** 
 410:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 411:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 412:../Source Files/lpc_ssp_glcd.c **** 
 413:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 414:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 415:../Source Files/lpc_ssp_glcd.c **** 
 416:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 417:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 418:../Source Files/lpc_ssp_glcd.c **** 
 419:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 420:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 421:../Source Files/lpc_ssp_glcd.c **** 
 422:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 423:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 424:../Source Files/lpc_ssp_glcd.c **** 
 425:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 426:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 427:../Source Files/lpc_ssp_glcd.c **** 
 428:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 429:../Source Files/lpc_ssp_glcd.c **** 
 430:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 431:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 432:../Source Files/lpc_ssp_glcd.c **** 	{
 433:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 434:../Source Files/lpc_ssp_glcd.c **** 		{
 435:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 436:../Source Files/lpc_ssp_glcd.c **** 			{
 437:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 438:../Source Files/lpc_ssp_glcd.c **** 			}
 439:../Source Files/lpc_ssp_glcd.c **** 			else
 440:../Source Files/lpc_ssp_glcd.c **** 			{
 441:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 442:../Source Files/lpc_ssp_glcd.c **** 			}
 443:../Source Files/lpc_ssp_glcd.c **** 		}
 444:../Source Files/lpc_ssp_glcd.c **** 		c++;
 445:../Source Files/lpc_ssp_glcd.c **** 	}
 446:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 447:../Source Files/lpc_ssp_glcd.c **** }
 448:../Source Files/lpc_ssp_glcd.c **** 
 449:../Source Files/lpc_ssp_glcd.c **** 
 450:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 451:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply character on given line
 452:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 453:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 454:../Source Files/lpc_ssp_glcd.c ****  *              c        ascii character
 455:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 456:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 457:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Char (uint16_t ln, uint16_t col, uchar c)
 458:../Source Files/lpc_ssp_glcd.c **** {
 459:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 460:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 461:../Source Files/lpc_ssp_glcd.c **** }
 462:../Source Files/lpc_ssp_glcd.c **** 
 463:../Source Files/lpc_ssp_glcd.c **** 
 464:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 465:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply string on given line
 466:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 467:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 468:../Source Files/lpc_ssp_glcd.c ****  *              s        pointer to string
 469:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 470:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 471:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 472:../Source Files/lpc_ssp_glcd.c **** {
 473:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 474:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 475:../Source Files/lpc_ssp_glcd.c **** 	{
 476:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 477:../Source Files/lpc_ssp_glcd.c **** 	}
 478:../Source Files/lpc_ssp_glcd.c **** }
 479:../Source Files/lpc_ssp_glcd.c **** 
 480:../Source Files/lpc_ssp_glcd.c **** 
 481:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 482:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear given line
 483:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 484:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 485:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 486:../Source Files/lpc_ssp_glcd.c **** void GLCD_ClearLn (uint16_t ln)
 487:../Source Files/lpc_ssp_glcd.c **** {
 488:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 489:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 490:../Source Files/lpc_ssp_glcd.c **** }
 491:../Source Files/lpc_ssp_glcd.c **** 
 492:../Source Files/lpc_ssp_glcd.c **** 
 493:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 494:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw bargraph
 495:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 496:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 497:../Source Files/lpc_ssp_glcd.c ****  *              w        maximum width of bargraph (in pixels)
 498:../Source Files/lpc_ssp_glcd.c ****  *              val      value of active bargraph (in 1/1024)
 499:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 500:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 501:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bargraph (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t val)
 502:../Source Files/lpc_ssp_glcd.c **** {
 503:../Source Files/lpc_ssp_glcd.c **** 	int i,j;
 504:../Source Files/lpc_ssp_glcd.c **** 
 505:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 506:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 507:../Source Files/lpc_ssp_glcd.c **** 
 508:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 509:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 510:../Source Files/lpc_ssp_glcd.c **** 
 511:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 512:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 513:../Source Files/lpc_ssp_glcd.c **** 
 514:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 515:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 516:../Source Files/lpc_ssp_glcd.c **** 
 517:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 518:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 519:../Source Files/lpc_ssp_glcd.c **** 
 520:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 521:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 522:../Source Files/lpc_ssp_glcd.c **** 
 523:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 524:../Source Files/lpc_ssp_glcd.c **** 
 525:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 526:../Source Files/lpc_ssp_glcd.c **** 
 527:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 528:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 529:../Source Files/lpc_ssp_glcd.c **** 	{
 530:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 531:../Source Files/lpc_ssp_glcd.c **** 		{
 532:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 533:../Source Files/lpc_ssp_glcd.c **** 			{
 534:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 535:../Source Files/lpc_ssp_glcd.c **** 			}
 536:../Source Files/lpc_ssp_glcd.c **** 			else
 537:../Source Files/lpc_ssp_glcd.c **** 			{
 538:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 539:../Source Files/lpc_ssp_glcd.c **** 			}
 540:../Source Files/lpc_ssp_glcd.c **** 		}
 541:../Source Files/lpc_ssp_glcd.c **** 	}
 542:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 543:../Source Files/lpc_ssp_glcd.c **** }
 544:../Source Files/lpc_ssp_glcd.c **** 
 545:../Source Files/lpc_ssp_glcd.c **** 
 546:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 547:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Display graphical bitmap image at position x horizontally
 548:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 549:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 550:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 551:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 552:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 553:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 554:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 555:../Source Files/lpc_ssp_glcd.c ****  *              bitmap   address at which the bitmap data resides
 556:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 557:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 558:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 559:../Source Files/lpc_ssp_glcd.c **** {
 560:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j,k;
 561:../Source Files/lpc_ssp_glcd.c **** 
 562:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 563:../Source Files/lpc_ssp_glcd.c **** 
 564:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 565:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 566:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 567:../Source Files/lpc_ssp_glcd.c **** 	{
 568:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 569:../Source Files/lpc_ssp_glcd.c **** 		{
 570:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 571:../Source Files/lpc_ssp_glcd.c **** 		}
 572:../Source Files/lpc_ssp_glcd.c **** 	}
 573:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 574:../Source Files/lpc_ssp_glcd.c **** }
 575:../Source Files/lpc_ssp_glcd.c **** 
 576:../Source Files/lpc_ssp_glcd.c **** 
 577:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 578:../Source Files/lpc_ssp_glcd.c ****  * @brief	    F at position x horizontally
 579:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 580:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 581:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 582:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 583:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 584:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 585:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 586:../Source Files/lpc_ssp_glcd.c ****  *              color    window color
 587:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 588:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 589:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window_Fill (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color)
 590:../Source Files/lpc_ssp_glcd.c **** {
 591:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j;
 592:../Source Files/lpc_ssp_glcd.c **** 
 593:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 594:../Source Files/lpc_ssp_glcd.c **** 
 595:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 596:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 597:../Source Files/lpc_ssp_glcd.c **** 	{
 598:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 599:../Source Files/lpc_ssp_glcd.c **** 		{
 600:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 601:../Source Files/lpc_ssp_glcd.c **** 		}
 602:../Source Files/lpc_ssp_glcd.c **** 	}
 603:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 604:../Source Files/lpc_ssp_glcd.c **** }
 605:../Source Files/lpc_ssp_glcd.c **** 
 606:../Source Files/lpc_ssp_glcd.c **** 
 607:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 608:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a line on a graphic LCD using Bresenham's
 609:../Source Files/lpc_ssp_glcd.c ****  *              line drawing algorithm
 610:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)   the start coordinate
 611:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)   the end coordinate
 612:../Source Files/lpc_ssp_glcd.c ****  *              color      line color
 613:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 614:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 615:../Source Files/lpc_ssp_glcd.c **** void GLCD_Line(int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color)
 616:../Source Files/lpc_ssp_glcd.c **** {
 617:../Source Files/lpc_ssp_glcd.c **** 	int16_t  x, y, addx, addy, dx, dy;
 618:../Source Files/lpc_ssp_glcd.c **** 	int32_t P,i;
 619:../Source Files/lpc_ssp_glcd.c **** 
 620:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 621:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 622:../Source Files/lpc_ssp_glcd.c **** 	x = x1;
 623:../Source Files/lpc_ssp_glcd.c **** 	y = y1;
 624:../Source Files/lpc_ssp_glcd.c **** 
 625:../Source Files/lpc_ssp_glcd.c **** 	if(x1 > x2)
 626:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 627:../Source Files/lpc_ssp_glcd.c **** 	else
 628:../Source Files/lpc_ssp_glcd.c **** 		addx = 1;
 629:../Source Files/lpc_ssp_glcd.c **** 	if(y1 > y2)
 630:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 631:../Source Files/lpc_ssp_glcd.c **** 	else
 632:../Source Files/lpc_ssp_glcd.c **** 		addy = 1;
 633:../Source Files/lpc_ssp_glcd.c **** 
 634:../Source Files/lpc_ssp_glcd.c **** 
 635:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 636:../Source Files/lpc_ssp_glcd.c **** 	{
 637:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 638:../Source Files/lpc_ssp_glcd.c **** 
 639:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 640:../Source Files/lpc_ssp_glcd.c **** 		{
 641:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 642:../Source Files/lpc_ssp_glcd.c **** 
 643:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 644:../Source Files/lpc_ssp_glcd.c **** 			{
 645:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 646:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 647:../Source Files/lpc_ssp_glcd.c **** 			}
 648:../Source Files/lpc_ssp_glcd.c **** 			else
 649:../Source Files/lpc_ssp_glcd.c **** 			{
 650:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 651:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 652:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 653:../Source Files/lpc_ssp_glcd.c **** 			}
 654:../Source Files/lpc_ssp_glcd.c **** 		}
 655:../Source Files/lpc_ssp_glcd.c **** 	}
 656:../Source Files/lpc_ssp_glcd.c **** 	else
 657:../Source Files/lpc_ssp_glcd.c **** 	{
 658:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 659:../Source Files/lpc_ssp_glcd.c **** 
 660:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 661:../Source Files/lpc_ssp_glcd.c **** 		{
 662:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 663:../Source Files/lpc_ssp_glcd.c **** 
 664:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 665:../Source Files/lpc_ssp_glcd.c **** 			{
 666:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 667:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 668:../Source Files/lpc_ssp_glcd.c **** 			}
 669:../Source Files/lpc_ssp_glcd.c **** 			else
 670:../Source Files/lpc_ssp_glcd.c **** 			{
 671:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 672:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 673:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 674:../Source Files/lpc_ssp_glcd.c **** 			}
 675:../Source Files/lpc_ssp_glcd.c **** 		}
 676:../Source Files/lpc_ssp_glcd.c **** 	}
 677:../Source Files/lpc_ssp_glcd.c **** }
 678:../Source Files/lpc_ssp_glcd.c **** 
 679:../Source Files/lpc_ssp_glcd.c **** 
 680:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 681:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Rectangle on a graphic LCD
 682:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 683:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 684:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Rectangle TRUE/FALSE or ON/OFF
 685:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 686:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   fill color
 687:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 688:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 689:../Source Files/lpc_ssp_glcd.c **** void GLCD_Rect(COORDINATE_Type *p1, COORDINATE_Type *p2, Bool fill, uint16_t color, uint16_t fill_c
 690:../Source Files/lpc_ssp_glcd.c **** {
 691:../Source Files/lpc_ssp_glcd.c **** 	int16_t  width,height;                          // Find the y min and max
 692:../Source Files/lpc_ssp_glcd.c **** 
 693:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 694:../Source Files/lpc_ssp_glcd.c **** 	{
 695:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 696:../Source Files/lpc_ssp_glcd.c **** 		{
 697:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 698:../Source Files/lpc_ssp_glcd.c **** 			{
 699:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 700:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 701:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 702:../Source Files/lpc_ssp_glcd.c **** 			}
 703:../Source Files/lpc_ssp_glcd.c **** 			else
 704:../Source Files/lpc_ssp_glcd.c **** 			{
 705:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 706:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 707:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 708:../Source Files/lpc_ssp_glcd.c **** 			}
 709:../Source Files/lpc_ssp_glcd.c **** 		}
 710:../Source Files/lpc_ssp_glcd.c **** 		else
 711:../Source Files/lpc_ssp_glcd.c **** 		{
 712:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 713:../Source Files/lpc_ssp_glcd.c **** 			{
 714:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 715:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 716:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 717:../Source Files/lpc_ssp_glcd.c **** 			}
 718:../Source Files/lpc_ssp_glcd.c **** 			else
 719:../Source Files/lpc_ssp_glcd.c **** 			{
 720:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 721:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 722:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 723:../Source Files/lpc_ssp_glcd.c **** 			}
 724:../Source Files/lpc_ssp_glcd.c **** 		}
 725:../Source Files/lpc_ssp_glcd.c **** 		fill = NO;
 726:../Source Files/lpc_ssp_glcd.c **** 	}
 727:../Source Files/lpc_ssp_glcd.c **** 	if(!fill)
 728:../Source Files/lpc_ssp_glcd.c **** 	{
 729:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 732:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 733:../Source Files/lpc_ssp_glcd.c **** 	}
 734:../Source Files/lpc_ssp_glcd.c **** }
 735:../Source Files/lpc_ssp_glcd.c **** 
 736:../Source Files/lpc_ssp_glcd.c **** 
 737:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 738:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a frame on a graphic LCD
 739:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 740:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 741:../Source Files/lpc_ssp_glcd.c ****  *              frame_width  Total Width of Frame
 742:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 743:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Frame fill color
 744:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 745:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 746:../Source Files/lpc_ssp_glcd.c **** void GLCD_Frame(COORDINATE_Type *p1, COORDINATE_Type *p2, int16_t frame_width, uint16_t color, uint
 747:../Source Files/lpc_ssp_glcd.c **** {
 748:../Source Files/lpc_ssp_glcd.c **** 	int16_t fw;                          // Find the y min and max
 749:../Source Files/lpc_ssp_glcd.c **** 
 750:../Source Files/lpc_ssp_glcd.c **** 	fw = frame_width;
 751:../Source Files/lpc_ssp_glcd.c **** 
 752:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 753:../Source Files/lpc_ssp_glcd.c **** 	{
 754:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 755:../Source Files/lpc_ssp_glcd.c **** 		{
 756:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 759:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 760:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 761:../Source Files/lpc_ssp_glcd.c **** 		}
 762:../Source Files/lpc_ssp_glcd.c **** 		else
 763:../Source Files/lpc_ssp_glcd.c **** 		{
 764:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 767:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 768:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 769:../Source Files/lpc_ssp_glcd.c **** 		}
 770:../Source Files/lpc_ssp_glcd.c **** 	}
 771:../Source Files/lpc_ssp_glcd.c **** 
 772:../Source Files/lpc_ssp_glcd.c **** 	if(!fw)
 773:../Source Files/lpc_ssp_glcd.c **** 	{
 774:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 777:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 778:../Source Files/lpc_ssp_glcd.c **** 	}
 779:../Source Files/lpc_ssp_glcd.c **** }
 780:../Source Files/lpc_ssp_glcd.c **** 
 781:../Source Files/lpc_ssp_glcd.c **** 
 782:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 783:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a rectangle/frame on a graphic LCD
 784:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 785:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 786:../Source Files/lpc_ssp_glcd.c ****  *              (x3, y3)     the end coordinate
 787:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Triangle TRUE/FALSE or ON/OFF
 788:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 789:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Triangle Fill Color
 790:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 791:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 792:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 793:../Source Files/lpc_ssp_glcd.c **** {
 794:../Source Files/lpc_ssp_glcd.c ****     if(fill)
 795:../Source Files/lpc_ssp_glcd.c ****     {
 796:../Source Files/lpc_ssp_glcd.c ****     	uint16_t t1x,t2x,y,minx,maxx,t1xp,t2xp;
 797:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 798:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 799:../Source Files/lpc_ssp_glcd.c ****     	int16_t signx1,signx2,dx1,dy1,dx2,dy2;
 800:../Source Files/lpc_ssp_glcd.c ****     	uint16_t e1,e2;
 801:../Source Files/lpc_ssp_glcd.c ****         // Sort vertices
 802:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 805:../Source Files/lpc_ssp_glcd.c **** 
 806:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 807:../Source Files/lpc_ssp_glcd.c **** 
 808:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 809:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 810:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 811:../Source Files/lpc_ssp_glcd.c **** 
 812:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 813:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 814:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 815:../Source Files/lpc_ssp_glcd.c **** 
 816:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 817:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 818:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 819:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 820:../Source Files/lpc_ssp_glcd.c ****     	}
 821:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 822:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 823:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 824:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 825:../Source Files/lpc_ssp_glcd.c ****     	}
 826:../Source Files/lpc_ssp_glcd.c **** 
 827:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 828:../Source Files/lpc_ssp_glcd.c ****         // Flat top, just process the second half
 829:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 830:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 831:../Source Files/lpc_ssp_glcd.c **** 
 832:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 833:../Source Files/lpc_ssp_glcd.c ****     	{
 834:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 835:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 836:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 837:../Source Files/lpc_ssp_glcd.c ****             // process first line until y value is about to change
 838:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 839:../Source Files/lpc_ssp_glcd.c ****     		{
 840:../Source Files/lpc_ssp_glcd.c ****     			i++;
 841:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 842:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 843:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 844:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 845:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 846:../Source Files/lpc_ssp_glcd.c ****     				else          goto next1;
 847:../Source Files/lpc_ssp_glcd.c ****     			}
 848:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 849:../Source Files/lpc_ssp_glcd.c ****     			else t1x += signx1;
 850:../Source Files/lpc_ssp_glcd.c ****     		}
 851:../Source Files/lpc_ssp_glcd.c ****     	// Move line
 852:../Source Files/lpc_ssp_glcd.c ****     	next1:
 853:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 854:../Source Files/lpc_ssp_glcd.c ****     		while (1)
 855:../Source Files/lpc_ssp_glcd.c ****     		{
 856:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 857:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 858:../Source Files/lpc_ssp_glcd.c ****     			{
 859:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 860:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 861:../Source Files/lpc_ssp_glcd.c ****     				else          goto next2;
 862:../Source Files/lpc_ssp_glcd.c ****     			}
 863:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 864:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 865:../Source Files/lpc_ssp_glcd.c ****     		}
 866:../Source Files/lpc_ssp_glcd.c ****     	next2:
 867:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 868:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 869:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 870:../Source Files/lpc_ssp_glcd.c **** 
 871:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 872:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 873:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 874:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 875:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 876:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 877:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 878:../Source Files/lpc_ssp_glcd.c ****        }
 879:../Source Files/lpc_ssp_glcd.c ****     	next:
 880:../Source Files/lpc_ssp_glcd.c ****     	// Second half
 881:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 882:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 883:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 884:../Source Files/lpc_ssp_glcd.c **** 
 885:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 886:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 887:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 888:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 889:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 890:../Source Files/lpc_ssp_glcd.c **** 
 891:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 892:../Source Files/lpc_ssp_glcd.c **** 
 893:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 894:../Source Files/lpc_ssp_glcd.c ****     	{
 895:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 896:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 897:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 898:../Source Files/lpc_ssp_glcd.c ****     	    // process first line until y value is about to change
 899:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 900:../Source Files/lpc_ssp_glcd.c ****     		{
 901:../Source Files/lpc_ssp_glcd.c ****         		e1 += dy1;
 902:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 903:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 904:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 905:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 906:../Source Files/lpc_ssp_glcd.c ****     				else          goto next3;
 907:../Source Files/lpc_ssp_glcd.c ****     			}
 908:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 909:../Source Files/lpc_ssp_glcd.c ****     			else   	   	  t1x += signx1;
 910:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 911:../Source Files/lpc_ssp_glcd.c ****     		}
 912:../Source Files/lpc_ssp_glcd.c ****     	next3:
 913:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 914:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 915:../Source Files/lpc_ssp_glcd.c ****     		{
 916:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 917:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 918:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 919:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 920:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 921:../Source Files/lpc_ssp_glcd.c ****     				else          goto next4;
 922:../Source Files/lpc_ssp_glcd.c ****     			}
 923:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 924:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 925:../Source Files/lpc_ssp_glcd.c ****     		}
 926:../Source Files/lpc_ssp_glcd.c ****     	next4:
 927:../Source Files/lpc_ssp_glcd.c **** 
 928:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 929:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 930:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 931:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 932:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 933:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 934:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 935:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 936:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 937:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 938:../Source Files/lpc_ssp_glcd.c ****     	}
 939:../Source Files/lpc_ssp_glcd.c ****     	fill = NO;
 940:../Source Files/lpc_ssp_glcd.c ****     }
 941:../Source Files/lpc_ssp_glcd.c **** 
 942:../Source Files/lpc_ssp_glcd.c **** 
 943:../Source Files/lpc_ssp_glcd.c **** 	if(!fill)
 944:../Source Files/lpc_ssp_glcd.c **** 	{
 945:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, color);
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, color);
 947:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, color);
 948:../Source Files/lpc_ssp_glcd.c **** 	}
 949:../Source Files/lpc_ssp_glcd.c **** }
 950:../Source Files/lpc_ssp_glcd.c **** 
 951:../Source Files/lpc_ssp_glcd.c **** 
 952:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 953:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Circle with given Center and Radius
 954:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x, y)     the center of the circle
 955:../Source Files/lpc_ssp_glcd.c ****  *              radius     the radius of the circle
 956:../Source Files/lpc_ssp_glcd.c ****  *              fill       YES or NO
 957:../Source Files/lpc_ssp_glcd.c ****  *              color      Boundary color
 958:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 959:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 961:../Source Files/lpc_ssp_glcd.c **** {
 962:../Source Files/lpc_ssp_glcd.c **** 	int16_t a, b, P;
 963:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 964:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 965:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 966:../Source Files/lpc_ssp_glcd.c **** 
 967:../Source Files/lpc_ssp_glcd.c **** 	do
 968:../Source Files/lpc_ssp_glcd.c **** 	{
 969:../Source Files/lpc_ssp_glcd.c **** 		if(fill)
 970:../Source Files/lpc_ssp_glcd.c **** 		{
 971:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, fill_color);
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, fill_color);
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, fill_color);
 975:../Source Files/lpc_ssp_glcd.c **** 		}
 976:../Source Files/lpc_ssp_glcd.c **** 
 977:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 978:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 979:../Source Files/lpc_ssp_glcd.c **** 		else
 980:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 981:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 982:../Source Files/lpc_ssp_glcd.c **** 
 983:../Source Files/lpc_ssp_glcd.c **** 	fill = NO;
 984:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 985:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 986:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 987:../Source Files/lpc_ssp_glcd.c **** 	do
 988:../Source Files/lpc_ssp_glcd.c **** 	{
 989:../Source Files/lpc_ssp_glcd.c **** 		if(!fill)
 990:../Source Files/lpc_ssp_glcd.c **** 		{
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, color);
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, color);
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, color);
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, color);
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, color);
 998:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, color);
 999:../Source Files/lpc_ssp_glcd.c **** 		}
1000:../Source Files/lpc_ssp_glcd.c **** 
1001:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
1002:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
1003:../Source Files/lpc_ssp_glcd.c **** 		else
1004:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
1005:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
1006:../Source Files/lpc_ssp_glcd.c **** }
1007:../Source Files/lpc_ssp_glcd.c **** 
1008:../Source Files/lpc_ssp_glcd.c **** 
1009:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1010:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Write text on a graphic LCD
1011:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x,y)      The upper left coordinate of the first letter
1012:../Source Files/lpc_ssp_glcd.c ****  *              textptr    A pointer to an array of text to display
1013:../Source Files/lpc_ssp_glcd.c ****  *              row        Number of rows of pixels
1014:../Source Files/lpc_ssp_glcd.c ****  *              col        Number of Colums of pixels
1015:../Source Files/lpc_ssp_glcd.c ****  *              font       font 2 dimentional array
1016:../Source Files/lpc_ssp_glcd.c ****  *              size       The size of the text: 1 = 5x7, 2 = 10x14, ...
1017:../Source Files/lpc_ssp_glcd.c ****  *              color      font color
1018:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1019:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1020:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
1021:../Source Files/lpc_ssp_glcd.c **** {
1022:../Source Files/lpc_ssp_glcd.c ****    int16_t i, j, k, l, m;                     // Loop counters
1023:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
1024:../Source Files/lpc_ssp_glcd.c **** 
1025:../Source Files/lpc_ssp_glcd.c ****    for(i=0; textptr[i] != '\0'; ++i, ++x) // Loop through the passed string
1026:../Source Files/lpc_ssp_glcd.c ****    {
1027:../Source Files/lpc_ssp_glcd.c ****       memcpy(pixelData, font[textptr[i]-' '], row);
1028:../Source Files/lpc_ssp_glcd.c **** 
1029:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
1030:../Source Files/lpc_ssp_glcd.c ****       {
1031:../Source Files/lpc_ssp_glcd.c ****          x = 0;                           // Set x at far left position
1032:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
1033:../Source Files/lpc_ssp_glcd.c ****       }
1034:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
1035:../Source Files/lpc_ssp_glcd.c ****       {
1036:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
1037:../Source Files/lpc_ssp_glcd.c ****          {
1038:../Source Files/lpc_ssp_glcd.c ****             if(bit_test(pixelData[j], k)) // Check if the pixel should be set
1039:../Source Files/lpc_ssp_glcd.c ****             {
1040:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
1041:../Source Files/lpc_ssp_glcd.c ****                {                          // character's size
1042:../Source Files/lpc_ssp_glcd.c ****                   for(m=0; m<size; ++m)
1043:../Source Files/lpc_ssp_glcd.c ****                   {
1044:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
1045:../Source Files/lpc_ssp_glcd.c ****                   }
1046:../Source Files/lpc_ssp_glcd.c ****                }
1047:../Source Files/lpc_ssp_glcd.c ****             }
1048:../Source Files/lpc_ssp_glcd.c ****          }
1049:../Source Files/lpc_ssp_glcd.c ****       }
1050:../Source Files/lpc_ssp_glcd.c ****    }
1051:../Source Files/lpc_ssp_glcd.c **** }
1052:../Source Files/lpc_ssp_glcd.c **** 
1053:../Source Files/lpc_ssp_glcd.c **** 
1054:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1055:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes commands to the GLCD
1056:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	Command		command to be written on GLCD
1057:../Source Files/lpc_ssp_glcd.c ****  * @return 		status
1058:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1059:../Source Files/lpc_ssp_glcd.c **** uchar Write_Command_Glcd (uint8_t Command)
1060:../Source Files/lpc_ssp_glcd.c **** {
 273              		.loc 1 1060 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 40
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL18:
 278 00a8 10B5     		push	{r4, lr}
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 283 00aa 8AB0     		sub	sp, sp, #40
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 48
 286              		.loc 1 1060 0
 287 00ac 0AAC     		add	r4, sp, #40
 288 00ae 04F8210D 		strb	r0, [r4, #-33]!
1061:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1062:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1063:../Source Files/lpc_ssp_glcd.c **** 	__IO uint32_t i;
1064:../Source Files/lpc_ssp_glcd.c **** 
1065:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(2, LCD_RS);  //select command mode
 289              		.loc 1 1065 0
 290 00b2 0121     		movs	r1, #1
 291 00b4 0220     		movs	r0, #2
 292              	.LVL19:
 293 00b6 FFF7FEFF 		bl	GPIO_ClearValue
 294              	.LVL20:
1066:../Source Files/lpc_ssp_glcd.c **** 
1067:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 295              		.loc 1 1067 0
 296 00ba 1148     		ldr	r0, .L27
 297 00bc 0021     		movs	r1, #0
 298 00be FFF7FEFF 		bl	CS_Force1
 299              	.LVL21:
1068:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = &Command;               /* Send Instruction Byte    */
 300              		.loc 1 1068 0
 301 00c2 0494     		str	r4, [sp, #16]
1069:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 302              		.loc 1 1069 0
 303 00c4 0022     		movs	r2, #0
1070:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 304              		.loc 1 1070 0
 305 00c6 0124     		movs	r4, #1
1071:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 306              		.loc 1 1071 0
 307 00c8 0D48     		ldr	r0, .L27
 308 00ca 04A9     		add	r1, sp, #16
1069:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 309              		.loc 1 1069 0
 310 00cc 0692     		str	r2, [sp, #24]
1070:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 311              		.loc 1 1070 0
 312 00ce 0894     		str	r4, [sp, #32]
 313              		.loc 1 1071 0
 314 00d0 FFF7FEFF 		bl	SSP_ReadWrite
 315              	.LVL22:
1072:../Source Files/lpc_ssp_glcd.c **** 
1073:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 316              		.loc 1 1073 0
 317 00d4 C0B2     		uxtb	r0, r0
 318 00d6 80B1     		cbz	r0, .L21
 319              	.LBB4:
 320              	.LBB5:
1074:../Source Files/lpc_ssp_glcd.c **** 	{
1075:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 321              		.loc 1 1075 0
 322 00d8 2146     		mov	r1, r4
 323 00da 0948     		ldr	r0, .L27
 324              	.LVL23:
 325 00dc FFF7FEFF 		bl	CS_Force1
 326              	.LVL24:
1076:../Source Files/lpc_ssp_glcd.c **** 		for(i=925; i>0; i--);
 327              		.loc 1 1076 0
 328 00e0 40F29D31 		movw	r1, #925
 329              	.L25:
 330              	.LVL25:
 331 00e4 0391     		str	r1, [sp, #12]
 332 00e6 039B     		ldr	r3, [sp, #12]
 333 00e8 13B1     		cbz	r3, .L26
 334              	.L23:
 335 00ea 0398     		ldr	r0, [sp, #12]
 336 00ec 411E     		subs	r1, r0, #1
 337              	.LVL26:
 338 00ee F9E7     		b	.L25
 339              	.LVL27:
 340              	.L26:
1077:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_RS);  // select data mode
 341              		.loc 1 1077 0
 342 00f0 0220     		movs	r0, #2
 343 00f2 0121     		movs	r1, #1
 344 00f4 FFF7FEFF 		bl	GPIO_SetValue
 345              	.LVL28:
 346 00f8 0120     		movs	r0, #1
 347              	.L21:
 348              	.LBE5:
 349              	.LBE4:
1078:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1079:../Source Files/lpc_ssp_glcd.c **** 	}
1080:../Source Files/lpc_ssp_glcd.c **** 	else
1081:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1082:../Source Files/lpc_ssp_glcd.c **** }
 350              		.loc 1 1082 0
 351 00fa 0AB0     		add	sp, sp, #40
 352 00fc 10BD     		pop	{r4, pc}
 353              	.L28:
 354 00fe 00BF     		.align	2
 355              	.L27:
 356 0100 00000340 		.word	1073938432
 357              		.cfi_endproc
 358              	.LFE82:
 360              		.align	1
 361              		.global	Write_Data_Glcd
 362              		.thumb
 363              		.thumb_func
 365              	Write_Data_Glcd:
 366              	.LFB83:
1083:../Source Files/lpc_ssp_glcd.c **** 
1084:../Source Files/lpc_ssp_glcd.c **** 
1085:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1086:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes data to the GLCD
1087:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	data	data to be written on GLCD
1088:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1089:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1090:../Source Files/lpc_ssp_glcd.c **** uchar Write_Data_Glcd (uint16_t data)
1091:../Source Files/lpc_ssp_glcd.c **** {
 367              		.loc 1 1091 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 24
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL29:
 372 0104 10B5     		push	{r4, lr}
 373              	.LCFI5:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
1092:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1093:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1094:../Source Files/lpc_ssp_glcd.c **** 
1095:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 377              		.loc 1 1095 0
 378 0106 0F4C     		ldr	r4, .L32
1091:../Source Files/lpc_ssp_glcd.c **** {
 379              		.loc 1 1091 0
 380 0108 86B0     		sub	sp, sp, #24
 381              	.LCFI6:
 382              		.cfi_def_cfa_offset 32
 383              		.loc 1 1095 0
 384 010a 030A     		lsrs	r3, r0, #8
1096:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) data;        // 2nd byte extract
 385              		.loc 1 1096 0
 386 010c 6070     		strb	r0, [r4, #1]
1097:../Source Files/lpc_ssp_glcd.c **** 
1098:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
 387              		.loc 1 1098 0
 388 010e 0121     		movs	r1, #1
 389 0110 0220     		movs	r0, #2
 390              	.LVL30:
1095:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 391              		.loc 1 1095 0
 392 0112 2370     		strb	r3, [r4, #0]
 393              		.loc 1 1098 0
 394 0114 FFF7FEFF 		bl	GPIO_SetValue
 395              	.LVL31:
1099:../Source Files/lpc_ssp_glcd.c **** 
1100:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 396              		.loc 1 1100 0
 397 0118 0B48     		ldr	r0, .L32+4
 398 011a 0021     		movs	r1, #0
 399 011c FFF7FEFF 		bl	CS_Force1
 400              	.LVL32:
1101:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
1102:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
1103:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 401              		.loc 1 1103 0
 402 0120 0220     		movs	r0, #2
1102:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 403              		.loc 1 1102 0
 404 0122 0022     		movs	r2, #0
 405              		.loc 1 1103 0
 406 0124 0490     		str	r0, [sp, #16]
1104:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 407              		.loc 1 1104 0
 408 0126 6946     		mov	r1, sp
 409 0128 0748     		ldr	r0, .L32+4
1101:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 410              		.loc 1 1101 0
 411 012a 0094     		str	r4, [sp, #0]
1102:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 412              		.loc 1 1102 0
 413 012c 0292     		str	r2, [sp, #8]
 414              		.loc 1 1104 0
 415 012e FFF7FEFF 		bl	SSP_ReadWrite
 416              	.LVL33:
1105:../Source Files/lpc_ssp_glcd.c **** 
1106:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 417              		.loc 1 1106 0
 418 0132 C0B2     		uxtb	r0, r0
 419 0134 20B1     		cbz	r0, .L30
 420              	.LBB8:
 421              	.LBB9:
1107:../Source Files/lpc_ssp_glcd.c **** 	{
1108:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 422              		.loc 1 1108 0
 423 0136 0448     		ldr	r0, .L32+4
 424              	.LVL34:
 425 0138 0121     		movs	r1, #1
 426 013a FFF7FEFF 		bl	CS_Force1
 427              	.LVL35:
 428 013e 0120     		movs	r0, #1
 429              	.L30:
 430              	.LBE9:
 431              	.LBE8:
1109:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1110:../Source Files/lpc_ssp_glcd.c **** 	}
1111:../Source Files/lpc_ssp_glcd.c **** 	else
1112:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1113:../Source Files/lpc_ssp_glcd.c **** }
 432              		.loc 1 1113 0
 433 0140 06B0     		add	sp, sp, #24
 434 0142 10BD     		pop	{r4, pc}
 435              	.L33:
 436              		.align	2
 437              	.L32:
 438 0144 00000000 		.word	Tx_Buf1
 439 0148 00000340 		.word	1073938432
 440              		.cfi_endproc
 441              	.LFE83:
 443              		.align	1
 444              		.global	GLCD_Bargraph
 445              		.thumb
 446              		.thumb_func
 448              	GLCD_Bargraph:
 449              	.LFB73:
 502:../Source Files/lpc_ssp_glcd.c **** {
 450              		.loc 1 502 0
 451              		.cfi_startproc
 452              		@ args = 4, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              	.LVL36:
 455 014c 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 456              	.LCFI7:
 457              		.cfi_def_cfa_offset 24
 458              		.cfi_offset 4, -24
 459              		.cfi_offset 5, -20
 460              		.cfi_offset 6, -16
 461              		.cfi_offset 7, -12
 462              		.cfi_offset 8, -8
 463              		.cfi_offset 14, -4
 502:../Source Files/lpc_ssp_glcd.c **** {
 464              		.loc 1 502 0
 465 0150 0646     		mov	r6, r0
 505:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 466              		.loc 1 505 0
 467 0152 4520     		movs	r0, #69
 468              	.LVL37:
 502:../Source Files/lpc_ssp_glcd.c **** {
 469              		.loc 1 502 0
 470 0154 1546     		mov	r5, r2
 471 0156 1F46     		mov	r7, r3
 472 0158 0C46     		mov	r4, r1
 473 015a BDF81880 		ldrh	r8, [sp, #24]
 505:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 474              		.loc 1 505 0
 475 015e FFF7FEFF 		bl	Write_Command_Glcd
 476              	.LVL38:
 506:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 477              		.loc 1 506 0
 478 0162 3046     		mov	r0, r6
 479 0164 FFF7FEFF 		bl	Write_Data_Glcd
 480              	.LVL39:
 508:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 481              		.loc 1 508 0
 482 0168 4620     		movs	r0, #70
 483 016a FFF7FEFF 		bl	Write_Command_Glcd
 484              	.LVL40:
 509:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 485              		.loc 1 509 0
 486 016e 701E     		subs	r0, r6, #1
 487 0170 2918     		adds	r1, r5, r0
 488 0172 88B2     		uxth	r0, r1
 489 0174 FFF7FEFF 		bl	Write_Data_Glcd
 490              	.LVL41:
 511:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 491              		.loc 1 511 0
 492 0178 4420     		movs	r0, #68
 493 017a FFF7FEFF 		bl	Write_Command_Glcd
 494              	.LVL42:
 512:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 495              		.loc 1 512 0
 496 017e 2046     		mov	r0, r4
 497 0180 FFF7FEFF 		bl	Write_Data_Glcd
 498              	.LVL43:
 514:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 499              		.loc 1 514 0
 500 0184 4420     		movs	r0, #68
 501 0186 FFF7FEFF 		bl	Write_Command_Glcd
 502              	.LVL44:
 515:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 503              		.loc 1 515 0
 504 018a 04F11702 		add	r2, r4, #23
 505 018e 1302     		lsls	r3, r2, #8
 506 0190 03F47F40 		and	r0, r3, #65280
 507 0194 FFF7FEFF 		bl	Write_Data_Glcd
 508              	.LVL45:
 517:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 509              		.loc 1 517 0
 510 0198 4E20     		movs	r0, #78
 511 019a FFF7FEFF 		bl	Write_Command_Glcd
 512              	.LVL46:
 518:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 513              		.loc 1 518 0
 514 019e 3046     		mov	r0, r6
 515 01a0 FFF7FEFF 		bl	Write_Data_Glcd
 516              	.LVL47:
 520:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 517              		.loc 1 520 0
 518 01a4 4F20     		movs	r0, #79
 519 01a6 FFF7FEFF 		bl	Write_Command_Glcd
 520              	.LVL48:
 521:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 521              		.loc 1 521 0
 522 01aa 2046     		mov	r0, r4
 523 01ac FFF7FEFF 		bl	Write_Data_Glcd
 524              	.LVL49:
 523:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 525              		.loc 1 523 0
 526 01b0 2220     		movs	r0, #34
 527 01b2 FFF7FEFF 		bl	Write_Command_Glcd
 528              	.LVL50:
 527:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 529              		.loc 1 527 0
 530 01b6 FFF723FF 		bl	wr_dat_start
 531              	.LVL51:
 525:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 532              		.loc 1 525 0
 533 01ba 05FB08F6 		mul	r6, r5, r8
 534 01be 4FEAA628 		asr	r8, r6, #10
 535              	.LVL52:
 528:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 536              		.loc 1 528 0
 537 01c2 0026     		movs	r6, #0
 538              	.LVL53:
 539              	.L35:
 528:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 540              		.loc 1 528 0 is_stmt 0 discriminator 1
 541 01c4 B742     		cmp	r7, r6
 542 01c6 10D0     		beq	.L42
 543              	.L40:
 528:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 544              		.loc 1 528 0
 545 01c8 0024     		movs	r4, #0
 546              	.L39:
 547              	.LVL54:
 530:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 548              		.loc 1 530 0 is_stmt 1 discriminator 1
 549 01ca A542     		cmp	r5, r4
 550 01cc 0BDD     		ble	.L43
 551              	.L38:
 532:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 552              		.loc 1 532 0
 553 01ce 1FFA88F0 		uxth	r0, r8
 554 01d2 8442     		cmp	r4, r0
 534:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 555              		.loc 1 534 0
 556 01d4 D4BF     		ite	le
 557 01d6 0748     		ldrle	r0, .L44
 538:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 558              		.loc 1 538 0
 559 01d8 0748     		ldrgt	r0, .L44+4
 530:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 560              		.loc 1 530 0
 561 01da 0134     		adds	r4, r4, #1
 562              	.LVL55:
 538:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 563              		.loc 1 538 0
 564 01dc 0188     		ldrh	r1, [r0, #0]
 565 01de 88B2     		uxth	r0, r1
 566 01e0 FFF722FF 		bl	wr_dat_only
 567              	.LVL56:
 568 01e4 F1E7     		b	.L39
 569              	.L43:
 570 01e6 0136     		adds	r6, r6, #1
 571 01e8 ECE7     		b	.L35
 572              	.LVL57:
 573              	.L42:
 543:../Source Files/lpc_ssp_glcd.c **** }
 574              		.loc 1 543 0
 575 01ea BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 542:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 576              		.loc 1 542 0
 577 01ee FFF715BF 		b	wr_dat_stop
 578              	.LVL58:
 579              	.L45:
 580 01f2 00BF     		.align	2
 581              	.L44:
 582 01f4 00000000 		.word	.LANCHOR1
 583 01f8 00000000 		.word	.LANCHOR0
 584              		.cfi_endproc
 585              	.LFE73:
 587              		.align	1
 588              		.global	GLCD_Draw_Char
 589              		.thumb
 590              		.thumb_func
 592              	GLCD_Draw_Char:
 593              	.LFB69:
 405:../Source Files/lpc_ssp_glcd.c **** {
 594              		.loc 1 405 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              	.LVL59:
 599 01fc F8B5     		push	{r3, r4, r5, r6, r7, lr}
 600              	.LCFI8:
 601              		.cfi_def_cfa_offset 24
 602              		.cfi_offset 3, -24
 603              		.cfi_offset 4, -20
 604              		.cfi_offset 5, -16
 605              		.cfi_offset 6, -12
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 408:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 608              		.loc 1 408 0
 609 01fe A0F11005 		sub	r5, r0, #16
 610 0202 ADB2     		uxth	r5, r5
 611              	.LVL60:
 405:../Source Files/lpc_ssp_glcd.c **** {
 612              		.loc 1 405 0
 613 0204 0646     		mov	r6, r0
 410:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 614              		.loc 1 410 0
 615 0206 4520     		movs	r0, #69
 405:../Source Files/lpc_ssp_glcd.c **** {
 616              		.loc 1 405 0
 617 0208 0C46     		mov	r4, r1
 618 020a 1746     		mov	r7, r2
 410:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 619              		.loc 1 410 0
 620 020c FFF7FEFF 		bl	Write_Command_Glcd
 621              	.LVL61:
 411:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 622              		.loc 1 411 0
 623 0210 2846     		mov	r0, r5
 624 0212 FFF7FEFF 		bl	Write_Data_Glcd
 625              	.LVL62:
 413:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 626              		.loc 1 413 0
 627 0216 4620     		movs	r0, #70
 628 0218 FFF7FEFF 		bl	Write_Command_Glcd
 629              	.LVL63:
 414:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 630              		.loc 1 414 0
 631 021c 701E     		subs	r0, r6, #1
 632 021e 80B2     		uxth	r0, r0
 633 0220 FFF7FEFF 		bl	Write_Data_Glcd
 634              	.LVL64:
 416:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 635              		.loc 1 416 0
 636 0224 4420     		movs	r0, #68
 637 0226 FFF7FEFF 		bl	Write_Command_Glcd
 638              	.LVL65:
 417:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 639              		.loc 1 417 0
 640 022a 2046     		mov	r0, r4
 641 022c FFF7FEFF 		bl	Write_Data_Glcd
 642              	.LVL66:
 419:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 643              		.loc 1 419 0
 644 0230 4420     		movs	r0, #68
 645 0232 FFF7FEFF 		bl	Write_Command_Glcd
 646              	.LVL67:
 420:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 647              		.loc 1 420 0
 648 0236 04F11701 		add	r1, r4, #23
 649 023a 0A02     		lsls	r2, r1, #8
 650 023c 02F47F40 		and	r0, r2, #65280
 651 0240 FFF7FEFF 		bl	Write_Data_Glcd
 652              	.LVL68:
 422:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 653              		.loc 1 422 0
 654 0244 4E20     		movs	r0, #78
 655 0246 FFF7FEFF 		bl	Write_Command_Glcd
 656              	.LVL69:
 423:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 657              		.loc 1 423 0
 658 024a 2846     		mov	r0, r5
 659 024c FFF7FEFF 		bl	Write_Data_Glcd
 660              	.LVL70:
 425:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 661              		.loc 1 425 0
 662 0250 4F20     		movs	r0, #79
 663 0252 FFF7FEFF 		bl	Write_Command_Glcd
 664              	.LVL71:
 426:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 665              		.loc 1 426 0
 666 0256 2046     		mov	r0, r4
 667 0258 FFF7FEFF 		bl	Write_Data_Glcd
 668              	.LVL72:
 428:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 669              		.loc 1 428 0
 670 025c 2220     		movs	r0, #34
 671 025e FFF7FEFF 		bl	Write_Command_Glcd
 672              	.LVL73:
 430:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 673              		.loc 1 430 0
 674 0262 FFF7CDFE 		bl	wr_dat_start
 675              	.LVL74:
 676 0266 0025     		movs	r5, #0
 677              	.LVL75:
 678              	.L47:
 405:../Source Files/lpc_ssp_glcd.c **** {
 679              		.loc 1 405 0 discriminator 1
 680 0268 0024     		movs	r4, #0
 681              	.LVL76:
 682              	.L50:
 435:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 683              		.loc 1 435 0
 684 026a 7B5B     		ldrh	r3, [r7, r5]
 685 026c 43FA04F3 		asr	r3, r3, r4
 686 0270 D807     		lsls	r0, r3, #31
 437:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 687              		.loc 1 437 0
 688 0272 54BF     		ite	pl
 689 0274 0748     		ldrpl	r0, .L54
 441:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 690              		.loc 1 441 0
 691 0276 0848     		ldrmi	r0, .L54+4
 433:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 692              		.loc 1 433 0
 693 0278 0134     		adds	r4, r4, #1
 441:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 694              		.loc 1 441 0
 695 027a 0188     		ldrh	r1, [r0, #0]
 696 027c 88B2     		uxth	r0, r1
 697 027e FFF7D3FE 		bl	wr_dat_only
 698              	.LVL77:
 433:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 699              		.loc 1 433 0
 700 0282 102C     		cmp	r4, #16
 701 0284 F1D1     		bne	.L50
 702 0286 0235     		adds	r5, r5, #2
 431:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 703              		.loc 1 431 0
 704 0288 302D     		cmp	r5, #48
 705 028a EDD1     		bne	.L47
 706              	.L51:
 447:../Source Files/lpc_ssp_glcd.c **** }
 707              		.loc 1 447 0
 708 028c BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 446:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 709              		.loc 1 446 0
 710 0290 FFF7C4BE 		b	wr_dat_stop
 711              	.LVL78:
 712              	.L55:
 713              		.align	2
 714              	.L54:
 715 0294 00000000 		.word	.LANCHOR1
 716 0298 00000000 		.word	.LANCHOR0
 717              		.cfi_endproc
 718              	.LFE69:
 720              		.align	1
 721              		.global	GLCD_Display_Char
 722              		.thumb
 723              		.thumb_func
 725              	GLCD_Display_Char:
 726              	.LFB70:
 458:../Source Files/lpc_ssp_glcd.c **** {
 727              		.loc 1 458 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              	.LVL79:
 459:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 732              		.loc 1 459 0
 733 029c 203A     		subs	r2, r2, #32
 734              	.LVL80:
 460:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 735              		.loc 1 460 0
 736 029e 1823     		movs	r3, #24
 737 02a0 D2B2     		uxtb	r2, r2
 738 02a2 5843     		muls	r0, r3, r0
 739              	.LVL81:
 458:../Source Files/lpc_ssp_glcd.c **** {
 740              		.loc 1 458 0
 741 02a4 10B5     		push	{r4, lr}
 742              	.LCFI9:
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 4, -8
 745              		.cfi_offset 14, -4
 460:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 746              		.loc 1 460 0
 747 02a6 5343     		muls	r3, r2, r3
 748 02a8 0901     		lsls	r1, r1, #4
 749              	.LVL82:
 750 02aa 054A     		ldr	r2, .L57
 751 02ac 8CB2     		uxth	r4, r1
 752 02ae 02EB4302 		add	r2, r2, r3, lsl #1
 753 02b2 81B2     		uxth	r1, r0
 754 02b4 2046     		mov	r0, r4
 461:../Source Files/lpc_ssp_glcd.c **** }
 755              		.loc 1 461 0
 756 02b6 BDE81040 		pop	{r4, lr}
 460:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 757              		.loc 1 460 0
 758 02ba FFF7FEBF 		b	GLCD_Draw_Char
 759              	.LVL83:
 760              	.L58:
 761 02be 00BF     		.align	2
 762              	.L57:
 763 02c0 00000000 		.word	.LANCHOR2
 764              		.cfi_endproc
 765              	.LFE70:
 767              		.align	1
 768              		.global	GLCD_PutPixel
 769              		.thumb
 770              		.thumb_func
 772              	GLCD_PutPixel:
 773              	.LFB62:
 296:../Source Files/lpc_ssp_glcd.c **** {
 774              		.loc 1 296 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              	.LVL84:
 779 02c4 70B5     		push	{r4, r5, r6, lr}
 780              	.LCFI10:
 781              		.cfi_def_cfa_offset 16
 782              		.cfi_offset 4, -16
 783              		.cfi_offset 5, -12
 784              		.cfi_offset 6, -8
 785              		.cfi_offset 14, -4
 296:../Source Files/lpc_ssp_glcd.c **** {
 786              		.loc 1 296 0
 787 02c6 0446     		mov	r4, r0
 297:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 788              		.loc 1 297 0
 789 02c8 4E20     		movs	r0, #78
 790              	.LVL85:
 296:../Source Files/lpc_ssp_glcd.c **** {
 791              		.loc 1 296 0
 792 02ca 0D46     		mov	r5, r1
 793 02cc 1646     		mov	r6, r2
 297:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 794              		.loc 1 297 0
 795 02ce FFF7FEFF 		bl	Write_Command_Glcd
 796              	.LVL86:
 298:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 797              		.loc 1 298 0
 798 02d2 2046     		mov	r0, r4
 799 02d4 FFF7FEFF 		bl	Write_Data_Glcd
 800              	.LVL87:
 300:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 801              		.loc 1 300 0
 802 02d8 4F20     		movs	r0, #79
 803 02da FFF7FEFF 		bl	Write_Command_Glcd
 804              	.LVL88:
 301:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 805              		.loc 1 301 0
 806 02de 2846     		mov	r0, r5
 807 02e0 FFF7FEFF 		bl	Write_Data_Glcd
 808              	.LVL89:
 303:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 809              		.loc 1 303 0
 810 02e4 2220     		movs	r0, #34
 811 02e6 FFF7FEFF 		bl	Write_Command_Glcd
 812              	.LVL90:
 304:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 813              		.loc 1 304 0
 814 02ea 3046     		mov	r0, r6
 305:../Source Files/lpc_ssp_glcd.c **** }
 815              		.loc 1 305 0
 816 02ec BDE87040 		pop	{r4, r5, r6, lr}
 304:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 817              		.loc 1 304 0
 818 02f0 FFF7FEBF 		b	Write_Data_Glcd
 819              	.LVL91:
 820              		.cfi_endproc
 821              	.LFE62:
 823              		.align	1
 824              		.global	GLCD_Text
 825              		.thumb
 826              		.thumb_func
 828              	GLCD_Text:
 829              	.LFB81:
1021:../Source Files/lpc_ssp_glcd.c **** {
 830              		.loc 1 1021 0
 831              		.cfi_startproc
 832              		@ args = 16, pretend = 0, frame = 56
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834              	.LVL92:
 835 02f4 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 836              	.LCFI11:
 837              		.cfi_def_cfa_offset 36
 838              		.cfi_offset 4, -36
 839              		.cfi_offset 5, -32
 840              		.cfi_offset 6, -28
 841              		.cfi_offset 7, -24
 842              		.cfi_offset 8, -20
 843              		.cfi_offset 9, -16
 844              		.cfi_offset 10, -12
 845              		.cfi_offset 11, -8
 846              		.cfi_offset 14, -4
 847 02f8 8FB0     		sub	sp, sp, #60
 848              	.LCFI12:
 849              		.cfi_def_cfa_offset 96
 850 02fa 00AF     		add	r7, sp, #0
 851              	.LCFI13:
 852              		.cfi_def_cfa_register 7
1021:../Source Files/lpc_ssp_glcd.c **** {
 853              		.loc 1 1021 0
 854 02fc 1C46     		mov	r4, r3
 855              	.LVL93:
 856 02fe 97F96880 		ldrsb	r8, [r7, #104]
 857 0302 B7F86C30 		ldrh	r3, [r7, #108]
 858              	.LVL94:
 859 0306 0546     		mov	r5, r0
 860 0308 FB60     		str	r3, [r7, #12]
 861              	.LBB10:
1032:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 862              		.loc 1 1032 0
 863 030a 1FFA88F3 		uxth	r3, r8
 864              	.LBE10:
1023:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 865              		.loc 1 1023 0
 866 030e E01D     		adds	r0, r4, #7
 867              	.LVL95:
 868              	.LBB11:
1032:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 869              		.loc 1 1032 0
 870 0310 3B63     		str	r3, [r7, #48]
 871 0312 6343     		muls	r3, r4, r3
 872              	.LBE11:
1021:../Source Files/lpc_ssp_glcd.c **** {
 873              		.loc 1 1021 0
 874 0314 F962     		str	r1, [r7, #44]
1023:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 875              		.loc 1 1023 0
 876 0316 00F4FC71 		and	r1, r0, #504
 877              	.LVL96:
 878              	.LBB12:
1029:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 879              		.loc 1 1029 0
 880 031a 08FB04F0 		mul	r0, r8, r4
 881              	.LBE12:
1023:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 882              		.loc 1 1023 0
 883 031e ADEB010D 		sub	sp, sp, r1
 884              	.LBB13:
1032:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 885              		.loc 1 1032 0
 886 0322 591C     		adds	r1, r3, #1
1029:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 887              		.loc 1 1029 0
 888 0324 3862     		str	r0, [r7, #32]
1032:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 889              		.loc 1 1032 0
 890 0326 88B2     		uxth	r0, r1
1036:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 891              		.loc 1 1036 0
 892 0328 97F86010 		ldrb	r1, [r7, #96]	@ zero_extendqisi2
1032:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 893              		.loc 1 1032 0
 894 032c F861     		str	r0, [r7, #28]
1036:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 895              		.loc 1 1036 0
 896 032e 08FB01F0 		mul	r0, r8, r1
1020:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 897              		.loc 1 1020 0
 898 0332 013A     		subs	r2, r2, #1
 899              	.LVL97:
 900 0334 9BB2     		uxth	r3, r3
 901              	.LBE13:
1023:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 902              		.loc 1 1023 0
 903 0336 C7F824D0 		str	sp, [r7, #36]
 904              	.LVL98:
 905              	.LBB14:
1036:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 906              		.loc 1 1036 0
 907 033a B861     		str	r0, [r7, #24]
1020:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 908              		.loc 1 1020 0
 909 033c BA62     		str	r2, [r7, #40]
 910 033e 7B61     		str	r3, [r7, #20]
 911              	.LVL99:
 912              	.L61:
 913              	.LBE14:
1025:../Source Files/lpc_ssp_glcd.c ****    for(i=0; textptr[i] != '\0'; ++i, ++x) // Loop through the passed string
 914              		.loc 1 1025 0 discriminator 1
 915 0340 B96A     		ldr	r1, [r7, #40]
 916 0342 11F8010F 		ldrb	r0, [r1, #1]!	@ zero_extendqisi2
 917 0346 B962     		str	r1, [r7, #40]
 918 0348 0028     		cmp	r0, #0
 919 034a 63D0     		beq	.L73
 920              	.L70:
 921              	.LBB15:
1027:../Source Files/lpc_ssp_glcd.c ****       memcpy(pixelData, font[textptr[i]-' '], row);
 922              		.loc 1 1027 0
 923 034c 46B2     		sxtb	r6, r0
 924 034e 7B6E     		ldr	r3, [r7, #100]
 925 0350 A6F12002 		sub	r2, r6, #32
 926 0354 04FB0231 		mla	r1, r4, r2, r3
 927 0358 786A     		ldr	r0, [r7, #36]
 928 035a 2246     		mov	r2, r4
 929 035c FFF7FEFF 		bl	memcpy
 930              	.LVL100:
1029:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 931              		.loc 1 1029 0
 932 0360 396A     		ldr	r1, [r7, #32]
 933 0362 6818     		adds	r0, r5, r1
 934 0364 B0F5A07F 		cmp	r0, #320
 935 0368 05DB     		blt	.L62
 936              	.LVL101:
1032:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 937              		.loc 1 1032 0
 938 036a FD69     		ldr	r5, [r7, #28]
 939 036c FE6A     		ldr	r6, [r7, #44]
 940 036e AA19     		adds	r2, r5, r6
 941 0370 13B2     		sxth	r3, r2
 942 0372 FB62     		str	r3, [r7, #44]
1031:../Source Files/lpc_ssp_glcd.c ****          x = 0;                           // Set x at far left position
 943              		.loc 1 1031 0
 944 0374 0025     		movs	r5, #0
 945              	.LVL102:
 946              	.L62:
1034:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
 947              		.loc 1 1034 0
 948 0376 7D63     		str	r5, [r7, #52]
 949 0378 0026     		movs	r6, #0
 950              	.LVL103:
 951              	.L63:
1034:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
 952              		.loc 1 1034 0 is_stmt 0 discriminator 1
 953 037a A642     		cmp	r6, r4
 954 037c 45DA     		bge	.L69
 955 037e FA6A     		ldr	r2, [r7, #44]
1020:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 956              		.loc 1 1020 0 is_stmt 1
 957 0380 4FF00009 		mov	r9, #0
 958 0384 1FFA82FC 		uxth	ip, r2
 959              	.L65:
1036:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 960              		.loc 1 1036 0 discriminator 1
 961 0388 BB69     		ldr	r3, [r7, #24]
 962 038a 9945     		cmp	r9, r3
 963 038c 36DA     		bge	.L74
 964              	.L68:
1038:../Source Files/lpc_ssp_glcd.c ****             if(bit_test(pixelData[j], k)) // Check if the pixel should be set
 965              		.loc 1 1038 0
 966 038e 786A     		ldr	r0, [r7, #36]
 967 0390 8157     		ldrsb	r1, [r0, r6]
 968 0392 41FA09F2 		asr	r2, r1, r9
 969 0396 D207     		lsls	r2, r2, #31
 970 0398 07D4     		bmi	.L71
 971              	.L67:
 972 039a 396B     		ldr	r1, [r7, #48]
 973 039c 09F10109 		add	r9, r9, #1
 974 03a0 0CEB0102 		add	r2, ip, r1
 975 03a4 1FFA82FC 		uxth	ip, r2
 976 03a8 EEE7     		b	.L65
 977              	.L71:
 978 03aa 4FF0000B 		mov	fp, #0
 979              	.L64:
 980              	.LVL104:
1040:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
 981              		.loc 1 1040 0 discriminator 1
 982 03ae 0FFA8BF3 		sxth	r3, fp
 983 03b2 1FFA88F0 		uxth	r0, r8
 984 03b6 9845     		cmp	r8, r3
 985 03b8 3861     		str	r0, [r7, #16]
 986 03ba EEDD     		ble	.L67
1020:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 987              		.loc 1 1020 0
 988 03bc 0CEB0B03 		add	r3, ip, fp
 989 03c0 9BB2     		uxth	r3, r3
 990 03c2 4FF0000A 		mov	sl, #0
 991              	.L66:
1020:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 992              		.loc 1 1020 0 is_stmt 0 discriminator 2
 993 03c6 786B     		ldr	r0, [r7, #52]
1044:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
 994              		.loc 1 1044 0 is_stmt 1 discriminator 2
 995 03c8 FA68     		ldr	r2, [r7, #12]
1020:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 996              		.loc 1 1020 0 discriminator 2
 997 03ca 0AEB0001 		add	r1, sl, r0
1044:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
 998              		.loc 1 1044 0 discriminator 2
 999 03ce 88B2     		uxth	r0, r1
 1000 03d0 1946     		mov	r1, r3
 1001 03d2 BB60     		str	r3, [r7, #8]
 1002 03d4 C7F804C0 		str	ip, [r7, #4]
 1003 03d8 FFF7FEFF 		bl	GLCD_PutPixel
 1004              	.LVL105:
1042:../Source Files/lpc_ssp_glcd.c ****                   for(m=0; m<size; ++m)
 1005              		.loc 1 1042 0 discriminator 2
 1006 03dc 3A69     		ldr	r2, [r7, #16]
 1007 03de 0AF1010A 		add	sl, sl, #1
 1008 03e2 0FFA8AF3 		sxth	r3, sl
 1009 03e6 10B2     		sxth	r0, r2
 1010 03e8 8342     		cmp	r3, r0
 1011 03ea D7F804C0 		ldr	ip, [r7, #4]
 1012 03ee BB68     		ldr	r3, [r7, #8]
 1013 03f0 E9DB     		blt	.L66
1040:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
 1014              		.loc 1 1040 0
 1015 03f2 0BF1010B 		add	fp, fp, #1
 1016              	.LVL106:
 1017 03f6 1FFA8BFB 		uxth	fp, fp
 1018              	.LVL107:
 1019 03fa D8E7     		b	.L64
 1020              	.LVL108:
 1021              	.L74:
1020:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 1022              		.loc 1 1020 0
 1023 03fc 796B     		ldr	r1, [r7, #52]
 1024 03fe 386B     		ldr	r0, [r7, #48]
 1025 0400 0136     		adds	r6, r6, #1
 1026 0402 4218     		adds	r2, r0, r1
 1027 0404 13B2     		sxth	r3, r2
 1028 0406 7B63     		str	r3, [r7, #52]
 1029 0408 B7E7     		b	.L63
 1030              	.L69:
 1031 040a 7969     		ldr	r1, [r7, #20]
 1032 040c 6818     		adds	r0, r5, r1
 1033              	.LBE15:
1025:../Source Files/lpc_ssp_glcd.c ****    for(i=0; textptr[i] != '\0'; ++i, ++x) // Loop through the passed string
 1034              		.loc 1 1025 0
 1035 040e 451C     		adds	r5, r0, #1
 1036 0410 2DB2     		sxth	r5, r5
 1037              	.LVL109:
 1038 0412 95E7     		b	.L61
 1039              	.L73:
1051:../Source Files/lpc_ssp_glcd.c **** }
 1040              		.loc 1 1051 0
 1041 0414 07F13C07 		add	r7, r7, #60
 1042 0418 BD46     		mov	sp, r7
 1043 041a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1044              		.cfi_endproc
 1045              	.LFE81:
 1047              		.align	1
 1048              		.global	GLCD_Line
 1049              		.thumb
 1050              		.thumb_func
 1052              	GLCD_Line:
 1053              	.LFB76:
 616:../Source Files/lpc_ssp_glcd.c **** {
 1054              		.loc 1 616 0
 1055              		.cfi_startproc
 1056              		@ args = 4, pretend = 0, frame = 16
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              	.LVL110:
 1059 041e 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1060              	.LCFI14:
 1061              		.cfi_def_cfa_offset 36
 1062              		.cfi_offset 4, -36
 1063              		.cfi_offset 5, -32
 1064              		.cfi_offset 6, -28
 1065              		.cfi_offset 7, -24
 1066              		.cfi_offset 8, -20
 1067              		.cfi_offset 9, -16
 1068              		.cfi_offset 10, -12
 1069              		.cfi_offset 11, -8
 1070              		.cfi_offset 14, -4
 620:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1071              		.loc 1 620 0
 1072 0422 141A     		subs	r4, r2, r0
 621:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1073              		.loc 1 621 0
 1074 0424 5E1A     		subs	r6, r3, r1
 620:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1075              		.loc 1 620 0
 1076 0426 24B2     		sxth	r4, r4
 621:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1077              		.loc 1 621 0
 1078 0428 36B2     		sxth	r6, r6
 620:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1079              		.loc 1 620 0
 1080 042a 002C     		cmp	r4, #0
 1081 042c B8BF     		it	lt
 1082 042e 6442     		rsblt	r4, r4, #0
 1083              	.LVL111:
 621:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1084              		.loc 1 621 0
 1085 0430 002E     		cmp	r6, #0
 1086 0432 B8BF     		it	lt
 1087 0434 7642     		rsblt	r6, r6, #0
 1088              	.LVL112:
 626:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 1089              		.loc 1 626 0
 1090 0436 4FF6FF75 		movw	r5, #65535
 635:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1091              		.loc 1 635 0
 1092 043a 24B2     		sxth	r4, r4
 1093              	.LVL113:
 1094 043c 36B2     		sxth	r6, r6
 1095              	.LVL114:
 616:../Source Files/lpc_ssp_glcd.c **** {
 1096              		.loc 1 616 0
 1097 043e 85B0     		sub	sp, sp, #20
 1098              	.LCFI15:
 1099              		.cfi_def_cfa_offset 56
 626:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 1100              		.loc 1 626 0
 1101 0440 9042     		cmp	r0, r2
 1102 0442 CCBF     		ite	gt
 1103 0444 2F46     		movgt	r7, r5
 1104 0446 0127     		movle	r7, #1
 1105              	.LVL115:
 630:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 1106              		.loc 1 630 0
 1107 0448 9942     		cmp	r1, r3
 1108 044a CCBF     		ite	gt
 1109 044c A846     		movgt	r8, r5
 1110 044e 4FF00108 		movle	r8, #1
 1111              	.LVL116:
 635:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1112              		.loc 1 635 0
 1113 0452 B442     		cmp	r4, r6
 616:../Source Files/lpc_ssp_glcd.c **** {
 1114              		.loc 1 616 0
 1115 0454 BDF83890 		ldrh	r9, [sp, #56]
 635:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1116              		.loc 1 635 0
 1117 0458 29DB     		blt	.L78
 637:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 1118              		.loc 1 637 0
 1119 045a 4FEA460B 		lsl	fp, r6, #1
 650:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1120              		.loc 1 650 0
 1121 045e 361B     		subs	r6, r6, r4
 1122 0460 7300     		lsls	r3, r6, #1
 1123              	.LVL117:
 637:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 1124              		.loc 1 637 0
 1125 0462 C4EB0B05 		rsb	r5, r4, fp
 1126              	.LVL118:
 650:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1127              		.loc 1 650 0
 1128 0466 0393     		str	r3, [sp, #12]
 639:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1129              		.loc 1 639 0
 1130 0468 8A46     		mov	sl, r1
 1131 046a 0026     		movs	r6, #0
 1132              	.LVL119:
 1133              	.L79:
 639:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1134              		.loc 1 639 0 is_stmt 0 discriminator 1
 1135 046c A642     		cmp	r6, r4
 1136 046e 47DC     		bgt	.L75
 1137              	.L82:
 641:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 1138              		.loc 1 641 0 is_stmt 1
 1139 0470 1FFA8AF3 		uxth	r3, sl
 1140 0474 1FFA80FE 		uxth	lr, r0
 1141 0478 1946     		mov	r1, r3
 1142 047a 7046     		mov	r0, lr
 1143              	.LVL120:
 1144 047c 4A46     		mov	r2, r9
 1145 047e 0193     		str	r3, [sp, #4]
 1146 0480 CDF808E0 		str	lr, [sp, #8]
 1147 0484 FFF7FEFF 		bl	GLCD_PutPixel
 1148              	.LVL121:
 1149 0488 DDF808C0 		ldr	ip, [sp, #8]
 643:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 1150              		.loc 1 643 0
 1151 048c 002D     		cmp	r5, #0
 1152 048e 0CEB0701 		add	r1, ip, r7
 1153 0492 019B     		ldr	r3, [sp, #4]
 1154 0494 02DA     		bge	.L80
 645:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 1155              		.loc 1 645 0
 1156 0496 5D44     		add	r5, r5, fp
 1157              	.LVL122:
 646:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1158              		.loc 1 646 0
 1159 0498 88B2     		uxth	r0, r1
 1160              	.LVL123:
 1161 049a 06E0     		b	.L81
 1162              	.LVL124:
 1163              	.L80:
 650:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1164              		.loc 1 650 0
 1165 049c 0398     		ldr	r0, [sp, #12]
 652:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1166              		.loc 1 652 0
 1167 049e 03EB080A 		add	sl, r3, r8
 1168              	.LVL125:
 650:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1169              		.loc 1 650 0
 1170 04a2 2D18     		adds	r5, r5, r0
 1171              	.LVL126:
 652:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1172              		.loc 1 652 0
 1173 04a4 1FFA8AFA 		uxth	sl, sl
 651:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1174              		.loc 1 651 0
 1175 04a8 88B2     		uxth	r0, r1
 1176              	.LVL127:
 1177              	.L81:
 639:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1178              		.loc 1 639 0
 1179 04aa 0136     		adds	r6, r6, #1
 1180              	.LVL128:
 1181 04ac DEE7     		b	.L79
 1182              	.LVL129:
 1183              	.L78:
 671:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1184              		.loc 1 671 0
 1185 04ae A21B     		subs	r2, r4, r6
 1186              	.LVL130:
 658:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 1187              		.loc 1 658 0
 1188 04b0 4FEA440A 		lsl	sl, r4, #1
 671:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1189              		.loc 1 671 0
 1190 04b4 5300     		lsls	r3, r2, #1
 1191              	.LVL131:
 658:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 1192              		.loc 1 658 0
 1193 04b6 C6EB0A05 		rsb	r5, r6, sl
 1194              	.LVL132:
 671:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1195              		.loc 1 671 0
 1196 04ba 0393     		str	r3, [sp, #12]
 660:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1197              		.loc 1 660 0
 1198 04bc 8346     		mov	fp, r0
 1199 04be 0024     		movs	r4, #0
 1200              	.LVL133:
 1201              	.L83:
 660:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1202              		.loc 1 660 0 is_stmt 0 discriminator 1
 1203 04c0 B442     		cmp	r4, r6
 1204 04c2 1DDC     		bgt	.L75
 1205              	.L86:
 662:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 1206              		.loc 1 662 0 is_stmt 1
 1207 04c4 1FFA81FC 		uxth	ip, r1
 1208 04c8 1FFA8BF3 		uxth	r3, fp
 1209 04cc 6146     		mov	r1, ip
 1210              	.LVL134:
 1211 04ce 1846     		mov	r0, r3
 1212 04d0 4A46     		mov	r2, r9
 1213 04d2 CDF808C0 		str	ip, [sp, #8]
 1214 04d6 0193     		str	r3, [sp, #4]
 1215 04d8 FFF7FEFF 		bl	GLCD_PutPixel
 1216              	.LVL135:
 1217 04dc DDF808C0 		ldr	ip, [sp, #8]
 664:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 1218              		.loc 1 664 0
 1219 04e0 002D     		cmp	r5, #0
 1220 04e2 0CEB0801 		add	r1, ip, r8
 1221 04e6 0198     		ldr	r0, [sp, #4]
 1222 04e8 01DA     		bge	.L84
 666:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 1223              		.loc 1 666 0
 1224 04ea 5544     		add	r5, r5, sl
 1225              	.LVL136:
 1226 04ec 05E0     		b	.L90
 1227              	.L84:
 671:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1228              		.loc 1 671 0
 1229 04ee 039A     		ldr	r2, [sp, #12]
 672:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1230              		.loc 1 672 0
 1231 04f0 00EB070B 		add	fp, r0, r7
 1232              	.LVL137:
 671:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1233              		.loc 1 671 0
 1234 04f4 AD18     		adds	r5, r5, r2
 1235              	.LVL138:
 672:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1236              		.loc 1 672 0
 1237 04f6 1FFA8BFB 		uxth	fp, fp
 1238              	.L90:
 1239              	.LVL139:
 673:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1240              		.loc 1 673 0
 1241 04fa 89B2     		uxth	r1, r1
 1242              	.LVL140:
 660:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1243              		.loc 1 660 0
 1244 04fc 0134     		adds	r4, r4, #1
 1245              	.LVL141:
 1246 04fe DFE7     		b	.L83
 1247              	.LVL142:
 1248              	.L75:
 677:../Source Files/lpc_ssp_glcd.c **** }
 1249              		.loc 1 677 0
 1250 0500 05B0     		add	sp, sp, #20
 1251 0502 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1252              		.cfi_endproc
 1253              	.LFE76:
 1255              		.align	1
 1256              		.global	GLCD_Triangle
 1257              		.thumb
 1258              		.thumb_func
 1260              	GLCD_Triangle:
 1261              	.LFB79:
 793:../Source Files/lpc_ssp_glcd.c **** {
 1262              		.loc 1 793 0
 1263              		.cfi_startproc
 1264              		@ args = 8, pretend = 0, frame = 56
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 1266              	.LVL143:
 1267 0506 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1268              	.LCFI16:
 1269              		.cfi_def_cfa_offset 36
 1270              		.cfi_offset 4, -36
 1271              		.cfi_offset 5, -32
 1272              		.cfi_offset 6, -28
 1273              		.cfi_offset 7, -24
 1274              		.cfi_offset 8, -20
 1275              		.cfi_offset 9, -16
 1276              		.cfi_offset 10, -12
 1277              		.cfi_offset 11, -8
 1278              		.cfi_offset 14, -4
 1279 050a 91B0     		sub	sp, sp, #68
 1280              	.LCFI17:
 1281              		.cfi_def_cfa_offset 104
 793:../Source Files/lpc_ssp_glcd.c **** {
 1282              		.loc 1 793 0
 1283 050c 0646     		mov	r6, r0
 1284 050e BDF86840 		ldrh	r4, [sp, #104]
 1285 0512 BDF86C00 		ldrh	r0, [sp, #108]
 1286              	.LVL144:
 1287 0516 0D46     		mov	r5, r1
 1288 0518 1746     		mov	r7, r2
 1289 051a 0E94     		str	r4, [sp, #56]
 1290 051c 0F90     		str	r0, [sp, #60]
 794:../Source Files/lpc_ssp_glcd.c ****     if(fill)
 1291              		.loc 1 794 0
 1292 051e 23BB     		cbnz	r3, .L92
 1293              	.LVL145:
 1294              	.L132:
 945:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, color);
 1295              		.loc 1 945 0
 1296 0520 0E9C     		ldr	r4, [sp, #56]
 1297 0522 B6F90000 		ldrsh	r0, [r6, #0]
 1298 0526 B6F90210 		ldrsh	r1, [r6, #2]
 1299 052a B5F90020 		ldrsh	r2, [r5, #0]
 1300 052e B5F90230 		ldrsh	r3, [r5, #2]
 1301 0532 0094     		str	r4, [sp, #0]
 1302 0534 FFF7FEFF 		bl	GLCD_Line
 1303              	.LVL146:
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, color);
 1304              		.loc 1 946 0
 1305 0538 B7F90020 		ldrsh	r2, [r7, #0]
 1306 053c B7F90230 		ldrsh	r3, [r7, #2]
 1307 0540 B6F90000 		ldrsh	r0, [r6, #0]
 1308 0544 B6F90210 		ldrsh	r1, [r6, #2]
 1309 0548 0094     		str	r4, [sp, #0]
 1310 054a FFF7FEFF 		bl	GLCD_Line
 1311              	.LVL147:
 947:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, color);
 1312              		.loc 1 947 0
 1313 054e B7F90020 		ldrsh	r2, [r7, #0]
 1314 0552 B7F90230 		ldrsh	r3, [r7, #2]
 1315 0556 B5F90000 		ldrsh	r0, [r5, #0]
 1316 055a B5F90210 		ldrsh	r1, [r5, #2]
 1317 055e 1A94     		str	r4, [sp, #104]
 949:../Source Files/lpc_ssp_glcd.c **** }
 1318              		.loc 1 949 0
 1319 0560 11B0     		add	sp, sp, #68
 1320 0562 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 947:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, color);
 1321              		.loc 1 947 0
 1322 0566 FFF7FEBF 		b	GLCD_Line
 1323              	.LVL148:
 1324              	.L92:
 1325              	.LBB16:
 802:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 1326              		.loc 1 802 0
 1327 056a 7388     		ldrh	r3, [r6, #2]
 1328              	.LVL149:
 1329 056c 4A88     		ldrh	r2, [r1, #2]
 1330              	.LVL150:
 1331 056e 1CB2     		sxth	r4, r3
 1332 0570 11B2     		sxth	r1, r2
 1333              	.LVL151:
 1334 0572 8C42     		cmp	r4, r1
 1335 0574 14DD     		ble	.L93
 802:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 1336              		.loc 1 802 0 is_stmt 0 discriminator 1
 1337 0576 82EA0300 		eor	r0, r2, r3
 1338 057a 7080     		strh	r0, [r6, #2]	@ movhi
 1339 057c 6B88     		ldrh	r3, [r5, #2]
 1340 057e 2C88     		ldrh	r4, [r5, #0]
 1341 0580 5840     		eors	r0, r0, r3
 1342 0582 6880     		strh	r0, [r5, #2]	@ movhi
 1343 0584 7288     		ldrh	r2, [r6, #2]
 1344 0586 3188     		ldrh	r1, [r6, #0]
 1345 0588 5040     		eors	r0, r0, r2
 1346 058a 7080     		strh	r0, [r6, #2]	@ movhi
 1347 058c 84EA0100 		eor	r0, r4, r1
 1348 0590 83B2     		uxth	r3, r0
 1349 0592 3380     		strh	r3, [r6, #0]	@ movhi
 1350 0594 2A88     		ldrh	r2, [r5, #0]
 1351 0596 5340     		eors	r3, r3, r2
 1352 0598 2B80     		strh	r3, [r5, #0]	@ movhi
 1353 059a 3488     		ldrh	r4, [r6, #0]
 1354 059c 6340     		eors	r3, r3, r4
 1355 059e 3380     		strh	r3, [r6, #0]	@ movhi
 1356              	.L93:
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 1357              		.loc 1 803 0 is_stmt 1
 1358 05a0 7388     		ldrh	r3, [r6, #2]
 1359 05a2 7A88     		ldrh	r2, [r7, #2]
 1360 05a4 18B2     		sxth	r0, r3
 1361 05a6 11B2     		sxth	r1, r2
 1362 05a8 8842     		cmp	r0, r1
 1363 05aa 14DD     		ble	.L94
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 1364              		.loc 1 803 0 is_stmt 0 discriminator 1
 1365 05ac 82EA0304 		eor	r4, r2, r3
 1366 05b0 7480     		strh	r4, [r6, #2]	@ movhi
 1367 05b2 7B88     		ldrh	r3, [r7, #2]
 1368 05b4 3888     		ldrh	r0, [r7, #0]
 1369 05b6 5C40     		eors	r4, r4, r3
 1370 05b8 7C80     		strh	r4, [r7, #2]	@ movhi
 1371 05ba 7288     		ldrh	r2, [r6, #2]
 1372 05bc 3188     		ldrh	r1, [r6, #0]
 1373 05be 5440     		eors	r4, r4, r2
 1374 05c0 7480     		strh	r4, [r6, #2]	@ movhi
 1375 05c2 80EA0104 		eor	r4, r0, r1
 1376 05c6 A3B2     		uxth	r3, r4
 1377 05c8 3380     		strh	r3, [r6, #0]	@ movhi
 1378 05ca 3A88     		ldrh	r2, [r7, #0]
 1379 05cc 5340     		eors	r3, r3, r2
 1380 05ce 3B80     		strh	r3, [r7, #0]	@ movhi
 1381 05d0 3088     		ldrh	r0, [r6, #0]
 1382 05d2 4340     		eors	r3, r3, r0
 1383 05d4 3380     		strh	r3, [r6, #0]	@ movhi
 1384              	.L94:
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 1385              		.loc 1 804 0 is_stmt 1
 1386 05d6 6C88     		ldrh	r4, [r5, #2]
 1387 05d8 7B88     		ldrh	r3, [r7, #2]
 1388 05da 22B2     		sxth	r2, r4
 1389 05dc 19B2     		sxth	r1, r3
 1390 05de 8A42     		cmp	r2, r1
 1391 05e0 14DD     		ble	.L95
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 1392              		.loc 1 804 0 is_stmt 0 discriminator 1
 1393 05e2 83EA0400 		eor	r0, r3, r4
 1394 05e6 6880     		strh	r0, [r5, #2]	@ movhi
 1395 05e8 7C88     		ldrh	r4, [r7, #2]
 1396 05ea 3A88     		ldrh	r2, [r7, #0]
 1397 05ec 6040     		eors	r0, r0, r4
 1398 05ee 7880     		strh	r0, [r7, #2]	@ movhi
 1399 05f0 6B88     		ldrh	r3, [r5, #2]
 1400 05f2 2988     		ldrh	r1, [r5, #0]
 1401 05f4 5840     		eors	r0, r0, r3
 1402 05f6 6880     		strh	r0, [r5, #2]	@ movhi
 1403 05f8 82EA0100 		eor	r0, r2, r1
 1404 05fc 84B2     		uxth	r4, r0
 1405 05fe 2C80     		strh	r4, [r5, #0]	@ movhi
 1406 0600 3B88     		ldrh	r3, [r7, #0]
 1407 0602 5C40     		eors	r4, r4, r3
 1408 0604 3C80     		strh	r4, [r7, #0]	@ movhi
 1409 0606 2A88     		ldrh	r2, [r5, #0]
 1410 0608 5440     		eors	r4, r4, r2
 1411 060a 2C80     		strh	r4, [r5, #0]	@ movhi
 1412              	.L95:
 806:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1413              		.loc 1 806 0 is_stmt 1
 1414 060c 3188     		ldrh	r1, [r6, #0]
 1415 060e 7388     		ldrh	r3, [r6, #2]
 808:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1416              		.loc 1 808 0
 1417 0610 2888     		ldrh	r0, [r5, #0]
 806:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1418              		.loc 1 806 0
 1419 0612 1FFA83F8 		uxth	r8, r3
 1420 0616 8CB2     		uxth	r4, r1
 1421              	.LVL152:
 1422 0618 CDF81880 		str	r8, [sp, #24]
 1423              	.LVL153:
 808:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1424              		.loc 1 808 0
 1425 061c 021B     		subs	r2, r0, r4
 1426 061e 90B2     		uxth	r0, r2
 810:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1427              		.loc 1 810 0
 1428 0620 B5F802A0 		ldrh	sl, [r5, #2]
 1429 0624 DDF818B0 		ldr	fp, [sp, #24]
 808:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1430              		.loc 1 808 0
 1431 0628 1FFA80F9 		uxth	r9, r0
 1432              	.LVL154:
 809:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1433              		.loc 1 809 0
 1434 062c 19F4004F 		tst	r9, #32768
 810:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1435              		.loc 1 810 0
 1436 0630 CBEB0A02 		rsb	r2, fp, sl
 809:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1437              		.loc 1 809 0
 1438 0634 18BF     		it	ne
 1439 0636 C0F10009 		rsbne	r9, r0, #0
 810:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1440              		.loc 1 810 0
 1441 063a 90B2     		uxth	r0, r2
 1442              	.LVL155:
 812:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1443              		.loc 1 812 0
 1444 063c 3A78     		ldrb	r2, [r7, #0]	@ zero_extendqisi2
 809:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1445              		.loc 1 809 0
 1446 063e 18BF     		it	ne
 1447 0640 4FF6FF78 		movwne	r8, #65535
 812:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1448              		.loc 1 812 0
 1449 0644 C1EB0201 		rsb	r1, r1, r2
 1450              	.LVL156:
 1451 0648 4AB2     		sxtb	r2, r1
 813:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1452              		.loc 1 813 0
 1453 064a 11B2     		sxth	r1, r2
 809:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1454              		.loc 1 809 0
 1455 064c 0CBF     		ite	eq
 1456 064e 4FF00108 		moveq	r8, #1
 1457 0652 1FFA89F9 		uxthne	r9, r9
 1458              	.LVL157:
 813:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1459              		.loc 1 813 0
 1460 0656 0029     		cmp	r1, #0
 809:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1461              		.loc 1 809 0
 1462 0658 CDF82080 		str	r8, [sp, #32]
 1463              	.LVL158:
 810:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1464              		.loc 1 810 0
 1465 065c 0490     		str	r0, [sp, #16]
 1466              	.LVL159:
 812:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1467              		.loc 1 812 0
 1468 065e 1FFA82FC 		uxth	ip, r2
 1469              	.LVL160:
 813:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1470              		.loc 1 813 0
 1471 0662 05DA     		bge	.L135
 813:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1472              		.loc 1 813 0 is_stmt 0 discriminator 1
 1473 0664 5242     		negs	r2, r2
 1474              	.LVL161:
 1475 0666 1FFA82FC 		uxth	ip, r2
 1476              	.LVL162:
 1477 066a 4FF6FF7E 		movw	lr, #65535
 1478 066e 01E0     		b	.L152
 1479              	.LVL163:
 1480              	.L135:
 813:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1481              		.loc 1 813 0
 1482 0670 4FF0010E 		mov	lr, #1
 1483              	.LVL164:
 1484              	.L152:
 814:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1485              		.loc 1 814 0 is_stmt 1
 1486 0674 B878     		ldrb	r0, [r7, #2]	@ zero_extendqisi2
 816:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1487              		.loc 1 816 0
 1488 0676 DDF810B0 		ldr	fp, [sp, #16]
 814:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1489              		.loc 1 814 0
 1490 067a C11A     		subs	r1, r0, r3
 1491 067c 49B2     		sxtb	r1, r1
 813:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1492              		.loc 1 813 0
 1493 067e CDF828E0 		str	lr, [sp, #40]
 1494              	.LVL165:
 816:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1495              		.loc 1 816 0
 1496 0682 0FFA8BF2 		sxth	r2, fp
 1497 0686 0FFA89FE 		sxth	lr, r9
 814:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1498              		.loc 1 814 0
 1499 068a 1FFA81F8 		uxth	r8, r1
 816:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1500              		.loc 1 816 0
 1501 068e 7245     		cmp	r2, lr
 814:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1502              		.loc 1 814 0
 1503 0690 0846     		mov	r0, r1	@ movhi
 1504 0692 CDF83480 		str	r8, [sp, #52]
 1505              	.LVL166:
 816:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1506              		.loc 1 816 0
 1507 0696 0FDD     		ble	.L136
 818:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 1508              		.loc 1 818 0
 1509 0698 DDF81080 		ldr	r8, [sp, #16]
 1510 069c 89EA0809 		eor	r9, r9, r8
 1511              	.LVL167:
 1512 06a0 89EA0802 		eor	r2, r9, r8
 1513 06a4 1FFA82FB 		uxth	fp, r2
 1514 06a8 8BEA090E 		eor	lr, fp, r9
 1515 06ac CDF810B0 		str	fp, [sp, #16]
 1516 06b0 1FFA8EF9 		uxth	r9, lr
 1517              	.LVL168:
 819:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1518              		.loc 1 819 0
 1519 06b4 0122     		movs	r2, #1
 1520 06b6 00E0     		b	.L153
 1521              	.LVL169:
 1522              	.L136:
 797:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 1523              		.loc 1 797 0
 1524 06b8 0022     		movs	r2, #0
 1525              	.LVL170:
 1526              	.L153:
 821:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 1527              		.loc 1 821 0
 1528 06ba 00B2     		sxth	r0, r0
 1529              	.LVL171:
 1530 06bc 0FFA8CF8 		sxth	r8, ip
 1531 06c0 4045     		cmp	r0, r8
 797:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 1532              		.loc 1 797 0
 1533 06c2 0792     		str	r2, [sp, #28]
 1534              	.LVL172:
 821:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 1535              		.loc 1 821 0
 1536 06c4 0BDD     		ble	.L137
 823:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 1537              		.loc 1 823 0
 1538 06c6 8CEA0100 		eor	r0, ip, r1
 1539 06ca 81B2     		uxth	r1, r0
 1540              	.LVL173:
 1541 06cc 81EA0C0C 		eor	ip, r1, ip
 1542              	.LVL174:
 1543 06d0 8CEA0100 		eor	r0, ip, r1
 1544              	.LVL175:
 1545 06d4 81B2     		uxth	r1, r0
 1546              	.LVL176:
 824:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 1547              		.loc 1 824 0
 1548 06d6 0120     		movs	r0, #1
 823:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 1549              		.loc 1 823 0
 1550 06d8 0D91     		str	r1, [sp, #52]
 1551              	.LVL177:
 824:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 1552              		.loc 1 824 0
 1553 06da 0990     		str	r0, [sp, #36]
 1554 06dc 01E0     		b	.L99
 1555              	.LVL178:
 1556              	.L137:
 798:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 1557              		.loc 1 798 0
 1558 06de 0021     		movs	r1, #0
 1559              	.LVL179:
 1560 06e0 0991     		str	r1, [sp, #36]
 1561              	.LVL180:
 1562              	.L99:
 827:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 1563              		.loc 1 827 0
 1564 06e2 4CF34E01 		sbfx	r1, ip, #1, #15
 1565 06e6 89B2     		uxth	r1, r1
 829:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 1566              		.loc 1 829 0
 1567 06e8 9A45     		cmp	sl, r3
 827:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 1568              		.loc 1 827 0
 1569 06ea 0591     		str	r1, [sp, #20]
 1570              	.LVL181:
 829:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 1571              		.loc 1 829 0
 1572 06ec 00F09580 		beq	.L100
 830:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 1573              		.loc 1 830 0
 1574 06f0 49F34E03 		sbfx	r3, r9, #1, #15
 1575 06f4 1FFA83FA 		uxth	sl, r3
 1576              	.LVL182:
 1577              	.LBB17:
 806:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1578              		.loc 1 806 0
 1579 06f8 A046     		mov	r8, r4
 832:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 1580              		.loc 1 832 0
 1581 06fa 4FF0000B 		mov	fp, #0
 1582              	.LVL183:
 1583              	.L101:
 832:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 1584              		.loc 1 832 0 is_stmt 0 discriminator 1
 1585 06fe 0FFA89F3 		sxth	r3, r9
 1586 0702 9B45     		cmp	fp, r3
 1587 0704 80F28980 		bge	.L100
 1588              	.L115:
 1589              	.LVL184:
 835:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1590              		.loc 1 835 0 is_stmt 1
 1591 0708 A045     		cmp	r8, r4
 838:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1592              		.loc 1 838 0
 1593 070a 4FF0000E 		mov	lr, #0
 835:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1594              		.loc 1 835 0
 1595 070e 39BF     		ittee	cc
 1596 0710 2246     		movcc	r2, r4
 1597 0712 4146     		movcc	r1, r8
 1598 0714 4246     		movcs	r2, r8
 1599 0716 2146     		movcs	r1, r4
 838:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1600              		.loc 1 838 0
 1601 0718 CDF82CE0 		str	lr, [sp, #44]
 1602              	.LVL185:
 1603              	.L103:
 838:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1604              		.loc 1 838 0 is_stmt 0 discriminator 1
 1605 071c 9B45     		cmp	fp, r3
 1606 071e 08DA     		bge	.L106
 1607              	.L109:
 841:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1608              		.loc 1 841 0 is_stmt 1
 1609 0720 0498     		ldr	r0, [sp, #16]
 840:../Source Files/lpc_ssp_glcd.c ****     			i++;
 1610              		.loc 1 840 0
 1611 0722 0BF1010B 		add	fp, fp, #1
 1612              	.LVL186:
 841:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1613              		.loc 1 841 0
 1614 0726 8244     		add	sl, sl, r0
 1615              	.LVL187:
 840:../Source Files/lpc_ssp_glcd.c ****     			i++;
 1616              		.loc 1 840 0
 1617 0728 5FFA8BFB 		uxtb	fp, fp
 1618              	.LVL188:
 841:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1619              		.loc 1 841 0
 1620 072c 1FFA8AFA 		uxth	sl, sl
 1621              	.LVL189:
 842:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1622              		.loc 1 842 0
 1623 0730 0FE0     		b	.L104
 1624              	.LVL190:
 1625              	.L106:
 1626 0732 0023     		movs	r3, #0
 1627 0734 0C93     		str	r3, [sp, #48]
 1628 0736 2FE0     		b	.L107
 1629              	.LVL191:
 1630              	.L108:
 845:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1631              		.loc 1 845 0
 1632 0738 0798     		ldr	r0, [sp, #28]
 792:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1633              		.loc 1 792 0
 1634 073a C9EB0A0A 		rsb	sl, r9, sl
 1635              	.LVL192:
 1636 073e 1FFA8AFA 		uxth	sl, sl
 1637              	.LVL193:
 845:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1638              		.loc 1 845 0
 1639 0742 0028     		cmp	r0, #0
 1640 0744 F5D0     		beq	.L106
 1641              	.L105:
 845:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1642              		.loc 1 845 0 is_stmt 0 discriminator 1
 1643 0746 DDF820E0 		ldr	lr, [sp, #32]
 1644 074a 1FFA8EFE 		uxth	lr, lr
 1645 074e CDF82CE0 		str	lr, [sp, #44]
 1646              	.LVL194:
 1647              	.L104:
 842:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1648              		.loc 1 842 0 is_stmt 1 discriminator 1
 1649 0752 9A45     		cmp	sl, r3
 1650 0754 F0DA     		bge	.L108
 848:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 1651              		.loc 1 848 0
 1652 0756 0798     		ldr	r0, [sp, #28]
 1653 0758 0028     		cmp	r0, #0
 1654 075a EAD1     		bne	.L106
 792:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1655              		.loc 1 792 0
 1656 075c DDF820E0 		ldr	lr, [sp, #32]
 1657 0760 F044     		add	r8, r8, lr
 1658              	.LVL195:
 1659 0762 1FFA88F8 		uxth	r8, r8
 1660              	.LVL196:
 1661 0766 D9E7     		b	.L103
 1662              	.LVL197:
 1663              	.L112:
 1664 0768 0598     		ldr	r0, [sp, #20]
 1665 076a CCEB0003 		rsb	r3, ip, r0
 1666 076e 98B2     		uxth	r0, r3
 860:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1667              		.loc 1 860 0
 1668 0770 099B     		ldr	r3, [sp, #36]
 792:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1669              		.loc 1 792 0
 1670 0772 0590     		str	r0, [sp, #20]
 860:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1671              		.loc 1 860 0
 1672 0774 C3B1     		cbz	r3, .L111
 860:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1673              		.loc 1 860 0 is_stmt 0 discriminator 1
 1674 0776 DDF828E0 		ldr	lr, [sp, #40]
 1675 077a 1FFA8EFE 		uxth	lr, lr
 1676 077e CDF830E0 		str	lr, [sp, #48]
 1677              	.L110:
 857:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 1678              		.loc 1 857 0 is_stmt 1 discriminator 1
 1679 0782 0598     		ldr	r0, [sp, #20]
 1680 0784 0FFA8CF3 		sxth	r3, ip
 1681 0788 9842     		cmp	r0, r3
 1682 078a EDDA     		bge	.L112
 863:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 1683              		.loc 1 863 0
 1684 078c 099B     		ldr	r3, [sp, #36]
 1685 078e 5BB9     		cbnz	r3, .L111
 792:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1686              		.loc 1 792 0
 1687 0790 DDF828E0 		ldr	lr, [sp, #40]
 1688 0794 7444     		add	r4, r4, lr
 1689              	.LVL198:
 1690 0796 A4B2     		uxth	r4, r4
 1691              	.LVL199:
 1692              	.L107:
 856:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 1693              		.loc 1 856 0
 1694 0798 0598     		ldr	r0, [sp, #20]
 1695 079a DDF834E0 		ldr	lr, [sp, #52]
 1696 079e 00EB0E03 		add	r3, r0, lr
 1697 07a2 98B2     		uxth	r0, r3
 1698 07a4 0590     		str	r0, [sp, #20]
 857:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 1699              		.loc 1 857 0
 1700 07a6 ECE7     		b	.L110
 1701              	.L111:
 869:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 1702              		.loc 1 869 0
 1703 07a8 069B     		ldr	r3, [sp, #24]
 1704 07aa 8845     		cmp	r8, r1
 1705 07ac 38BF     		it	cc
 1706 07ae 4146     		movcc	r1, r8
 1707 07b0 9045     		cmp	r8, r2
 1708 07b2 28BF     		it	cs
 1709 07b4 4246     		movcs	r2, r8
 1710 07b6 88B2     		uxth	r0, r1
 1711              	.LVL200:
 1712 07b8 92B2     		uxth	r2, r2
 1713              	.LVL201:
 1714 07ba 19B2     		sxth	r1, r3
 1715 07bc 0F9B     		ldr	r3, [sp, #60]
 1716 07be A042     		cmp	r0, r4
 1717 07c0 28BF     		it	cs
 1718 07c2 2046     		movcs	r0, r4
 1719              	.LVL202:
 1720 07c4 A242     		cmp	r2, r4
 1721 07c6 38BF     		it	cc
 1722 07c8 2246     		movcc	r2, r4
 1723              	.LVL203:
 1724 07ca 0093     		str	r3, [sp, #0]
 1725 07cc 00B2     		sxth	r0, r0
 1726 07ce 0B46     		mov	r3, r1
 1727 07d0 12B2     		sxth	r2, r2
 1728 07d2 CDF80CC0 		str	ip, [sp, #12]
 1729 07d6 FFF7FEFF 		bl	GLCD_Line
 1730              	.LVL204:
 872:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1731              		.loc 1 872 0
 1732 07da 0799     		ldr	r1, [sp, #28]
 1733 07dc DDF80CC0 		ldr	ip, [sp, #12]
 1734 07e0 19B9     		cbnz	r1, .L113
 872:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1735              		.loc 1 872 0 is_stmt 0 discriminator 1
 1736 07e2 0898     		ldr	r0, [sp, #32]
 1737 07e4 8044     		add	r8, r8, r0
 1738              	.LVL205:
 1739 07e6 1FFA88F8 		uxth	r8, r8
 1740              	.LVL206:
 1741              	.L113:
 873:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1742              		.loc 1 873 0 is_stmt 1
 1743 07ea 0B9A     		ldr	r2, [sp, #44]
 874:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1744              		.loc 1 874 0
 1745 07ec 0999     		ldr	r1, [sp, #36]
 873:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1746              		.loc 1 873 0
 1747 07ee 08EB0203 		add	r3, r8, r2
 1748 07f2 1FFA83F8 		uxth	r8, r3
 1749              	.LVL207:
 874:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1750              		.loc 1 874 0
 1751 07f6 19B9     		cbnz	r1, .L114
 874:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1752              		.loc 1 874 0 is_stmt 0 discriminator 1
 1753 07f8 DDF828E0 		ldr	lr, [sp, #40]
 1754 07fc 7444     		add	r4, r4, lr
 1755              	.LVL208:
 1756 07fe A4B2     		uxth	r4, r4
 1757              	.LVL209:
 1758              	.L114:
 876:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1759              		.loc 1 876 0 is_stmt 1
 1760 0800 0699     		ldr	r1, [sp, #24]
 875:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1761              		.loc 1 875 0
 1762 0802 0C98     		ldr	r0, [sp, #48]
 1763 0804 2318     		adds	r3, r4, r0
 1764              	.LVL210:
 876:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1765              		.loc 1 876 0
 1766 0806 481C     		adds	r0, r1, #1
 875:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1767              		.loc 1 875 0
 1768 0808 9CB2     		uxth	r4, r3
 1769              	.LVL211:
 876:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1770              		.loc 1 876 0
 1771 080a 83B2     		uxth	r3, r0
 1772              	.LVL212:
 1773 080c 0693     		str	r3, [sp, #24]
 877:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 1774              		.loc 1 877 0
 1775 080e B5F90200 		ldrsh	r0, [r5, #2]
 1776 0812 0699     		ldr	r1, [sp, #24]
 1777 0814 8142     		cmp	r1, r0
 1778 0816 7FF472AF 		bne	.L101
 1779              	.LVL213:
 1780              	.L100:
 1781              	.LBE17:
 881:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1782              		.loc 1 881 0
 1783 081a 3A78     		ldrb	r2, [r7, #0]	@ zero_extendqisi2
 1784 081c B5F800A0 		ldrh	sl, [r5, #0]
 1785 0820 CAEB0203 		rsb	r3, sl, r2
 1786 0824 58B2     		sxtb	r0, r3
 1787 0826 02B2     		sxth	r2, r0
 1788 0828 002A     		cmp	r2, #0
 1789 082a 1FFA80F9 		uxth	r9, r0
 1790              	.LVL214:
 1791 082e 07DA     		bge	.L142
 881:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1792              		.loc 1 881 0 is_stmt 0 discriminator 1
 1793 0830 C0F10009 		rsb	r9, r0, #0
 1794 0834 4FF6FF70 		movw	r0, #65535
 1795              	.LVL215:
 1796 0838 1FFA89F9 		uxth	r9, r9
 1797              	.LVL216:
 1798 083c 0790     		str	r0, [sp, #28]
 1799 083e 01E0     		b	.L116
 1800              	.LVL217:
 1801              	.L142:
 881:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1802              		.loc 1 881 0
 1803 0840 0123     		movs	r3, #1
 1804 0842 0793     		str	r3, [sp, #28]
 1805              	.LVL218:
 1806              	.L116:
 882:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1807              		.loc 1 882 0 is_stmt 1
 1808 0844 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 1809 0846 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 883:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 1810              		.loc 1 883 0
 1811 0848 1FFA8AF8 		uxth	r8, sl
 882:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1812              		.loc 1 882 0
 1813 084c 8B1A     		subs	r3, r1, r2
 1814 084e 58B2     		sxtb	r0, r3
 885:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1815              		.loc 1 885 0
 1816 0850 02B2     		sxth	r2, r0
 1817 0852 0FFA89F1 		sxth	r1, r9
 882:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1818              		.loc 1 882 0
 1819 0856 1FFA80FB 		uxth	fp, r0
 885:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1820              		.loc 1 885 0
 1821 085a 8A42     		cmp	r2, r1
 882:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1822              		.loc 1 882 0
 1823 085c CDF830B0 		str	fp, [sp, #48]
 1824              	.LVL219:
 885:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1825              		.loc 1 885 0
 1826 0860 0BDD     		ble	.L143
 887:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 1827              		.loc 1 887 0
 1828 0862 89EA0003 		eor	r3, r9, r0
 1829 0866 98B2     		uxth	r0, r3
 1830              	.LVL220:
 1831 0868 80EA0909 		eor	r9, r0, r9
 1832              	.LVL221:
 1833 086c 89EA0003 		eor	r3, r9, r0
 1834              	.LVL222:
 1835 0870 98B2     		uxth	r0, r3
 1836              	.LVL223:
 888:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1837              		.loc 1 888 0
 1838 0872 0123     		movs	r3, #1
 887:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 1839              		.loc 1 887 0
 1840 0874 0C90     		str	r0, [sp, #48]
 1841              	.LVL224:
 888:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1842              		.loc 1 888 0
 1843 0876 0493     		str	r3, [sp, #16]
 1844 0878 01E0     		b	.L117
 1845              	.LVL225:
 1846              	.L143:
 889:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 1847              		.loc 1 889 0
 1848 087a 0021     		movs	r1, #0
 1849 087c 0491     		str	r1, [sp, #16]
 1850              	.LVL226:
 1851              	.L117:
 891:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 1852              		.loc 1 891 0
 1853 087e C9F3470B 		ubfx	fp, r9, #1, #8
 1854              	.LVL227:
 1855              	.LBB18:
 893:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1856              		.loc 1 893 0
 1857 0882 4FF0000A 		mov	sl, #0
 1858              	.LVL228:
 1859              	.L118:
 893:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1860              		.loc 1 893 0 is_stmt 0 discriminator 1
 1861 0886 0FFA89F3 		sxth	r3, r9
 1862 088a 9A45     		cmp	sl, r3
 1863 088c 3FF748AE 		bgt	.L132
 1864              	.L133:
 1865              	.LVL229:
 896:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1866              		.loc 1 896 0 is_stmt 1
 1867 0890 A045     		cmp	r8, r4
 1868 0892 39BF     		ittee	cc
 1869 0894 2246     		movcc	r2, r4
 1870 0896 4146     		movcc	r1, r8
 1871 0898 4246     		movcs	r2, r8
 1872 089a 2146     		movcs	r1, r4
 1873              	.LVL230:
 1874              	.L150:
 899:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1875              		.loc 1 899 0 discriminator 1
 1876 089c 9A45     		cmp	sl, r3
 1877 089e 12DA     		bge	.L155
 1878              	.L125:
 792:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1879              		.loc 1 792 0
 1880 08a0 DDF830E0 		ldr	lr, [sp, #48]
 1881 08a4 0BEB0E00 		add	r0, fp, lr
 1882 08a8 1FFA80FB 		uxth	fp, r0
 1883              	.LVL231:
 902:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1884              		.loc 1 902 0
 1885 08ac 9B45     		cmp	fp, r3
 1886 08ae 08DB     		blt	.L121
 905:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1887              		.loc 1 905 0
 1888 08b0 049B     		ldr	r3, [sp, #16]
 904:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 1889              		.loc 1 904 0
 1890 08b2 C9EB0B00 		rsb	r0, r9, fp
 1891              	.LVL232:
 1892 08b6 1FFA80FB 		uxth	fp, r0
 1893              	.LVL233:
 905:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1894              		.loc 1 905 0
 1895 08ba 3BB1     		cbz	r3, .L145
 905:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1896              		.loc 1 905 0 is_stmt 0 discriminator 1
 1897 08bc 079B     		ldr	r3, [sp, #28]
 1898 08be 9BB2     		uxth	r3, r3
 1899 08c0 02E0     		b	.L154
 1900              	.L121:
 1901              	.LVL234:
 908:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 1902              		.loc 1 908 0 is_stmt 1
 1903 08c2 0498     		ldr	r0, [sp, #16]
 1904 08c4 60B1     		cbz	r0, .L123
 1905              	.LVL235:
 1906              	.L155:
 1907 08c6 0023     		movs	r3, #0
 1908              	.L154:
 1909 08c8 0893     		str	r3, [sp, #32]
 1910 08ca 01E0     		b	.L122
 1911              	.LVL236:
 1912              	.L145:
 905:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1913              		.loc 1 905 0
 1914 08cc 0498     		ldr	r0, [sp, #16]
 1915              	.LVL237:
 1916 08ce 0890     		str	r0, [sp, #32]
 1917              	.LVL238:
 1918              	.L122:
 914:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 1919              		.loc 1 914 0 discriminator 1
 1920 08d0 B7F90000 		ldrsh	r0, [r7, #0]
 1921 08d4 4FF0000E 		mov	lr, #0
 1922 08d8 0290     		str	r0, [sp, #8]
 1923 08da CDF82CE0 		str	lr, [sp, #44]
 1924 08de 1EE0     		b	.L124
 1925              	.LVL239:
 1926              	.L123:
 792:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1927              		.loc 1 792 0
 1928 08e0 0798     		ldr	r0, [sp, #28]
 910:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 1929              		.loc 1 910 0
 1930 08e2 0AF1010A 		add	sl, sl, #1
 1931              	.LVL240:
 792:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1932              		.loc 1 792 0
 1933 08e6 8044     		add	r8, r8, r0
 1934              	.LVL241:
 1935 08e8 1FFA88F8 		uxth	r8, r8
 1936              	.LVL242:
 910:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 1937              		.loc 1 910 0
 1938 08ec 5FFA8AFA 		uxtb	sl, sl
 1939              	.LVL243:
 1940 08f0 D4E7     		b	.L150
 1941              	.LVL244:
 1942              	.L128:
 792:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1943              		.loc 1 792 0
 1944 08f2 DDF814E0 		ldr	lr, [sp, #20]
 1945 08f6 CCEB0E03 		rsb	r3, ip, lr
 1946 08fa 98B2     		uxth	r0, r3
 920:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 1947              		.loc 1 920 0
 1948 08fc 099B     		ldr	r3, [sp, #36]
 792:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1949              		.loc 1 792 0
 1950 08fe 0590     		str	r0, [sp, #20]
 920:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 1951              		.loc 1 920 0
 1952 0900 CBB1     		cbz	r3, .L127
 920:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 1953              		.loc 1 920 0 is_stmt 0 discriminator 1
 1954 0902 0A9B     		ldr	r3, [sp, #40]
 1955 0904 98B2     		uxth	r0, r3
 1956 0906 0B90     		str	r0, [sp, #44]
 1957              	.L126:
 917:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 1958              		.loc 1 917 0 is_stmt 1 discriminator 1
 1959 0908 DDF814E0 		ldr	lr, [sp, #20]
 1960 090c 0FFA8CF0 		sxth	r0, ip
 1961 0910 8645     		cmp	lr, r0
 1962 0912 EEDA     		bge	.L128
 923:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 1963              		.loc 1 923 0
 1964 0914 099B     		ldr	r3, [sp, #36]
 1965 0916 73B9     		cbnz	r3, .L127
 792:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1966              		.loc 1 792 0
 1967 0918 0A98     		ldr	r0, [sp, #40]
 1968 091a 2418     		adds	r4, r4, r0
 1969              	.LVL245:
 1970 091c A4B2     		uxth	r4, r4
 1971              	.LVL246:
 1972              	.L124:
 914:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 1973              		.loc 1 914 0 discriminator 1
 1974 091e DDF808E0 		ldr	lr, [sp, #8]
 1975 0922 7445     		cmp	r4, lr
 1976 0924 07D0     		beq	.L127
 1977              	.L129:
 916:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 1978              		.loc 1 916 0
 1979 0926 DDF814E0 		ldr	lr, [sp, #20]
 1980 092a 0D9B     		ldr	r3, [sp, #52]
 1981 092c 0EEB0300 		add	r0, lr, r3
 1982 0930 83B2     		uxth	r3, r0
 1983 0932 0593     		str	r3, [sp, #20]
 917:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 1984              		.loc 1 917 0
 1985 0934 E8E7     		b	.L126
 1986              	.L127:
 1987              	.LVL247:
 930:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 1988              		.loc 1 930 0
 1989 0936 069B     		ldr	r3, [sp, #24]
 1990 0938 8845     		cmp	r8, r1
 1991 093a 38BF     		it	cc
 1992 093c 4146     		movcc	r1, r8
 1993 093e 9045     		cmp	r8, r2
 1994 0940 28BF     		it	cs
 1995 0942 4246     		movcs	r2, r8
 1996 0944 88B2     		uxth	r0, r1
 1997              	.LVL248:
 1998 0946 92B2     		uxth	r2, r2
 1999              	.LVL249:
 2000 0948 19B2     		sxth	r1, r3
 2001 094a 0F9B     		ldr	r3, [sp, #60]
 2002 094c A042     		cmp	r0, r4
 2003 094e 28BF     		it	cs
 2004 0950 2046     		movcs	r0, r4
 2005              	.LVL250:
 2006 0952 A242     		cmp	r2, r4
 2007 0954 38BF     		it	cc
 2008 0956 2246     		movcc	r2, r4
 2009              	.LVL251:
 2010 0958 0093     		str	r3, [sp, #0]
 2011 095a 00B2     		sxth	r0, r0
 2012 095c 0B46     		mov	r3, r1
 2013 095e 12B2     		sxth	r2, r2
 2014 0960 CDF80CC0 		str	ip, [sp, #12]
 2015 0964 FFF7FEFF 		bl	GLCD_Line
 2016              	.LVL252:
 932:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 2017              		.loc 1 932 0
 2018 0968 0499     		ldr	r1, [sp, #16]
 2019 096a DDF80CC0 		ldr	ip, [sp, #12]
 2020 096e 19B9     		cbnz	r1, .L130
 932:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 2021              		.loc 1 932 0 is_stmt 0 discriminator 1
 2022 0970 0798     		ldr	r0, [sp, #28]
 2023 0972 8044     		add	r8, r8, r0
 2024              	.LVL253:
 2025 0974 1FFA88F8 		uxth	r8, r8
 2026              	.LVL254:
 2027              	.L130:
 933:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 2028              		.loc 1 933 0 is_stmt 1
 2029 0978 089A     		ldr	r2, [sp, #32]
 934:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2030              		.loc 1 934 0
 2031 097a 0999     		ldr	r1, [sp, #36]
 933:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 2032              		.loc 1 933 0
 2033 097c 08EB0203 		add	r3, r8, r2
 2034 0980 1FFA83F8 		uxth	r8, r3
 2035              	.LVL255:
 934:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2036              		.loc 1 934 0
 2037 0984 19B9     		cbnz	r1, .L131
 934:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2038              		.loc 1 934 0 is_stmt 0 discriminator 1
 2039 0986 DDF828E0 		ldr	lr, [sp, #40]
 2040 098a 7444     		add	r4, r4, lr
 2041              	.LVL256:
 2042 098c A4B2     		uxth	r4, r4
 2043              	.LVL257:
 2044              	.L131:
 936:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2045              		.loc 1 936 0 is_stmt 1
 2046 098e 0699     		ldr	r1, [sp, #24]
 935:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 2047              		.loc 1 935 0
 2048 0990 0B98     		ldr	r0, [sp, #44]
 2049 0992 2318     		adds	r3, r4, r0
 2050              	.LVL258:
 936:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2051              		.loc 1 936 0
 2052 0994 481C     		adds	r0, r1, #1
 935:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 2053              		.loc 1 935 0
 2054 0996 9CB2     		uxth	r4, r3
 2055              	.LVL259:
 936:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2056              		.loc 1 936 0
 2057 0998 83B2     		uxth	r3, r0
 2058              	.LVL260:
 2059 099a 0693     		str	r3, [sp, #24]
 937:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 2060              		.loc 1 937 0
 2061 099c B7F90200 		ldrsh	r0, [r7, #2]
 2062 09a0 0699     		ldr	r1, [sp, #24]
 2063 09a2 8142     		cmp	r1, r0
 2064 09a4 3FF7BCAD 		bgt	.L132
 893:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 2065              		.loc 1 893 0
 2066 09a8 0AF1010A 		add	sl, sl, #1
 2067              	.LVL261:
 2068 09ac 5FFA8AFA 		uxtb	sl, sl
 2069              	.LVL262:
 2070 09b0 69E7     		b	.L118
 2071              	.LBE18:
 2072              	.LBE16:
 2073              		.cfi_endproc
 2074              	.LFE79:
 2076              		.align	1
 2077              		.global	GLCD_Frame
 2078              		.thumb
 2079              		.thumb_func
 2081              	GLCD_Frame:
 2082              	.LFB78:
 747:../Source Files/lpc_ssp_glcd.c **** {
 2083              		.loc 1 747 0
 2084              		.cfi_startproc
 2085              		@ args = 4, pretend = 0, frame = 0
 2086              		@ frame_needed = 0, uses_anonymous_args = 0
 2087              	.LVL263:
 2088 09b2 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 2089              	.LCFI18:
 2090              		.cfi_def_cfa_offset 40
 2091              		.cfi_offset 0, -40
 2092              		.cfi_offset 1, -36
 2093              		.cfi_offset 2, -32
 2094              		.cfi_offset 4, -28
 2095              		.cfi_offset 5, -24
 2096              		.cfi_offset 6, -20
 2097              		.cfi_offset 7, -16
 2098              		.cfi_offset 8, -12
 2099              		.cfi_offset 9, -8
 2100              		.cfi_offset 14, -4
 747:../Source Files/lpc_ssp_glcd.c **** {
 2101              		.loc 1 747 0
 2102 09b6 BDF82880 		ldrh	r8, [sp, #40]
 2103 09ba 0546     		mov	r5, r0
 2104 09bc 0C46     		mov	r4, r1
 2105 09be 9146     		mov	r9, r2
 2106 09c0 1F46     		mov	r7, r3
 2107 09c2 96B2     		uxth	r6, r2
 2108              	.LVL264:
 2109              	.L157:
 752:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 2110              		.loc 1 752 0 discriminator 1
 2111 09c4 002E     		cmp	r6, #0
 2112 09c6 58D0     		beq	.L162
 2113              	.L160:
 2114 09c8 6988     		ldrh	r1, [r5, #2]
 754:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 2115              		.loc 1 754 0
 2116 09ca 33B2     		sxth	r3, r6
 756:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 2117              		.loc 1 756 0
 2118 09cc 7218     		adds	r2, r6, r1
 754:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 2119              		.loc 1 754 0
 2120 09ce 4B45     		cmp	r3, r9
 756:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 2121              		.loc 1 756 0
 2122 09d0 11B2     		sxth	r1, r2
 2123 09d2 B5F90000 		ldrsh	r0, [r5, #0]
 2124 09d6 B4F90020 		ldrsh	r2, [r4, #0]
 754:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 2125              		.loc 1 754 0
 2126 09da 26DA     		bge	.L158
 756:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 2127              		.loc 1 756 0
 2128 09dc 0B46     		mov	r3, r1
 2129 09de CDF80080 		str	r8, [sp, #0]
 2130 09e2 FFF7FEFF 		bl	GLCD_Line
 2131              	.LVL265:
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 2132              		.loc 1 757 0
 2133 09e6 6188     		ldrh	r1, [r4, #2]
 2134 09e8 B5F90000 		ldrsh	r0, [r5, #0]
 2135 09ec 8A1B     		subs	r2, r1, r6
 2136 09ee 11B2     		sxth	r1, r2
 2137 09f0 0B46     		mov	r3, r1
 2138 09f2 B4F90020 		ldrsh	r2, [r4, #0]
 2139 09f6 CDF80080 		str	r8, [sp, #0]
 2140 09fa FFF7FEFF 		bl	GLCD_Line
 2141              	.LVL266:
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 2142              		.loc 1 758 0
 2143 09fe 2888     		ldrh	r0, [r5, #0]
 2144 0a00 B5F90210 		ldrsh	r1, [r5, #2]
 2145 0a04 3318     		adds	r3, r6, r0
 2146 0a06 18B2     		sxth	r0, r3
 2147 0a08 0246     		mov	r2, r0
 2148 0a0a B4F90230 		ldrsh	r3, [r4, #2]
 2149 0a0e CDF80080 		str	r8, [sp, #0]
 2150 0a12 FFF7FEFF 		bl	GLCD_Line
 2151              	.LVL267:
 759:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 2152              		.loc 1 759 0
 2153 0a16 2188     		ldrh	r1, [r4, #0]
 2154 0a18 B4F90230 		ldrsh	r3, [r4, #2]
 2155 0a1c 8A1B     		subs	r2, r1, r6
 2156 0a1e 10B2     		sxth	r0, r2
 2157 0a20 B5F90210 		ldrsh	r1, [r5, #2]
 2158 0a24 CDF80080 		str	r8, [sp, #0]
 2159 0a28 21E0     		b	.L161
 2160              	.L158:
 764:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 2161              		.loc 1 764 0
 2162 0a2a 0B46     		mov	r3, r1
 2163 0a2c 0097     		str	r7, [sp, #0]
 2164 0a2e FFF7FEFF 		bl	GLCD_Line
 2165              	.LVL268:
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 2166              		.loc 1 765 0
 2167 0a32 6088     		ldrh	r0, [r4, #2]
 2168 0a34 B4F90020 		ldrsh	r2, [r4, #0]
 2169 0a38 831B     		subs	r3, r0, r6
 2170 0a3a 19B2     		sxth	r1, r3
 2171 0a3c 0B46     		mov	r3, r1
 2172 0a3e B5F90000 		ldrsh	r0, [r5, #0]
 2173 0a42 0097     		str	r7, [sp, #0]
 2174 0a44 FFF7FEFF 		bl	GLCD_Line
 2175              	.LVL269:
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 2176              		.loc 1 766 0
 2177 0a48 2988     		ldrh	r1, [r5, #0]
 2178 0a4a B4F90230 		ldrsh	r3, [r4, #2]
 2179 0a4e 7218     		adds	r2, r6, r1
 2180 0a50 10B2     		sxth	r0, r2
 2181 0a52 B5F90210 		ldrsh	r1, [r5, #2]
 2182 0a56 0246     		mov	r2, r0
 2183 0a58 0097     		str	r7, [sp, #0]
 2184 0a5a FFF7FEFF 		bl	GLCD_Line
 2185              	.LVL270:
 767:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 2186              		.loc 1 767 0
 2187 0a5e 2088     		ldrh	r0, [r4, #0]
 2188 0a60 B5F90210 		ldrsh	r1, [r5, #2]
 2189 0a64 831B     		subs	r3, r0, r6
 2190 0a66 18B2     		sxth	r0, r3
 2191 0a68 B4F90230 		ldrsh	r3, [r4, #2]
 2192 0a6c 0097     		str	r7, [sp, #0]
 2193              	.L161:
 2194 0a6e 0246     		mov	r2, r0
 2195 0a70 013E     		subs	r6, r6, #1
 2196 0a72 FFF7FEFF 		bl	GLCD_Line
 2197              	.LVL271:
 2198 0a76 B6B2     		uxth	r6, r6
 2199 0a78 A4E7     		b	.L157
 2200              	.L162:
 774:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 2201              		.loc 1 774 0
 2202 0a7a B5F90210 		ldrsh	r1, [r5, #2]
 2203 0a7e B5F90000 		ldrsh	r0, [r5, #0]
 2204 0a82 B4F90020 		ldrsh	r2, [r4, #0]
 2205 0a86 0B46     		mov	r3, r1
 2206 0a88 0097     		str	r7, [sp, #0]
 2207 0a8a FFF7FEFF 		bl	GLCD_Line
 2208              	.LVL272:
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 2209              		.loc 1 775 0
 2210 0a8e B4F90210 		ldrsh	r1, [r4, #2]
 2211 0a92 B5F90000 		ldrsh	r0, [r5, #0]
 2212 0a96 B4F90020 		ldrsh	r2, [r4, #0]
 2213 0a9a 0B46     		mov	r3, r1
 2214 0a9c 0097     		str	r7, [sp, #0]
 2215 0a9e FFF7FEFF 		bl	GLCD_Line
 2216              	.LVL273:
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 2217              		.loc 1 776 0
 2218 0aa2 B5F90000 		ldrsh	r0, [r5, #0]
 2219 0aa6 B5F90210 		ldrsh	r1, [r5, #2]
 2220 0aaa B4F90230 		ldrsh	r3, [r4, #2]
 2221 0aae 0246     		mov	r2, r0
 2222 0ab0 0097     		str	r7, [sp, #0]
 2223 0ab2 FFF7FEFF 		bl	GLCD_Line
 2224              	.LVL274:
 777:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2225              		.loc 1 777 0
 2226 0ab6 B4F90000 		ldrsh	r0, [r4, #0]
 2227 0aba B5F90210 		ldrsh	r1, [r5, #2]
 2228 0abe B4F90230 		ldrsh	r3, [r4, #2]
 2229 0ac2 0246     		mov	r2, r0
 2230 0ac4 0A97     		str	r7, [sp, #40]
 779:../Source Files/lpc_ssp_glcd.c **** }
 2231              		.loc 1 779 0
 2232 0ac6 03B0     		add	sp, sp, #12
 2233 0ac8 BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 777:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2234              		.loc 1 777 0
 2235 0acc FFF7FEBF 		b	GLCD_Line
 2236              	.LVL275:
 2237              		.cfi_endproc
 2238              	.LFE78:
 2240              		.align	1
 2241              		.global	GLCD_Circle
 2242              		.thumb
 2243              		.thumb_func
 2245              	GLCD_Circle:
 2246              	.LFB80:
 961:../Source Files/lpc_ssp_glcd.c **** {
 2247              		.loc 1 961 0
 2248              		.cfi_startproc
 2249              		@ args = 8, pretend = 0, frame = 40
 2250              		@ frame_needed = 0, uses_anonymous_args = 0
 2251              	.LVL276:
 2252 0ad0 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2253              	.LCFI19:
 2254              		.cfi_def_cfa_offset 36
 2255              		.cfi_offset 4, -36
 2256              		.cfi_offset 5, -32
 2257              		.cfi_offset 6, -28
 2258              		.cfi_offset 7, -24
 2259              		.cfi_offset 8, -20
 2260              		.cfi_offset 9, -16
 2261              		.cfi_offset 10, -12
 2262              		.cfi_offset 11, -8
 2263              		.cfi_offset 14, -4
 2264 0ad4 8DB0     		sub	sp, sp, #52
 2265              	.LCFI20:
 2266              		.cfi_def_cfa_offset 88
 961:../Source Files/lpc_ssp_glcd.c **** {
 2267              		.loc 1 961 0
 2268 0ad6 0990     		str	r0, [sp, #36]
 2269 0ad8 0A91     		str	r1, [sp, #40]
 2270 0ada 0B93     		str	r3, [sp, #44]
 2271 0adc BDF85C00 		ldrh	r0, [sp, #92]
 2272              	.LVL277:
 2273 0ae0 BDF85830 		ldrh	r3, [sp, #88]
 2274              	.LVL278:
 965:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2275              		.loc 1 965 0
 2276 0ae4 C2F10101 		rsb	r1, r2, #1
 2277              	.LVL279:
 961:../Source Files/lpc_ssp_glcd.c **** {
 2278              		.loc 1 961 0
 2279 0ae8 9446     		mov	ip, r2
 965:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2280              		.loc 1 965 0
 2281 0aea 8AB2     		uxth	r2, r1
 2282              	.LVL280:
 961:../Source Files/lpc_ssp_glcd.c **** {
 2283              		.loc 1 961 0
 2284 0aec 0593     		str	r3, [sp, #20]
 2285 0aee 0890     		str	r0, [sp, #32]
 965:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2286              		.loc 1 965 0
 2287 0af0 0792     		str	r2, [sp, #28]
 2288              	.LVL281:
 2289 0af2 1646     		mov	r6, r2
 964:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 2290              		.loc 1 964 0
 2291 0af4 6546     		mov	r5, ip
 965:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2292              		.loc 1 965 0
 2293 0af6 0024     		movs	r4, #0
 2294              	.LVL282:
 2295              	.L167:
 969:../Source Files/lpc_ssp_glcd.c **** 		if(fill)
 2296              		.loc 1 969 0
 2297 0af8 0B9F     		ldr	r7, [sp, #44]
 2298 0afa 002F     		cmp	r7, #0
 2299 0afc 43D0     		beq	.L164
 971:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2300              		.loc 1 971 0
 2301 0afe 099B     		ldr	r3, [sp, #36]
 2302 0b00 0A99     		ldr	r1, [sp, #40]
 2303 0b02 1FFA83F8 		uxth	r8, r3
 2304 0b06 8FB2     		uxth	r7, r1
 2305 0b08 1FFA85F9 		uxth	r9, r5
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2306              		.loc 1 960 0
 2307 0b0c A0B2     		uxth	r0, r4
 971:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2308              		.loc 1 971 0
 2309 0b0e 09EB0702 		add	r2, r9, r7
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2310              		.loc 1 960 0
 2311 0b12 C0EB080B 		rsb	fp, r0, r8
 2312 0b16 00EB080A 		add	sl, r0, r8
 971:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2313              		.loc 1 971 0
 2314 0b1a 089B     		ldr	r3, [sp, #32]
 2315 0b1c 11B2     		sxth	r1, r2
 2316 0b1e 0FFA8BFB 		sxth	fp, fp
 2317 0b22 0FFA8AFA 		sxth	sl, sl
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2318              		.loc 1 960 0
 2319 0b26 0690     		str	r0, [sp, #24]
 971:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2320              		.loc 1 971 0
 2321 0b28 0093     		str	r3, [sp, #0]
 2322 0b2a 5846     		mov	r0, fp
 2323 0b2c 0B46     		mov	r3, r1
 2324 0b2e 5246     		mov	r2, sl
 2325 0b30 CDF80CC0 		str	ip, [sp, #12]
 2326 0b34 FFF7FEFF 		bl	GLCD_Line
 2327              	.LVL283:
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, fill_color);
 2328              		.loc 1 972 0
 2329 0b38 C9EB0700 		rsb	r0, r9, r7
 2330 0b3c 089A     		ldr	r2, [sp, #32]
 2331 0b3e 01B2     		sxth	r1, r0
 2332 0b40 0B46     		mov	r3, r1
 2333 0b42 5846     		mov	r0, fp
 2334 0b44 0092     		str	r2, [sp, #0]
 2335 0b46 5246     		mov	r2, sl
 2336 0b48 FFF7FEFF 		bl	GLCD_Line
 2337              	.LVL284:
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2338              		.loc 1 960 0
 2339 0b4c 0699     		ldr	r1, [sp, #24]
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, fill_color);
 2340              		.loc 1 973 0
 2341 0b4e C9EB080C 		rsb	ip, r9, r8
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2342              		.loc 1 960 0
 2343 0b52 CB19     		adds	r3, r1, r7
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, fill_color);
 2344              		.loc 1 973 0
 2345 0b54 0898     		ldr	r0, [sp, #32]
 2346 0b56 C844     		add	r8, r9, r8
 2347 0b58 19B2     		sxth	r1, r3
 2348 0b5a 0FFA8CF9 		sxth	r9, ip
 2349 0b5e 0FFA88FB 		sxth	fp, r8
 2350 0b62 0B46     		mov	r3, r1
 2351 0b64 0090     		str	r0, [sp, #0]
 2352 0b66 5A46     		mov	r2, fp
 2353 0b68 4846     		mov	r0, r9
 2354 0b6a FFF7FEFF 		bl	GLCD_Line
 2355              	.LVL285:
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2356              		.loc 1 960 0
 2357 0b6e 069A     		ldr	r2, [sp, #24]
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, fill_color);
 2358              		.loc 1 974 0
 2359 0b70 089B     		ldr	r3, [sp, #32]
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2360              		.loc 1 960 0
 2361 0b72 BF1A     		subs	r7, r7, r2
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, fill_color);
 2362              		.loc 1 974 0
 2363 0b74 39B2     		sxth	r1, r7
 2364 0b76 0093     		str	r3, [sp, #0]
 2365 0b78 4846     		mov	r0, r9
 2366 0b7a 5A46     		mov	r2, fp
 2367 0b7c 0B46     		mov	r3, r1
 2368 0b7e FFF7FEFF 		bl	GLCD_Line
 2369              	.LVL286:
 2370 0b82 DDF80CC0 		ldr	ip, [sp, #12]
 2371              	.L164:
 977:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 2372              		.loc 1 977 0
 2373 0b86 3004     		lsls	r0, r6, #16
 2374 0b88 07D5     		bpl	.L165
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2375              		.loc 1 960 0
 2376 0b8a A1B2     		uxth	r1, r4
 978:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2377              		.loc 1 978 0
 2378 0b8c F01C     		adds	r0, r6, #3
 2379 0b8e 00EB4102 		add	r2, r0, r1, lsl #1
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2380              		.loc 1 960 0
 2381 0b92 4F1C     		adds	r7, r1, #1
 978:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2382              		.loc 1 978 0
 2383 0b94 96B2     		uxth	r6, r2
 2384              	.LVL287:
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2385              		.loc 1 960 0
 2386 0b96 BBB2     		uxth	r3, r7
 2387              	.LVL288:
 2388 0b98 09E0     		b	.L166
 2389              	.LVL289:
 2390              	.L165:
 980:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2391              		.loc 1 980 0
 2392 0b9a 29B2     		sxth	r1, r5
 2393 0b9c 0536     		adds	r6, r6, #5
 2394              	.LVL290:
 2395 0b9e 601A     		subs	r0, r4, r1
 2396 0ba0 06EB4002 		add	r2, r6, r0, lsl #1
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2397              		.loc 1 960 0
 2398 0ba4 671C     		adds	r7, r4, #1
 980:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2399              		.loc 1 980 0
 2400 0ba6 013D     		subs	r5, r5, #1
 2401              	.LVL291:
 2402 0ba8 96B2     		uxth	r6, r2
 2403              	.LVL292:
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2404              		.loc 1 960 0
 2405 0baa BBB2     		uxth	r3, r7
 2406              	.LVL293:
 980:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2407              		.loc 1 980 0
 2408 0bac ADB2     		uxth	r5, r5
 2409              	.LVL294:
 2410              	.L166:
 981:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 2411              		.loc 1 981 0
 2412 0bae 1BB2     		sxth	r3, r3
 2413              	.LVL295:
 2414 0bb0 29B2     		sxth	r1, r5
 2415 0bb2 0134     		adds	r4, r4, #1
 2416 0bb4 8B42     		cmp	r3, r1
 2417 0bb6 9FDD     		ble	.L167
 2418 0bb8 6546     		mov	r5, ip
 2419              	.LVL296:
 2420 0bba 4FF00009 		mov	r9, #0
 2421              	.LVL297:
 2422              	.L170:
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2423              		.loc 1 991 0
 2424 0bbe 099E     		ldr	r6, [sp, #36]
 2425 0bc0 0A9F     		ldr	r7, [sp, #40]
 2426 0bc2 1FFA86F8 		uxth	r8, r6
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2427              		.loc 1 960 0
 2428 0bc6 1FFA89F4 		uxth	r4, r9
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2429              		.loc 1 991 0
 2430 0bca AEB2     		uxth	r6, r5
 2431 0bcc BFB2     		uxth	r7, r7
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2432              		.loc 1 960 0
 2433 0bce 04EB0800 		add	r0, r4, r8
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2434              		.loc 1 991 0
 2435 0bd2 06EB070E 		add	lr, r6, r7
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2436              		.loc 1 960 0
 2437 0bd6 82B2     		uxth	r2, r0
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2438              		.loc 1 991 0
 2439 0bd8 1FFA8EFA 		uxth	sl, lr
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2440              		.loc 1 960 0
 2441 0bdc 0692     		str	r2, [sp, #24]
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2442              		.loc 1 991 0
 2443 0bde 5146     		mov	r1, sl
 2444 0be0 0698     		ldr	r0, [sp, #24]
 2445 0be2 059A     		ldr	r2, [sp, #20]
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, color);
 2446              		.loc 1 992 0
 2447 0be4 06EB080B 		add	fp, r6, r8
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2448              		.loc 1 991 0
 2449 0be8 CDF80CA0 		str	sl, [sp, #12]
 2450 0bec FFF7FEFF 		bl	GLCD_PutPixel
 2451              	.LVL298:
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2452              		.loc 1 960 0
 2453 0bf0 E319     		adds	r3, r4, r7
 2454 0bf2 9BB2     		uxth	r3, r3
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, color);
 2455              		.loc 1 992 0
 2456 0bf4 1FFA8BFB 		uxth	fp, fp
 2457 0bf8 1946     		mov	r1, r3
 2458 0bfa 5846     		mov	r0, fp
 2459 0bfc 059A     		ldr	r2, [sp, #20]
 2460 0bfe 0493     		str	r3, [sp, #16]
 2461 0c00 FFF7FEFF 		bl	GLCD_PutPixel
 2462              	.LVL299:
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, color);
 2463              		.loc 1 993 0
 2464 0c04 DDF80CC0 		ldr	ip, [sp, #12]
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2465              		.loc 1 960 0
 2466 0c08 C4EB0801 		rsb	r1, r4, r8
 2467 0c0c 1FFA81FA 		uxth	sl, r1
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, color);
 2468              		.loc 1 993 0
 2469 0c10 5046     		mov	r0, sl
 2470 0c12 6146     		mov	r1, ip
 2471 0c14 059A     		ldr	r2, [sp, #20]
 2472 0c16 FFF7FEFF 		bl	GLCD_PutPixel
 2473              	.LVL300:
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, color);
 2474              		.loc 1 994 0
 2475 0c1a C6EB0808 		rsb	r8, r6, r8
 2476 0c1e 049A     		ldr	r2, [sp, #16]
 2477 0c20 1FFA88F8 		uxth	r8, r8
 2478 0c24 1146     		mov	r1, r2
 2479 0c26 4046     		mov	r0, r8
 2480 0c28 059A     		ldr	r2, [sp, #20]
 2481 0c2a FFF7FEFF 		bl	GLCD_PutPixel
 2482              	.LVL301:
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2483              		.loc 1 960 0
 2484 0c2e 381B     		subs	r0, r7, r4
 2485 0c30 83B2     		uxth	r3, r0
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 2486              		.loc 1 996 0
 2487 0c32 BE1B     		subs	r6, r7, r6
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, color);
 2488              		.loc 1 995 0
 2489 0c34 1946     		mov	r1, r3
 2490 0c36 5846     		mov	r0, fp
 2491 0c38 059A     		ldr	r2, [sp, #20]
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 2492              		.loc 1 996 0
 2493 0c3a B6B2     		uxth	r6, r6
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, color);
 2494              		.loc 1 995 0
 2495 0c3c 0493     		str	r3, [sp, #16]
 2496 0c3e FFF7FEFF 		bl	GLCD_PutPixel
 2497              	.LVL302:
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 2498              		.loc 1 996 0
 2499 0c42 0698     		ldr	r0, [sp, #24]
 2500 0c44 3146     		mov	r1, r6
 2501 0c46 059A     		ldr	r2, [sp, #20]
 2502 0c48 FFF7FEFF 		bl	GLCD_PutPixel
 2503              	.LVL303:
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, color);
 2504              		.loc 1 997 0
 2505 0c4c 5046     		mov	r0, sl
 2506 0c4e 3146     		mov	r1, r6
 2507 0c50 059A     		ldr	r2, [sp, #20]
 2508 0c52 FFF7FEFF 		bl	GLCD_PutPixel
 2509              	.LVL304:
 998:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, color);
 2510              		.loc 1 998 0
 2511 0c56 0499     		ldr	r1, [sp, #16]
 2512 0c58 059A     		ldr	r2, [sp, #20]
 2513 0c5a 4046     		mov	r0, r8
 2514 0c5c FFF7FEFF 		bl	GLCD_PutPixel
 2515              	.LVL305:
1001:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 2516              		.loc 1 1001 0
 2517 0c60 079A     		ldr	r2, [sp, #28]
 2518 0c62 1104     		lsls	r1, r2, #16
 2519 0c64 07D5     		bpl	.L168
1002:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2520              		.loc 1 1002 0
 2521 0c66 0332     		adds	r2, r2, #3
 2522 0c68 02EB4400 		add	r0, r2, r4, lsl #1
 2523 0c6c 81B2     		uxth	r1, r0
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2524              		.loc 1 960 0
 2525 0c6e 0134     		adds	r4, r4, #1
1002:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2526              		.loc 1 1002 0
 2527 0c70 0791     		str	r1, [sp, #28]
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2528              		.loc 1 960 0
 2529 0c72 A3B2     		uxth	r3, r4
 2530              	.LVL306:
 2531 0c74 0CE0     		b	.L169
 2532              	.LVL307:
 2533              	.L168:
1004:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2534              		.loc 1 1004 0
 2535 0c76 0798     		ldr	r0, [sp, #28]
 2536 0c78 2BB2     		sxth	r3, r5
 2537 0c7a 411D     		adds	r1, r0, #5
 2538 0c7c C3EB0902 		rsb	r2, r3, r9
 2539 0c80 01EB4200 		add	r0, r1, r2, lsl #1
 2540 0c84 81B2     		uxth	r1, r0
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2541              		.loc 1 960 0
 2542 0c86 0134     		adds	r4, r4, #1
1004:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2543              		.loc 1 1004 0
 2544 0c88 013D     		subs	r5, r5, #1
 2545              	.LVL308:
 2546 0c8a 0791     		str	r1, [sp, #28]
 960:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2547              		.loc 1 960 0
 2548 0c8c A3B2     		uxth	r3, r4
 2549              	.LVL309:
1004:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2550              		.loc 1 1004 0
 2551 0c8e ADB2     		uxth	r5, r5
 2552              	.LVL310:
 2553              	.L169:
1005:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 2554              		.loc 1 1005 0
 2555 0c90 1CB2     		sxth	r4, r3
 2556 0c92 2BB2     		sxth	r3, r5
 2557              	.LVL311:
 2558 0c94 9C42     		cmp	r4, r3
 2559 0c96 09F10109 		add	r9, r9, #1
 2560 0c9a 90DD     		ble	.L170
1006:../Source Files/lpc_ssp_glcd.c **** }
 2561              		.loc 1 1006 0
 2562 0c9c 0DB0     		add	sp, sp, #52
 2563 0c9e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2564              		.cfi_endproc
 2565              	.LFE80:
 2567              		.align	1
 2568              		.global	GLCD_Window
 2569              		.thumb
 2570              		.thumb_func
 2572              	GLCD_Window:
 2573              	.LFB58:
 132:../Source Files/lpc_ssp_glcd.c **** {
 2574              		.loc 1 132 0
 2575              		.cfi_startproc
 2576              		@ args = 0, pretend = 0, frame = 0
 2577              		@ frame_needed = 0, uses_anonymous_args = 0
 2578              	.LVL312:
 2579 0ca2 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2580              	.LCFI21:
 2581              		.cfi_def_cfa_offset 24
 2582              		.cfi_offset 3, -24
 2583              		.cfi_offset 4, -20
 2584              		.cfi_offset 5, -16
 2585              		.cfi_offset 6, -12
 2586              		.cfi_offset 7, -8
 2587              		.cfi_offset 14, -4
 132:../Source Files/lpc_ssp_glcd.c **** {
 2588              		.loc 1 132 0
 2589 0ca4 0546     		mov	r5, r0
 133:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 2590              		.loc 1 133 0
 2591 0ca6 4520     		movs	r0, #69
 2592              	.LVL313:
 132:../Source Files/lpc_ssp_glcd.c **** {
 2593              		.loc 1 132 0
 2594 0ca8 0C46     		mov	r4, r1
 2595 0caa 1646     		mov	r6, r2
 2596 0cac 1F46     		mov	r7, r3
 133:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 2597              		.loc 1 133 0
 2598 0cae FFF7FEFF 		bl	Write_Command_Glcd
 2599              	.LVL314:
 134:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 2600              		.loc 1 134 0
 2601 0cb2 2846     		mov	r0, r5
 2602 0cb4 FFF7FEFF 		bl	Write_Data_Glcd
 2603              	.LVL315:
 137:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 2604              		.loc 1 137 0
 2605 0cb8 013D     		subs	r5, r5, #1
 136:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 2606              		.loc 1 136 0
 2607 0cba 4620     		movs	r0, #70
 2608 0cbc FFF7FEFF 		bl	Write_Command_Glcd
 2609              	.LVL316:
 137:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 2610              		.loc 1 137 0
 2611 0cc0 7019     		adds	r0, r6, r5
 2612 0cc2 80B2     		uxth	r0, r0
 2613 0cc4 FFF7FEFF 		bl	Write_Data_Glcd
 2614              	.LVL317:
 139:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 2615              		.loc 1 139 0
 2616 0cc8 4420     		movs	r0, #68
 2617 0cca FFF7FEFF 		bl	Write_Command_Glcd
 2618              	.LVL318:
 140:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 2619              		.loc 1 140 0
 2620 0cce 2046     		mov	r0, r4
 2621 0cd0 FFF7FEFF 		bl	Write_Data_Glcd
 2622              	.LVL319:
 142:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 2623              		.loc 1 142 0
 2624 0cd4 4420     		movs	r0, #68
 2625 0cd6 FFF7FEFF 		bl	Write_Command_Glcd
 2626              	.LVL320:
 143:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 2627              		.loc 1 143 0
 2628 0cda 013C     		subs	r4, r4, #1
 2629 0cdc 3F19     		adds	r7, r7, r4
 2630 0cde 3902     		lsls	r1, r7, #8
 2631 0ce0 01F47F40 		and	r0, r1, #65280
 144:../Source Files/lpc_ssp_glcd.c **** }
 2632              		.loc 1 144 0
 2633 0ce4 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 143:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 2634              		.loc 1 143 0
 2635 0ce8 FFF7FEBF 		b	Write_Data_Glcd
 2636              	.LVL321:
 2637              		.cfi_endproc
 2638              	.LFE58:
 2640              		.align	1
 2641              		.global	GLCD_Display_String
 2642              		.thumb
 2643              		.thumb_func
 2645              	GLCD_Display_String:
 2646              	.LFB71:
 472:../Source Files/lpc_ssp_glcd.c **** {
 2647              		.loc 1 472 0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 0
 2650              		@ frame_needed = 0, uses_anonymous_args = 0
 2651              	.LVL322:
 2652 0cec F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2653              	.LCFI22:
 2654              		.cfi_def_cfa_offset 24
 2655              		.cfi_offset 3, -24
 2656              		.cfi_offset 4, -20
 2657              		.cfi_offset 5, -16
 2658              		.cfi_offset 6, -12
 2659              		.cfi_offset 7, -8
 2660              		.cfi_offset 14, -4
 472:../Source Files/lpc_ssp_glcd.c **** {
 2661              		.loc 1 472 0
 2662 0cee 0746     		mov	r7, r0
 473:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2663              		.loc 1 473 0
 2664 0cf0 0020     		movs	r0, #0
 2665              	.LVL323:
 472:../Source Files/lpc_ssp_glcd.c **** {
 2666              		.loc 1 472 0
 2667 0cf2 0E46     		mov	r6, r1
 2668 0cf4 1546     		mov	r5, r2
 473:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2669              		.loc 1 473 0
 2670 0cf6 0146     		mov	r1, r0
 2671              	.LVL324:
 2672 0cf8 4FF4A072 		mov	r2, #320
 2673              	.LVL325:
 2674 0cfc F023     		movs	r3, #240
 2675 0cfe FFF7FEFF 		bl	GLCD_Window
 2676              	.LVL326:
 474:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2677              		.loc 1 474 0
 2678 0d02 0024     		movs	r4, #0
 2679              	.LVL327:
 2680              	.L178:
 471:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 2681              		.loc 1 471 0 discriminator 1
 2682 0d04 3119     		adds	r1, r6, r4
 2683 0d06 0134     		adds	r4, r4, #1
 2684 0d08 2B19     		adds	r3, r5, r4
 474:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2685              		.loc 1 474 0 discriminator 1
 2686 0d0a 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
 471:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 2687              		.loc 1 471 0 discriminator 1
 2688 0d0e 89B2     		uxth	r1, r1
 2689              	.LVL328:
 474:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2690              		.loc 1 474 0 discriminator 1
 2691 0d10 1AB1     		cbz	r2, .L180
 2692              	.L179:
 2693              	.LVL329:
 476:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 2694              		.loc 1 476 0
 2695 0d12 3846     		mov	r0, r7
 2696 0d14 FFF7FEFF 		bl	GLCD_Display_Char
 2697              	.LVL330:
 2698 0d18 F4E7     		b	.L178
 2699              	.LVL331:
 2700              	.L180:
 478:../Source Files/lpc_ssp_glcd.c **** }
 2701              		.loc 1 478 0
 2702 0d1a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2703              		.cfi_endproc
 2704              	.LFE71:
 2706              		.align	1
 2707              		.global	GLCD_ClearLn
 2708              		.thumb
 2709              		.thumb_func
 2711              	GLCD_ClearLn:
 2712              	.LFB72:
 487:../Source Files/lpc_ssp_glcd.c **** {
 2713              		.loc 1 487 0
 2714              		.cfi_startproc
 2715              		@ args = 0, pretend = 0, frame = 0
 2716              		@ frame_needed = 0, uses_anonymous_args = 0
 2717              	.LVL332:
 2718 0d1c 10B5     		push	{r4, lr}
 2719              	.LCFI23:
 2720              		.cfi_def_cfa_offset 8
 2721              		.cfi_offset 4, -8
 2722              		.cfi_offset 14, -4
 487:../Source Files/lpc_ssp_glcd.c **** {
 2723              		.loc 1 487 0
 2724 0d1e 0446     		mov	r4, r0
 488:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2725              		.loc 1 488 0
 2726 0d20 0020     		movs	r0, #0
 2727              	.LVL333:
 2728 0d22 0146     		mov	r1, r0
 2729 0d24 4FF4A072 		mov	r2, #320
 2730 0d28 F023     		movs	r3, #240
 2731 0d2a FFF7FEFF 		bl	GLCD_Window
 2732              	.LVL334:
 489:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 2733              		.loc 1 489 0
 2734 0d2e 034A     		ldr	r2, .L182
 2735 0d30 2046     		mov	r0, r4
 2736 0d32 0021     		movs	r1, #0
 490:../Source Files/lpc_ssp_glcd.c **** }
 2737              		.loc 1 490 0
 2738 0d34 BDE81040 		pop	{r4, lr}
 489:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 2739              		.loc 1 489 0
 2740 0d38 FFF7FEBF 		b	GLCD_Display_String
 2741              	.LVL335:
 2742              	.L183:
 2743              		.align	2
 2744              	.L182:
 2745 0d3c 00000000 		.word	.LC0
 2746              		.cfi_endproc
 2747              	.LFE72:
 2749              		.align	1
 2750              		.global	GLCD_Clear
 2751              		.thumb
 2752              		.thumb_func
 2754              	GLCD_Clear:
 2755              	.LFB68:
 378:../Source Files/lpc_ssp_glcd.c **** {
 2756              		.loc 1 378 0
 2757              		.cfi_startproc
 2758              		@ args = 0, pretend = 0, frame = 0
 2759              		@ frame_needed = 0, uses_anonymous_args = 0
 2760              	.LVL336:
 2761 0d40 38B5     		push	{r3, r4, r5, lr}
 2762              	.LCFI24:
 2763              		.cfi_def_cfa_offset 16
 2764              		.cfi_offset 3, -16
 2765              		.cfi_offset 4, -12
 2766              		.cfi_offset 5, -8
 2767              		.cfi_offset 14, -4
 378:../Source Files/lpc_ssp_glcd.c **** {
 2768              		.loc 1 378 0
 2769 0d42 0546     		mov	r5, r0
 381:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 2770              		.loc 1 381 0
 2771 0d44 0020     		movs	r0, #0
 2772              	.LVL337:
 2773 0d46 0146     		mov	r1, r0
 2774 0d48 4FF4A072 		mov	r2, #320
 2775 0d4c F023     		movs	r3, #240
 2776 0d4e FFF7FEFF 		bl	GLCD_Window
 2777              	.LVL338:
 383:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 2778              		.loc 1 383 0
 2779 0d52 4E20     		movs	r0, #78
 2780 0d54 FFF7FEFF 		bl	Write_Command_Glcd
 2781              	.LVL339:
 384:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 2782              		.loc 1 384 0
 2783 0d58 0020     		movs	r0, #0
 2784 0d5a FFF7FEFF 		bl	Write_Data_Glcd
 2785              	.LVL340:
 386:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 2786              		.loc 1 386 0
 2787 0d5e 4F20     		movs	r0, #79
 2788 0d60 FFF7FEFF 		bl	Write_Command_Glcd
 2789              	.LVL341:
 387:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 2790              		.loc 1 387 0
 2791 0d64 0020     		movs	r0, #0
 2792 0d66 FFF7FEFF 		bl	Write_Data_Glcd
 2793              	.LVL342:
 389:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 2794              		.loc 1 389 0
 2795 0d6a 2220     		movs	r0, #34
 2796 0d6c FFF7FEFF 		bl	Write_Command_Glcd
 2797              	.LVL343:
 390:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 2798              		.loc 1 390 0
 2799 0d70 FFF746F9 		bl	wr_dat_start
 2800              	.LVL344:
 2801 0d74 4FF49634 		mov	r4, #76800
 2802              	.LVL345:
 2803              	.L185:
 392:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 2804              		.loc 1 392 0 discriminator 2
 2805 0d78 2846     		mov	r0, r5
 2806 0d7a FFF755F9 		bl	wr_dat_only
 2807              	.LVL346:
 391:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 2808              		.loc 1 391 0 discriminator 2
 2809 0d7e 013C     		subs	r4, r4, #1
 2810 0d80 FAD1     		bne	.L185
 394:../Source Files/lpc_ssp_glcd.c **** }
 2811              		.loc 1 394 0
 2812 0d82 BDE83840 		pop	{r3, r4, r5, lr}
 393:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 2813              		.loc 1 393 0
 2814 0d86 FFF749B9 		b	wr_dat_stop
 2815              	.LVL347:
 2816              		.cfi_endproc
 2817              	.LFE68:
 2819              		.align	1
 2820              		.global	GLCD_Set_Loc
 2821              		.thumb
 2822              		.thumb_func
 2824              	GLCD_Set_Loc:
 2825              	.LFB59:
 156:../Source Files/lpc_ssp_glcd.c **** {
 2826              		.loc 1 156 0
 2827              		.cfi_startproc
 2828              		@ args = 0, pretend = 0, frame = 0
 2829              		@ frame_needed = 0, uses_anonymous_args = 0
 2830              	.LVL348:
 2831 0d8a 38B5     		push	{r3, r4, r5, lr}
 2832              	.LCFI25:
 2833              		.cfi_def_cfa_offset 16
 2834              		.cfi_offset 3, -16
 2835              		.cfi_offset 4, -12
 2836              		.cfi_offset 5, -8
 2837              		.cfi_offset 14, -4
 156:../Source Files/lpc_ssp_glcd.c **** {
 2838              		.loc 1 156 0
 2839 0d8c 0C46     		mov	r4, r1
 2840 0d8e 0546     		mov	r5, r0
 157:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 2841              		.loc 1 157 0
 2842 0d90 FFF7FEFF 		bl	GLCD_Window
 2843              	.LVL349:
 159:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 2844              		.loc 1 159 0
 2845 0d94 4E20     		movs	r0, #78
 2846 0d96 FFF7FEFF 		bl	Write_Command_Glcd
 2847              	.LVL350:
 160:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 2848              		.loc 1 160 0
 2849 0d9a 2846     		mov	r0, r5
 2850 0d9c FFF7FEFF 		bl	Write_Data_Glcd
 2851              	.LVL351:
 162:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 2852              		.loc 1 162 0
 2853 0da0 4F20     		movs	r0, #79
 2854 0da2 FFF7FEFF 		bl	Write_Command_Glcd
 2855              	.LVL352:
 163:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 2856              		.loc 1 163 0
 2857 0da6 2046     		mov	r0, r4
 2858 0da8 FFF7FEFF 		bl	Write_Data_Glcd
 2859              	.LVL353:
 165:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 2860              		.loc 1 165 0
 2861 0dac 2220     		movs	r0, #34
 166:../Source Files/lpc_ssp_glcd.c **** }
 2862              		.loc 1 166 0
 2863 0dae BDE83840 		pop	{r3, r4, r5, lr}
 165:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 2864              		.loc 1 165 0
 2865 0db2 FFF7FEBF 		b	Write_Command_Glcd
 2866              	.LVL354:
 2867              		.cfi_endproc
 2868              	.LFE59:
 2870              		.align	1
 2871              		.global	GLCD_Window_Fill
 2872              		.thumb
 2873              		.thumb_func
 2875              	GLCD_Window_Fill:
 2876              	.LFB75:
 590:../Source Files/lpc_ssp_glcd.c **** {
 2877              		.loc 1 590 0
 2878              		.cfi_startproc
 2879              		@ args = 4, pretend = 0, frame = 0
 2880              		@ frame_needed = 0, uses_anonymous_args = 0
 2881              	.LVL355:
 2882 0db6 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2883              	.LCFI26:
 2884              		.cfi_def_cfa_offset 24
 2885              		.cfi_offset 4, -24
 2886              		.cfi_offset 5, -20
 2887              		.cfi_offset 6, -16
 2888              		.cfi_offset 7, -12
 2889              		.cfi_offset 8, -8
 2890              		.cfi_offset 14, -4
 590:../Source Files/lpc_ssp_glcd.c **** {
 2891              		.loc 1 590 0
 2892 0dba 1746     		mov	r7, r2
 2893 0dbc 1E46     		mov	r6, r3
 2894 0dbe BDF81880 		ldrh	r8, [sp, #24]
 593:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 2895              		.loc 1 593 0
 2896 0dc2 FFF7FEFF 		bl	GLCD_Set_Loc
 2897              	.LVL356:
 595:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 2898              		.loc 1 595 0
 2899 0dc6 FFF71BF9 		bl	wr_dat_start
 2900              	.LVL357:
 596:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2901              		.loc 1 596 0
 2902 0dca 0024     		movs	r4, #0
 2903              	.LVL358:
 2904              	.L189:
 596:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2905              		.loc 1 596 0 is_stmt 0 discriminator 1
 2906 0dcc B442     		cmp	r4, r6
 2907 0dce 09D2     		bcs	.L193
 2908              	.L192:
 596:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2909              		.loc 1 596 0
 2910 0dd0 0025     		movs	r5, #0
 2911              	.L191:
 2912              	.LVL359:
 598:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2913              		.loc 1 598 0 is_stmt 1 discriminator 1
 2914 0dd2 BD42     		cmp	r5, r7
 2915 0dd4 04D2     		bcs	.L194
 2916              	.L190:
 600:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 2917              		.loc 1 600 0 discriminator 2
 2918 0dd6 4046     		mov	r0, r8
 2919 0dd8 FFF726F9 		bl	wr_dat_only
 2920              	.LVL360:
 598:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2921              		.loc 1 598 0 discriminator 2
 2922 0ddc 0135     		adds	r5, r5, #1
 2923              	.LVL361:
 2924 0dde F8E7     		b	.L191
 2925              	.L194:
 596:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2926              		.loc 1 596 0
 2927 0de0 0134     		adds	r4, r4, #1
 2928              	.LVL362:
 2929 0de2 F3E7     		b	.L189
 2930              	.LVL363:
 2931              	.L193:
 604:../Source Files/lpc_ssp_glcd.c **** }
 2932              		.loc 1 604 0
 2933 0de4 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 603:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 2934              		.loc 1 603 0
 2935 0de8 FFF718B9 		b	wr_dat_stop
 2936              	.LVL364:
 2937              		.cfi_endproc
 2938              	.LFE75:
 2940              		.align	1
 2941              		.global	GLCD_Rect
 2942              		.thumb
 2943              		.thumb_func
 2945              	GLCD_Rect:
 2946              	.LFB77:
 690:../Source Files/lpc_ssp_glcd.c **** {
 2947              		.loc 1 690 0
 2948              		.cfi_startproc
 2949              		@ args = 4, pretend = 0, frame = 0
 2950              		@ frame_needed = 0, uses_anonymous_args = 0
 2951              	.LVL365:
 2952 0dec 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 2953              	.LCFI27:
 2954              		.cfi_def_cfa_offset 32
 2955              		.cfi_offset 0, -32
 2956              		.cfi_offset 1, -28
 2957              		.cfi_offset 4, -24
 2958              		.cfi_offset 5, -20
 2959              		.cfi_offset 6, -16
 2960              		.cfi_offset 7, -12
 2961              		.cfi_offset 8, -8
 2962              		.cfi_offset 14, -4
 690:../Source Files/lpc_ssp_glcd.c **** {
 2963              		.loc 1 690 0
 2964 0df0 0C46     		mov	r4, r1
 2965 0df2 0546     		mov	r5, r0
 2966 0df4 9846     		mov	r8, r3
 2967 0df6 BDF82010 		ldrh	r1, [sp, #32]
 2968              	.LVL366:
 693:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 2969              		.loc 1 693 0
 2970 0dfa 002A     		cmp	r2, #0
 2971 0dfc 41D0     		beq	.L196
 695:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 2972              		.loc 1 695 0
 2973 0dfe B0F800E0 		ldrh	lr, [r0, #0]
 2974 0e02 2288     		ldrh	r2, [r4, #0]
 2975              	.LVL367:
 2976 0e04 0FFA8EF3 		sxth	r3, lr
 2977              	.LVL368:
 2978 0e08 10B2     		sxth	r0, r2
 2979              	.LVL369:
 2980 0e0a 6788     		ldrh	r7, [r4, #2]
 2981 0e0c 6E88     		ldrh	r6, [r5, #2]
 2982 0e0e 9842     		cmp	r0, r3
 697:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 2983              		.loc 1 697 0
 2984 0e10 38B2     		sxth	r0, r7
 2985 0e12 33B2     		sxth	r3, r6
 695:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 2986              		.loc 1 695 0
 2987 0e14 13DD     		ble	.L197
 697:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 2988              		.loc 1 697 0
 2989 0e16 9842     		cmp	r0, r3
 2990 0e18 1FFA8EFC 		uxth	ip, lr
 2991 0e1c 07DD     		ble	.L198
 2992              	.LVL370:
 700:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 2993              		.loc 1 700 0
 2994 0e1e B6B2     		uxth	r6, r6
 2995              	.LVL371:
 699:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 2996              		.loc 1 699 0
 2997 0e20 013A     		subs	r2, r2, #1
 2998              	.LVL372:
 701:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 2999              		.loc 1 701 0
 3000 0e22 0CF10100 		add	r0, ip, #1
 3001 0e26 731C     		adds	r3, r6, #1
 3002 0e28 CCEB0202 		rsb	r2, ip, r2
 3003              	.LVL373:
 3004 0e2c 11E0     		b	.L205
 3005              	.LVL374:
 3006              	.L198:
 706:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 3007              		.loc 1 706 0
 3008 0e2e BFB2     		uxth	r7, r7
 3009              	.LVL375:
 705:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 3010              		.loc 1 705 0
 3011 0e30 013A     		subs	r2, r2, #1
 3012              	.LVL376:
 707:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 3013              		.loc 1 707 0
 3014 0e32 0CF10100 		add	r0, ip, #1
 3015 0e36 7B1C     		adds	r3, r7, #1
 3016 0e38 CCEB0202 		rsb	r2, ip, r2
 3017 0e3c 18E0     		b	.L203
 3018              	.LVL377:
 3019              	.L197:
 712:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 3020              		.loc 1 712 0
 3021 0e3e 9842     		cmp	r0, r3
 3022 0e40 92B2     		uxth	r2, r2
 3023 0e42 0EDD     		ble	.L199
 3024              	.LVL378:
 715:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 3025              		.loc 1 715 0
 3026 0e44 B6B2     		uxth	r6, r6
 3027              	.LVL379:
 714:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 3028              		.loc 1 714 0
 3029 0e46 0EF1FF3E 		add	lr, lr, #-1
 3030              	.LVL380:
 716:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 3031              		.loc 1 716 0
 3032 0e4a 501C     		adds	r0, r2, #1
 3033 0e4c 731C     		adds	r3, r6, #1
 3034 0e4e C2EB0E02 		rsb	r2, r2, lr
 3035              	.LVL381:
 3036              	.L205:
 715:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 3037              		.loc 1 715 0
 3038 0e52 013F     		subs	r7, r7, #1
 716:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 3039              		.loc 1 716 0
 3040 0e54 BE1B     		subs	r6, r7, r6
 3041 0e56 0091     		str	r1, [sp, #0]
 3042 0e58 80B2     		uxth	r0, r0
 3043 0e5a 99B2     		uxth	r1, r3
 3044 0e5c 92B2     		uxth	r2, r2
 3045 0e5e B3B2     		uxth	r3, r6
 3046 0e60 0DE0     		b	.L204
 3047              	.L199:
 3048              	.LVL382:
 721:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 3049              		.loc 1 721 0
 3050 0e62 BFB2     		uxth	r7, r7
 3051              	.LVL383:
 720:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 3052              		.loc 1 720 0
 3053 0e64 0EF1FF3C 		add	ip, lr, #-1
 722:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 3054              		.loc 1 722 0
 3055 0e68 501C     		adds	r0, r2, #1
 3056 0e6a 7B1C     		adds	r3, r7, #1
 3057 0e6c C2EB0C02 		rsb	r2, r2, ip
 3058              	.LVL384:
 3059              	.L203:
 721:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 3060              		.loc 1 721 0
 3061 0e70 013E     		subs	r6, r6, #1
 722:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 3062              		.loc 1 722 0
 3063 0e72 F71B     		subs	r7, r6, r7
 3064 0e74 0091     		str	r1, [sp, #0]
 3065 0e76 80B2     		uxth	r0, r0
 3066 0e78 99B2     		uxth	r1, r3
 3067 0e7a 92B2     		uxth	r2, r2
 3068 0e7c BBB2     		uxth	r3, r7
 3069              	.L204:
 3070 0e7e FFF7FEFF 		bl	GLCD_Window_Fill
 3071              	.LVL385:
 3072              	.L196:
 729:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 3073              		.loc 1 729 0
 3074 0e82 B5F90210 		ldrsh	r1, [r5, #2]
 3075 0e86 B5F90000 		ldrsh	r0, [r5, #0]
 3076 0e8a B4F90020 		ldrsh	r2, [r4, #0]
 3077 0e8e 0B46     		mov	r3, r1
 3078 0e90 CDF80080 		str	r8, [sp, #0]
 3079 0e94 FFF7FEFF 		bl	GLCD_Line
 3080              	.LVL386:
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 3081              		.loc 1 730 0
 3082 0e98 B4F90210 		ldrsh	r1, [r4, #2]
 3083 0e9c B5F90000 		ldrsh	r0, [r5, #0]
 3084 0ea0 B4F90020 		ldrsh	r2, [r4, #0]
 3085 0ea4 0B46     		mov	r3, r1
 3086 0ea6 CDF80080 		str	r8, [sp, #0]
 3087 0eaa FFF7FEFF 		bl	GLCD_Line
 3088              	.LVL387:
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 3089              		.loc 1 731 0
 3090 0eae B5F90000 		ldrsh	r0, [r5, #0]
 3091 0eb2 B5F90210 		ldrsh	r1, [r5, #2]
 3092 0eb6 B4F90230 		ldrsh	r3, [r4, #2]
 3093 0eba 0246     		mov	r2, r0
 3094 0ebc CDF80080 		str	r8, [sp, #0]
 3095 0ec0 FFF7FEFF 		bl	GLCD_Line
 3096              	.LVL388:
 732:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 3097              		.loc 1 732 0
 3098 0ec4 B4F90000 		ldrsh	r0, [r4, #0]
 3099 0ec8 B5F90210 		ldrsh	r1, [r5, #2]
 3100 0ecc B4F90230 		ldrsh	r3, [r4, #2]
 3101 0ed0 0246     		mov	r2, r0
 3102 0ed2 CDF82080 		str	r8, [sp, #32]
 734:../Source Files/lpc_ssp_glcd.c **** }
 3103              		.loc 1 734 0
 3104 0ed6 02B0     		add	sp, sp, #8
 3105 0ed8 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 732:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 3106              		.loc 1 732 0
 3107 0edc FFF7FEBF 		b	GLCD_Line
 3108              	.LVL389:
 3109              		.cfi_endproc
 3110              	.LFE77:
 3112              		.align	1
 3113              		.global	GLCD_Bitmap
 3114              		.thumb
 3115              		.thumb_func
 3117              	GLCD_Bitmap:
 3118              	.LFB74:
 559:../Source Files/lpc_ssp_glcd.c **** {
 3119              		.loc 1 559 0
 3120              		.cfi_startproc
 3121              		@ args = 4, pretend = 0, frame = 0
 3122              		@ frame_needed = 0, uses_anonymous_args = 0
 3123              	.LVL390:
 3124 0ee0 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 3125              	.LCFI28:
 3126              		.cfi_def_cfa_offset 32
 3127              		.cfi_offset 4, -32
 3128              		.cfi_offset 5, -28
 3129              		.cfi_offset 6, -24
 3130              		.cfi_offset 7, -20
 3131              		.cfi_offset 8, -16
 3132              		.cfi_offset 9, -12
 3133              		.cfi_offset 10, -8
 3134              		.cfi_offset 14, -4
 559:../Source Files/lpc_ssp_glcd.c **** {
 3135              		.loc 1 559 0
 3136 0ee4 DDF82080 		ldr	r8, [sp, #32]
 3137 0ee8 1746     		mov	r7, r2
 3138 0eea 9946     		mov	r9, r3
 562:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 3139              		.loc 1 562 0
 3140 0eec FFF7FEFF 		bl	GLCD_Set_Loc
 3141              	.LVL391:
 564:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 3142              		.loc 1 564 0
 3143 0ef0 FFF786F8 		bl	wr_dat_start
 3144              	.LVL392:
 565:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 3145              		.loc 1 565 0
 3146 0ef4 1025     		movs	r5, #16
 566:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3147              		.loc 1 566 0
 3148 0ef6 0026     		movs	r6, #0
 3149              	.LVL393:
 3150              	.L207:
 566:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3151              		.loc 1 566 0 is_stmt 0 discriminator 1
 3152 0ef8 4E45     		cmp	r6, r9
 3153 0efa 0DD2     		bcs	.L209
 558:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 3154              		.loc 1 558 0 is_stmt 1
 3155 0efc 08EB450A 		add	sl, r8, r5, lsl #1
 3156 0f00 0024     		movs	r4, #0
 3157              	.LVL394:
 3158              	.L210:
 568:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 3159              		.loc 1 568 0 discriminator 1
 3160 0f02 BC42     		cmp	r4, r7
 3161 0f04 05D2     		bcs	.L211
 3162              	.L208:
 570:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 3163              		.loc 1 570 0 discriminator 2
 3164 0f06 3AF81400 		ldrh	r0, [sl, r4, lsl #1]
 3165 0f0a FFF78DF8 		bl	wr_dat_only
 3166              	.LVL395:
 568:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 3167              		.loc 1 568 0 discriminator 2
 3168 0f0e 0134     		adds	r4, r4, #1
 3169              	.LVL396:
 3170 0f10 F7E7     		b	.L210
 3171              	.L211:
 558:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 3172              		.loc 1 558 0
 3173 0f12 ED19     		adds	r5, r5, r7
 566:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3174              		.loc 1 566 0
 3175 0f14 0136     		adds	r6, r6, #1
 3176              	.LVL397:
 3177 0f16 EFE7     		b	.L207
 3178              	.LVL398:
 3179              	.L209:
 574:../Source Files/lpc_ssp_glcd.c **** }
 3180              		.loc 1 574 0
 3181 0f18 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 573:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 3182              		.loc 1 573 0
 3183 0f1c FFF77EB8 		b	wr_dat_stop
 3184              	.LVL399:
 3185              		.cfi_endproc
 3186              	.LFE74:
 3188              		.align	1
 3189              		.global	GLCD_Display_Home
 3190              		.thumb
 3191              		.thumb_func
 3193              	GLCD_Display_Home:
 3194              	.LFB60:
 175:../Source Files/lpc_ssp_glcd.c **** {
 3195              		.loc 1 175 0
 3196              		.cfi_startproc
 3197              		@ args = 0, pretend = 0, frame = 0
 3198              		@ frame_needed = 0, uses_anonymous_args = 0
 3199              		@ link register save eliminated.
 176:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 3200              		.loc 1 176 0
 3201 0f20 0020     		movs	r0, #0
 3202 0f22 0146     		mov	r1, r0
 3203 0f24 4FF4A072 		mov	r2, #320
 3204 0f28 F023     		movs	r3, #240
 177:../Source Files/lpc_ssp_glcd.c **** }
 3205              		.loc 1 177 0
 176:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 3206              		.loc 1 176 0
 3207 0f2a FFF7FEBF 		b	GLCD_Set_Loc
 3208              	.LVL400:
 3209              		.cfi_endproc
 3210              	.LFE60:
 3212              		.align	1
 3213              		.global	GLCD_Driver_OutCtrl
 3214              		.thumb
 3215              		.thumb_func
 3217              	GLCD_Driver_OutCtrl:
 3218              	.LFB57:
  95:../Source Files/lpc_ssp_glcd.c **** {
 3219              		.loc 1 95 0
 3220              		.cfi_startproc
 3221              		@ args = 0, pretend = 0, frame = 0
 3222              		@ frame_needed = 0, uses_anonymous_args = 0
 3223              	.LVL401:
 3224 0f2e 10B5     		push	{r4, lr}
 3225              	.LCFI29:
 3226              		.cfi_def_cfa_offset 8
 3227              		.cfi_offset 4, -8
 3228              		.cfi_offset 14, -4
  95:../Source Files/lpc_ssp_glcd.c **** {
 3229              		.loc 1 95 0
 3230 0f30 0446     		mov	r4, r0
  96:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
 3231              		.loc 1 96 0
 3232 0f32 0120     		movs	r0, #1
 3233              	.LVL402:
 3234 0f34 FFF7FEFF 		bl	Write_Command_Glcd
 3235              	.LVL403:
  98:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
 3236              		.loc 1 98 0
 3237 0f38 032C     		cmp	r4, #3
 3238 0f3a 12D8     		bhi	.L213
 3239 0f3c DFE804F0 		tbb	[pc, r4]
 3240              	.L219:
 3241 0f40 02       		.byte	(.L215-.L219)/2
 3242 0f41 05       		.byte	(.L216-.L219)/2
 3243 0f42 08       		.byte	(.L217-.L219)/2
 3244 0f43 0B       		.byte	(.L218-.L219)/2
 3245              		.align	1
 3246              	.L215:
 101:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 3247              		.loc 1 101 0
 3248 0f44 47F2EF20 		movw	r0, #29423
 3249 0f48 07E0     		b	.L220
 3250              	.L216:
 105:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 3251              		.loc 1 105 0
 3252 0f4a 47F2EF00 		movw	r0, #28911
 3253 0f4e 04E0     		b	.L220
 3254              	.L217:
 109:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 3255              		.loc 1 109 0
 3256 0f50 43F2EF20 		movw	r0, #13039
 3257 0f54 01E0     		b	.L220
 3258              	.L218:
 113:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 3259              		.loc 1 113 0
 3260 0f56 43F2EF00 		movw	r0, #12527
 3261              	.L220:
 119:../Source Files/lpc_ssp_glcd.c **** }
 3262              		.loc 1 119 0
 3263 0f5a BDE81040 		pop	{r4, lr}
 113:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 3264              		.loc 1 113 0
 3265 0f5e FFF7FEBF 		b	Write_Data_Glcd
 3266              	.LVL404:
 3267              	.L213:
 3268 0f62 10BD     		pop	{r4, pc}
 3269              		.cfi_endproc
 3270              	.LFE57:
 3272              		.align	1
 3273              		.global	GLCD_Init
 3274              		.thumb
 3275              		.thumb_func
 3277              	GLCD_Init:
 3278              	.LFB61:
 186:../Source Files/lpc_ssp_glcd.c **** {
 3279              		.loc 1 186 0
 3280              		.cfi_startproc
 3281              		@ args = 0, pretend = 0, frame = 0
 3282              		@ frame_needed = 0, uses_anonymous_args = 0
 187:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 3283              		.loc 1 187 0
 3284 0f64 0121     		movs	r1, #1
 186:../Source Files/lpc_ssp_glcd.c **** {
 3285              		.loc 1 186 0
 3286 0f66 10B5     		push	{r4, lr}
 3287              	.LCFI30:
 3288              		.cfi_def_cfa_offset 8
 3289              		.cfi_offset 4, -8
 3290              		.cfi_offset 14, -4
 187:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 3291              		.loc 1 187 0
 3292 0f68 0220     		movs	r0, #2
 3293 0f6a 0A46     		mov	r2, r1
 3294 0f6c FFF7FEFF 		bl	GPIO_SetDir
 3295              	.LVL405:
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 3296              		.loc 1 188 0
 3297 0f70 0020     		movs	r0, #0
 3298 0f72 2021     		movs	r1, #32
 3299 0f74 0122     		movs	r2, #1
 3300 0f76 FFF7FEFF 		bl	GPIO_SetDir
 3301              	.LVL406:
 189:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 3302              		.loc 1 189 0
 3303 0f7a 4FF48071 		mov	r1, #256
 3304 0f7e 0122     		movs	r2, #1
 3305 0f80 0220     		movs	r0, #2
 3306 0f82 FFF7FEFF 		bl	GPIO_SetDir
 3307              	.LVL407:
 191:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 3308              		.loc 1 191 0
 3309 0f86 0220     		movs	r0, #2
 3310 0f88 FFF7FEFF 		bl	delay_ms
 3311              	.LVL408:
 192:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 3312              		.loc 1 192 0
 3313 0f8c FFF7FEFF 		bl	GLCD_Reset
 3314              	.LVL409:
 193:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 3315              		.loc 1 193 0
 3316 0f90 0120     		movs	r0, #1
 3317 0f92 FFF7FEFF 		bl	GLCD_Backlight
 3318              	.LVL410:
 194:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 3319              		.loc 1 194 0
 3320 0f96 0220     		movs	r0, #2
 3321 0f98 FFF7FEFF 		bl	delay_ms
 3322              	.LVL411:
 196:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 3323              		.loc 1 196 0
 3324 0f9c 2820     		movs	r0, #40
 3325 0f9e FFF7FEFF 		bl	Write_Command_Glcd
 3326              	.LVL412:
 197:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 3327              		.loc 1 197 0
 3328 0fa2 0620     		movs	r0, #6
 3329 0fa4 FFF7FEFF 		bl	Write_Data_Glcd
 3330              	.LVL413:
 199:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 3331              		.loc 1 199 0
 3332 0fa8 0020     		movs	r0, #0
 3333 0faa FFF7FEFF 		bl	Write_Command_Glcd
 3334              	.LVL414:
 200:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 3335              		.loc 1 200 0
 3336 0fae 0120     		movs	r0, #1
 3337 0fb0 FFF7FEFF 		bl	Write_Data_Glcd
 3338              	.LVL415:
 202:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 3339              		.loc 1 202 0
 3340 0fb4 1020     		movs	r0, #16
 3341 0fb6 FFF7FEFF 		bl	Write_Command_Glcd
 3342              	.LVL416:
 203:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 3343              		.loc 1 203 0
 3344 0fba 0020     		movs	r0, #0
 3345 0fbc FFF7FEFF 		bl	Write_Data_Glcd
 3346              	.LVL417:
 205:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 3347              		.loc 1 205 0
 3348 0fc0 0020     		movs	r0, #0
 3349 0fc2 FFF7FEFF 		bl	GLCD_Driver_OutCtrl
 3350              	.LVL418:
 207:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 3351              		.loc 1 207 0
 3352 0fc6 0220     		movs	r0, #2
 3353 0fc8 FFF7FEFF 		bl	Write_Command_Glcd
 3354              	.LVL419:
 208:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 3355              		.loc 1 208 0
 3356 0fcc 4FF4C060 		mov	r0, #1536
 3357 0fd0 FFF7FEFF 		bl	Write_Data_Glcd
 3358              	.LVL420:
 210:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 3359              		.loc 1 210 0
 3360 0fd4 0320     		movs	r0, #3
 3361 0fd6 FFF7FEFF 		bl	Write_Command_Glcd
 3362              	.LVL421:
 211:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 3363              		.loc 1 211 0
 3364 0fda 46F63820 		movw	r0, #27192
 3365 0fde FFF7FEFF 		bl	Write_Data_Glcd
 3366              	.LVL422:
 213:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 3367              		.loc 1 213 0
 3368 0fe2 1120     		movs	r0, #17
 3369 0fe4 FFF7FEFF 		bl	Write_Command_Glcd
 3370              	.LVL423:
 214:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 3371              		.loc 1 214 0
 3372 0fe8 46F67000 		movw	r0, #26736
 3373 0fec FFF7FEFF 		bl	Write_Data_Glcd
 3374              	.LVL424:
 216:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 3375              		.loc 1 216 0
 3376 0ff0 0F20     		movs	r0, #15
 3377 0ff2 FFF7FEFF 		bl	Write_Command_Glcd
 3378              	.LVL425:
 217:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 3379              		.loc 1 217 0
 3380 0ff6 0020     		movs	r0, #0
 3381 0ff8 FFF7FEFF 		bl	Write_Data_Glcd
 3382              	.LVL426:
 219:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 3383              		.loc 1 219 0
 3384 0ffc 0B20     		movs	r0, #11
 3385 0ffe FFF7FEFF 		bl	Write_Command_Glcd
 3386              	.LVL427:
 220:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 3387              		.loc 1 220 0
 3388 1002 45F20830 		movw	r0, #21256
 3389 1006 FFF7FEFF 		bl	Write_Data_Glcd
 3390              	.LVL428:
 222:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 3391              		.loc 1 222 0
 3392 100a 0C20     		movs	r0, #12
 3393 100c FFF7FEFF 		bl	Write_Command_Glcd
 3394              	.LVL429:
 223:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 3395              		.loc 1 223 0
 3396 1010 0320     		movs	r0, #3
 3397 1012 FFF7FEFF 		bl	Write_Data_Glcd
 3398              	.LVL430:
 225:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 3399              		.loc 1 225 0
 3400 1016 0D20     		movs	r0, #13
 3401 1018 FFF7FEFF 		bl	Write_Command_Glcd
 3402              	.LVL431:
 226:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 3403              		.loc 1 226 0
 3404 101c 0A20     		movs	r0, #10
 3405 101e FFF7FEFF 		bl	Write_Data_Glcd
 3406              	.LVL432:
 228:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 3407              		.loc 1 228 0
 3408 1022 0E20     		movs	r0, #14
 3409 1024 FFF7FEFF 		bl	Write_Command_Glcd
 3410              	.LVL433:
 229:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 3411              		.loc 1 229 0
 3412 1028 4FF43850 		mov	r0, #11776
 3413 102c FFF7FEFF 		bl	Write_Data_Glcd
 3414              	.LVL434:
 231:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 3415              		.loc 1 231 0
 3416 1030 1E20     		movs	r0, #30
 3417 1032 FFF7FEFF 		bl	Write_Command_Glcd
 3418              	.LVL435:
 232:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 3419              		.loc 1 232 0
 3420 1036 BE20     		movs	r0, #190
 3421 1038 FFF7FEFF 		bl	Write_Data_Glcd
 3422              	.LVL436:
 234:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 3423              		.loc 1 234 0
 3424 103c 2520     		movs	r0, #37
 3425 103e FFF7FEFF 		bl	Write_Command_Glcd
 3426              	.LVL437:
 235:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 3427              		.loc 1 235 0
 3428 1042 4FF40040 		mov	r0, #32768
 3429 1046 FFF7FEFF 		bl	Write_Data_Glcd
 3430              	.LVL438:
 237:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 3431              		.loc 1 237 0
 3432 104a 2620     		movs	r0, #38
 3433 104c FFF7FEFF 		bl	Write_Command_Glcd
 3434              	.LVL439:
 238:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 3435              		.loc 1 238 0
 3436 1050 4FF4F040 		mov	r0, #30720
 3437 1054 FFF7FEFF 		bl	Write_Data_Glcd
 3438              	.LVL440:
 240:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 3439              		.loc 1 240 0
 3440 1058 4E20     		movs	r0, #78
 3441 105a FFF7FEFF 		bl	Write_Command_Glcd
 3442              	.LVL441:
 241:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 3443              		.loc 1 241 0
 3444 105e 0020     		movs	r0, #0
 3445 1060 FFF7FEFF 		bl	Write_Data_Glcd
 3446              	.LVL442:
 243:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 3447              		.loc 1 243 0
 3448 1064 4F20     		movs	r0, #79
 3449 1066 FFF7FEFF 		bl	Write_Command_Glcd
 3450              	.LVL443:
 244:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 3451              		.loc 1 244 0
 3452 106a 0020     		movs	r0, #0
 3453 106c FFF7FEFF 		bl	Write_Data_Glcd
 3454              	.LVL444:
 246:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 3455              		.loc 1 246 0
 3456 1070 1220     		movs	r0, #18
 3457 1072 FFF7FEFF 		bl	Write_Command_Glcd
 3458              	.LVL445:
 247:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 3459              		.loc 1 247 0
 3460 1076 40F6D900 		movw	r0, #2265
 3461 107a FFF7FEFF 		bl	Write_Data_Glcd
 3462              	.LVL446:
 250:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 3463              		.loc 1 250 0
 3464 107e 3020     		movs	r0, #48
 3465 1080 FFF7FEFF 		bl	Write_Command_Glcd
 3466              	.LVL447:
 251:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 3467              		.loc 1 251 0
 3468 1084 0020     		movs	r0, #0
 3469 1086 FFF7FEFF 		bl	Write_Data_Glcd
 3470              	.LVL448:
 253:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 3471              		.loc 1 253 0
 3472 108a 3120     		movs	r0, #49
 3473 108c FFF7FEFF 		bl	Write_Command_Glcd
 3474              	.LVL449:
 254:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 3475              		.loc 1 254 0
 3476 1090 4FF48270 		mov	r0, #260
 3477 1094 FFF7FEFF 		bl	Write_Data_Glcd
 3478              	.LVL450:
 256:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 3479              		.loc 1 256 0
 3480 1098 3220     		movs	r0, #50
 3481 109a FFF7FEFF 		bl	Write_Command_Glcd
 3482              	.LVL451:
 257:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 3483              		.loc 1 257 0
 3484 109e 4FF48070 		mov	r0, #256
 3485 10a2 FFF7FEFF 		bl	Write_Data_Glcd
 3486              	.LVL452:
 260:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3487              		.loc 1 260 0
 3488 10a6 40F20534 		movw	r4, #773
 259:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 3489              		.loc 1 259 0
 3490 10aa 3320     		movs	r0, #51
 3491 10ac FFF7FEFF 		bl	Write_Command_Glcd
 3492              	.LVL453:
 260:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3493              		.loc 1 260 0
 3494 10b0 2046     		mov	r0, r4
 3495 10b2 FFF7FEFF 		bl	Write_Data_Glcd
 3496              	.LVL454:
 262:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 3497              		.loc 1 262 0
 3498 10b6 3420     		movs	r0, #52
 3499 10b8 FFF7FEFF 		bl	Write_Command_Glcd
 3500              	.LVL455:
 263:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 3501              		.loc 1 263 0
 3502 10bc 40F20550 		movw	r0, #1285
 3503 10c0 FFF7FEFF 		bl	Write_Data_Glcd
 3504              	.LVL456:
 265:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 3505              		.loc 1 265 0
 3506 10c4 3520     		movs	r0, #53
 3507 10c6 FFF7FEFF 		bl	Write_Command_Glcd
 3508              	.LVL457:
 266:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3509              		.loc 1 266 0
 3510 10ca 2046     		mov	r0, r4
 3511 10cc FFF7FEFF 		bl	Write_Data_Glcd
 3512              	.LVL458:
 268:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 3513              		.loc 1 268 0
 3514 10d0 3620     		movs	r0, #54
 3515 10d2 FFF7FEFF 		bl	Write_Command_Glcd
 3516              	.LVL459:
 269:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 3517              		.loc 1 269 0
 3518 10d6 40F20770 		movw	r0, #1799
 3519 10da FFF7FEFF 		bl	Write_Data_Glcd
 3520              	.LVL460:
 271:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 3521              		.loc 1 271 0
 3522 10de 3720     		movs	r0, #55
 3523 10e0 FFF7FEFF 		bl	Write_Command_Glcd
 3524              	.LVL461:
 272:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 3525              		.loc 1 272 0
 3526 10e4 4FF44070 		mov	r0, #768
 3527 10e8 FFF7FEFF 		bl	Write_Data_Glcd
 3528              	.LVL462:
 274:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 3529              		.loc 1 274 0
 3530 10ec 3A20     		movs	r0, #58
 3531 10ee FFF7FEFF 		bl	Write_Command_Glcd
 3532              	.LVL463:
 275:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 3533              		.loc 1 275 0
 3534 10f2 4FF49050 		mov	r0, #4608
 3535 10f6 FFF7FEFF 		bl	Write_Data_Glcd
 3536              	.LVL464:
 277:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 3537              		.loc 1 277 0
 3538 10fa 3B20     		movs	r0, #59
 3539 10fc FFF7FEFF 		bl	Write_Command_Glcd
 3540              	.LVL465:
 278:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 3541              		.loc 1 278 0
 3542 1100 4FF40060 		mov	r0, #2048
 3543 1104 FFF7FEFF 		bl	Write_Data_Glcd
 3544              	.LVL466:
 280:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 3545              		.loc 1 280 0
 3546 1108 0720     		movs	r0, #7
 3547 110a FFF7FEFF 		bl	Write_Command_Glcd
 3548              	.LVL467:
 281:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 3549              		.loc 1 281 0
 3550 110e 3320     		movs	r0, #51
 3551 1110 FFF7FEFF 		bl	Write_Data_Glcd
 3552              	.LVL468:
 283:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 3553              		.loc 1 283 0
 3554 1114 0520     		movs	r0, #5
 3555 1116 FFF7FEFF 		bl	delay_ms
 3556              	.LVL469:
 285:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 3557              		.loc 1 285 0
 3558 111a 2220     		movs	r0, #34
 286:../Source Files/lpc_ssp_glcd.c **** }
 3559              		.loc 1 286 0
 3560 111c BDE81040 		pop	{r4, lr}
 285:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 3561              		.loc 1 285 0
 3562 1120 FFF7FEBF 		b	Write_Command_Glcd
 3563              	.LVL470:
 3564              		.cfi_endproc
 3565              	.LFE61:
 3567              		.global	Font_24x16
 3568              		.comm	I2C_Rx_Buf,64,1
 3569              		.comm	I2C_Tx_Buf,64,1
 3570              		.comm	Rx_Buf1,64,1
 3571              		.comm	Tx_Buf1,64,1
 3572              		.comm	TxIntStat,1,1
 3573              		.comm	rb,528,4
 3574              		.comm	EscFlag,2,2
 3575              		.section	.rodata
 3576              		.align	1
 3577              		.set	.LANCHOR2,. + 0
 3580              	Font_24x16:
 3581 0000 0000     		.short	0
 3582 0002 0000     		.short	0
 3583 0004 0000     		.short	0
 3584 0006 0000     		.short	0
 3585 0008 0000     		.short	0
 3586 000a 0000     		.short	0
 3587 000c 0000     		.short	0
 3588 000e 0000     		.short	0
 3589 0010 0000     		.short	0
 3590 0012 0000     		.short	0
 3591 0014 0000     		.short	0
 3592 0016 0000     		.short	0
 3593 0018 0000     		.short	0
 3594 001a 0000     		.short	0
 3595 001c 0000     		.short	0
 3596 001e 0000     		.short	0
 3597 0020 0000     		.short	0
 3598 0022 0000     		.short	0
 3599 0024 0000     		.short	0
 3600 0026 0000     		.short	0
 3601 0028 0000     		.short	0
 3602 002a 0000     		.short	0
 3603 002c 0000     		.short	0
 3604 002e 0000     		.short	0
 3605 0030 0000     		.short	0
 3606 0032 8001     		.short	384
 3607 0034 8001     		.short	384
 3608 0036 8001     		.short	384
 3609 0038 8001     		.short	384
 3610 003a 8001     		.short	384
 3611 003c 8001     		.short	384
 3612 003e 8001     		.short	384
 3613 0040 8001     		.short	384
 3614 0042 8001     		.short	384
 3615 0044 8001     		.short	384
 3616 0046 8001     		.short	384
 3617 0048 8001     		.short	384
 3618 004a 8001     		.short	384
 3619 004c 0000     		.short	0
 3620 004e 0000     		.short	0
 3621 0050 8001     		.short	384
 3622 0052 8001     		.short	384
 3623 0054 0000     		.short	0
 3624 0056 0000     		.short	0
 3625 0058 0000     		.short	0
 3626 005a 0000     		.short	0
 3627 005c 0000     		.short	0
 3628 005e 0000     		.short	0
 3629 0060 0000     		.short	0
 3630 0062 0000     		.short	0
 3631 0064 CC00     		.short	204
 3632 0066 CC00     		.short	204
 3633 0068 CC00     		.short	204
 3634 006a CC00     		.short	204
 3635 006c CC00     		.short	204
 3636 006e CC00     		.short	204
 3637 0070 0000     		.short	0
 3638 0072 0000     		.short	0
 3639 0074 0000     		.short	0
 3640 0076 0000     		.short	0
 3641 0078 0000     		.short	0
 3642 007a 0000     		.short	0
 3643 007c 0000     		.short	0
 3644 007e 0000     		.short	0
 3645 0080 0000     		.short	0
 3646 0082 0000     		.short	0
 3647 0084 0000     		.short	0
 3648 0086 0000     		.short	0
 3649 0088 0000     		.short	0
 3650 008a 0000     		.short	0
 3651 008c 0000     		.short	0
 3652 008e 0000     		.short	0
 3653 0090 0000     		.short	0
 3654 0092 0000     		.short	0
 3655 0094 0000     		.short	0
 3656 0096 0000     		.short	0
 3657 0098 0000     		.short	0
 3658 009a 0000     		.short	0
 3659 009c 600C     		.short	3168
 3660 009e 600C     		.short	3168
 3661 00a0 600C     		.short	3168
 3662 00a2 3006     		.short	1584
 3663 00a4 3006     		.short	1584
 3664 00a6 FE1F     		.short	8190
 3665 00a8 FE1F     		.short	8190
 3666 00aa 3006     		.short	1584
 3667 00ac 3807     		.short	1848
 3668 00ae 1803     		.short	792
 3669 00b0 FE1F     		.short	8190
 3670 00b2 FE1F     		.short	8190
 3671 00b4 1803     		.short	792
 3672 00b6 1803     		.short	792
 3673 00b8 8C01     		.short	396
 3674 00ba 8C01     		.short	396
 3675 00bc 8C01     		.short	396
 3676 00be 0000     		.short	0
 3677 00c0 0000     		.short	0
 3678 00c2 8000     		.short	128
 3679 00c4 E003     		.short	992
 3680 00c6 F80F     		.short	4088
 3681 00c8 9C0E     		.short	3740
 3682 00ca 8C1C     		.short	7308
 3683 00cc 8C18     		.short	6284
 3684 00ce 8C00     		.short	140
 3685 00d0 9800     		.short	152
 3686 00d2 F801     		.short	504
 3687 00d4 E007     		.short	2016
 3688 00d6 800E     		.short	3712
 3689 00d8 801C     		.short	7296
 3690 00da 8C18     		.short	6284
 3691 00dc 8C18     		.short	6284
 3692 00de 9C18     		.short	6300
 3693 00e0 B80C     		.short	3256
 3694 00e2 F00F     		.short	4080
 3695 00e4 E003     		.short	992
 3696 00e6 8000     		.short	128
 3697 00e8 8000     		.short	128
 3698 00ea 0000     		.short	0
 3699 00ec 0000     		.short	0
 3700 00ee 0000     		.short	0
 3701 00f0 0000     		.short	0
 3702 00f2 0000     		.short	0
 3703 00f4 0000     		.short	0
 3704 00f6 0E18     		.short	6158
 3705 00f8 1B0C     		.short	3099
 3706 00fa 110C     		.short	3089
 3707 00fc 1106     		.short	1553
 3708 00fe 1106     		.short	1553
 3709 0100 1103     		.short	785
 3710 0102 1103     		.short	785
 3711 0104 9B01     		.short	411
 3712 0106 8E01     		.short	398
 3713 0108 C038     		.short	14528
 3714 010a C06C     		.short	27840
 3715 010c 6044     		.short	17504
 3716 010e 6044     		.short	17504
 3717 0110 3044     		.short	17456
 3718 0112 3044     		.short	17456
 3719 0114 1844     		.short	17432
 3720 0116 186C     		.short	27672
 3721 0118 0C38     		.short	14348
 3722 011a 0000     		.short	0
 3723 011c 0000     		.short	0
 3724 011e 0000     		.short	0
 3725 0120 0000     		.short	0
 3726 0122 E001     		.short	480
 3727 0124 F003     		.short	1008
 3728 0126 3807     		.short	1848
 3729 0128 1806     		.short	1560
 3730 012a 1806     		.short	1560
 3731 012c 3003     		.short	816
 3732 012e F001     		.short	496
 3733 0130 F000     		.short	240
 3734 0132 F800     		.short	248
 3735 0134 9C31     		.short	12700
 3736 0136 0E33     		.short	13070
 3737 0138 061E     		.short	7686
 3738 013a 061C     		.short	7174
 3739 013c 061C     		.short	7174
 3740 013e 063F     		.short	16134
 3741 0140 FC73     		.short	29692
 3742 0142 F021     		.short	8688
 3743 0144 0000     		.short	0
 3744 0146 0000     		.short	0
 3745 0148 0000     		.short	0
 3746 014a 0000     		.short	0
 3747 014c 0000     		.short	0
 3748 014e 0000     		.short	0
 3749 0150 0000     		.short	0
 3750 0152 0000     		.short	0
 3751 0154 0C00     		.short	12
 3752 0156 0C00     		.short	12
 3753 0158 0C00     		.short	12
 3754 015a 0C00     		.short	12
 3755 015c 0C00     		.short	12
 3756 015e 0C00     		.short	12
 3757 0160 0000     		.short	0
 3758 0162 0000     		.short	0
 3759 0164 0000     		.short	0
 3760 0166 0000     		.short	0
 3761 0168 0000     		.short	0
 3762 016a 0000     		.short	0
 3763 016c 0000     		.short	0
 3764 016e 0000     		.short	0
 3765 0170 0000     		.short	0
 3766 0172 0000     		.short	0
 3767 0174 0000     		.short	0
 3768 0176 0000     		.short	0
 3769 0178 0000     		.short	0
 3770 017a 0000     		.short	0
 3771 017c 0000     		.short	0
 3772 017e 0000     		.short	0
 3773 0180 0000     		.short	0
 3774 0182 0002     		.short	512
 3775 0184 0003     		.short	768
 3776 0186 8001     		.short	384
 3777 0188 C000     		.short	192
 3778 018a C000     		.short	192
 3779 018c 6000     		.short	96
 3780 018e 6000     		.short	96
 3781 0190 3000     		.short	48
 3782 0192 3000     		.short	48
 3783 0194 3000     		.short	48
 3784 0196 3000     		.short	48
 3785 0198 3000     		.short	48
 3786 019a 3000     		.short	48
 3787 019c 3000     		.short	48
 3788 019e 3000     		.short	48
 3789 01a0 6000     		.short	96
 3790 01a2 6000     		.short	96
 3791 01a4 C000     		.short	192
 3792 01a6 C000     		.short	192
 3793 01a8 8001     		.short	384
 3794 01aa 0003     		.short	768
 3795 01ac 0002     		.short	512
 3796 01ae 0000     		.short	0
 3797 01b0 0000     		.short	0
 3798 01b2 2000     		.short	32
 3799 01b4 6000     		.short	96
 3800 01b6 C000     		.short	192
 3801 01b8 8001     		.short	384
 3802 01ba 8001     		.short	384
 3803 01bc 0003     		.short	768
 3804 01be 0003     		.short	768
 3805 01c0 0006     		.short	1536
 3806 01c2 0006     		.short	1536
 3807 01c4 0006     		.short	1536
 3808 01c6 0006     		.short	1536
 3809 01c8 0006     		.short	1536
 3810 01ca 0006     		.short	1536
 3811 01cc 0006     		.short	1536
 3812 01ce 0006     		.short	1536
 3813 01d0 0003     		.short	768
 3814 01d2 0003     		.short	768
 3815 01d4 8001     		.short	384
 3816 01d6 8001     		.short	384
 3817 01d8 C000     		.short	192
 3818 01da 6000     		.short	96
 3819 01dc 2000     		.short	32
 3820 01de 0000     		.short	0
 3821 01e0 0000     		.short	0
 3822 01e2 0000     		.short	0
 3823 01e4 0000     		.short	0
 3824 01e6 0000     		.short	0
 3825 01e8 0000     		.short	0
 3826 01ea 0000     		.short	0
 3827 01ec C000     		.short	192
 3828 01ee C000     		.short	192
 3829 01f0 D806     		.short	1752
 3830 01f2 F807     		.short	2040
 3831 01f4 E001     		.short	480
 3832 01f6 3003     		.short	816
 3833 01f8 3807     		.short	1848
 3834 01fa 0000     		.short	0
 3835 01fc 0000     		.short	0
 3836 01fe 0000     		.short	0
 3837 0200 0000     		.short	0
 3838 0202 0000     		.short	0
 3839 0204 0000     		.short	0
 3840 0206 0000     		.short	0
 3841 0208 0000     		.short	0
 3842 020a 0000     		.short	0
 3843 020c 0000     		.short	0
 3844 020e 0000     		.short	0
 3845 0210 0000     		.short	0
 3846 0212 0000     		.short	0
 3847 0214 0000     		.short	0
 3848 0216 0000     		.short	0
 3849 0218 0000     		.short	0
 3850 021a 0000     		.short	0
 3851 021c 8001     		.short	384
 3852 021e 8001     		.short	384
 3853 0220 8001     		.short	384
 3854 0222 8001     		.short	384
 3855 0224 8001     		.short	384
 3856 0226 FC3F     		.short	16380
 3857 0228 FC3F     		.short	16380
 3858 022a 8001     		.short	384
 3859 022c 8001     		.short	384
 3860 022e 8001     		.short	384
 3861 0230 8001     		.short	384
 3862 0232 8001     		.short	384
 3863 0234 0000     		.short	0
 3864 0236 0000     		.short	0
 3865 0238 0000     		.short	0
 3866 023a 0000     		.short	0
 3867 023c 0000     		.short	0
 3868 023e 0000     		.short	0
 3869 0240 0000     		.short	0
 3870 0242 0000     		.short	0
 3871 0244 0000     		.short	0
 3872 0246 0000     		.short	0
 3873 0248 0000     		.short	0
 3874 024a 0000     		.short	0
 3875 024c 0000     		.short	0
 3876 024e 0000     		.short	0
 3877 0250 0000     		.short	0
 3878 0252 0000     		.short	0
 3879 0254 0000     		.short	0
 3880 0256 0000     		.short	0
 3881 0258 0000     		.short	0
 3882 025a 0000     		.short	0
 3883 025c 0000     		.short	0
 3884 025e 0000     		.short	0
 3885 0260 0000     		.short	0
 3886 0262 8001     		.short	384
 3887 0264 8001     		.short	384
 3888 0266 0001     		.short	256
 3889 0268 0001     		.short	256
 3890 026a 8000     		.short	128
 3891 026c 0000     		.short	0
 3892 026e 0000     		.short	0
 3893 0270 0000     		.short	0
 3894 0272 0000     		.short	0
 3895 0274 0000     		.short	0
 3896 0276 0000     		.short	0
 3897 0278 0000     		.short	0
 3898 027a 0000     		.short	0
 3899 027c 0000     		.short	0
 3900 027e 0000     		.short	0
 3901 0280 0000     		.short	0
 3902 0282 0000     		.short	0
 3903 0284 0000     		.short	0
 3904 0286 0000     		.short	0
 3905 0288 E007     		.short	2016
 3906 028a E007     		.short	2016
 3907 028c 0000     		.short	0
 3908 028e 0000     		.short	0
 3909 0290 0000     		.short	0
 3910 0292 0000     		.short	0
 3911 0294 0000     		.short	0
 3912 0296 0000     		.short	0
 3913 0298 0000     		.short	0
 3914 029a 0000     		.short	0
 3915 029c 0000     		.short	0
 3916 029e 0000     		.short	0
 3917 02a0 0000     		.short	0
 3918 02a2 0000     		.short	0
 3919 02a4 0000     		.short	0
 3920 02a6 0000     		.short	0
 3921 02a8 0000     		.short	0
 3922 02aa 0000     		.short	0
 3923 02ac 0000     		.short	0
 3924 02ae 0000     		.short	0
 3925 02b0 0000     		.short	0
 3926 02b2 0000     		.short	0
 3927 02b4 0000     		.short	0
 3928 02b6 0000     		.short	0
 3929 02b8 0000     		.short	0
 3930 02ba 0000     		.short	0
 3931 02bc 0000     		.short	0
 3932 02be 0000     		.short	0
 3933 02c0 0000     		.short	0
 3934 02c2 C000     		.short	192
 3935 02c4 C000     		.short	192
 3936 02c6 0000     		.short	0
 3937 02c8 0000     		.short	0
 3938 02ca 0000     		.short	0
 3939 02cc 0000     		.short	0
 3940 02ce 0000     		.short	0
 3941 02d0 0000     		.short	0
 3942 02d2 000C     		.short	3072
 3943 02d4 000C     		.short	3072
 3944 02d6 0006     		.short	1536
 3945 02d8 0006     		.short	1536
 3946 02da 0006     		.short	1536
 3947 02dc 0003     		.short	768
 3948 02de 0003     		.short	768
 3949 02e0 0003     		.short	768
 3950 02e2 8003     		.short	896
 3951 02e4 8001     		.short	384
 3952 02e6 8001     		.short	384
 3953 02e8 8001     		.short	384
 3954 02ea C000     		.short	192
 3955 02ec C000     		.short	192
 3956 02ee C000     		.short	192
 3957 02f0 6000     		.short	96
 3958 02f2 6000     		.short	96
 3959 02f4 0000     		.short	0
 3960 02f6 0000     		.short	0
 3961 02f8 0000     		.short	0
 3962 02fa 0000     		.short	0
 3963 02fc 0000     		.short	0
 3964 02fe 0000     		.short	0
 3965 0300 0000     		.short	0
 3966 0302 E003     		.short	992
 3967 0304 F007     		.short	2032
 3968 0306 380E     		.short	3640
 3969 0308 180C     		.short	3096
 3970 030a 0C18     		.short	6156
 3971 030c 0C18     		.short	6156
 3972 030e 0C18     		.short	6156
 3973 0310 0C18     		.short	6156
 3974 0312 0C18     		.short	6156
 3975 0314 0C18     		.short	6156
 3976 0316 0C18     		.short	6156
 3977 0318 0C18     		.short	6156
 3978 031a 0C18     		.short	6156
 3979 031c 180C     		.short	3096
 3980 031e 380E     		.short	3640
 3981 0320 F007     		.short	2032
 3982 0322 E003     		.short	992
 3983 0324 0000     		.short	0
 3984 0326 0000     		.short	0
 3985 0328 0000     		.short	0
 3986 032a 0000     		.short	0
 3987 032c 0000     		.short	0
 3988 032e 0000     		.short	0
 3989 0330 0000     		.short	0
 3990 0332 0001     		.short	256
 3991 0334 8001     		.short	384
 3992 0336 C001     		.short	448
 3993 0338 F001     		.short	496
 3994 033a 9801     		.short	408
 3995 033c 8801     		.short	392
 3996 033e 8001     		.short	384
 3997 0340 8001     		.short	384
 3998 0342 8001     		.short	384
 3999 0344 8001     		.short	384
 4000 0346 8001     		.short	384
 4001 0348 8001     		.short	384
 4002 034a 8001     		.short	384
 4003 034c 8001     		.short	384
 4004 034e 8001     		.short	384
 4005 0350 8001     		.short	384
 4006 0352 8001     		.short	384
 4007 0354 0000     		.short	0
 4008 0356 0000     		.short	0
 4009 0358 0000     		.short	0
 4010 035a 0000     		.short	0
 4011 035c 0000     		.short	0
 4012 035e 0000     		.short	0
 4013 0360 0000     		.short	0
 4014 0362 E003     		.short	992
 4015 0364 F80F     		.short	4088
 4016 0366 180C     		.short	3096
 4017 0368 0C18     		.short	6156
 4018 036a 0C18     		.short	6156
 4019 036c 0018     		.short	6144
 4020 036e 0018     		.short	6144
 4021 0370 000C     		.short	3072
 4022 0372 0006     		.short	1536
 4023 0374 0003     		.short	768
 4024 0376 8001     		.short	384
 4025 0378 C000     		.short	192
 4026 037a 6000     		.short	96
 4027 037c 3000     		.short	48
 4028 037e 1800     		.short	24
 4029 0380 FC1F     		.short	8188
 4030 0382 FC1F     		.short	8188
 4031 0384 0000     		.short	0
 4032 0386 0000     		.short	0
 4033 0388 0000     		.short	0
 4034 038a 0000     		.short	0
 4035 038c 0000     		.short	0
 4036 038e 0000     		.short	0
 4037 0390 0000     		.short	0
 4038 0392 E001     		.short	480
 4039 0394 F807     		.short	2040
 4040 0396 180E     		.short	3608
 4041 0398 0C0C     		.short	3084
 4042 039a 0C0C     		.short	3084
 4043 039c 000C     		.short	3072
 4044 039e 0006     		.short	1536
 4045 03a0 C003     		.short	960
 4046 03a2 C007     		.short	1984
 4047 03a4 000C     		.short	3072
 4048 03a6 0018     		.short	6144
 4049 03a8 0018     		.short	6144
 4050 03aa 0C18     		.short	6156
 4051 03ac 0C18     		.short	6156
 4052 03ae 180C     		.short	3096
 4053 03b0 F807     		.short	2040
 4054 03b2 E003     		.short	992
 4055 03b4 0000     		.short	0
 4056 03b6 0000     		.short	0
 4057 03b8 0000     		.short	0
 4058 03ba 0000     		.short	0
 4059 03bc 0000     		.short	0
 4060 03be 0000     		.short	0
 4061 03c0 0000     		.short	0
 4062 03c2 000C     		.short	3072
 4063 03c4 000E     		.short	3584
 4064 03c6 000F     		.short	3840
 4065 03c8 000F     		.short	3840
 4066 03ca 800D     		.short	3456
 4067 03cc C00C     		.short	3264
 4068 03ce 600C     		.short	3168
 4069 03d0 600C     		.short	3168
 4070 03d2 300C     		.short	3120
 4071 03d4 180C     		.short	3096
 4072 03d6 0C0C     		.short	3084
 4073 03d8 FC3F     		.short	16380
 4074 03da FC3F     		.short	16380
 4075 03dc 000C     		.short	3072
 4076 03de 000C     		.short	3072
 4077 03e0 000C     		.short	3072
 4078 03e2 000C     		.short	3072
 4079 03e4 0000     		.short	0
 4080 03e6 0000     		.short	0
 4081 03e8 0000     		.short	0
 4082 03ea 0000     		.short	0
 4083 03ec 0000     		.short	0
 4084 03ee 0000     		.short	0
 4085 03f0 0000     		.short	0
 4086 03f2 F80F     		.short	4088
 4087 03f4 F80F     		.short	4088
 4088 03f6 1800     		.short	24
 4089 03f8 1800     		.short	24
 4090 03fa 0C00     		.short	12
 4091 03fc EC03     		.short	1004
 4092 03fe FC07     		.short	2044
 4093 0400 1C0E     		.short	3612
 4094 0402 001C     		.short	7168
 4095 0404 0018     		.short	6144
 4096 0406 0018     		.short	6144
 4097 0408 0018     		.short	6144
 4098 040a 0C18     		.short	6156
 4099 040c 1C0C     		.short	3100
 4100 040e 180E     		.short	3608
 4101 0410 F807     		.short	2040
 4102 0412 E003     		.short	992
 4103 0414 0000     		.short	0
 4104 0416 0000     		.short	0
 4105 0418 0000     		.short	0
 4106 041a 0000     		.short	0
 4107 041c 0000     		.short	0
 4108 041e 0000     		.short	0
 4109 0420 0000     		.short	0
 4110 0422 C007     		.short	1984
 4111 0424 F00F     		.short	4080
 4112 0426 381C     		.short	7224
 4113 0428 1818     		.short	6168
 4114 042a 1800     		.short	24
 4115 042c 0C00     		.short	12
 4116 042e CC03     		.short	972
 4117 0430 EC0F     		.short	4076
 4118 0432 3C0E     		.short	3644
 4119 0434 1C1C     		.short	7196
 4120 0436 0C18     		.short	6156
 4121 0438 0C18     		.short	6156
 4122 043a 0C18     		.short	6156
 4123 043c 181C     		.short	7192
 4124 043e 380E     		.short	3640
 4125 0440 F007     		.short	2032
 4126 0442 E003     		.short	992
 4127 0444 0000     		.short	0
 4128 0446 0000     		.short	0
 4129 0448 0000     		.short	0
 4130 044a 0000     		.short	0
 4131 044c 0000     		.short	0
 4132 044e 0000     		.short	0
 4133 0450 0000     		.short	0
 4134 0452 FC1F     		.short	8188
 4135 0454 FC1F     		.short	8188
 4136 0456 000C     		.short	3072
 4137 0458 0006     		.short	1536
 4138 045a 0006     		.short	1536
 4139 045c 0003     		.short	768
 4140 045e 8003     		.short	896
 4141 0460 8001     		.short	384
 4142 0462 C001     		.short	448
 4143 0464 C000     		.short	192
 4144 0466 E000     		.short	224
 4145 0468 6000     		.short	96
 4146 046a 6000     		.short	96
 4147 046c 7000     		.short	112
 4148 046e 3000     		.short	48
 4149 0470 3000     		.short	48
 4150 0472 3000     		.short	48
 4151 0474 0000     		.short	0
 4152 0476 0000     		.short	0
 4153 0478 0000     		.short	0
 4154 047a 0000     		.short	0
 4155 047c 0000     		.short	0
 4156 047e 0000     		.short	0
 4157 0480 0000     		.short	0
 4158 0482 E003     		.short	992
 4159 0484 F007     		.short	2032
 4160 0486 380E     		.short	3640
 4161 0488 180C     		.short	3096
 4162 048a 180C     		.short	3096
 4163 048c 180C     		.short	3096
 4164 048e 3806     		.short	1592
 4165 0490 F007     		.short	2032
 4166 0492 F007     		.short	2032
 4167 0494 180C     		.short	3096
 4168 0496 0C18     		.short	6156
 4169 0498 0C18     		.short	6156
 4170 049a 0C18     		.short	6156
 4171 049c 0C18     		.short	6156
 4172 049e 380C     		.short	3128
 4173 04a0 F80F     		.short	4088
 4174 04a2 E003     		.short	992
 4175 04a4 0000     		.short	0
 4176 04a6 0000     		.short	0
 4177 04a8 0000     		.short	0
 4178 04aa 0000     		.short	0
 4179 04ac 0000     		.short	0
 4180 04ae 0000     		.short	0
 4181 04b0 0000     		.short	0
 4182 04b2 E003     		.short	992
 4183 04b4 F007     		.short	2032
 4184 04b6 380E     		.short	3640
 4185 04b8 1C0C     		.short	3100
 4186 04ba 0C18     		.short	6156
 4187 04bc 0C18     		.short	6156
 4188 04be 0C18     		.short	6156
 4189 04c0 1C1C     		.short	7196
 4190 04c2 381E     		.short	7736
 4191 04c4 F81B     		.short	7160
 4192 04c6 E019     		.short	6624
 4193 04c8 0018     		.short	6144
 4194 04ca 000C     		.short	3072
 4195 04cc 000C     		.short	3072
 4196 04ce 1C0E     		.short	3612
 4197 04d0 F807     		.short	2040
 4198 04d2 F001     		.short	496
 4199 04d4 0000     		.short	0
 4200 04d6 0000     		.short	0
 4201 04d8 0000     		.short	0
 4202 04da 0000     		.short	0
 4203 04dc 0000     		.short	0
 4204 04de 0000     		.short	0
 4205 04e0 0000     		.short	0
 4206 04e2 0000     		.short	0
 4207 04e4 0000     		.short	0
 4208 04e6 0000     		.short	0
 4209 04e8 0000     		.short	0
 4210 04ea 0000     		.short	0
 4211 04ec 8001     		.short	384
 4212 04ee 8001     		.short	384
 4213 04f0 0000     		.short	0
 4214 04f2 0000     		.short	0
 4215 04f4 0000     		.short	0
 4216 04f6 0000     		.short	0
 4217 04f8 0000     		.short	0
 4218 04fa 0000     		.short	0
 4219 04fc 0000     		.short	0
 4220 04fe 0000     		.short	0
 4221 0500 8001     		.short	384
 4222 0502 8001     		.short	384
 4223 0504 0000     		.short	0
 4224 0506 0000     		.short	0
 4225 0508 0000     		.short	0
 4226 050a 0000     		.short	0
 4227 050c 0000     		.short	0
 4228 050e 0000     		.short	0
 4229 0510 0000     		.short	0
 4230 0512 0000     		.short	0
 4231 0514 0000     		.short	0
 4232 0516 0000     		.short	0
 4233 0518 0000     		.short	0
 4234 051a 0000     		.short	0
 4235 051c 8001     		.short	384
 4236 051e 8001     		.short	384
 4237 0520 0000     		.short	0
 4238 0522 0000     		.short	0
 4239 0524 0000     		.short	0
 4240 0526 0000     		.short	0
 4241 0528 0000     		.short	0
 4242 052a 0000     		.short	0
 4243 052c 0000     		.short	0
 4244 052e 0000     		.short	0
 4245 0530 8001     		.short	384
 4246 0532 8001     		.short	384
 4247 0534 0001     		.short	256
 4248 0536 0001     		.short	256
 4249 0538 8000     		.short	128
 4250 053a 0000     		.short	0
 4251 053c 0000     		.short	0
 4252 053e 0000     		.short	0
 4253 0540 0000     		.short	0
 4254 0542 0000     		.short	0
 4255 0544 0000     		.short	0
 4256 0546 0000     		.short	0
 4257 0548 0000     		.short	0
 4258 054a 0000     		.short	0
 4259 054c 0000     		.short	0
 4260 054e 0000     		.short	0
 4261 0550 0010     		.short	4096
 4262 0552 001C     		.short	7168
 4263 0554 800F     		.short	3968
 4264 0556 E003     		.short	992
 4265 0558 F800     		.short	248
 4266 055a 1800     		.short	24
 4267 055c F800     		.short	248
 4268 055e E003     		.short	992
 4269 0560 800F     		.short	3968
 4270 0562 001C     		.short	7168
 4271 0564 0010     		.short	4096
 4272 0566 0000     		.short	0
 4273 0568 0000     		.short	0
 4274 056a 0000     		.short	0
 4275 056c 0000     		.short	0
 4276 056e 0000     		.short	0
 4277 0570 0000     		.short	0
 4278 0572 0000     		.short	0
 4279 0574 0000     		.short	0
 4280 0576 0000     		.short	0
 4281 0578 0000     		.short	0
 4282 057a 0000     		.short	0
 4283 057c 0000     		.short	0
 4284 057e 0000     		.short	0
 4285 0580 F81F     		.short	8184
 4286 0582 0000     		.short	0
 4287 0584 0000     		.short	0
 4288 0586 0000     		.short	0
 4289 0588 F81F     		.short	8184
 4290 058a 0000     		.short	0
 4291 058c 0000     		.short	0
 4292 058e 0000     		.short	0
 4293 0590 0000     		.short	0
 4294 0592 0000     		.short	0
 4295 0594 0000     		.short	0
 4296 0596 0000     		.short	0
 4297 0598 0000     		.short	0
 4298 059a 0000     		.short	0
 4299 059c 0000     		.short	0
 4300 059e 0000     		.short	0
 4301 05a0 0000     		.short	0
 4302 05a2 0000     		.short	0
 4303 05a4 0000     		.short	0
 4304 05a6 0000     		.short	0
 4305 05a8 0000     		.short	0
 4306 05aa 0000     		.short	0
 4307 05ac 0000     		.short	0
 4308 05ae 0000     		.short	0
 4309 05b0 0800     		.short	8
 4310 05b2 3800     		.short	56
 4311 05b4 F001     		.short	496
 4312 05b6 C007     		.short	1984
 4313 05b8 001F     		.short	7936
 4314 05ba 0018     		.short	6144
 4315 05bc 001F     		.short	7936
 4316 05be C007     		.short	1984
 4317 05c0 F001     		.short	496
 4318 05c2 3800     		.short	56
 4319 05c4 0800     		.short	8
 4320 05c6 0000     		.short	0
 4321 05c8 0000     		.short	0
 4322 05ca 0000     		.short	0
 4323 05cc 0000     		.short	0
 4324 05ce 0000     		.short	0
 4325 05d0 0000     		.short	0
 4326 05d2 E003     		.short	992
 4327 05d4 F80F     		.short	4088
 4328 05d6 180C     		.short	3096
 4329 05d8 0C18     		.short	6156
 4330 05da 0C18     		.short	6156
 4331 05dc 0018     		.short	6144
 4332 05de 000C     		.short	3072
 4333 05e0 0006     		.short	1536
 4334 05e2 0003     		.short	768
 4335 05e4 8001     		.short	384
 4336 05e6 C000     		.short	192
 4337 05e8 C000     		.short	192
 4338 05ea C000     		.short	192
 4339 05ec 0000     		.short	0
 4340 05ee 0000     		.short	0
 4341 05f0 C000     		.short	192
 4342 05f2 C000     		.short	192
 4343 05f4 0000     		.short	0
 4344 05f6 0000     		.short	0
 4345 05f8 0000     		.short	0
 4346 05fa 0000     		.short	0
 4347 05fc 0000     		.short	0
 4348 05fe 0000     		.short	0
 4349 0600 0000     		.short	0
 4350 0602 0000     		.short	0
 4351 0604 E007     		.short	2016
 4352 0606 1818     		.short	6168
 4353 0608 0420     		.short	8196
 4354 060a C229     		.short	10690
 4355 060c 224A     		.short	18978
 4356 060e 1144     		.short	17425
 4357 0610 0944     		.short	17417
 4358 0612 0944     		.short	17417
 4359 0614 0944     		.short	17417
 4360 0616 0922     		.short	8713
 4361 0618 1113     		.short	4881
 4362 061a E20C     		.short	3298
 4363 061c 0240     		.short	16386
 4364 061e 0420     		.short	8196
 4365 0620 1818     		.short	6168
 4366 0622 E007     		.short	2016
 4367 0624 0000     		.short	0
 4368 0626 0000     		.short	0
 4369 0628 0000     		.short	0
 4370 062a 0000     		.short	0
 4371 062c 0000     		.short	0
 4372 062e 0000     		.short	0
 4373 0630 0000     		.short	0
 4374 0632 8003     		.short	896
 4375 0634 8003     		.short	896
 4376 0636 C006     		.short	1728
 4377 0638 C006     		.short	1728
 4378 063a C006     		.short	1728
 4379 063c 600C     		.short	3168
 4380 063e 600C     		.short	3168
 4381 0640 3018     		.short	6192
 4382 0642 3018     		.short	6192
 4383 0644 3018     		.short	6192
 4384 0646 F83F     		.short	16376
 4385 0648 F83F     		.short	16376
 4386 064a 1C70     		.short	28700
 4387 064c 0C60     		.short	24588
 4388 064e 0C60     		.short	24588
 4389 0650 06C0     		.short	-16378
 4390 0652 06C0     		.short	-16378
 4391 0654 0000     		.short	0
 4392 0656 0000     		.short	0
 4393 0658 0000     		.short	0
 4394 065a 0000     		.short	0
 4395 065c 0000     		.short	0
 4396 065e 0000     		.short	0
 4397 0660 0000     		.short	0
 4398 0662 FC03     		.short	1020
 4399 0664 FC0F     		.short	4092
 4400 0666 0C0C     		.short	3084
 4401 0668 0C18     		.short	6156
 4402 066a 0C18     		.short	6156
 4403 066c 0C18     		.short	6156
 4404 066e 0C0C     		.short	3084
 4405 0670 FC07     		.short	2044
 4406 0672 FC0F     		.short	4092
 4407 0674 0C18     		.short	6156
 4408 0676 0C30     		.short	12300
 4409 0678 0C30     		.short	12300
 4410 067a 0C30     		.short	12300
 4411 067c 0C30     		.short	12300
 4412 067e 0C18     		.short	6156
 4413 0680 FC1F     		.short	8188
 4414 0682 FC07     		.short	2044
 4415 0684 0000     		.short	0
 4416 0686 0000     		.short	0
 4417 0688 0000     		.short	0
 4418 068a 0000     		.short	0
 4419 068c 0000     		.short	0
 4420 068e 0000     		.short	0
 4421 0690 0000     		.short	0
 4422 0692 C007     		.short	1984
 4423 0694 F01F     		.short	8176
 4424 0696 3838     		.short	14392
 4425 0698 1C30     		.short	12316
 4426 069a 0C70     		.short	28684
 4427 069c 0660     		.short	24582
 4428 069e 0600     		.short	6
 4429 06a0 0600     		.short	6
 4430 06a2 0600     		.short	6
 4431 06a4 0600     		.short	6
 4432 06a6 0600     		.short	6
 4433 06a8 0600     		.short	6
 4434 06aa 0660     		.short	24582
 4435 06ac 0C70     		.short	28684
 4436 06ae 1C30     		.short	12316
 4437 06b0 F01F     		.short	8176
 4438 06b2 E007     		.short	2016
 4439 06b4 0000     		.short	0
 4440 06b6 0000     		.short	0
 4441 06b8 0000     		.short	0
 4442 06ba 0000     		.short	0
 4443 06bc 0000     		.short	0
 4444 06be 0000     		.short	0
 4445 06c0 0000     		.short	0
 4446 06c2 FE03     		.short	1022
 4447 06c4 FE0F     		.short	4094
 4448 06c6 060E     		.short	3590
 4449 06c8 0618     		.short	6150
 4450 06ca 0618     		.short	6150
 4451 06cc 0630     		.short	12294
 4452 06ce 0630     		.short	12294
 4453 06d0 0630     		.short	12294
 4454 06d2 0630     		.short	12294
 4455 06d4 0630     		.short	12294
 4456 06d6 0630     		.short	12294
 4457 06d8 0630     		.short	12294
 4458 06da 0618     		.short	6150
 4459 06dc 0618     		.short	6150
 4460 06de 060E     		.short	3590
 4461 06e0 FE0F     		.short	4094
 4462 06e2 FE03     		.short	1022
 4463 06e4 0000     		.short	0
 4464 06e6 0000     		.short	0
 4465 06e8 0000     		.short	0
 4466 06ea 0000     		.short	0
 4467 06ec 0000     		.short	0
 4468 06ee 0000     		.short	0
 4469 06f0 0000     		.short	0
 4470 06f2 FC3F     		.short	16380
 4471 06f4 FC3F     		.short	16380
 4472 06f6 0C00     		.short	12
 4473 06f8 0C00     		.short	12
 4474 06fa 0C00     		.short	12
 4475 06fc 0C00     		.short	12
 4476 06fe 0C00     		.short	12
 4477 0700 FC1F     		.short	8188
 4478 0702 FC1F     		.short	8188
 4479 0704 0C00     		.short	12
 4480 0706 0C00     		.short	12
 4481 0708 0C00     		.short	12
 4482 070a 0C00     		.short	12
 4483 070c 0C00     		.short	12
 4484 070e 0C00     		.short	12
 4485 0710 FC3F     		.short	16380
 4486 0712 FC3F     		.short	16380
 4487 0714 0000     		.short	0
 4488 0716 0000     		.short	0
 4489 0718 0000     		.short	0
 4490 071a 0000     		.short	0
 4491 071c 0000     		.short	0
 4492 071e 0000     		.short	0
 4493 0720 0000     		.short	0
 4494 0722 F83F     		.short	16376
 4495 0724 F83F     		.short	16376
 4496 0726 1800     		.short	24
 4497 0728 1800     		.short	24
 4498 072a 1800     		.short	24
 4499 072c 1800     		.short	24
 4500 072e 1800     		.short	24
 4501 0730 F81F     		.short	8184
 4502 0732 F81F     		.short	8184
 4503 0734 1800     		.short	24
 4504 0736 1800     		.short	24
 4505 0738 1800     		.short	24
 4506 073a 1800     		.short	24
 4507 073c 1800     		.short	24
 4508 073e 1800     		.short	24
 4509 0740 1800     		.short	24
 4510 0742 1800     		.short	24
 4511 0744 0000     		.short	0
 4512 0746 0000     		.short	0
 4513 0748 0000     		.short	0
 4514 074a 0000     		.short	0
 4515 074c 0000     		.short	0
 4516 074e 0000     		.short	0
 4517 0750 0000     		.short	0
 4518 0752 E00F     		.short	4064
 4519 0754 F83F     		.short	16376
 4520 0756 3C78     		.short	30780
 4521 0758 0E60     		.short	24590
 4522 075a 06E0     		.short	-8186
 4523 075c 07C0     		.short	-16377
 4524 075e 0300     		.short	3
 4525 0760 0300     		.short	3
 4526 0762 03FE     		.short	-509
 4527 0764 03FE     		.short	-509
 4528 0766 03C0     		.short	-16381
 4529 0768 07C0     		.short	-16377
 4530 076a 06C0     		.short	-16378
 4531 076c 0EC0     		.short	-16370
 4532 076e 3CF0     		.short	-4036
 4533 0770 F83F     		.short	16376
 4534 0772 E00F     		.short	4064
 4535 0774 0000     		.short	0
 4536 0776 0000     		.short	0
 4537 0778 0000     		.short	0
 4538 077a 0000     		.short	0
 4539 077c 0000     		.short	0
 4540 077e 0000     		.short	0
 4541 0780 0000     		.short	0
 4542 0782 0C30     		.short	12300
 4543 0784 0C30     		.short	12300
 4544 0786 0C30     		.short	12300
 4545 0788 0C30     		.short	12300
 4546 078a 0C30     		.short	12300
 4547 078c 0C30     		.short	12300
 4548 078e 0C30     		.short	12300
 4549 0790 FC3F     		.short	16380
 4550 0792 FC3F     		.short	16380
 4551 0794 0C30     		.short	12300
 4552 0796 0C30     		.short	12300
 4553 0798 0C30     		.short	12300
 4554 079a 0C30     		.short	12300
 4555 079c 0C30     		.short	12300
 4556 079e 0C30     		.short	12300
 4557 07a0 0C30     		.short	12300
 4558 07a2 0C30     		.short	12300
 4559 07a4 0000     		.short	0
 4560 07a6 0000     		.short	0
 4561 07a8 0000     		.short	0
 4562 07aa 0000     		.short	0
 4563 07ac 0000     		.short	0
 4564 07ae 0000     		.short	0
 4565 07b0 0000     		.short	0
 4566 07b2 8001     		.short	384
 4567 07b4 8001     		.short	384
 4568 07b6 8001     		.short	384
 4569 07b8 8001     		.short	384
 4570 07ba 8001     		.short	384
 4571 07bc 8001     		.short	384
 4572 07be 8001     		.short	384
 4573 07c0 8001     		.short	384
 4574 07c2 8001     		.short	384
 4575 07c4 8001     		.short	384
 4576 07c6 8001     		.short	384
 4577 07c8 8001     		.short	384
 4578 07ca 8001     		.short	384
 4579 07cc 8001     		.short	384
 4580 07ce 8001     		.short	384
 4581 07d0 8001     		.short	384
 4582 07d2 8001     		.short	384
 4583 07d4 0000     		.short	0
 4584 07d6 0000     		.short	0
 4585 07d8 0000     		.short	0
 4586 07da 0000     		.short	0
 4587 07dc 0000     		.short	0
 4588 07de 0000     		.short	0
 4589 07e0 0000     		.short	0
 4590 07e2 0006     		.short	1536
 4591 07e4 0006     		.short	1536
 4592 07e6 0006     		.short	1536
 4593 07e8 0006     		.short	1536
 4594 07ea 0006     		.short	1536
 4595 07ec 0006     		.short	1536
 4596 07ee 0006     		.short	1536
 4597 07f0 0006     		.short	1536
 4598 07f2 0006     		.short	1536
 4599 07f4 0006     		.short	1536
 4600 07f6 0006     		.short	1536
 4601 07f8 0006     		.short	1536
 4602 07fa 1806     		.short	1560
 4603 07fc 1806     		.short	1560
 4604 07fe 3807     		.short	1848
 4605 0800 F003     		.short	1008
 4606 0802 E001     		.short	480
 4607 0804 0000     		.short	0
 4608 0806 0000     		.short	0
 4609 0808 0000     		.short	0
 4610 080a 0000     		.short	0
 4611 080c 0000     		.short	0
 4612 080e 0000     		.short	0
 4613 0810 0000     		.short	0
 4614 0812 0630     		.short	12294
 4615 0814 0618     		.short	6150
 4616 0816 060C     		.short	3078
 4617 0818 0606     		.short	1542
 4618 081a 0603     		.short	774
 4619 081c 8601     		.short	390
 4620 081e C600     		.short	198
 4621 0820 6600     		.short	102
 4622 0822 7600     		.short	118
 4623 0824 DE00     		.short	222
 4624 0826 8E01     		.short	398
 4625 0828 0603     		.short	774
 4626 082a 0606     		.short	1542
 4627 082c 060C     		.short	3078
 4628 082e 0618     		.short	6150
 4629 0830 0630     		.short	12294
 4630 0832 0660     		.short	24582
 4631 0834 0000     		.short	0
 4632 0836 0000     		.short	0
 4633 0838 0000     		.short	0
 4634 083a 0000     		.short	0
 4635 083c 0000     		.short	0
 4636 083e 0000     		.short	0
 4637 0840 0000     		.short	0
 4638 0842 1800     		.short	24
 4639 0844 1800     		.short	24
 4640 0846 1800     		.short	24
 4641 0848 1800     		.short	24
 4642 084a 1800     		.short	24
 4643 084c 1800     		.short	24
 4644 084e 1800     		.short	24
 4645 0850 1800     		.short	24
 4646 0852 1800     		.short	24
 4647 0854 1800     		.short	24
 4648 0856 1800     		.short	24
 4649 0858 1800     		.short	24
 4650 085a 1800     		.short	24
 4651 085c 1800     		.short	24
 4652 085e 1800     		.short	24
 4653 0860 F81F     		.short	8184
 4654 0862 F81F     		.short	8184
 4655 0864 0000     		.short	0
 4656 0866 0000     		.short	0
 4657 0868 0000     		.short	0
 4658 086a 0000     		.short	0
 4659 086c 0000     		.short	0
 4660 086e 0000     		.short	0
 4661 0870 0000     		.short	0
 4662 0872 0EE0     		.short	-8178
 4663 0874 1EF0     		.short	-4066
 4664 0876 1EF0     		.short	-4066
 4665 0878 1EF0     		.short	-4066
 4666 087a 36D8     		.short	-10186
 4667 087c 36D8     		.short	-10186
 4668 087e 36D8     		.short	-10186
 4669 0880 36D8     		.short	-10186
 4670 0882 66CC     		.short	-13210
 4671 0884 66CC     		.short	-13210
 4672 0886 66CC     		.short	-13210
 4673 0888 C6C6     		.short	-14650
 4674 088a C6C6     		.short	-14650
 4675 088c C6C6     		.short	-14650
 4676 088e C6C6     		.short	-14650
 4677 0890 86C3     		.short	-15482
 4678 0892 86C3     		.short	-15482
 4679 0894 0000     		.short	0
 4680 0896 0000     		.short	0
 4681 0898 0000     		.short	0
 4682 089a 0000     		.short	0
 4683 089c 0000     		.short	0
 4684 089e 0000     		.short	0
 4685 08a0 0000     		.short	0
 4686 08a2 0C30     		.short	12300
 4687 08a4 1C30     		.short	12316
 4688 08a6 3C30     		.short	12348
 4689 08a8 3C30     		.short	12348
 4690 08aa 6C30     		.short	12396
 4691 08ac 6C30     		.short	12396
 4692 08ae CC30     		.short	12492
 4693 08b0 CC30     		.short	12492
 4694 08b2 8C31     		.short	12684
 4695 08b4 0C33     		.short	13068
 4696 08b6 0C33     		.short	13068
 4697 08b8 0C36     		.short	13836
 4698 08ba 0C36     		.short	13836
 4699 08bc 0C3C     		.short	15372
 4700 08be 0C3C     		.short	15372
 4701 08c0 0C38     		.short	14348
 4702 08c2 0C30     		.short	12300
 4703 08c4 0000     		.short	0
 4704 08c6 0000     		.short	0
 4705 08c8 0000     		.short	0
 4706 08ca 0000     		.short	0
 4707 08cc 0000     		.short	0
 4708 08ce 0000     		.short	0
 4709 08d0 0000     		.short	0
 4710 08d2 E007     		.short	2016
 4711 08d4 F81F     		.short	8184
 4712 08d6 1C38     		.short	14364
 4713 08d8 0E70     		.short	28686
 4714 08da 0660     		.short	24582
 4715 08dc 03C0     		.short	-16381
 4716 08de 03C0     		.short	-16381
 4717 08e0 03C0     		.short	-16381
 4718 08e2 03C0     		.short	-16381
 4719 08e4 03C0     		.short	-16381
 4720 08e6 03C0     		.short	-16381
 4721 08e8 03C0     		.short	-16381
 4722 08ea 0660     		.short	24582
 4723 08ec 0E70     		.short	28686
 4724 08ee 1C38     		.short	14364
 4725 08f0 F81F     		.short	8184
 4726 08f2 E007     		.short	2016
 4727 08f4 0000     		.short	0
 4728 08f6 0000     		.short	0
 4729 08f8 0000     		.short	0
 4730 08fa 0000     		.short	0
 4731 08fc 0000     		.short	0
 4732 08fe 0000     		.short	0
 4733 0900 0000     		.short	0
 4734 0902 FC0F     		.short	4092
 4735 0904 FC1F     		.short	8188
 4736 0906 0C38     		.short	14348
 4737 0908 0C30     		.short	12300
 4738 090a 0C30     		.short	12300
 4739 090c 0C30     		.short	12300
 4740 090e 0C30     		.short	12300
 4741 0910 0C18     		.short	6156
 4742 0912 FC1F     		.short	8188
 4743 0914 FC07     		.short	2044
 4744 0916 0C00     		.short	12
 4745 0918 0C00     		.short	12
 4746 091a 0C00     		.short	12
 4747 091c 0C00     		.short	12
 4748 091e 0C00     		.short	12
 4749 0920 0C00     		.short	12
 4750 0922 0C00     		.short	12
 4751 0924 0000     		.short	0
 4752 0926 0000     		.short	0
 4753 0928 0000     		.short	0
 4754 092a 0000     		.short	0
 4755 092c 0000     		.short	0
 4756 092e 0000     		.short	0
 4757 0930 0000     		.short	0
 4758 0932 E007     		.short	2016
 4759 0934 F81F     		.short	8184
 4760 0936 1C38     		.short	14364
 4761 0938 0E70     		.short	28686
 4762 093a 0660     		.short	24582
 4763 093c 03E0     		.short	-8189
 4764 093e 03C0     		.short	-16381
 4765 0940 03C0     		.short	-16381
 4766 0942 03C0     		.short	-16381
 4767 0944 03C0     		.short	-16381
 4768 0946 03C0     		.short	-16381
 4769 0948 07E0     		.short	-8185
 4770 094a 0663     		.short	25350
 4771 094c 0E3F     		.short	16142
 4772 094e 1C3C     		.short	15388
 4773 0950 F83F     		.short	16376
 4774 0952 E0F7     		.short	-2080
 4775 0954 00C0     		.short	-16384
 4776 0956 0000     		.short	0
 4777 0958 0000     		.short	0
 4778 095a 0000     		.short	0
 4779 095c 0000     		.short	0
 4780 095e 0000     		.short	0
 4781 0960 0000     		.short	0
 4782 0962 FE0F     		.short	4094
 4783 0964 FE1F     		.short	8190
 4784 0966 0638     		.short	14342
 4785 0968 0630     		.short	12294
 4786 096a 0630     		.short	12294
 4787 096c 0630     		.short	12294
 4788 096e 0638     		.short	14342
 4789 0970 FE1F     		.short	8190
 4790 0972 FE07     		.short	2046
 4791 0974 0603     		.short	774
 4792 0976 0606     		.short	1542
 4793 0978 060C     		.short	3078
 4794 097a 0618     		.short	6150
 4795 097c 0618     		.short	6150
 4796 097e 0630     		.short	12294
 4797 0980 0630     		.short	12294
 4798 0982 0660     		.short	24582
 4799 0984 0000     		.short	0
 4800 0986 0000     		.short	0
 4801 0988 0000     		.short	0
 4802 098a 0000     		.short	0
 4803 098c 0000     		.short	0
 4804 098e 0000     		.short	0
 4805 0990 0000     		.short	0
 4806 0992 E003     		.short	992
 4807 0994 F80F     		.short	4088
 4808 0996 1C0C     		.short	3100
 4809 0998 0C18     		.short	6156
 4810 099a 0C18     		.short	6156
 4811 099c 0C00     		.short	12
 4812 099e 1C00     		.short	28
 4813 09a0 F803     		.short	1016
 4814 09a2 E00F     		.short	4064
 4815 09a4 001E     		.short	7680
 4816 09a6 0038     		.short	14336
 4817 09a8 0630     		.short	12294
 4818 09aa 0630     		.short	12294
 4819 09ac 0E30     		.short	12302
 4820 09ae 1C1C     		.short	7196
 4821 09b0 F80F     		.short	4088
 4822 09b2 E007     		.short	2016
 4823 09b4 0000     		.short	0
 4824 09b6 0000     		.short	0
 4825 09b8 0000     		.short	0
 4826 09ba 0000     		.short	0
 4827 09bc 0000     		.short	0
 4828 09be 0000     		.short	0
 4829 09c0 0000     		.short	0
 4830 09c2 FE7F     		.short	32766
 4831 09c4 FE7F     		.short	32766
 4832 09c6 8001     		.short	384
 4833 09c8 8001     		.short	384
 4834 09ca 8001     		.short	384
 4835 09cc 8001     		.short	384
 4836 09ce 8001     		.short	384
 4837 09d0 8001     		.short	384
 4838 09d2 8001     		.short	384
 4839 09d4 8001     		.short	384
 4840 09d6 8001     		.short	384
 4841 09d8 8001     		.short	384
 4842 09da 8001     		.short	384
 4843 09dc 8001     		.short	384
 4844 09de 8001     		.short	384
 4845 09e0 8001     		.short	384
 4846 09e2 8001     		.short	384
 4847 09e4 0000     		.short	0
 4848 09e6 0000     		.short	0
 4849 09e8 0000     		.short	0
 4850 09ea 0000     		.short	0
 4851 09ec 0000     		.short	0
 4852 09ee 0000     		.short	0
 4853 09f0 0000     		.short	0
 4854 09f2 0C30     		.short	12300
 4855 09f4 0C30     		.short	12300
 4856 09f6 0C30     		.short	12300
 4857 09f8 0C30     		.short	12300
 4858 09fa 0C30     		.short	12300
 4859 09fc 0C30     		.short	12300
 4860 09fe 0C30     		.short	12300
 4861 0a00 0C30     		.short	12300
 4862 0a02 0C30     		.short	12300
 4863 0a04 0C30     		.short	12300
 4864 0a06 0C30     		.short	12300
 4865 0a08 0C30     		.short	12300
 4866 0a0a 0C30     		.short	12300
 4867 0a0c 0C30     		.short	12300
 4868 0a0e 1818     		.short	6168
 4869 0a10 F81F     		.short	8184
 4870 0a12 E007     		.short	2016
 4871 0a14 0000     		.short	0
 4872 0a16 0000     		.short	0
 4873 0a18 0000     		.short	0
 4874 0a1a 0000     		.short	0
 4875 0a1c 0000     		.short	0
 4876 0a1e 0000     		.short	0
 4877 0a20 0000     		.short	0
 4878 0a22 0360     		.short	24579
 4879 0a24 0630     		.short	12294
 4880 0a26 0630     		.short	12294
 4881 0a28 0630     		.short	12294
 4882 0a2a 0C18     		.short	6156
 4883 0a2c 0C18     		.short	6156
 4884 0a2e 0C18     		.short	6156
 4885 0a30 180C     		.short	3096
 4886 0a32 180C     		.short	3096
 4887 0a34 380E     		.short	3640
 4888 0a36 3006     		.short	1584
 4889 0a38 3006     		.short	1584
 4890 0a3a 7007     		.short	1904
 4891 0a3c 6003     		.short	864
 4892 0a3e 6003     		.short	864
 4893 0a40 C001     		.short	448
 4894 0a42 C001     		.short	448
 4895 0a44 0000     		.short	0
 4896 0a46 0000     		.short	0
 4897 0a48 0000     		.short	0
 4898 0a4a 0000     		.short	0
 4899 0a4c 0000     		.short	0
 4900 0a4e 0000     		.short	0
 4901 0a50 0000     		.short	0
 4902 0a52 0360     		.short	24579
 4903 0a54 C361     		.short	25027
 4904 0a56 C361     		.short	25027
 4905 0a58 C361     		.short	25027
 4906 0a5a 6633     		.short	13158
 4907 0a5c 6633     		.short	13158
 4908 0a5e 6633     		.short	13158
 4909 0a60 6633     		.short	13158
 4910 0a62 6633     		.short	13158
 4911 0a64 6633     		.short	13158
 4912 0a66 6C1B     		.short	7020
 4913 0a68 6C1B     		.short	7020
 4914 0a6a 6C1B     		.short	7020
 4915 0a6c 2C1A     		.short	6700
 4916 0a6e 3C1E     		.short	7740
 4917 0a70 380E     		.short	3640
 4918 0a72 380E     		.short	3640
 4919 0a74 0000     		.short	0
 4920 0a76 0000     		.short	0
 4921 0a78 0000     		.short	0
 4922 0a7a 0000     		.short	0
 4923 0a7c 0000     		.short	0
 4924 0a7e 0000     		.short	0
 4925 0a80 0000     		.short	0
 4926 0a82 0FE0     		.short	-8177
 4927 0a84 0C70     		.short	28684
 4928 0a86 1830     		.short	12312
 4929 0a88 3018     		.short	6192
 4930 0a8a 700C     		.short	3184
 4931 0a8c 600E     		.short	3680
 4932 0a8e C007     		.short	1984
 4933 0a90 8003     		.short	896
 4934 0a92 8003     		.short	896
 4935 0a94 C003     		.short	960
 4936 0a96 E006     		.short	1760
 4937 0a98 700C     		.short	3184
 4938 0a9a 301C     		.short	7216
 4939 0a9c 1818     		.short	6168
 4940 0a9e 0C30     		.short	12300
 4941 0aa0 0E60     		.short	24590
 4942 0aa2 07E0     		.short	-8185
 4943 0aa4 0000     		.short	0
 4944 0aa6 0000     		.short	0
 4945 0aa8 0000     		.short	0
 4946 0aaa 0000     		.short	0
 4947 0aac 0000     		.short	0
 4948 0aae 0000     		.short	0
 4949 0ab0 0000     		.short	0
 4950 0ab2 03C0     		.short	-16381
 4951 0ab4 0660     		.short	24582
 4952 0ab6 0C30     		.short	12300
 4953 0ab8 1C38     		.short	14364
 4954 0aba 3818     		.short	6200
 4955 0abc 300C     		.short	3120
 4956 0abe 6006     		.short	1632
 4957 0ac0 E007     		.short	2016
 4958 0ac2 C003     		.short	960
 4959 0ac4 8001     		.short	384
 4960 0ac6 8001     		.short	384
 4961 0ac8 8001     		.short	384
 4962 0aca 8001     		.short	384
 4963 0acc 8001     		.short	384
 4964 0ace 8001     		.short	384
 4965 0ad0 8001     		.short	384
 4966 0ad2 8001     		.short	384
 4967 0ad4 0000     		.short	0
 4968 0ad6 0000     		.short	0
 4969 0ad8 0000     		.short	0
 4970 0ada 0000     		.short	0
 4971 0adc 0000     		.short	0
 4972 0ade 0000     		.short	0
 4973 0ae0 0000     		.short	0
 4974 0ae2 FC7F     		.short	32764
 4975 0ae4 FC7F     		.short	32764
 4976 0ae6 0060     		.short	24576
 4977 0ae8 0030     		.short	12288
 4978 0aea 0018     		.short	6144
 4979 0aec 000C     		.short	3072
 4980 0aee 0006     		.short	1536
 4981 0af0 0003     		.short	768
 4982 0af2 8001     		.short	384
 4983 0af4 C000     		.short	192
 4984 0af6 6000     		.short	96
 4985 0af8 3000     		.short	48
 4986 0afa 1800     		.short	24
 4987 0afc 0C00     		.short	12
 4988 0afe 0600     		.short	6
 4989 0b00 FE7F     		.short	32766
 4990 0b02 FE7F     		.short	32766
 4991 0b04 0000     		.short	0
 4992 0b06 0000     		.short	0
 4993 0b08 0000     		.short	0
 4994 0b0a 0000     		.short	0
 4995 0b0c 0000     		.short	0
 4996 0b0e 0000     		.short	0
 4997 0b10 0000     		.short	0
 4998 0b12 E003     		.short	992
 4999 0b14 E003     		.short	992
 5000 0b16 6000     		.short	96
 5001 0b18 6000     		.short	96
 5002 0b1a 6000     		.short	96
 5003 0b1c 6000     		.short	96
 5004 0b1e 6000     		.short	96
 5005 0b20 6000     		.short	96
 5006 0b22 6000     		.short	96
 5007 0b24 6000     		.short	96
 5008 0b26 6000     		.short	96
 5009 0b28 6000     		.short	96
 5010 0b2a 6000     		.short	96
 5011 0b2c 6000     		.short	96
 5012 0b2e 6000     		.short	96
 5013 0b30 6000     		.short	96
 5014 0b32 6000     		.short	96
 5015 0b34 6000     		.short	96
 5016 0b36 6000     		.short	96
 5017 0b38 6000     		.short	96
 5018 0b3a E003     		.short	992
 5019 0b3c E003     		.short	992
 5020 0b3e 0000     		.short	0
 5021 0b40 0000     		.short	0
 5022 0b42 3000     		.short	48
 5023 0b44 3000     		.short	48
 5024 0b46 6000     		.short	96
 5025 0b48 6000     		.short	96
 5026 0b4a 6000     		.short	96
 5027 0b4c C000     		.short	192
 5028 0b4e C000     		.short	192
 5029 0b50 C000     		.short	192
 5030 0b52 C001     		.short	448
 5031 0b54 8001     		.short	384
 5032 0b56 8001     		.short	384
 5033 0b58 8001     		.short	384
 5034 0b5a 0003     		.short	768
 5035 0b5c 0003     		.short	768
 5036 0b5e 0003     		.short	768
 5037 0b60 0006     		.short	1536
 5038 0b62 0006     		.short	1536
 5039 0b64 0000     		.short	0
 5040 0b66 0000     		.short	0
 5041 0b68 0000     		.short	0
 5042 0b6a 0000     		.short	0
 5043 0b6c 0000     		.short	0
 5044 0b6e 0000     		.short	0
 5045 0b70 0000     		.short	0
 5046 0b72 E003     		.short	992
 5047 0b74 E003     		.short	992
 5048 0b76 0003     		.short	768
 5049 0b78 0003     		.short	768
 5050 0b7a 0003     		.short	768
 5051 0b7c 0003     		.short	768
 5052 0b7e 0003     		.short	768
 5053 0b80 0003     		.short	768
 5054 0b82 0003     		.short	768
 5055 0b84 0003     		.short	768
 5056 0b86 0003     		.short	768
 5057 0b88 0003     		.short	768
 5058 0b8a 0003     		.short	768
 5059 0b8c 0003     		.short	768
 5060 0b8e 0003     		.short	768
 5061 0b90 0003     		.short	768
 5062 0b92 0003     		.short	768
 5063 0b94 0003     		.short	768
 5064 0b96 0003     		.short	768
 5065 0b98 0003     		.short	768
 5066 0b9a E003     		.short	992
 5067 0b9c E003     		.short	992
 5068 0b9e 0000     		.short	0
 5069 0ba0 0000     		.short	0
 5070 0ba2 0000     		.short	0
 5071 0ba4 C001     		.short	448
 5072 0ba6 C001     		.short	448
 5073 0ba8 6003     		.short	864
 5074 0baa 6003     		.short	864
 5075 0bac 6003     		.short	864
 5076 0bae 3006     		.short	1584
 5077 0bb0 3006     		.short	1584
 5078 0bb2 180C     		.short	3096
 5079 0bb4 180C     		.short	3096
 5080 0bb6 0000     		.short	0
 5081 0bb8 0000     		.short	0
 5082 0bba 0000     		.short	0
 5083 0bbc 0000     		.short	0
 5084 0bbe 0000     		.short	0
 5085 0bc0 0000     		.short	0
 5086 0bc2 0000     		.short	0
 5087 0bc4 0000     		.short	0
 5088 0bc6 0000     		.short	0
 5089 0bc8 0000     		.short	0
 5090 0bca 0000     		.short	0
 5091 0bcc 0000     		.short	0
 5092 0bce 0000     		.short	0
 5093 0bd0 0000     		.short	0
 5094 0bd2 0000     		.short	0
 5095 0bd4 0000     		.short	0
 5096 0bd6 0000     		.short	0
 5097 0bd8 0000     		.short	0
 5098 0bda 0000     		.short	0
 5099 0bdc 0000     		.short	0
 5100 0bde 0000     		.short	0
 5101 0be0 0000     		.short	0
 5102 0be2 0000     		.short	0
 5103 0be4 0000     		.short	0
 5104 0be6 0000     		.short	0
 5105 0be8 0000     		.short	0
 5106 0bea 0000     		.short	0
 5107 0bec 0000     		.short	0
 5108 0bee 0000     		.short	0
 5109 0bf0 0000     		.short	0
 5110 0bf2 FFFF     		.short	-1
 5111 0bf4 FFFF     		.short	-1
 5112 0bf6 0000     		.short	0
 5113 0bf8 0000     		.short	0
 5114 0bfa 0000     		.short	0
 5115 0bfc 0000     		.short	0
 5116 0bfe 0000     		.short	0
 5117 0c00 0000     		.short	0
 5118 0c02 0C00     		.short	12
 5119 0c04 0C00     		.short	12
 5120 0c06 0C00     		.short	12
 5121 0c08 0C00     		.short	12
 5122 0c0a 0C00     		.short	12
 5123 0c0c 0C00     		.short	12
 5124 0c0e 0000     		.short	0
 5125 0c10 0000     		.short	0
 5126 0c12 0000     		.short	0
 5127 0c14 0000     		.short	0
 5128 0c16 0000     		.short	0
 5129 0c18 0000     		.short	0
 5130 0c1a 0000     		.short	0
 5131 0c1c 0000     		.short	0
 5132 0c1e 0000     		.short	0
 5133 0c20 0000     		.short	0
 5134 0c22 0000     		.short	0
 5135 0c24 0000     		.short	0
 5136 0c26 0000     		.short	0
 5137 0c28 0000     		.short	0
 5138 0c2a 0000     		.short	0
 5139 0c2c 0000     		.short	0
 5140 0c2e 0000     		.short	0
 5141 0c30 0000     		.short	0
 5142 0c32 0000     		.short	0
 5143 0c34 0000     		.short	0
 5144 0c36 0000     		.short	0
 5145 0c38 0000     		.short	0
 5146 0c3a 0000     		.short	0
 5147 0c3c F003     		.short	1008
 5148 0c3e F807     		.short	2040
 5149 0c40 1C0C     		.short	3100
 5150 0c42 0C0C     		.short	3084
 5151 0c44 000F     		.short	3840
 5152 0c46 F00F     		.short	4080
 5153 0c48 F80C     		.short	3320
 5154 0c4a 0C0C     		.short	3084
 5155 0c4c 0C0C     		.short	3084
 5156 0c4e 1C0F     		.short	3868
 5157 0c50 F80F     		.short	4088
 5158 0c52 F018     		.short	6384
 5159 0c54 0000     		.short	0
 5160 0c56 0000     		.short	0
 5161 0c58 0000     		.short	0
 5162 0c5a 0000     		.short	0
 5163 0c5c 0000     		.short	0
 5164 0c5e 0000     		.short	0
 5165 0c60 0000     		.short	0
 5166 0c62 1800     		.short	24
 5167 0c64 1800     		.short	24
 5168 0c66 1800     		.short	24
 5169 0c68 1800     		.short	24
 5170 0c6a 1800     		.short	24
 5171 0c6c D803     		.short	984
 5172 0c6e F80F     		.short	4088
 5173 0c70 380C     		.short	3128
 5174 0c72 1818     		.short	6168
 5175 0c74 1818     		.short	6168
 5176 0c76 1818     		.short	6168
 5177 0c78 1818     		.short	6168
 5178 0c7a 1818     		.short	6168
 5179 0c7c 1818     		.short	6168
 5180 0c7e 380C     		.short	3128
 5181 0c80 F80F     		.short	4088
 5182 0c82 D803     		.short	984
 5183 0c84 0000     		.short	0
 5184 0c86 0000     		.short	0
 5185 0c88 0000     		.short	0
 5186 0c8a 0000     		.short	0
 5187 0c8c 0000     		.short	0
 5188 0c8e 0000     		.short	0
 5189 0c90 0000     		.short	0
 5190 0c92 0000     		.short	0
 5191 0c94 0000     		.short	0
 5192 0c96 0000     		.short	0
 5193 0c98 0000     		.short	0
 5194 0c9a 0000     		.short	0
 5195 0c9c C003     		.short	960
 5196 0c9e F007     		.short	2032
 5197 0ca0 300E     		.short	3632
 5198 0ca2 180C     		.short	3096
 5199 0ca4 1800     		.short	24
 5200 0ca6 1800     		.short	24
 5201 0ca8 1800     		.short	24
 5202 0caa 1800     		.short	24
 5203 0cac 180C     		.short	3096
 5204 0cae 300E     		.short	3632
 5205 0cb0 F007     		.short	2032
 5206 0cb2 C003     		.short	960
 5207 0cb4 0000     		.short	0
 5208 0cb6 0000     		.short	0
 5209 0cb8 0000     		.short	0
 5210 0cba 0000     		.short	0
 5211 0cbc 0000     		.short	0
 5212 0cbe 0000     		.short	0
 5213 0cc0 0000     		.short	0
 5214 0cc2 0018     		.short	6144
 5215 0cc4 0018     		.short	6144
 5216 0cc6 0018     		.short	6144
 5217 0cc8 0018     		.short	6144
 5218 0cca 0018     		.short	6144
 5219 0ccc C01B     		.short	7104
 5220 0cce F01F     		.short	8176
 5221 0cd0 301C     		.short	7216
 5222 0cd2 1818     		.short	6168
 5223 0cd4 1818     		.short	6168
 5224 0cd6 1818     		.short	6168
 5225 0cd8 1818     		.short	6168
 5226 0cda 1818     		.short	6168
 5227 0cdc 1818     		.short	6168
 5228 0cde 301C     		.short	7216
 5229 0ce0 F01F     		.short	8176
 5230 0ce2 C01B     		.short	7104
 5231 0ce4 0000     		.short	0
 5232 0ce6 0000     		.short	0
 5233 0ce8 0000     		.short	0
 5234 0cea 0000     		.short	0
 5235 0cec 0000     		.short	0
 5236 0cee 0000     		.short	0
 5237 0cf0 0000     		.short	0
 5238 0cf2 0000     		.short	0
 5239 0cf4 0000     		.short	0
 5240 0cf6 0000     		.short	0
 5241 0cf8 0000     		.short	0
 5242 0cfa 0000     		.short	0
 5243 0cfc C003     		.short	960
 5244 0cfe F00F     		.short	4080
 5245 0d00 300C     		.short	3120
 5246 0d02 1818     		.short	6168
 5247 0d04 F81F     		.short	8184
 5248 0d06 F81F     		.short	8184
 5249 0d08 1800     		.short	24
 5250 0d0a 1800     		.short	24
 5251 0d0c 3818     		.short	6200
 5252 0d0e 301C     		.short	7216
 5253 0d10 F00F     		.short	4080
 5254 0d12 C007     		.short	1984
 5255 0d14 0000     		.short	0
 5256 0d16 0000     		.short	0
 5257 0d18 0000     		.short	0
 5258 0d1a 0000     		.short	0
 5259 0d1c 0000     		.short	0
 5260 0d1e 0000     		.short	0
 5261 0d20 0000     		.short	0
 5262 0d22 800F     		.short	3968
 5263 0d24 C00F     		.short	4032
 5264 0d26 C000     		.short	192
 5265 0d28 C000     		.short	192
 5266 0d2a C000     		.short	192
 5267 0d2c F007     		.short	2032
 5268 0d2e F007     		.short	2032
 5269 0d30 C000     		.short	192
 5270 0d32 C000     		.short	192
 5271 0d34 C000     		.short	192
 5272 0d36 C000     		.short	192
 5273 0d38 C000     		.short	192
 5274 0d3a C000     		.short	192
 5275 0d3c C000     		.short	192
 5276 0d3e C000     		.short	192
 5277 0d40 C000     		.short	192
 5278 0d42 C000     		.short	192
 5279 0d44 0000     		.short	0
 5280 0d46 0000     		.short	0
 5281 0d48 0000     		.short	0
 5282 0d4a 0000     		.short	0
 5283 0d4c 0000     		.short	0
 5284 0d4e 0000     		.short	0
 5285 0d50 0000     		.short	0
 5286 0d52 0000     		.short	0
 5287 0d54 0000     		.short	0
 5288 0d56 0000     		.short	0
 5289 0d58 0000     		.short	0
 5290 0d5a 0000     		.short	0
 5291 0d5c E00D     		.short	3552
 5292 0d5e F80F     		.short	4088
 5293 0d60 180E     		.short	3608
 5294 0d62 0C0C     		.short	3084
 5295 0d64 0C0C     		.short	3084
 5296 0d66 0C0C     		.short	3084
 5297 0d68 0C0C     		.short	3084
 5298 0d6a 0C0C     		.short	3084
 5299 0d6c 0C0C     		.short	3084
 5300 0d6e 180E     		.short	3608
 5301 0d70 F80F     		.short	4088
 5302 0d72 E00D     		.short	3552
 5303 0d74 000C     		.short	3072
 5304 0d76 0C0C     		.short	3084
 5305 0d78 1C06     		.short	1564
 5306 0d7a F807     		.short	2040
 5307 0d7c F001     		.short	496
 5308 0d7e 0000     		.short	0
 5309 0d80 0000     		.short	0
 5310 0d82 1800     		.short	24
 5311 0d84 1800     		.short	24
 5312 0d86 1800     		.short	24
 5313 0d88 1800     		.short	24
 5314 0d8a 1800     		.short	24
 5315 0d8c D807     		.short	2008
 5316 0d8e F80F     		.short	4088
 5317 0d90 381C     		.short	7224
 5318 0d92 1818     		.short	6168
 5319 0d94 1818     		.short	6168
 5320 0d96 1818     		.short	6168
 5321 0d98 1818     		.short	6168
 5322 0d9a 1818     		.short	6168
 5323 0d9c 1818     		.short	6168
 5324 0d9e 1818     		.short	6168
 5325 0da0 1818     		.short	6168
 5326 0da2 1818     		.short	6168
 5327 0da4 0000     		.short	0
 5328 0da6 0000     		.short	0
 5329 0da8 0000     		.short	0
 5330 0daa 0000     		.short	0
 5331 0dac 0000     		.short	0
 5332 0dae 0000     		.short	0
 5333 0db0 0000     		.short	0
 5334 0db2 C000     		.short	192
 5335 0db4 C000     		.short	192
 5336 0db6 0000     		.short	0
 5337 0db8 0000     		.short	0
 5338 0dba 0000     		.short	0
 5339 0dbc C000     		.short	192
 5340 0dbe C000     		.short	192
 5341 0dc0 C000     		.short	192
 5342 0dc2 C000     		.short	192
 5343 0dc4 C000     		.short	192
 5344 0dc6 C000     		.short	192
 5345 0dc8 C000     		.short	192
 5346 0dca C000     		.short	192
 5347 0dcc C000     		.short	192
 5348 0dce C000     		.short	192
 5349 0dd0 C000     		.short	192
 5350 0dd2 C000     		.short	192
 5351 0dd4 0000     		.short	0
 5352 0dd6 0000     		.short	0
 5353 0dd8 0000     		.short	0
 5354 0dda 0000     		.short	0
 5355 0ddc 0000     		.short	0
 5356 0dde 0000     		.short	0
 5357 0de0 0000     		.short	0
 5358 0de2 C000     		.short	192
 5359 0de4 C000     		.short	192
 5360 0de6 0000     		.short	0
 5361 0de8 0000     		.short	0
 5362 0dea 0000     		.short	0
 5363 0dec C000     		.short	192
 5364 0dee C000     		.short	192
 5365 0df0 C000     		.short	192
 5366 0df2 C000     		.short	192
 5367 0df4 C000     		.short	192
 5368 0df6 C000     		.short	192
 5369 0df8 C000     		.short	192
 5370 0dfa C000     		.short	192
 5371 0dfc C000     		.short	192
 5372 0dfe C000     		.short	192
 5373 0e00 C000     		.short	192
 5374 0e02 C000     		.short	192
 5375 0e04 C000     		.short	192
 5376 0e06 C000     		.short	192
 5377 0e08 C000     		.short	192
 5378 0e0a F800     		.short	248
 5379 0e0c 7800     		.short	120
 5380 0e0e 0000     		.short	0
 5381 0e10 0000     		.short	0
 5382 0e12 0C00     		.short	12
 5383 0e14 0C00     		.short	12
 5384 0e16 0C00     		.short	12
 5385 0e18 0C00     		.short	12
 5386 0e1a 0C00     		.short	12
 5387 0e1c 0C0C     		.short	3084
 5388 0e1e 0C06     		.short	1548
 5389 0e20 0C03     		.short	780
 5390 0e22 8C01     		.short	396
 5391 0e24 CC00     		.short	204
 5392 0e26 6C00     		.short	108
 5393 0e28 FC00     		.short	252
 5394 0e2a 9C01     		.short	412
 5395 0e2c 8C03     		.short	908
 5396 0e2e 0C03     		.short	780
 5397 0e30 0C06     		.short	1548
 5398 0e32 0C0C     		.short	3084
 5399 0e34 0000     		.short	0
 5400 0e36 0000     		.short	0
 5401 0e38 0000     		.short	0
 5402 0e3a 0000     		.short	0
 5403 0e3c 0000     		.short	0
 5404 0e3e 0000     		.short	0
 5405 0e40 0000     		.short	0
 5406 0e42 C000     		.short	192
 5407 0e44 C000     		.short	192
 5408 0e46 C000     		.short	192
 5409 0e48 C000     		.short	192
 5410 0e4a C000     		.short	192
 5411 0e4c C000     		.short	192
 5412 0e4e C000     		.short	192
 5413 0e50 C000     		.short	192
 5414 0e52 C000     		.short	192
 5415 0e54 C000     		.short	192
 5416 0e56 C000     		.short	192
 5417 0e58 C000     		.short	192
 5418 0e5a C000     		.short	192
 5419 0e5c C000     		.short	192
 5420 0e5e C000     		.short	192
 5421 0e60 C000     		.short	192
 5422 0e62 C000     		.short	192
 5423 0e64 0000     		.short	0
 5424 0e66 0000     		.short	0
 5425 0e68 0000     		.short	0
 5426 0e6a 0000     		.short	0
 5427 0e6c 0000     		.short	0
 5428 0e6e 0000     		.short	0
 5429 0e70 0000     		.short	0
 5430 0e72 0000     		.short	0
 5431 0e74 0000     		.short	0
 5432 0e76 0000     		.short	0
 5433 0e78 0000     		.short	0
 5434 0e7a 0000     		.short	0
 5435 0e7c 7C3C     		.short	15484
 5436 0e7e FF7E     		.short	32511
 5437 0e80 C7E3     		.short	-7225
 5438 0e82 83C1     		.short	-15997
 5439 0e84 83C1     		.short	-15997
 5440 0e86 83C1     		.short	-15997
 5441 0e88 83C1     		.short	-15997
 5442 0e8a 83C1     		.short	-15997
 5443 0e8c 83C1     		.short	-15997
 5444 0e8e 83C1     		.short	-15997
 5445 0e90 83C1     		.short	-15997
 5446 0e92 83C1     		.short	-15997
 5447 0e94 0000     		.short	0
 5448 0e96 0000     		.short	0
 5449 0e98 0000     		.short	0
 5450 0e9a 0000     		.short	0
 5451 0e9c 0000     		.short	0
 5452 0e9e 0000     		.short	0
 5453 0ea0 0000     		.short	0
 5454 0ea2 0000     		.short	0
 5455 0ea4 0000     		.short	0
 5456 0ea6 0000     		.short	0
 5457 0ea8 0000     		.short	0
 5458 0eaa 0000     		.short	0
 5459 0eac 9807     		.short	1944
 5460 0eae F80F     		.short	4088
 5461 0eb0 381C     		.short	7224
 5462 0eb2 1818     		.short	6168
 5463 0eb4 1818     		.short	6168
 5464 0eb6 1818     		.short	6168
 5465 0eb8 1818     		.short	6168
 5466 0eba 1818     		.short	6168
 5467 0ebc 1818     		.short	6168
 5468 0ebe 1818     		.short	6168
 5469 0ec0 1818     		.short	6168
 5470 0ec2 1818     		.short	6168
 5471 0ec4 0000     		.short	0
 5472 0ec6 0000     		.short	0
 5473 0ec8 0000     		.short	0
 5474 0eca 0000     		.short	0
 5475 0ecc 0000     		.short	0
 5476 0ece 0000     		.short	0
 5477 0ed0 0000     		.short	0
 5478 0ed2 0000     		.short	0
 5479 0ed4 0000     		.short	0
 5480 0ed6 0000     		.short	0
 5481 0ed8 0000     		.short	0
 5482 0eda 0000     		.short	0
 5483 0edc C003     		.short	960
 5484 0ede F00F     		.short	4080
 5485 0ee0 300C     		.short	3120
 5486 0ee2 1818     		.short	6168
 5487 0ee4 1818     		.short	6168
 5488 0ee6 1818     		.short	6168
 5489 0ee8 1818     		.short	6168
 5490 0eea 1818     		.short	6168
 5491 0eec 1818     		.short	6168
 5492 0eee 300C     		.short	3120
 5493 0ef0 F00F     		.short	4080
 5494 0ef2 C003     		.short	960
 5495 0ef4 0000     		.short	0
 5496 0ef6 0000     		.short	0
 5497 0ef8 0000     		.short	0
 5498 0efa 0000     		.short	0
 5499 0efc 0000     		.short	0
 5500 0efe 0000     		.short	0
 5501 0f00 0000     		.short	0
 5502 0f02 0000     		.short	0
 5503 0f04 0000     		.short	0
 5504 0f06 0000     		.short	0
 5505 0f08 0000     		.short	0
 5506 0f0a 0000     		.short	0
 5507 0f0c D803     		.short	984
 5508 0f0e F80F     		.short	4088
 5509 0f10 380C     		.short	3128
 5510 0f12 1818     		.short	6168
 5511 0f14 1818     		.short	6168
 5512 0f16 1818     		.short	6168
 5513 0f18 1818     		.short	6168
 5514 0f1a 1818     		.short	6168
 5515 0f1c 1818     		.short	6168
 5516 0f1e 380C     		.short	3128
 5517 0f20 F80F     		.short	4088
 5518 0f22 D803     		.short	984
 5519 0f24 1800     		.short	24
 5520 0f26 1800     		.short	24
 5521 0f28 1800     		.short	24
 5522 0f2a 1800     		.short	24
 5523 0f2c 1800     		.short	24
 5524 0f2e 0000     		.short	0
 5525 0f30 0000     		.short	0
 5526 0f32 0000     		.short	0
 5527 0f34 0000     		.short	0
 5528 0f36 0000     		.short	0
 5529 0f38 0000     		.short	0
 5530 0f3a 0000     		.short	0
 5531 0f3c C01B     		.short	7104
 5532 0f3e F01F     		.short	8176
 5533 0f40 301C     		.short	7216
 5534 0f42 1818     		.short	6168
 5535 0f44 1818     		.short	6168
 5536 0f46 1818     		.short	6168
 5537 0f48 1818     		.short	6168
 5538 0f4a 1818     		.short	6168
 5539 0f4c 1818     		.short	6168
 5540 0f4e 301C     		.short	7216
 5541 0f50 F01F     		.short	8176
 5542 0f52 C01B     		.short	7104
 5543 0f54 0018     		.short	6144
 5544 0f56 0018     		.short	6144
 5545 0f58 0018     		.short	6144
 5546 0f5a 0018     		.short	6144
 5547 0f5c 0018     		.short	6144
 5548 0f5e 0000     		.short	0
 5549 0f60 0000     		.short	0
 5550 0f62 0000     		.short	0
 5551 0f64 0000     		.short	0
 5552 0f66 0000     		.short	0
 5553 0f68 0000     		.short	0
 5554 0f6a 0000     		.short	0
 5555 0f6c B007     		.short	1968
 5556 0f6e F003     		.short	1008
 5557 0f70 7000     		.short	112
 5558 0f72 3000     		.short	48
 5559 0f74 3000     		.short	48
 5560 0f76 3000     		.short	48
 5561 0f78 3000     		.short	48
 5562 0f7a 3000     		.short	48
 5563 0f7c 3000     		.short	48
 5564 0f7e 3000     		.short	48
 5565 0f80 3000     		.short	48
 5566 0f82 3000     		.short	48
 5567 0f84 0000     		.short	0
 5568 0f86 0000     		.short	0
 5569 0f88 0000     		.short	0
 5570 0f8a 0000     		.short	0
 5571 0f8c 0000     		.short	0
 5572 0f8e 0000     		.short	0
 5573 0f90 0000     		.short	0
 5574 0f92 0000     		.short	0
 5575 0f94 0000     		.short	0
 5576 0f96 0000     		.short	0
 5577 0f98 0000     		.short	0
 5578 0f9a 0000     		.short	0
 5579 0f9c E003     		.short	992
 5580 0f9e F003     		.short	1008
 5581 0fa0 380E     		.short	3640
 5582 0fa2 180C     		.short	3096
 5583 0fa4 3800     		.short	56
 5584 0fa6 F003     		.short	1008
 5585 0fa8 C007     		.short	1984
 5586 0faa 000C     		.short	3072
 5587 0fac 180C     		.short	3096
 5588 0fae 380E     		.short	3640
 5589 0fb0 F007     		.short	2032
 5590 0fb2 E003     		.short	992
 5591 0fb4 0000     		.short	0
 5592 0fb6 0000     		.short	0
 5593 0fb8 0000     		.short	0
 5594 0fba 0000     		.short	0
 5595 0fbc 0000     		.short	0
 5596 0fbe 0000     		.short	0
 5597 0fc0 0000     		.short	0
 5598 0fc2 0000     		.short	0
 5599 0fc4 8000     		.short	128
 5600 0fc6 C000     		.short	192
 5601 0fc8 C000     		.short	192
 5602 0fca C000     		.short	192
 5603 0fcc F007     		.short	2032
 5604 0fce F007     		.short	2032
 5605 0fd0 C000     		.short	192
 5606 0fd2 C000     		.short	192
 5607 0fd4 C000     		.short	192
 5608 0fd6 C000     		.short	192
 5609 0fd8 C000     		.short	192
 5610 0fda C000     		.short	192
 5611 0fdc C000     		.short	192
 5612 0fde C000     		.short	192
 5613 0fe0 C007     		.short	1984
 5614 0fe2 8007     		.short	1920
 5615 0fe4 0000     		.short	0
 5616 0fe6 0000     		.short	0
 5617 0fe8 0000     		.short	0
 5618 0fea 0000     		.short	0
 5619 0fec 0000     		.short	0
 5620 0fee 0000     		.short	0
 5621 0ff0 0000     		.short	0
 5622 0ff2 0000     		.short	0
 5623 0ff4 0000     		.short	0
 5624 0ff6 0000     		.short	0
 5625 0ff8 0000     		.short	0
 5626 0ffa 0000     		.short	0
 5627 0ffc 1818     		.short	6168
 5628 0ffe 1818     		.short	6168
 5629 1000 1818     		.short	6168
 5630 1002 1818     		.short	6168
 5631 1004 1818     		.short	6168
 5632 1006 1818     		.short	6168
 5633 1008 1818     		.short	6168
 5634 100a 1818     		.short	6168
 5635 100c 1818     		.short	6168
 5636 100e 381C     		.short	7224
 5637 1010 F01F     		.short	8176
 5638 1012 E019     		.short	6624
 5639 1014 0000     		.short	0
 5640 1016 0000     		.short	0
 5641 1018 0000     		.short	0
 5642 101a 0000     		.short	0
 5643 101c 0000     		.short	0
 5644 101e 0000     		.short	0
 5645 1020 0000     		.short	0
 5646 1022 0000     		.short	0
 5647 1024 0000     		.short	0
 5648 1026 0000     		.short	0
 5649 1028 0000     		.short	0
 5650 102a 0000     		.short	0
 5651 102c 0C18     		.short	6156
 5652 102e 180C     		.short	3096
 5653 1030 180C     		.short	3096
 5654 1032 180C     		.short	3096
 5655 1034 3006     		.short	1584
 5656 1036 3006     		.short	1584
 5657 1038 3006     		.short	1584
 5658 103a 6003     		.short	864
 5659 103c 6003     		.short	864
 5660 103e 6003     		.short	864
 5661 1040 C001     		.short	448
 5662 1042 C001     		.short	448
 5663 1044 0000     		.short	0
 5664 1046 0000     		.short	0
 5665 1048 0000     		.short	0
 5666 104a 0000     		.short	0
 5667 104c 0000     		.short	0
 5668 104e 0000     		.short	0
 5669 1050 0000     		.short	0
 5670 1052 0000     		.short	0
 5671 1054 0000     		.short	0
 5672 1056 0000     		.short	0
 5673 1058 0000     		.short	0
 5674 105a 0000     		.short	0
 5675 105c C141     		.short	16833
 5676 105e C141     		.short	16833
 5677 1060 C361     		.short	25027
 5678 1062 6363     		.short	25443
 5679 1064 6363     		.short	25443
 5680 1066 6363     		.short	25443
 5681 1068 3636     		.short	13878
 5682 106a 3636     		.short	13878
 5683 106c 3636     		.short	13878
 5684 106e 1C1C     		.short	7196
 5685 1070 1C1C     		.short	7196
 5686 1072 1C1C     		.short	7196
 5687 1074 0000     		.short	0
 5688 1076 0000     		.short	0
 5689 1078 0000     		.short	0
 5690 107a 0000     		.short	0
 5691 107c 0000     		.short	0
 5692 107e 0000     		.short	0
 5693 1080 0000     		.short	0
 5694 1082 0000     		.short	0
 5695 1084 0000     		.short	0
 5696 1086 0000     		.short	0
 5697 1088 0000     		.short	0
 5698 108a 0000     		.short	0
 5699 108c 1C38     		.short	14364
 5700 108e 381C     		.short	7224
 5701 1090 300C     		.short	3120
 5702 1092 6006     		.short	1632
 5703 1094 C003     		.short	960
 5704 1096 C003     		.short	960
 5705 1098 C003     		.short	960
 5706 109a C003     		.short	960
 5707 109c 6006     		.short	1632
 5708 109e 300C     		.short	3120
 5709 10a0 381C     		.short	7224
 5710 10a2 1C38     		.short	14364
 5711 10a4 0000     		.short	0
 5712 10a6 0000     		.short	0
 5713 10a8 0000     		.short	0
 5714 10aa 0000     		.short	0
 5715 10ac 0000     		.short	0
 5716 10ae 0000     		.short	0
 5717 10b0 0000     		.short	0
 5718 10b2 0000     		.short	0
 5719 10b4 0000     		.short	0
 5720 10b6 0000     		.short	0
 5721 10b8 0000     		.short	0
 5722 10ba 0000     		.short	0
 5723 10bc 1830     		.short	12312
 5724 10be 3018     		.short	6192
 5725 10c0 3018     		.short	6192
 5726 10c2 7018     		.short	6256
 5727 10c4 600C     		.short	3168
 5728 10c6 600C     		.short	3168
 5729 10c8 E00C     		.short	3296
 5730 10ca C006     		.short	1728
 5731 10cc C006     		.short	1728
 5732 10ce 8003     		.short	896
 5733 10d0 8003     		.short	896
 5734 10d2 8003     		.short	896
 5735 10d4 8001     		.short	384
 5736 10d6 8001     		.short	384
 5737 10d8 C001     		.short	448
 5738 10da F000     		.short	240
 5739 10dc 7000     		.short	112
 5740 10de 0000     		.short	0
 5741 10e0 0000     		.short	0
 5742 10e2 0000     		.short	0
 5743 10e4 0000     		.short	0
 5744 10e6 0000     		.short	0
 5745 10e8 0000     		.short	0
 5746 10ea 0000     		.short	0
 5747 10ec FC1F     		.short	8188
 5748 10ee FC1F     		.short	8188
 5749 10f0 000C     		.short	3072
 5750 10f2 0006     		.short	1536
 5751 10f4 0003     		.short	768
 5752 10f6 8001     		.short	384
 5753 10f8 C000     		.short	192
 5754 10fa 6000     		.short	96
 5755 10fc 3000     		.short	48
 5756 10fe 1800     		.short	24
 5757 1100 FC1F     		.short	8188
 5758 1102 FC1F     		.short	8188
 5759 1104 0000     		.short	0
 5760 1106 0000     		.short	0
 5761 1108 0000     		.short	0
 5762 110a 0000     		.short	0
 5763 110c 0000     		.short	0
 5764 110e 0000     		.short	0
 5765 1110 0000     		.short	0
 5766 1112 0003     		.short	768
 5767 1114 8001     		.short	384
 5768 1116 C000     		.short	192
 5769 1118 C000     		.short	192
 5770 111a C000     		.short	192
 5771 111c C000     		.short	192
 5772 111e C000     		.short	192
 5773 1120 C000     		.short	192
 5774 1122 6000     		.short	96
 5775 1124 6000     		.short	96
 5776 1126 3000     		.short	48
 5777 1128 6000     		.short	96
 5778 112a 4000     		.short	64
 5779 112c C000     		.short	192
 5780 112e C000     		.short	192
 5781 1130 C000     		.short	192
 5782 1132 C000     		.short	192
 5783 1134 C000     		.short	192
 5784 1136 C000     		.short	192
 5785 1138 8001     		.short	384
 5786 113a 0003     		.short	768
 5787 113c 0000     		.short	0
 5788 113e 0000     		.short	0
 5789 1140 0000     		.short	0
 5790 1142 8001     		.short	384
 5791 1144 8001     		.short	384
 5792 1146 8001     		.short	384
 5793 1148 8001     		.short	384
 5794 114a 8001     		.short	384
 5795 114c 8001     		.short	384
 5796 114e 8001     		.short	384
 5797 1150 8001     		.short	384
 5798 1152 8001     		.short	384
 5799 1154 8001     		.short	384
 5800 1156 8001     		.short	384
 5801 1158 8001     		.short	384
 5802 115a 8001     		.short	384
 5803 115c 8001     		.short	384
 5804 115e 8001     		.short	384
 5805 1160 8001     		.short	384
 5806 1162 8001     		.short	384
 5807 1164 8001     		.short	384
 5808 1166 8001     		.short	384
 5809 1168 8001     		.short	384
 5810 116a 8001     		.short	384
 5811 116c 8001     		.short	384
 5812 116e 0000     		.short	0
 5813 1170 0000     		.short	0
 5814 1172 6000     		.short	96
 5815 1174 C000     		.short	192
 5816 1176 C001     		.short	448
 5817 1178 8001     		.short	384
 5818 117a 8001     		.short	384
 5819 117c 8001     		.short	384
 5820 117e 8001     		.short	384
 5821 1180 8001     		.short	384
 5822 1182 0003     		.short	768
 5823 1184 0003     		.short	768
 5824 1186 0006     		.short	1536
 5825 1188 0003     		.short	768
 5826 118a 0001     		.short	256
 5827 118c 8001     		.short	384
 5828 118e 8001     		.short	384
 5829 1190 8001     		.short	384
 5830 1192 8001     		.short	384
 5831 1194 8001     		.short	384
 5832 1196 8001     		.short	384
 5833 1198 C000     		.short	192
 5834 119a 6000     		.short	96
 5835 119c 0000     		.short	0
 5836 119e 0000     		.short	0
 5837 11a0 0000     		.short	0
 5838 11a2 0000     		.short	0
 5839 11a4 0000     		.short	0
 5840 11a6 0000     		.short	0
 5841 11a8 0000     		.short	0
 5842 11aa 0000     		.short	0
 5843 11ac 0000     		.short	0
 5844 11ae 0000     		.short	0
 5845 11b0 F010     		.short	4336
 5846 11b2 F81F     		.short	8184
 5847 11b4 080F     		.short	3848
 5848 11b6 0000     		.short	0
 5849 11b8 0000     		.short	0
 5850 11ba 0000     		.short	0
 5851 11bc 0000     		.short	0
 5852 11be 0000     		.short	0
 5853 11c0 0000     		.short	0
 5854 11c2 0000     		.short	0
 5855 11c4 0000     		.short	0
 5856 11c6 0000     		.short	0
 5857 11c8 0000     		.short	0
 5858 11ca 0000     		.short	0
 5859 11cc 0000     		.short	0
 5860 11ce 0000     		.short	0
 5861 11d0 0000     		.short	0
 5862 11d2 0000     		.short	0
 5863 11d4 0000     		.short	0
 5864 11d6 0000     		.short	0
 5865 11d8 0000     		.short	0
 5866 11da 0000     		.short	0
 5867 11dc 0000     		.short	0
 5868 11de 0000     		.short	0
 5869 11e0 0000     		.short	0
 5870 11e2 0000     		.short	0
 5871 11e4 0000     		.short	0
 5872 11e6 0000     		.short	0
 5873 11e8 0000     		.short	0
 5874 11ea 0000     		.short	0
 5875 11ec 0000     		.short	0
 5876 11ee 0000     		.short	0
 5877 11f0 0000     		.short	0
 5878 11f2 0000     		.short	0
 5879 11f4 0000     		.short	0
 5880 11f6 0000     		.short	0
 5881 11f8 0000     		.short	0
 5882 11fa 0000     		.short	0
 5883 11fc 0000     		.short	0
 5884 11fe 0000     		.short	0
 5885 1200 0000     		.short	0
 5886 1202 0000     		.short	0
 5887 1204 0000     		.short	0
 5888 1206 0000     		.short	0
 5889 1208 0000     		.short	0
 5890 120a C003     		.short	960
 5891 120c 300C     		.short	3120
 5892 120e 0810     		.short	4104
 5893 1210 0420     		.short	8196
 5894 1212 0420     		.short	8196
 5895 1214 0240     		.short	16386
 5896 1216 0240     		.short	16386
 5897 1218 0240     		.short	16386
 5898 121a 0240     		.short	16386
 5899 121c 0240     		.short	16386
 5900 121e 0420     		.short	8196
 5901 1220 0420     		.short	8196
 5902 1222 0810     		.short	4104
 5903 1224 300C     		.short	3120
 5904 1226 C003     		.short	960
 5905 1228 0000     		.short	0
 5906 122a 0000     		.short	0
 5907 122c 0000     		.short	0
 5908 122e 0000     		.short	0
 5909 1230 0000     		.short	0
 5910 1232 0000     		.short	0
 5911 1234 0000     		.short	0
 5912 1236 0000     		.short	0
 5913 1238 0000     		.short	0
 5914 123a C003     		.short	960
 5915 123c F00F     		.short	4080
 5916 123e F81F     		.short	8184
 5917 1240 FC3F     		.short	16380
 5918 1242 FC3F     		.short	16380
 5919 1244 FE7F     		.short	32766
 5920 1246 FE7F     		.short	32766
 5921 1248 FE7F     		.short	32766
 5922 124a FE7F     		.short	32766
 5923 124c FE7F     		.short	32766
 5924 124e FC3F     		.short	16380
 5925 1250 FC3F     		.short	16380
 5926 1252 F81F     		.short	8184
 5927 1254 F00F     		.short	4080
 5928 1256 C003     		.short	960
 5929 1258 0000     		.short	0
 5930 125a 0000     		.short	0
 5931 125c 0000     		.short	0
 5932 125e 0000     		.short	0
 5933 1260 0000     		.short	0
 5934 1262 0000     		.short	0
 5935 1264 0000     		.short	0
 5936 1266 0000     		.short	0
 5937 1268 0000     		.short	0
 5938 126a 0000     		.short	0
 5939 126c 0000     		.short	0
 5940 126e E007     		.short	2016
 5941 1270 F00F     		.short	4080
 5942 1272 1818     		.short	6168
 5943 1274 1818     		.short	6168
 5944 1276 1818     		.short	6168
 5945 1278 1818     		.short	6168
 5946 127a 1818     		.short	6168
 5947 127c 1818     		.short	6168
 5948 127e F00F     		.short	4080
 5949 1280 E007     		.short	2016
 5950 1282 0000     		.short	0
 5951 1284 0000     		.short	0
 5952 1286 0000     		.short	0
 5953 1288 0000     		.short	0
 5954 128a 0000     		.short	0
 5955 128c 0000     		.short	0
 5956 128e 0000     		.short	0
 5957 1290 0000     		.short	0
 5958 1292 0000     		.short	0
 5959 1294 0000     		.short	0
 5960 1296 0000     		.short	0
 5961 1298 0000     		.short	0
 5962 129a 0000     		.short	0
 5963 129c 0000     		.short	0
 5964 129e E007     		.short	2016
 5965 12a0 F00F     		.short	4080
 5966 12a2 F81F     		.short	8184
 5967 12a4 F81F     		.short	8184
 5968 12a6 F81F     		.short	8184
 5969 12a8 F81F     		.short	8184
 5970 12aa F81F     		.short	8184
 5971 12ac F81F     		.short	8184
 5972 12ae F00F     		.short	4080
 5973 12b0 E007     		.short	2016
 5974 12b2 0000     		.short	0
 5975 12b4 0000     		.short	0
 5976 12b6 0000     		.short	0
 5977 12b8 0000     		.short	0
 5978 12ba 0000     		.short	0
 5979 12bc 0000     		.short	0
 5980 12be 0000     		.short	0
 5981 12c0 0000     		.short	0
 5982 12c2 0000     		.short	0
 5983 12c4 0000     		.short	0
 5984 12c6 0000     		.short	0
 5985 12c8 0000     		.short	0
 5986 12ca 0000     		.short	0
 5987 12cc 0000     		.short	0
 5988 12ce 0000     		.short	0
 5989 12d0 0000     		.short	0
 5990 12d2 0000     		.short	0
 5991 12d4 0000     		.short	0
 5992 12d6 0000     		.short	0
 5993 12d8 8001     		.short	384
 5994 12da C003     		.short	960
 5995 12dc 6006     		.short	1632
 5996 12de 300C     		.short	3120
 5997 12e0 1818     		.short	6168
 5998 12e2 1818     		.short	6168
 5999 12e4 F81F     		.short	8184
 6000 12e6 F81F     		.short	8184
 6001 12e8 0000     		.short	0
 6002 12ea 0000     		.short	0
 6003 12ec 0000     		.short	0
 6004 12ee 0000     		.short	0
 6005 12f0 0000     		.short	0
 6006 12f2 0000     		.short	0
 6007 12f4 0000     		.short	0
 6008 12f6 0000     		.short	0
 6009 12f8 0000     		.short	0
 6010 12fa 0000     		.short	0
 6011 12fc 0000     		.short	0
 6012 12fe 0000     		.short	0
 6013 1300 0000     		.short	0
 6014 1302 0000     		.short	0
 6015 1304 0000     		.short	0
 6016 1306 0000     		.short	0
 6017 1308 8001     		.short	384
 6018 130a C003     		.short	960
 6019 130c E007     		.short	2016
 6020 130e F00F     		.short	4080
 6021 1310 F81F     		.short	8184
 6022 1312 F81F     		.short	8184
 6023 1314 F81F     		.short	8184
 6024 1316 F81F     		.short	8184
 6025 1318 0000     		.short	0
 6026 131a 0000     		.short	0
 6027 131c 0000     		.short	0
 6028 131e 0000     		.short	0
 6029 1320 0000     		.short	0
 6030 1322 0000     		.short	0
 6031 1324 0000     		.short	0
 6032 1326 0000     		.short	0
 6033 1328 F81F     		.short	8184
 6034 132a F81F     		.short	8184
 6035 132c 1818     		.short	6168
 6036 132e 1818     		.short	6168
 6037 1330 300C     		.short	3120
 6038 1332 6006     		.short	1632
 6039 1334 C003     		.short	960
 6040 1336 8001     		.short	384
 6041 1338 0000     		.short	0
 6042 133a 0000     		.short	0
 6043 133c 0000     		.short	0
 6044 133e 0000     		.short	0
 6045 1340 0000     		.short	0
 6046 1342 0000     		.short	0
 6047 1344 0000     		.short	0
 6048 1346 0000     		.short	0
 6049 1348 0000     		.short	0
 6050 134a 0000     		.short	0
 6051 134c 0000     		.short	0
 6052 134e 0000     		.short	0
 6053 1350 0000     		.short	0
 6054 1352 0000     		.short	0
 6055 1354 0000     		.short	0
 6056 1356 0000     		.short	0
 6057 1358 F81F     		.short	8184
 6058 135a F81F     		.short	8184
 6059 135c F81F     		.short	8184
 6060 135e F81F     		.short	8184
 6061 1360 F00F     		.short	4080
 6062 1362 E007     		.short	2016
 6063 1364 C003     		.short	960
 6064 1366 8001     		.short	384
 6065 1368 0000     		.short	0
 6066 136a 0000     		.short	0
 6067 136c 0000     		.short	0
 6068 136e 0000     		.short	0
 6069 1370 0000     		.short	0
 6070 1372 0000     		.short	0
 6071 1374 0000     		.short	0
 6072 1376 0000     		.short	0
 6073 1378 0000     		.short	0
 6074 137a 0000     		.short	0
 6075 137c 0000     		.short	0
 6076 137e 0000     		.short	0
 6077 1380 0000     		.short	0
 6078 1382 0000     		.short	0
 6079 1384 0000     		.short	0
 6080 1386 0000     		.short	0
 6081 1388 0000     		.short	0
 6082 138a 0000     		.short	0
 6083 138c 0000     		.short	0
 6084 138e E001     		.short	480
 6085 1390 F001     		.short	496
 6086 1392 9801     		.short	408
 6087 1394 8C01     		.short	396
 6088 1396 8601     		.short	390
 6089 1398 8601     		.short	390
 6090 139a 8C01     		.short	396
 6091 139c 9801     		.short	408
 6092 139e F001     		.short	496
 6093 13a0 E001     		.short	480
 6094 13a2 0000     		.short	0
 6095 13a4 0000     		.short	0
 6096 13a6 0000     		.short	0
 6097 13a8 0000     		.short	0
 6098 13aa 0000     		.short	0
 6099 13ac 0000     		.short	0
 6100 13ae 0000     		.short	0
 6101 13b0 0000     		.short	0
 6102 13b2 0000     		.short	0
 6103 13b4 0000     		.short	0
 6104 13b6 0000     		.short	0
 6105 13b8 0000     		.short	0
 6106 13ba 0000     		.short	0
 6107 13bc 0000     		.short	0
 6108 13be E001     		.short	480
 6109 13c0 F001     		.short	496
 6110 13c2 F801     		.short	504
 6111 13c4 FC01     		.short	508
 6112 13c6 FE01     		.short	510
 6113 13c8 FE01     		.short	510
 6114 13ca FC01     		.short	508
 6115 13cc F801     		.short	504
 6116 13ce F001     		.short	496
 6117 13d0 E001     		.short	480
 6118 13d2 0000     		.short	0
 6119 13d4 0000     		.short	0
 6120 13d6 0000     		.short	0
 6121 13d8 0000     		.short	0
 6122 13da 0000     		.short	0
 6123 13dc 0000     		.short	0
 6124 13de 0000     		.short	0
 6125 13e0 0000     		.short	0
 6126 13e2 0000     		.short	0
 6127 13e4 0000     		.short	0
 6128 13e6 0000     		.short	0
 6129 13e8 0000     		.short	0
 6130 13ea 0000     		.short	0
 6131 13ec 0000     		.short	0
 6132 13ee 8007     		.short	1920
 6133 13f0 800F     		.short	3968
 6134 13f2 8019     		.short	6528
 6135 13f4 8031     		.short	12672
 6136 13f6 8061     		.short	24960
 6137 13f8 8061     		.short	24960
 6138 13fa 8031     		.short	12672
 6139 13fc 8019     		.short	6528
 6140 13fe 800F     		.short	3968
 6141 1400 8007     		.short	1920
 6142 1402 0000     		.short	0
 6143 1404 0000     		.short	0
 6144 1406 0000     		.short	0
 6145 1408 0000     		.short	0
 6146 140a 0000     		.short	0
 6147 140c 0000     		.short	0
 6148 140e 0000     		.short	0
 6149 1410 0000     		.short	0
 6150 1412 0000     		.short	0
 6151 1414 0000     		.short	0
 6152 1416 0000     		.short	0
 6153 1418 0000     		.short	0
 6154 141a 0000     		.short	0
 6155 141c 0000     		.short	0
 6156 141e 8007     		.short	1920
 6157 1420 800F     		.short	3968
 6158 1422 801F     		.short	8064
 6159 1424 803F     		.short	16256
 6160 1426 807F     		.short	32640
 6161 1428 807F     		.short	32640
 6162 142a 803F     		.short	16256
 6163 142c 801F     		.short	8064
 6164 142e 800F     		.short	3968
 6165 1430 8007     		.short	1920
 6166 1432 0000     		.short	0
 6167 1434 0000     		.short	0
 6168 1436 0000     		.short	0
 6169 1438 0000     		.short	0
 6170 143a 0000     		.short	0
 6171 143c 0000     		.short	0
 6172 143e 0000     		.short	0
 6173 1440 0000     		.short	0
 6174 1442 C001     		.short	448
 6175 1444 2002     		.short	544
 6176 1446 2002     		.short	544
 6177 1448 4001     		.short	320
 6178 144a 3006     		.short	1584
 6179 144c 0808     		.short	2056
 6180 144e 0808     		.short	2056
 6181 1450 0808     		.short	2056
 6182 1452 0808     		.short	2056
 6183 1454 0808     		.short	2056
 6184 1456 0808     		.short	2056
 6185 1458 0808     		.short	2056
 6186 145a 2002     		.short	544
 6187 145c 2002     		.short	544
 6188 145e 2002     		.short	544
 6189 1460 2002     		.short	544
 6190 1462 2002     		.short	544
 6191 1464 2002     		.short	544
 6192 1466 2002     		.short	544
 6193 1468 2002     		.short	544
 6194 146a 2002     		.short	544
 6195 146c 2002     		.short	544
 6196 146e 0000     		.short	0
 6197 1470 0000     		.short	0
 6198 1472 C001     		.short	448
 6199 1474 E003     		.short	992
 6200 1476 E003     		.short	992
 6201 1478 C001     		.short	448
 6202 147a F007     		.short	2032
 6203 147c D80D     		.short	3544
 6204 147e D80D     		.short	3544
 6205 1480 D80D     		.short	3544
 6206 1482 D80D     		.short	3544
 6207 1484 D80D     		.short	3544
 6208 1486 D80D     		.short	3544
 6209 1488 D80D     		.short	3544
 6210 148a 6003     		.short	864
 6211 148c 6003     		.short	864
 6212 148e 6003     		.short	864
 6213 1490 6003     		.short	864
 6214 1492 6003     		.short	864
 6215 1494 6003     		.short	864
 6216 1496 6003     		.short	864
 6217 1498 6003     		.short	864
 6218 149a 6003     		.short	864
 6219 149c 6003     		.short	864
 6220 149e 0000     		.short	0
 6221 14a0 0000     		.short	0
 6222 14a2 C001     		.short	448
 6223 14a4 2002     		.short	544
 6224 14a6 2002     		.short	544
 6225 14a8 4001     		.short	320
 6226 14aa 3006     		.short	1584
 6227 14ac 0808     		.short	2056
 6228 14ae 0808     		.short	2056
 6229 14b0 0808     		.short	2056
 6230 14b2 0410     		.short	4100
 6231 14b4 0220     		.short	8194
 6232 14b6 0220     		.short	8194
 6233 14b8 4001     		.short	320
 6234 14ba 2002     		.short	544
 6235 14bc 2002     		.short	544
 6236 14be 1004     		.short	1040
 6237 14c0 0808     		.short	2056
 6238 14c2 0808     		.short	2056
 6239 14c4 0410     		.short	4100
 6240 14c6 0410     		.short	4100
 6241 14c8 0420     		.short	8196
 6242 14ca 0440     		.short	16388
 6243 14cc 0000     		.short	0
 6244 14ce 0000     		.short	0
 6245 14d0 0000     		.short	0
 6246 14d2 C001     		.short	448
 6247 14d4 E003     		.short	992
 6248 14d6 E003     		.short	992
 6249 14d8 C001     		.short	448
 6250 14da F007     		.short	2032
 6251 14dc D80D     		.short	3544
 6252 14de D80D     		.short	3544
 6253 14e0 D80D     		.short	3544
 6254 14e2 CC19     		.short	6604
 6255 14e4 C631     		.short	12742
 6256 14e6 C261     		.short	25026
 6257 14e8 C001     		.short	448
 6258 14ea 6003     		.short	864
 6259 14ec 6003     		.short	864
 6260 14ee 7006     		.short	1648
 6261 14f0 380C     		.short	3128
 6262 14f2 180C     		.short	3096
 6263 14f4 0C18     		.short	6156
 6264 14f6 0C18     		.short	6156
 6265 14f8 0C30     		.short	12300
 6266 14fa 0C60     		.short	24588
 6267 14fc 0000     		.short	0
 6268 14fe 0000     		.short	0
 6269              		.section	.rodata.str1.1,"aMS",%progbits,1
 6270              	.LC0:
 6271 0000 20202020 		.ascii	"                    \000"
 6271      20202020 
 6271      20202020 
 6271      20202020 
 6271      20202020 
 6272              		.data
 6273              		.align	1
 6274              		.set	.LANCHOR1,. + 0
 6277              	BackColor:
 6278 0000 FFFF     		.short	-1
 6279              		.bss
 6280              		.align	1
 6281              		.set	.LANCHOR0,. + 0
 6284              	TextColor:
 6285 0000 0000     		.space	2
 6286              		.text
 6287              	.Letext0:
 6288              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q2\\bin\\../lib/gcc/arm-none-eab
 6289              		.file 3 "../CM3 Core/LPC17xx.h"
 6290              		.file 4 "../Header Files/lpc_types.h"
 6291              		.file 5 "../Header Files/lpc17xx_uart.h"
 6292              		.file 6 "../Header Files/lpc17xx_ssp.h"
 6293              		.file 7 "../Header Files/lpc_ssp_glcd.h"
 6294              		.file 8 "<built-in>"
 6295              		.file 9 "../CM3 Core/core_cm3.h"
 6296              		.file 10 "../Header Files/lpc17xx_i2c.h"
 6297              		.file 11 "../Header Files/Font_24x16.h"
 6298              		.file 12 "../Header Files/lpc17xx_gpio.h"
 6299              		.file 13 "../Header Files/lpc17xx_systick.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lpc_ssp_glcd.c
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:18     .text:00000000 $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:22     .text:00000000 wr_dat_start
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:52     .text:00000018 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:56     .text:0000001c $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:60     .text:0000001c wr_dat_stop
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:77     .text:00000024 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:81     .text:00000028 $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:85     .text:00000028 wr_dat_only
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:133    .text:00000048 $d
                            *COM*:00000040 Tx_Buf1
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:138    .text:00000050 $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:143    .text:00000050 GLCD_Backlight
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:178    .text:00000066 GLCD_Reset
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:223    .text:00000090 GLCD_SetTextColor
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:238    .text:00000098 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:242    .text:0000009c $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:247    .text:0000009c GLCD_SetBackColor
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:262    .text:000000a4 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:266    .text:000000a8 $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:271    .text:000000a8 Write_Command_Glcd
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:356    .text:00000100 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:360    .text:00000104 $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:365    .text:00000104 Write_Data_Glcd
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:438    .text:00000144 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:443    .text:0000014c $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:448    .text:0000014c GLCD_Bargraph
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:582    .text:000001f4 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:587    .text:000001fc $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:592    .text:000001fc GLCD_Draw_Char
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:715    .text:00000294 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:720    .text:0000029c $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:725    .text:0000029c GLCD_Display_Char
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:763    .text:000002c0 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:767    .text:000002c4 $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:772    .text:000002c4 GLCD_PutPixel
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:828    .text:000002f4 GLCD_Text
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:1052   .text:0000041e GLCD_Line
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:1260   .text:00000506 GLCD_Triangle
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:2081   .text:000009b2 GLCD_Frame
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:2245   .text:00000ad0 GLCD_Circle
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:2572   .text:00000ca2 GLCD_Window
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:2645   .text:00000cec GLCD_Display_String
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:2711   .text:00000d1c GLCD_ClearLn
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:2745   .text:00000d3c $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:2749   .text:00000d40 $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:2754   .text:00000d40 GLCD_Clear
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:2824   .text:00000d8a GLCD_Set_Loc
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:2875   .text:00000db6 GLCD_Window_Fill
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:2945   .text:00000dec GLCD_Rect
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:3117   .text:00000ee0 GLCD_Bitmap
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:3193   .text:00000f20 GLCD_Display_Home
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:3217   .text:00000f2e GLCD_Driver_OutCtrl
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:3241   .text:00000f40 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:3245   .text:00000f44 $t
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:3277   .text:00000f64 GLCD_Init
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:3580   .rodata:00000000 Font_24x16
                            *COM*:00000040 I2C_Rx_Buf
                            *COM*:00000040 I2C_Tx_Buf
                            *COM*:00000040 Rx_Buf1
                            *COM*:00000001 TxIntStat
                            *COM*:00000210 rb
                            *COM*:00000002 EscFlag
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:3576   .rodata:00000000 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:6273   .data:00000000 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:6277   .data:00000000 BackColor
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:6280   .bss:00000000 $d
C:\Users\raghav\AppData\Local\Temp\ccqeEbeN.s:6284   .bss:00000000 TextColor
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.549b84bf9d8399e395ff8216fcbb3d69
                           .group:00000000 wm4.LPC17xx.h.27.964facdaadd4aa3f18ac78c8a78f0013
                           .group:00000000 wm4.core_cm3.h.32.3cac756d6e704b813781f82afd94fa5f
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.6beb15babd14c076008ec0890c26e21c
                           .group:00000000 wm4.core_cm3.h.83.1a3cb9afc687cf157efeddb3d5f3109e
                           .group:00000000 wm4.LPC17xx.h.953.82b7a9ed60bb594048bc8738cf1d3489
                           .group:00000000 wm4.lpc_types.h.32.72d58ce80fabd1a5430c6ec0500a090b
                           .group:00000000 wm4.lpc17xx_pinsel.h.30.767cda9b27a5c688cd97e5947d664047
                           .group:00000000 wm4.lpc17xx_clkpwr.h.30.8537d92ff6965961e80fda89ac5019f2
                           .group:00000000 wm4.lpc17xx_systick.h.30.9f34c15ae315a203fed1d933040ad7b9
                           .group:00000000 wm4.lpc17xx_gpio.h.30.0b884ee110dd20865784f12e1569ecf1
                           .group:00000000 wm4.lpc17xx_wdt.h.34.a2dcafab9849854019efb51f717a8129
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832
                           .group:00000000 wm4.lpc17xx_uart.h.58.dbba6e724b29a6214e9cafbaf3ee8a9e
                           .group:00000000 wm4.lpc17xx_ssp.h.48.cd045d667ab7b89d5d550d38997df61b
                           .group:00000000 wm4.lpc17xx_i2c.h.30.8ecc2351e7cba41135ba36b3ad45f764
                           .group:00000000 wm4.lpc_i2c_tsc2004.h.29.34082f268f216caa8d0bf2c0960ad4a6
                           .group:00000000 wm4.lpc_ssp_glcd.h.46.c050a23f7d3e575d1eafabe862fb4f95
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.Font_24x16.h.16.3819cadfc08710b0322707370d919056

UNDEFINED SYMBOLS
CS_Force1
GPIO_SetValue
SSP_ReadWrite
GPIO_ClearValue
delay_ms
memcpy
GPIO_SetDir
