   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"lpc_ssp_glcd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	1
  19              		.thumb
  20              		.thumb_func
  22              	wr_dat_start:
  23              	.LFB65:
  24              		.file 1 "../Source Files/lpc_ssp_glcd.c"
   1:../Source Files/lpc_ssp_glcd.c **** /**********************************************************************
   2:../Source Files/lpc_ssp_glcd.c **** * $Id$		lpc_ssp_glcd.c
   3:../Source Files/lpc_ssp_glcd.c **** *//**
   4:../Source Files/lpc_ssp_glcd.c **** * @file		lpc_ssp_glcd.c
   5:../Source Files/lpc_ssp_glcd.c **** * @brief	Contains all functions support for SSP based GLCD
   6:../Source Files/lpc_ssp_glcd.c **** *           library on LPC17xx
   7:../Source Files/lpc_ssp_glcd.c **** * @version	1.0
   8:../Source Files/lpc_ssp_glcd.c **** * @date		18. Dec. 2013
   9:../Source Files/lpc_ssp_glcd.c **** * @author	Dwijay.Edutech Learning Solutions
  10:../Source Files/lpc_ssp_glcd.c **** ***********************************************************************
  11:../Source Files/lpc_ssp_glcd.c **** * Software that is described herein is for illustrative purposes only
  12:../Source Files/lpc_ssp_glcd.c **** * which provides customers with programming information regarding the
  13:../Source Files/lpc_ssp_glcd.c **** * products. This software is supplied "AS IS" without any warranties.
  14:../Source Files/lpc_ssp_glcd.c **** * NXP Semiconductors assumes no responsibility or liability for the
  15:../Source Files/lpc_ssp_glcd.c **** * use of the software, conveys no license or title under any patent,
  16:../Source Files/lpc_ssp_glcd.c **** * copyright, or mask work right to the product. NXP Semiconductors
  17:../Source Files/lpc_ssp_glcd.c **** * reserves the right to make changes in the software without
  18:../Source Files/lpc_ssp_glcd.c **** * notification. NXP Semiconductors also make no representation or
  19:../Source Files/lpc_ssp_glcd.c **** * warranty that such application will be suitable for the specified
  20:../Source Files/lpc_ssp_glcd.c **** * use without further testing or modification.
  21:../Source Files/lpc_ssp_glcd.c **** **********************************************************************/
  22:../Source Files/lpc_ssp_glcd.c **** 
  23:../Source Files/lpc_ssp_glcd.c **** /* Peripheral group ----------------------------------------------------------- */
  24:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD
  25:../Source Files/lpc_ssp_glcd.c ****  * @{
  26:../Source Files/lpc_ssp_glcd.c ****  */
  27:../Source Files/lpc_ssp_glcd.c **** 
  28:../Source Files/lpc_ssp_glcd.c **** /* Includes ------------------------------------------------------------------- */
  29:../Source Files/lpc_ssp_glcd.c **** #include "lpc_ssp_glcd.h"
  30:../Source Files/lpc_ssp_glcd.c **** #include "math.h"
  31:../Source Files/lpc_ssp_glcd.c **** #include "Font_24x16.h"
  32:../Source Files/lpc_ssp_glcd.c **** 
  33:../Source Files/lpc_ssp_glcd.c **** 
  34:../Source Files/lpc_ssp_glcd.c **** /* If this source file built with example, the LPC17xx FW library configuration
  35:../Source Files/lpc_ssp_glcd.c ****  * file in each example directory ("lpc17xx_libcfg.h") must be included,
  36:../Source Files/lpc_ssp_glcd.c ****  * otherwise the default FW library configuration file must be included instead
  37:../Source Files/lpc_ssp_glcd.c ****  */
  38:../Source Files/lpc_ssp_glcd.c **** 
  39:../Source Files/lpc_ssp_glcd.c **** /******************************************************************************/
  40:../Source Files/lpc_ssp_glcd.c **** static volatile uint16_t TextColor = Black, BackColor = White;
  41:../Source Files/lpc_ssp_glcd.c **** 
  42:../Source Files/lpc_ssp_glcd.c **** // Swap two bytes
  43:../Source Files/lpc_ssp_glcd.c **** #define SWAP(x,y) do { (x)=(x)^(y); (y)=(x)^(y); (x)=(x)^(y); } while(0)
  44:../Source Files/lpc_ssp_glcd.c **** 
  45:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD_Public_Functions
  46:../Source Files/lpc_ssp_glcd.c ****  * @{
  47:../Source Files/lpc_ssp_glcd.c ****  */
  48:../Source Files/lpc_ssp_glcd.c **** 
  49:../Source Files/lpc_ssp_glcd.c **** /* Public Functions ----------------------------------------------------------- */
  50:../Source Files/lpc_ssp_glcd.c **** 
  51:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  52:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls Backlight
  53:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	NewState	ENABLE/DISABLE the Backlight
  54:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  55:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  56:../Source Files/lpc_ssp_glcd.c **** void GLCD_Backlight (FunctionalState NewState)
  57:../Source Files/lpc_ssp_glcd.c **** {
  58:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
  59:../Source Files/lpc_ssp_glcd.c **** 	{
  60:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
  61:../Source Files/lpc_ssp_glcd.c **** 	}
  62:../Source Files/lpc_ssp_glcd.c **** 	else
  63:../Source Files/lpc_ssp_glcd.c **** 	{
  64:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
  65:../Source Files/lpc_ssp_glcd.c **** 	}
  66:../Source Files/lpc_ssp_glcd.c **** }
  67:../Source Files/lpc_ssp_glcd.c **** 
  68:../Source Files/lpc_ssp_glcd.c **** 
  69:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  70:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function resets GLCD
  71:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
  72:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  73:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  74:../Source Files/lpc_ssp_glcd.c **** void GLCD_Reset (void)
  75:../Source Files/lpc_ssp_glcd.c **** {
  76:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
  77:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
  78:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
  79:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
  81:../Source Files/lpc_ssp_glcd.c **** }
  82:../Source Files/lpc_ssp_glcd.c **** 
  83:../Source Files/lpc_ssp_glcd.c **** 
  84:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  85:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls GLCD Output
  86:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	drv	    Output Format
  87:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_LEFT
  88:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_RIGHT
  89:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_LEFT
  90:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_RIGHT
  91:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  92:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  93:../Source Files/lpc_ssp_glcd.c **** void GLCD_Driver_OutCtrl (DRIVER_OUT_Type drv)
  94:../Source Files/lpc_ssp_glcd.c **** {
  95:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
  96:../Source Files/lpc_ssp_glcd.c **** 
  97:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
  98:../Source Files/lpc_ssp_glcd.c **** 	{
  99:../Source Files/lpc_ssp_glcd.c **** 	case TOP_LEFT:
 100:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 101:../Source Files/lpc_ssp_glcd.c **** 		break;
 102:../Source Files/lpc_ssp_glcd.c **** 
 103:../Source Files/lpc_ssp_glcd.c **** 	case TOP_RIGHT:
 104:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 105:../Source Files/lpc_ssp_glcd.c **** 		break;
 106:../Source Files/lpc_ssp_glcd.c **** 
 107:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_LEFT:
 108:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 109:../Source Files/lpc_ssp_glcd.c **** 		break;
 110:../Source Files/lpc_ssp_glcd.c **** 
 111:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_RIGHT:
 112:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 113:../Source Files/lpc_ssp_glcd.c **** 		break;
 114:../Source Files/lpc_ssp_glcd.c **** 
 115:../Source Files/lpc_ssp_glcd.c **** 	default:
 116:../Source Files/lpc_ssp_glcd.c **** 		break;
 117:../Source Files/lpc_ssp_glcd.c **** 	}
 118:../Source Files/lpc_ssp_glcd.c **** }
 119:../Source Files/lpc_ssp_glcd.c **** 
 120:../Source Files/lpc_ssp_glcd.c **** 
 121:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 122:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set draw window region to required width and height
 123:../Source Files/lpc_ssp_glcd.c ****  *              as well as location
 124:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 125:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 126:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 127:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 128:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 129:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 130:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 131:../Source Files/lpc_ssp_glcd.c **** {
 132:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 133:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 134:../Source Files/lpc_ssp_glcd.c **** 
 135:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 136:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 137:../Source Files/lpc_ssp_glcd.c **** 
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 139:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 140:../Source Files/lpc_ssp_glcd.c **** 
 141:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 142:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 143:../Source Files/lpc_ssp_glcd.c **** }
 144:../Source Files/lpc_ssp_glcd.c **** 
 145:../Source Files/lpc_ssp_glcd.c **** 
 146:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 147:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to to desired location
 148:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 149:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 150:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 151:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 152:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 153:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 154:../Source Files/lpc_ssp_glcd.c **** void GLCD_Set_Loc (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 155:../Source Files/lpc_ssp_glcd.c **** {
 156:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 157:../Source Files/lpc_ssp_glcd.c **** 
 158:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 159:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 160:../Source Files/lpc_ssp_glcd.c **** 
 161:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 162:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 163:../Source Files/lpc_ssp_glcd.c **** 
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 165:../Source Files/lpc_ssp_glcd.c **** }
 166:../Source Files/lpc_ssp_glcd.c **** 
 167:../Source Files/lpc_ssp_glcd.c **** 
 168:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 169:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to Home
 170:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 171:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 172:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 173:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Home (void)
 174:../Source Files/lpc_ssp_glcd.c **** {
 175:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 176:../Source Files/lpc_ssp_glcd.c **** }
 177:../Source Files/lpc_ssp_glcd.c **** 
 178:../Source Files/lpc_ssp_glcd.c **** 
 179:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 180:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Initializes GLCD
 181:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 182:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 183:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 184:../Source Files/lpc_ssp_glcd.c **** void GLCD_Init (void)
 185:../Source Files/lpc_ssp_glcd.c **** {
 186:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 187:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 189:../Source Files/lpc_ssp_glcd.c **** 
 190:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 191:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 192:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 193:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 194:../Source Files/lpc_ssp_glcd.c **** 
 195:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 196:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 197:../Source Files/lpc_ssp_glcd.c **** 
 198:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 199:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 200:../Source Files/lpc_ssp_glcd.c **** 
 201:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 202:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 203:../Source Files/lpc_ssp_glcd.c **** 
 204:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 205:../Source Files/lpc_ssp_glcd.c **** 
 206:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 207:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 208:../Source Files/lpc_ssp_glcd.c **** 
 209:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 210:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 211:../Source Files/lpc_ssp_glcd.c **** 
 212:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 213:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 214:../Source Files/lpc_ssp_glcd.c **** 
 215:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 216:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 217:../Source Files/lpc_ssp_glcd.c **** 
 218:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 219:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 220:../Source Files/lpc_ssp_glcd.c **** 
 221:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 222:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 223:../Source Files/lpc_ssp_glcd.c **** 
 224:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 225:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 226:../Source Files/lpc_ssp_glcd.c **** 
 227:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 228:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 229:../Source Files/lpc_ssp_glcd.c **** 
 230:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 231:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 232:../Source Files/lpc_ssp_glcd.c **** 
 233:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 234:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 235:../Source Files/lpc_ssp_glcd.c **** 
 236:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 237:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 238:../Source Files/lpc_ssp_glcd.c **** 
 239:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 240:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 241:../Source Files/lpc_ssp_glcd.c **** 
 242:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 243:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 244:../Source Files/lpc_ssp_glcd.c **** 
 245:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 246:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 247:../Source Files/lpc_ssp_glcd.c **** 
 248:../Source Files/lpc_ssp_glcd.c **** 	// Gamma Control (R30h to R3Bh) -- Page 56 of SSD2119 datasheet
 249:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 250:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 251:../Source Files/lpc_ssp_glcd.c **** 
 252:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 253:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 254:../Source Files/lpc_ssp_glcd.c **** 
 255:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 256:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 257:../Source Files/lpc_ssp_glcd.c **** 
 258:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 259:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 260:../Source Files/lpc_ssp_glcd.c **** 
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 262:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 263:../Source Files/lpc_ssp_glcd.c **** 
 264:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 265:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 266:../Source Files/lpc_ssp_glcd.c **** 
 267:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 268:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 269:../Source Files/lpc_ssp_glcd.c **** 
 270:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 271:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 272:../Source Files/lpc_ssp_glcd.c **** 
 273:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 274:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 275:../Source Files/lpc_ssp_glcd.c **** 
 276:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 277:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 278:../Source Files/lpc_ssp_glcd.c **** 
 279:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 280:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 281:../Source Files/lpc_ssp_glcd.c **** 
 282:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 283:../Source Files/lpc_ssp_glcd.c **** 
 284:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 285:../Source Files/lpc_ssp_glcd.c **** }
 286:../Source Files/lpc_ssp_glcd.c **** 
 287:../Source Files/lpc_ssp_glcd.c **** 
 288:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 289:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a pixel in foreground color
 290:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 291:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 292:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 293:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 294:../Source Files/lpc_ssp_glcd.c **** void GLCD_PutPixel (uint16_t x, uint16_t y, uint16_t color)
 295:../Source Files/lpc_ssp_glcd.c **** {
 296:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 297:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 298:../Source Files/lpc_ssp_glcd.c **** 
 299:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 300:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 301:../Source Files/lpc_ssp_glcd.c **** 
 302:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 303:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 304:../Source Files/lpc_ssp_glcd.c **** }
 305:../Source Files/lpc_ssp_glcd.c **** 
 306:../Source Files/lpc_ssp_glcd.c **** 
 307:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 308:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set foreground color
 309:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    foreground color
 310:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 311:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 312:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetTextColor (uint16_t color)
 313:../Source Files/lpc_ssp_glcd.c **** {
 314:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 315:../Source Files/lpc_ssp_glcd.c **** }
 316:../Source Files/lpc_ssp_glcd.c **** 
 317:../Source Files/lpc_ssp_glcd.c **** 
 318:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 319:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set background color
 320:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    background color
 321:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 322:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 323:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetBackColor (uint16_t color)
 324:../Source Files/lpc_ssp_glcd.c **** {
 325:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 326:../Source Files/lpc_ssp_glcd.c **** }
 327:../Source Files/lpc_ssp_glcd.c **** 
 328:../Source Files/lpc_ssp_glcd.c **** 
 329:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 330:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Start of data writing to LCD controller
 331:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 332:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 333:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 334:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_start (void)
 335:../Source Files/lpc_ssp_glcd.c **** {
  25              		.loc 1 335 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
 336:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);
  29              		.loc 1 336 0
  30 0000 0021     		movs	r1, #0
 335:../Source Files/lpc_ssp_glcd.c **** {
  31              		.loc 1 335 0
  32 0002 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              		.loc 1 336 0
  38 0004 0448     		ldr	r0, .L2
  39 0006 FFF7FEFF 		bl	CS_Force1
  40              	.LVL0:
 337:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  41              		.loc 1 337 0
  42 000a 0220     		movs	r0, #2
  43 000c 0121     		movs	r1, #1
 338:../Source Files/lpc_ssp_glcd.c **** }
  44              		.loc 1 338 0
  45 000e BDE80840 		pop	{r3, lr}
 337:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  46              		.loc 1 337 0
  47 0012 FFF7FEBF 		b	GPIO_SetValue
  48              	.LVL1:
  49              	.L3:
  50 0016 00BF     		.align	2
  51              	.L2:
  52 0018 00000340 		.word	1073938432
  53              		.cfi_endproc
  54              	.LFE65:
  56              		.align	1
  57              		.thumb
  58              		.thumb_func
  60              	wr_dat_stop:
  61              	.LFB66:
 339:../Source Files/lpc_ssp_glcd.c **** 
 340:../Source Files/lpc_ssp_glcd.c **** 
 341:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 342:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Stop of data writing to LCD controller
 343:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 344:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 345:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 346:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_stop (void)
 347:../Source Files/lpc_ssp_glcd.c **** {
  62              		.loc 1 347 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 348:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  67              		.loc 1 348 0
  68 001c 0148     		ldr	r0, .L5
  69 001e 0121     		movs	r1, #1
 349:../Source Files/lpc_ssp_glcd.c **** }
  70              		.loc 1 349 0
 348:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  71              		.loc 1 348 0
  72 0020 FFF7FEBF 		b	CS_Force1
  73              	.LVL2:
  74              	.L6:
  75              		.align	2
  76              	.L5:
  77 0024 00000340 		.word	1073938432
  78              		.cfi_endproc
  79              	.LFE66:
  81              		.align	1
  82              		.thumb
  83              		.thumb_func
  85              	wr_dat_only:
  86              	.LFB67:
 350:../Source Files/lpc_ssp_glcd.c **** 
 351:../Source Files/lpc_ssp_glcd.c **** 
 352:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 353:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Data writing to LCD controller
 354:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	c     data to be written
 355:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 356:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 357:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_only (uint16_t c)
 358:../Source Files/lpc_ssp_glcd.c **** {
  87              		.loc 1 358 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 24
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL3:
  92 0028 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 32
  95              		.cfi_offset 0, -32
  96              		.cfi_offset 1, -28
  97              		.cfi_offset 2, -24
  98              		.cfi_offset 3, -20
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 6, -8
 102              		.cfi_offset 14, -4
 359:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
 360:../Source Files/lpc_ssp_glcd.c **** 
 361:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 103              		.loc 1 361 0
 104 002a 074B     		ldr	r3, .L8
 105 002c 020A     		lsrs	r2, r0, #8
 362:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) c;        // 2nd byte extract
 106              		.loc 1 362 0
 107 002e 5870     		strb	r0, [r3, #1]
 363:../Source Files/lpc_ssp_glcd.c **** 
 364:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 365:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 366:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 108              		.loc 1 366 0
 109 0030 0220     		movs	r0, #2
 110              	.LVL4:
 361:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 111              		.loc 1 361 0
 112 0032 1A70     		strb	r2, [r3, #0]
 113              		.loc 1 366 0
 114 0034 0490     		str	r0, [sp, #16]
 365:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 115              		.loc 1 365 0
 116 0036 0022     		movs	r2, #0
 367:../Source Files/lpc_ssp_glcd.c **** 	SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 117              		.loc 1 367 0
 118 0038 6946     		mov	r1, sp
 119 003a 0448     		ldr	r0, .L8+4
 364:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 120              		.loc 1 364 0
 121 003c 0093     		str	r3, [sp, #0]
 365:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 122              		.loc 1 365 0
 123 003e 0292     		str	r2, [sp, #8]
 124              		.loc 1 367 0
 125 0040 FFF7FEFF 		bl	SSP_ReadWrite
 126              	.LVL5:
 368:../Source Files/lpc_ssp_glcd.c **** }
 127              		.loc 1 368 0
 128 0044 07B0     		add	sp, sp, #28
 129 0046 00BD     		pop	{pc}
 130              	.L9:
 131              		.align	2
 132              	.L8:
 133 0048 00000000 		.word	Tx_Buf1
 134 004c 00000340 		.word	1073938432
 135              		.cfi_endproc
 136              	.LFE67:
 138              		.align	1
 139              		.global	GLCD_Backlight
 140              		.thumb
 141              		.thumb_func
 143              	GLCD_Backlight:
 144              	.LFB55:
  57:../Source Files/lpc_ssp_glcd.c **** {
 145              		.loc 1 57 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150              	.LVL6:
  58:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
 151              		.loc 1 58 0
 152 0050 20B1     		cbz	r0, .L11
  60:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 153              		.loc 1 60 0
 154 0052 0220     		movs	r0, #2
 155              	.LVL7:
 156 0054 4FF48071 		mov	r1, #256
  66:../Source Files/lpc_ssp_glcd.c **** }
 157              		.loc 1 66 0
  60:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 158              		.loc 1 60 0
 159 0058 FFF7FEBF 		b	GPIO_SetValue
 160              	.LVL8:
 161              	.L11:
  64:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 162              		.loc 1 64 0
 163 005c 0220     		movs	r0, #2
 164              	.LVL9:
 165 005e 4FF48071 		mov	r1, #256
  66:../Source Files/lpc_ssp_glcd.c **** }
 166              		.loc 1 66 0
  64:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 167              		.loc 1 64 0
 168 0062 FFF7FEBF 		b	GPIO_ClearValue
 169              	.LVL10:
 170              		.cfi_endproc
 171              	.LFE55:
 173              		.align	1
 174              		.global	GLCD_Reset
 175              		.thumb
 176              		.thumb_func
 178              	GLCD_Reset:
 179              	.LFB56:
  75:../Source Files/lpc_ssp_glcd.c **** {
 180              		.loc 1 75 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0066 08B5     		push	{r3, lr}
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
  76:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
 189              		.loc 1 76 0
 190 0068 2021     		movs	r1, #32
 191 006a 0020     		movs	r0, #0
 192 006c FFF7FEFF 		bl	GPIO_SetValue
 193              	.LVL11:
  77:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 194              		.loc 1 77 0
 195 0070 0220     		movs	r0, #2
 196 0072 FFF7FEFF 		bl	delay_ms
 197              	.LVL12:
  78:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
 198              		.loc 1 78 0
 199 0076 2021     		movs	r1, #32
 200 0078 0020     		movs	r0, #0
 201 007a FFF7FEFF 		bl	GPIO_ClearValue
 202              	.LVL13:
  79:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
 203              		.loc 1 79 0
 204 007e 0420     		movs	r0, #4
 205 0080 FFF7FEFF 		bl	delay_ms
 206              	.LVL14:
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 207              		.loc 1 80 0
 208 0084 0020     		movs	r0, #0
 209 0086 2021     		movs	r1, #32
  81:../Source Files/lpc_ssp_glcd.c **** }
 210              		.loc 1 81 0
 211 0088 BDE80840 		pop	{r3, lr}
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 212              		.loc 1 80 0
 213 008c FFF7FEBF 		b	GPIO_SetValue
 214              	.LVL15:
 215              		.cfi_endproc
 216              	.LFE56:
 218              		.align	1
 219              		.global	GLCD_SetTextColor
 220              		.thumb
 221              		.thumb_func
 223              	GLCD_SetTextColor:
 224              	.LFB63:
 313:../Source Files/lpc_ssp_glcd.c **** {
 225              		.loc 1 313 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL16:
 314:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 231              		.loc 1 314 0
 232 0090 014B     		ldr	r3, .L15
 233 0092 1880     		strh	r0, [r3, #0]	@ movhi
 234 0094 7047     		bx	lr
 235              	.L16:
 236 0096 00BF     		.align	2
 237              	.L15:
 238 0098 00000000 		.word	.LANCHOR0
 239              		.cfi_endproc
 240              	.LFE63:
 242              		.align	1
 243              		.global	GLCD_SetBackColor
 244              		.thumb
 245              		.thumb_func
 247              	GLCD_SetBackColor:
 248              	.LFB64:
 324:../Source Files/lpc_ssp_glcd.c **** {
 249              		.loc 1 324 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL17:
 325:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 255              		.loc 1 325 0
 256 009c 014B     		ldr	r3, .L18
 257 009e 1880     		strh	r0, [r3, #0]	@ movhi
 258 00a0 7047     		bx	lr
 259              	.L19:
 260 00a2 00BF     		.align	2
 261              	.L18:
 262 00a4 00000000 		.word	.LANCHOR1
 263              		.cfi_endproc
 264              	.LFE64:
 266              		.align	1
 267              		.global	Write_Command_Glcd
 268              		.thumb
 269              		.thumb_func
 271              	Write_Command_Glcd:
 272              	.LFB81:
 369:../Source Files/lpc_ssp_glcd.c **** 
 370:../Source Files/lpc_ssp_glcd.c **** 
 371:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 372:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear display
 373:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    display clearing color
 374:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 375:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 376:../Source Files/lpc_ssp_glcd.c **** void GLCD_Clear (uint16_t color)
 377:../Source Files/lpc_ssp_glcd.c **** {
 378:../Source Files/lpc_ssp_glcd.c **** 	unsigned int   i;
 379:../Source Files/lpc_ssp_glcd.c **** 
 380:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 381:../Source Files/lpc_ssp_glcd.c **** 
 382:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 383:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 384:../Source Files/lpc_ssp_glcd.c **** 
 385:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 386:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 387:../Source Files/lpc_ssp_glcd.c **** 
 388:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 389:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 390:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 391:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 392:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 393:../Source Files/lpc_ssp_glcd.c **** }
 394:../Source Files/lpc_ssp_glcd.c **** 
 395:../Source Files/lpc_ssp_glcd.c **** 
 396:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 397:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw character on given position
 398:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x       horizontal position
 399:../Source Files/lpc_ssp_glcd.c ****  *              y       vertical position
 400:../Source Files/lpc_ssp_glcd.c ****  *              c       pointer to character bitmap
 401:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 402:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 403:../Source Files/lpc_ssp_glcd.c **** void GLCD_Draw_Char (uint16_t x, uint16_t y, uint16_t *c)
 404:../Source Files/lpc_ssp_glcd.c **** {
 405:../Source Files/lpc_ssp_glcd.c **** 	int idx = 0, i, j;
 406:../Source Files/lpc_ssp_glcd.c **** 
 407:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 408:../Source Files/lpc_ssp_glcd.c **** 
 409:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 410:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 411:../Source Files/lpc_ssp_glcd.c **** 
 412:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 413:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 414:../Source Files/lpc_ssp_glcd.c **** 
 415:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 416:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 417:../Source Files/lpc_ssp_glcd.c **** 
 418:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 419:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 420:../Source Files/lpc_ssp_glcd.c **** 
 421:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 422:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 423:../Source Files/lpc_ssp_glcd.c **** 
 424:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 425:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 426:../Source Files/lpc_ssp_glcd.c **** 
 427:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 428:../Source Files/lpc_ssp_glcd.c **** 
 429:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 430:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 431:../Source Files/lpc_ssp_glcd.c **** 	{
 432:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 433:../Source Files/lpc_ssp_glcd.c **** 		{
 434:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 435:../Source Files/lpc_ssp_glcd.c **** 			{
 436:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 437:../Source Files/lpc_ssp_glcd.c **** 			}
 438:../Source Files/lpc_ssp_glcd.c **** 			else
 439:../Source Files/lpc_ssp_glcd.c **** 			{
 440:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 441:../Source Files/lpc_ssp_glcd.c **** 			}
 442:../Source Files/lpc_ssp_glcd.c **** 		}
 443:../Source Files/lpc_ssp_glcd.c **** 		c++;
 444:../Source Files/lpc_ssp_glcd.c **** 	}
 445:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 446:../Source Files/lpc_ssp_glcd.c **** }
 447:../Source Files/lpc_ssp_glcd.c **** 
 448:../Source Files/lpc_ssp_glcd.c **** 
 449:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 450:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply character on given line
 451:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 452:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 453:../Source Files/lpc_ssp_glcd.c ****  *              c        ascii character
 454:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 455:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 456:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Char (uint16_t ln, uint16_t col, uchar c)
 457:../Source Files/lpc_ssp_glcd.c **** {
 458:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 459:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 460:../Source Files/lpc_ssp_glcd.c **** }
 461:../Source Files/lpc_ssp_glcd.c **** 
 462:../Source Files/lpc_ssp_glcd.c **** 
 463:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 464:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply string on given line
 465:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 466:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 467:../Source Files/lpc_ssp_glcd.c ****  *              s        pointer to string
 468:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 469:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 470:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 471:../Source Files/lpc_ssp_glcd.c **** {
 472:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 473:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 474:../Source Files/lpc_ssp_glcd.c **** 	{
 475:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 476:../Source Files/lpc_ssp_glcd.c **** 	}
 477:../Source Files/lpc_ssp_glcd.c **** }
 478:../Source Files/lpc_ssp_glcd.c **** 
 479:../Source Files/lpc_ssp_glcd.c **** 
 480:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 481:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear given line
 482:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 483:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 484:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 485:../Source Files/lpc_ssp_glcd.c **** void GLCD_ClearLn (uint16_t ln)
 486:../Source Files/lpc_ssp_glcd.c **** {
 487:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 488:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 489:../Source Files/lpc_ssp_glcd.c **** }
 490:../Source Files/lpc_ssp_glcd.c **** 
 491:../Source Files/lpc_ssp_glcd.c **** 
 492:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 493:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw bargraph
 494:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 495:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 496:../Source Files/lpc_ssp_glcd.c ****  *              w        maximum width of bargraph (in pixels)
 497:../Source Files/lpc_ssp_glcd.c ****  *              val      value of active bargraph (in 1/1024)
 498:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 499:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 500:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bargraph (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t val)
 501:../Source Files/lpc_ssp_glcd.c **** {
 502:../Source Files/lpc_ssp_glcd.c **** 	int i,j;
 503:../Source Files/lpc_ssp_glcd.c **** 
 504:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 505:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 506:../Source Files/lpc_ssp_glcd.c **** 
 507:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 508:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 509:../Source Files/lpc_ssp_glcd.c **** 
 510:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 511:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 512:../Source Files/lpc_ssp_glcd.c **** 
 513:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 514:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 515:../Source Files/lpc_ssp_glcd.c **** 
 516:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 517:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 518:../Source Files/lpc_ssp_glcd.c **** 
 519:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 520:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 521:../Source Files/lpc_ssp_glcd.c **** 
 522:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 523:../Source Files/lpc_ssp_glcd.c **** 
 524:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 525:../Source Files/lpc_ssp_glcd.c **** 
 526:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 527:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 528:../Source Files/lpc_ssp_glcd.c **** 	{
 529:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 530:../Source Files/lpc_ssp_glcd.c **** 		{
 531:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 532:../Source Files/lpc_ssp_glcd.c **** 			{
 533:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 534:../Source Files/lpc_ssp_glcd.c **** 			}
 535:../Source Files/lpc_ssp_glcd.c **** 			else
 536:../Source Files/lpc_ssp_glcd.c **** 			{
 537:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 538:../Source Files/lpc_ssp_glcd.c **** 			}
 539:../Source Files/lpc_ssp_glcd.c **** 		}
 540:../Source Files/lpc_ssp_glcd.c **** 	}
 541:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 542:../Source Files/lpc_ssp_glcd.c **** }
 543:../Source Files/lpc_ssp_glcd.c **** 
 544:../Source Files/lpc_ssp_glcd.c **** 
 545:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 546:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Display graphical bitmap image at position x horizontally
 547:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 548:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 549:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 550:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 551:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 552:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 553:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 554:../Source Files/lpc_ssp_glcd.c ****  *              bitmap   address at which the bitmap data resides
 555:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 556:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 557:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 558:../Source Files/lpc_ssp_glcd.c **** {
 559:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j,k;
 560:../Source Files/lpc_ssp_glcd.c **** 
 561:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 562:../Source Files/lpc_ssp_glcd.c **** 
 563:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 564:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 565:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 566:../Source Files/lpc_ssp_glcd.c **** 	{
 567:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 568:../Source Files/lpc_ssp_glcd.c **** 		{
 569:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 570:../Source Files/lpc_ssp_glcd.c **** 		}
 571:../Source Files/lpc_ssp_glcd.c **** 	}
 572:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 573:../Source Files/lpc_ssp_glcd.c **** }
 574:../Source Files/lpc_ssp_glcd.c **** 
 575:../Source Files/lpc_ssp_glcd.c **** 
 576:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 577:../Source Files/lpc_ssp_glcd.c ****  * @brief	    F at position x horizontally
 578:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 579:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 580:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 581:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 582:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 583:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 584:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 585:../Source Files/lpc_ssp_glcd.c ****  *              color    window color
 586:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 587:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 588:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window_Fill (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color)
 589:../Source Files/lpc_ssp_glcd.c **** {
 590:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j;
 591:../Source Files/lpc_ssp_glcd.c **** 
 592:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 593:../Source Files/lpc_ssp_glcd.c **** 
 594:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 595:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 596:../Source Files/lpc_ssp_glcd.c **** 	{
 597:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 598:../Source Files/lpc_ssp_glcd.c **** 		{
 599:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 600:../Source Files/lpc_ssp_glcd.c **** 		}
 601:../Source Files/lpc_ssp_glcd.c **** 	}
 602:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 603:../Source Files/lpc_ssp_glcd.c **** }
 604:../Source Files/lpc_ssp_glcd.c **** 
 605:../Source Files/lpc_ssp_glcd.c **** 
 606:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 607:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a line on a graphic LCD using Bresenham's
 608:../Source Files/lpc_ssp_glcd.c ****  *              line drawing algorithm
 609:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)   the start coordinate
 610:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)   the end coordinate
 611:../Source Files/lpc_ssp_glcd.c ****  *              color      line color
 612:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 613:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 614:../Source Files/lpc_ssp_glcd.c **** void GLCD_Line(int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color)
 615:../Source Files/lpc_ssp_glcd.c **** {
 616:../Source Files/lpc_ssp_glcd.c **** 	int16_t  x, y, addx, addy, dx, dy;
 617:../Source Files/lpc_ssp_glcd.c **** 	int32_t P,i;
 618:../Source Files/lpc_ssp_glcd.c **** 
 619:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 620:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 621:../Source Files/lpc_ssp_glcd.c **** 	x = x1;
 622:../Source Files/lpc_ssp_glcd.c **** 	y = y1;
 623:../Source Files/lpc_ssp_glcd.c **** 
 624:../Source Files/lpc_ssp_glcd.c **** 	if(x1 > x2)
 625:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 626:../Source Files/lpc_ssp_glcd.c **** 	else
 627:../Source Files/lpc_ssp_glcd.c **** 		addx = 1;
 628:../Source Files/lpc_ssp_glcd.c **** 	if(y1 > y2)
 629:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 630:../Source Files/lpc_ssp_glcd.c **** 	else
 631:../Source Files/lpc_ssp_glcd.c **** 		addy = 1;
 632:../Source Files/lpc_ssp_glcd.c **** 
 633:../Source Files/lpc_ssp_glcd.c **** 
 634:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 635:../Source Files/lpc_ssp_glcd.c **** 	{
 636:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 637:../Source Files/lpc_ssp_glcd.c **** 
 638:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 639:../Source Files/lpc_ssp_glcd.c **** 		{
 640:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 641:../Source Files/lpc_ssp_glcd.c **** 
 642:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 643:../Source Files/lpc_ssp_glcd.c **** 			{
 644:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 645:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 646:../Source Files/lpc_ssp_glcd.c **** 			}
 647:../Source Files/lpc_ssp_glcd.c **** 			else
 648:../Source Files/lpc_ssp_glcd.c **** 			{
 649:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 650:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 651:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 652:../Source Files/lpc_ssp_glcd.c **** 			}
 653:../Source Files/lpc_ssp_glcd.c **** 		}
 654:../Source Files/lpc_ssp_glcd.c **** 	}
 655:../Source Files/lpc_ssp_glcd.c **** 	else
 656:../Source Files/lpc_ssp_glcd.c **** 	{
 657:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 658:../Source Files/lpc_ssp_glcd.c **** 
 659:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 660:../Source Files/lpc_ssp_glcd.c **** 		{
 661:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 662:../Source Files/lpc_ssp_glcd.c **** 
 663:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 664:../Source Files/lpc_ssp_glcd.c **** 			{
 665:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 666:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 667:../Source Files/lpc_ssp_glcd.c **** 			}
 668:../Source Files/lpc_ssp_glcd.c **** 			else
 669:../Source Files/lpc_ssp_glcd.c **** 			{
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 671:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 672:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 673:../Source Files/lpc_ssp_glcd.c **** 			}
 674:../Source Files/lpc_ssp_glcd.c **** 		}
 675:../Source Files/lpc_ssp_glcd.c **** 	}
 676:../Source Files/lpc_ssp_glcd.c **** }
 677:../Source Files/lpc_ssp_glcd.c **** 
 678:../Source Files/lpc_ssp_glcd.c **** 
 679:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 680:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Rectangle on a graphic LCD
 681:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 682:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 683:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Rectangle TRUE/FALSE or ON/OFF
 684:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 685:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   fill color
 686:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 687:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 688:../Source Files/lpc_ssp_glcd.c **** void GLCD_Rect(COORDINATE_Type *p1, COORDINATE_Type *p2, Bool fill, uint16_t color, uint16_t fill_c
 689:../Source Files/lpc_ssp_glcd.c **** {
 690:../Source Files/lpc_ssp_glcd.c **** 	int16_t  width,height;                          // Find the y min and max
 691:../Source Files/lpc_ssp_glcd.c **** 
 692:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 693:../Source Files/lpc_ssp_glcd.c **** 	{
 694:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 695:../Source Files/lpc_ssp_glcd.c **** 		{
 696:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 697:../Source Files/lpc_ssp_glcd.c **** 			{
 698:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 699:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 700:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 701:../Source Files/lpc_ssp_glcd.c **** 			}
 702:../Source Files/lpc_ssp_glcd.c **** 			else
 703:../Source Files/lpc_ssp_glcd.c **** 			{
 704:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 705:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 706:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 707:../Source Files/lpc_ssp_glcd.c **** 			}
 708:../Source Files/lpc_ssp_glcd.c **** 		}
 709:../Source Files/lpc_ssp_glcd.c **** 		else
 710:../Source Files/lpc_ssp_glcd.c **** 		{
 711:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 712:../Source Files/lpc_ssp_glcd.c **** 			{
 713:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 714:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 715:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 716:../Source Files/lpc_ssp_glcd.c **** 			}
 717:../Source Files/lpc_ssp_glcd.c **** 			else
 718:../Source Files/lpc_ssp_glcd.c **** 			{
 719:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 720:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 721:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 722:../Source Files/lpc_ssp_glcd.c **** 			}
 723:../Source Files/lpc_ssp_glcd.c **** 		}
 724:../Source Files/lpc_ssp_glcd.c **** 		fill = NO;
 725:../Source Files/lpc_ssp_glcd.c **** 	}
 726:../Source Files/lpc_ssp_glcd.c **** 	if(!fill)
 727:../Source Files/lpc_ssp_glcd.c **** 	{
 728:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 729:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 732:../Source Files/lpc_ssp_glcd.c **** 	}
 733:../Source Files/lpc_ssp_glcd.c **** }
 734:../Source Files/lpc_ssp_glcd.c **** 
 735:../Source Files/lpc_ssp_glcd.c **** 
 736:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 737:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a frame on a graphic LCD
 738:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 739:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 740:../Source Files/lpc_ssp_glcd.c ****  *              frame_width  Total Width of Frame
 741:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 742:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Frame fill color
 743:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 744:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 745:../Source Files/lpc_ssp_glcd.c **** void GLCD_Frame(COORDINATE_Type *p1, COORDINATE_Type *p2, int16_t frame_width, uint16_t color, uint
 746:../Source Files/lpc_ssp_glcd.c **** {
 747:../Source Files/lpc_ssp_glcd.c **** 	int16_t fw;                          // Find the y min and max
 748:../Source Files/lpc_ssp_glcd.c **** 
 749:../Source Files/lpc_ssp_glcd.c **** 	fw = frame_width;
 750:../Source Files/lpc_ssp_glcd.c **** 
 751:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 752:../Source Files/lpc_ssp_glcd.c **** 	{
 753:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 754:../Source Files/lpc_ssp_glcd.c **** 		{
 755:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 756:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 759:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 760:../Source Files/lpc_ssp_glcd.c **** 		}
 761:../Source Files/lpc_ssp_glcd.c **** 		else
 762:../Source Files/lpc_ssp_glcd.c **** 		{
 763:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 764:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 767:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 768:../Source Files/lpc_ssp_glcd.c **** 		}
 769:../Source Files/lpc_ssp_glcd.c **** 	}
 770:../Source Files/lpc_ssp_glcd.c **** 
 771:../Source Files/lpc_ssp_glcd.c **** 	if(!fw)
 772:../Source Files/lpc_ssp_glcd.c **** 	{
 773:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 774:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 777:../Source Files/lpc_ssp_glcd.c **** 	}
 778:../Source Files/lpc_ssp_glcd.c **** }
 779:../Source Files/lpc_ssp_glcd.c **** 
 780:../Source Files/lpc_ssp_glcd.c **** 
 781:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 782:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a rectangle/frame on a graphic LCD
 783:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 784:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 785:../Source Files/lpc_ssp_glcd.c ****  *              (x3, y3)     the end coordinate
 786:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Triangle TRUE/FALSE or ON/OFF
 787:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 788:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Triangle Fill Color
 789:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 790:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 792:../Source Files/lpc_ssp_glcd.c **** {
 793:../Source Files/lpc_ssp_glcd.c ****     if(fill)
 794:../Source Files/lpc_ssp_glcd.c ****     {
 795:../Source Files/lpc_ssp_glcd.c ****     	uint16_t t1x,t2x,y,minx,maxx,t1xp,t2xp;
 796:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 797:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 798:../Source Files/lpc_ssp_glcd.c ****     	int16_t signx1,signx2,dx1,dy1,dx2,dy2;
 799:../Source Files/lpc_ssp_glcd.c ****     	uint16_t e1,e2;
 800:../Source Files/lpc_ssp_glcd.c ****         // Sort vertices
 801:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 802:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 804:../Source Files/lpc_ssp_glcd.c **** 
 805:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 806:../Source Files/lpc_ssp_glcd.c **** 
 807:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 809:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 810:../Source Files/lpc_ssp_glcd.c **** 
 811:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 813:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 814:../Source Files/lpc_ssp_glcd.c **** 
 815:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 816:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 817:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 818:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 819:../Source Files/lpc_ssp_glcd.c ****     	}
 820:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 821:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 822:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 823:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 824:../Source Files/lpc_ssp_glcd.c ****     	}
 825:../Source Files/lpc_ssp_glcd.c **** 
 826:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 827:../Source Files/lpc_ssp_glcd.c ****         // Flat top, just process the second half
 828:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 829:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 830:../Source Files/lpc_ssp_glcd.c **** 
 831:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 832:../Source Files/lpc_ssp_glcd.c ****     	{
 833:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 834:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 835:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 836:../Source Files/lpc_ssp_glcd.c ****             // process first line until y value is about to change
 837:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 838:../Source Files/lpc_ssp_glcd.c ****     		{
 839:../Source Files/lpc_ssp_glcd.c ****     			i++;
 840:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 841:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 842:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 843:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 844:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 845:../Source Files/lpc_ssp_glcd.c ****     				else          goto next1;
 846:../Source Files/lpc_ssp_glcd.c ****     			}
 847:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 848:../Source Files/lpc_ssp_glcd.c ****     			else t1x += signx1;
 849:../Source Files/lpc_ssp_glcd.c ****     		}
 850:../Source Files/lpc_ssp_glcd.c ****     	// Move line
 851:../Source Files/lpc_ssp_glcd.c ****     	next1:
 852:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 853:../Source Files/lpc_ssp_glcd.c ****     		while (1)
 854:../Source Files/lpc_ssp_glcd.c ****     		{
 855:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 856:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 857:../Source Files/lpc_ssp_glcd.c ****     			{
 858:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 859:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 860:../Source Files/lpc_ssp_glcd.c ****     				else          goto next2;
 861:../Source Files/lpc_ssp_glcd.c ****     			}
 862:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 863:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 864:../Source Files/lpc_ssp_glcd.c ****     		}
 865:../Source Files/lpc_ssp_glcd.c ****     	next2:
 866:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 867:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 868:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 869:../Source Files/lpc_ssp_glcd.c **** 
 870:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 871:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 872:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 874:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 875:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 876:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 877:../Source Files/lpc_ssp_glcd.c ****        }
 878:../Source Files/lpc_ssp_glcd.c ****     	next:
 879:../Source Files/lpc_ssp_glcd.c ****     	// Second half
 880:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 881:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 882:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 883:../Source Files/lpc_ssp_glcd.c **** 
 884:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 885:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 886:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 887:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 888:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 889:../Source Files/lpc_ssp_glcd.c **** 
 890:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 891:../Source Files/lpc_ssp_glcd.c **** 
 892:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 893:../Source Files/lpc_ssp_glcd.c ****     	{
 894:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 895:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 896:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 897:../Source Files/lpc_ssp_glcd.c ****     	    // process first line until y value is about to change
 898:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 899:../Source Files/lpc_ssp_glcd.c ****     		{
 900:../Source Files/lpc_ssp_glcd.c ****         		e1 += dy1;
 901:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 902:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 903:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 904:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 905:../Source Files/lpc_ssp_glcd.c ****     				else          goto next3;
 906:../Source Files/lpc_ssp_glcd.c ****     			}
 907:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 908:../Source Files/lpc_ssp_glcd.c ****     			else   	   	  t1x += signx1;
 909:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 910:../Source Files/lpc_ssp_glcd.c ****     		}
 911:../Source Files/lpc_ssp_glcd.c ****     	next3:
 912:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 913:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 914:../Source Files/lpc_ssp_glcd.c ****     		{
 915:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 916:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 917:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 918:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 919:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 920:../Source Files/lpc_ssp_glcd.c ****     				else          goto next4;
 921:../Source Files/lpc_ssp_glcd.c ****     			}
 922:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 923:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 924:../Source Files/lpc_ssp_glcd.c ****     		}
 925:../Source Files/lpc_ssp_glcd.c ****     	next4:
 926:../Source Files/lpc_ssp_glcd.c **** 
 927:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 928:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 929:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 930:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 931:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 932:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 934:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 935:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 936:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 937:../Source Files/lpc_ssp_glcd.c ****     	}
 938:../Source Files/lpc_ssp_glcd.c ****     	fill = NO;
 939:../Source Files/lpc_ssp_glcd.c ****     }
 940:../Source Files/lpc_ssp_glcd.c **** 
 941:../Source Files/lpc_ssp_glcd.c **** 
 942:../Source Files/lpc_ssp_glcd.c **** 	if(!fill)
 943:../Source Files/lpc_ssp_glcd.c **** 	{
 944:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, color);
 945:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, color);
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, color);
 947:../Source Files/lpc_ssp_glcd.c **** 	}
 948:../Source Files/lpc_ssp_glcd.c **** }
 949:../Source Files/lpc_ssp_glcd.c **** 
 950:../Source Files/lpc_ssp_glcd.c **** 
 951:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 952:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Circle with given Center and Radius
 953:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x, y)     the center of the circle
 954:../Source Files/lpc_ssp_glcd.c ****  *              radius     the radius of the circle
 955:../Source Files/lpc_ssp_glcd.c ****  *              fill       YES or NO
 956:../Source Files/lpc_ssp_glcd.c ****  *              color      Boundary color
 957:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 958:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 960:../Source Files/lpc_ssp_glcd.c **** {
 961:../Source Files/lpc_ssp_glcd.c **** 	int16_t a, b, P;
 962:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 963:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 964:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 965:../Source Files/lpc_ssp_glcd.c **** 
 966:../Source Files/lpc_ssp_glcd.c **** 	do
 967:../Source Files/lpc_ssp_glcd.c **** 	{
 968:../Source Files/lpc_ssp_glcd.c **** 		if(fill)
 969:../Source Files/lpc_ssp_glcd.c **** 		{
 970:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 971:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, fill_color);
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, fill_color);
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, fill_color);
 974:../Source Files/lpc_ssp_glcd.c **** 		}
 975:../Source Files/lpc_ssp_glcd.c **** 
 976:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 977:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 978:../Source Files/lpc_ssp_glcd.c **** 		else
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 980:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 981:../Source Files/lpc_ssp_glcd.c **** 
 982:../Source Files/lpc_ssp_glcd.c **** 	fill = NO;
 983:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 984:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 985:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 986:../Source Files/lpc_ssp_glcd.c **** 	do
 987:../Source Files/lpc_ssp_glcd.c **** 	{
 988:../Source Files/lpc_ssp_glcd.c **** 		if(!fill)
 989:../Source Files/lpc_ssp_glcd.c **** 		{
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, color);
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, color);
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, color);
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, color);
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, color);
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, color);
 998:../Source Files/lpc_ssp_glcd.c **** 		}
 999:../Source Files/lpc_ssp_glcd.c **** 
1000:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
1001:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
1002:../Source Files/lpc_ssp_glcd.c **** 		else
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
1004:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
1005:../Source Files/lpc_ssp_glcd.c **** }
1006:../Source Files/lpc_ssp_glcd.c **** 
1007:../Source Files/lpc_ssp_glcd.c **** 
1008:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1009:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes commands to the GLCD
1010:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	Command		command to be written on GLCD
1011:../Source Files/lpc_ssp_glcd.c ****  * @return 		status
1012:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1013:../Source Files/lpc_ssp_glcd.c **** uchar Write_Command_Glcd (uint8_t Command)
1014:../Source Files/lpc_ssp_glcd.c **** {
 273              		.loc 1 1014 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 40
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL18:
 278 00a8 10B5     		push	{r4, lr}
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 283 00aa 8AB0     		sub	sp, sp, #40
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 48
 286              		.loc 1 1014 0
 287 00ac 0AAC     		add	r4, sp, #40
 288 00ae 04F8210D 		strb	r0, [r4, #-33]!
1015:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1016:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1017:../Source Files/lpc_ssp_glcd.c **** 	__IO uint32_t i;
1018:../Source Files/lpc_ssp_glcd.c **** 
1019:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(2, LCD_RS);  //select command mode
 289              		.loc 1 1019 0
 290 00b2 0121     		movs	r1, #1
 291 00b4 0220     		movs	r0, #2
 292              	.LVL19:
 293 00b6 FFF7FEFF 		bl	GPIO_ClearValue
 294              	.LVL20:
1020:../Source Files/lpc_ssp_glcd.c **** 
1021:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 295              		.loc 1 1021 0
 296 00ba 1148     		ldr	r0, .L27
 297 00bc 0021     		movs	r1, #0
 298 00be FFF7FEFF 		bl	CS_Force1
 299              	.LVL21:
1022:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = &Command;               /* Send Instruction Byte    */
 300              		.loc 1 1022 0
 301 00c2 0494     		str	r4, [sp, #16]
1023:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 302              		.loc 1 1023 0
 303 00c4 0022     		movs	r2, #0
1024:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 304              		.loc 1 1024 0
 305 00c6 0124     		movs	r4, #1
1025:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 306              		.loc 1 1025 0
 307 00c8 0D48     		ldr	r0, .L27
 308 00ca 04A9     		add	r1, sp, #16
1023:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 309              		.loc 1 1023 0
 310 00cc 0692     		str	r2, [sp, #24]
1024:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 311              		.loc 1 1024 0
 312 00ce 0894     		str	r4, [sp, #32]
 313              		.loc 1 1025 0
 314 00d0 FFF7FEFF 		bl	SSP_ReadWrite
 315              	.LVL22:
1026:../Source Files/lpc_ssp_glcd.c **** 
1027:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 316              		.loc 1 1027 0
 317 00d4 C0B2     		uxtb	r0, r0
 318 00d6 80B1     		cbz	r0, .L21
 319              	.LBB4:
 320              	.LBB5:
1028:../Source Files/lpc_ssp_glcd.c **** 	{
1029:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 321              		.loc 1 1029 0
 322 00d8 2146     		mov	r1, r4
 323 00da 0948     		ldr	r0, .L27
 324              	.LVL23:
 325 00dc FFF7FEFF 		bl	CS_Force1
 326              	.LVL24:
1030:../Source Files/lpc_ssp_glcd.c **** 		for(i=925; i>0; i--);
 327              		.loc 1 1030 0
 328 00e0 40F29D31 		movw	r1, #925
 329              	.L25:
 330              	.LVL25:
 331 00e4 0391     		str	r1, [sp, #12]
 332 00e6 039B     		ldr	r3, [sp, #12]
 333 00e8 13B1     		cbz	r3, .L26
 334              	.L23:
 335 00ea 0398     		ldr	r0, [sp, #12]
 336 00ec 411E     		subs	r1, r0, #1
 337              	.LVL26:
 338 00ee F9E7     		b	.L25
 339              	.LVL27:
 340              	.L26:
1031:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_RS);  // select data mode
 341              		.loc 1 1031 0
 342 00f0 0220     		movs	r0, #2
 343 00f2 0121     		movs	r1, #1
 344 00f4 FFF7FEFF 		bl	GPIO_SetValue
 345              	.LVL28:
 346 00f8 0120     		movs	r0, #1
 347              	.L21:
 348              	.LBE5:
 349              	.LBE4:
1032:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1033:../Source Files/lpc_ssp_glcd.c **** 	}
1034:../Source Files/lpc_ssp_glcd.c **** 	else
1035:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1036:../Source Files/lpc_ssp_glcd.c **** }
 350              		.loc 1 1036 0
 351 00fa 0AB0     		add	sp, sp, #40
 352 00fc 10BD     		pop	{r4, pc}
 353              	.L28:
 354 00fe 00BF     		.align	2
 355              	.L27:
 356 0100 00000340 		.word	1073938432
 357              		.cfi_endproc
 358              	.LFE81:
 360              		.align	1
 361              		.global	Write_Data_Glcd
 362              		.thumb
 363              		.thumb_func
 365              	Write_Data_Glcd:
 366              	.LFB82:
1037:../Source Files/lpc_ssp_glcd.c **** 
1038:../Source Files/lpc_ssp_glcd.c **** 
1039:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1040:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes data to the GLCD
1041:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	data	data to be written on GLCD
1042:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1043:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1044:../Source Files/lpc_ssp_glcd.c **** uchar Write_Data_Glcd (uint16_t data)
1045:../Source Files/lpc_ssp_glcd.c **** {
 367              		.loc 1 1045 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 24
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL29:
 372 0104 10B5     		push	{r4, lr}
 373              	.LCFI5:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
1046:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1047:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1048:../Source Files/lpc_ssp_glcd.c **** 
1049:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 377              		.loc 1 1049 0
 378 0106 0F4C     		ldr	r4, .L32
1045:../Source Files/lpc_ssp_glcd.c **** {
 379              		.loc 1 1045 0
 380 0108 86B0     		sub	sp, sp, #24
 381              	.LCFI6:
 382              		.cfi_def_cfa_offset 32
 383              		.loc 1 1049 0
 384 010a 030A     		lsrs	r3, r0, #8
1050:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) data;        // 2nd byte extract
 385              		.loc 1 1050 0
 386 010c 6070     		strb	r0, [r4, #1]
1051:../Source Files/lpc_ssp_glcd.c **** 
1052:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
 387              		.loc 1 1052 0
 388 010e 0121     		movs	r1, #1
 389 0110 0220     		movs	r0, #2
 390              	.LVL30:
1049:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 391              		.loc 1 1049 0
 392 0112 2370     		strb	r3, [r4, #0]
 393              		.loc 1 1052 0
 394 0114 FFF7FEFF 		bl	GPIO_SetValue
 395              	.LVL31:
1053:../Source Files/lpc_ssp_glcd.c **** 
1054:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 396              		.loc 1 1054 0
 397 0118 0B48     		ldr	r0, .L32+4
 398 011a 0021     		movs	r1, #0
 399 011c FFF7FEFF 		bl	CS_Force1
 400              	.LVL32:
1055:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
1056:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
1057:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 401              		.loc 1 1057 0
 402 0120 0220     		movs	r0, #2
1056:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 403              		.loc 1 1056 0
 404 0122 0022     		movs	r2, #0
 405              		.loc 1 1057 0
 406 0124 0490     		str	r0, [sp, #16]
1058:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 407              		.loc 1 1058 0
 408 0126 6946     		mov	r1, sp
 409 0128 0748     		ldr	r0, .L32+4
1055:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 410              		.loc 1 1055 0
 411 012a 0094     		str	r4, [sp, #0]
1056:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 412              		.loc 1 1056 0
 413 012c 0292     		str	r2, [sp, #8]
 414              		.loc 1 1058 0
 415 012e FFF7FEFF 		bl	SSP_ReadWrite
 416              	.LVL33:
1059:../Source Files/lpc_ssp_glcd.c **** 
1060:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 417              		.loc 1 1060 0
 418 0132 C0B2     		uxtb	r0, r0
 419 0134 20B1     		cbz	r0, .L30
 420              	.LBB8:
 421              	.LBB9:
1061:../Source Files/lpc_ssp_glcd.c **** 	{
1062:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 422              		.loc 1 1062 0
 423 0136 0448     		ldr	r0, .L32+4
 424              	.LVL34:
 425 0138 0121     		movs	r1, #1
 426 013a FFF7FEFF 		bl	CS_Force1
 427              	.LVL35:
 428 013e 0120     		movs	r0, #1
 429              	.L30:
 430              	.LBE9:
 431              	.LBE8:
1063:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1064:../Source Files/lpc_ssp_glcd.c **** 	}
1065:../Source Files/lpc_ssp_glcd.c **** 	else
1066:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1067:../Source Files/lpc_ssp_glcd.c **** }
 432              		.loc 1 1067 0
 433 0140 06B0     		add	sp, sp, #24
 434 0142 10BD     		pop	{r4, pc}
 435              	.L33:
 436              		.align	2
 437              	.L32:
 438 0144 00000000 		.word	Tx_Buf1
 439 0148 00000340 		.word	1073938432
 440              		.cfi_endproc
 441              	.LFE82:
 443              		.align	1
 444              		.global	GLCD_Bargraph
 445              		.thumb
 446              		.thumb_func
 448              	GLCD_Bargraph:
 449              	.LFB73:
 501:../Source Files/lpc_ssp_glcd.c **** {
 450              		.loc 1 501 0
 451              		.cfi_startproc
 452              		@ args = 4, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              	.LVL36:
 455 014c 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 456              	.LCFI7:
 457              		.cfi_def_cfa_offset 24
 458              		.cfi_offset 4, -24
 459              		.cfi_offset 5, -20
 460              		.cfi_offset 6, -16
 461              		.cfi_offset 7, -12
 462              		.cfi_offset 8, -8
 463              		.cfi_offset 14, -4
 501:../Source Files/lpc_ssp_glcd.c **** {
 464              		.loc 1 501 0
 465 0150 0646     		mov	r6, r0
 504:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 466              		.loc 1 504 0
 467 0152 4520     		movs	r0, #69
 468              	.LVL37:
 501:../Source Files/lpc_ssp_glcd.c **** {
 469              		.loc 1 501 0
 470 0154 1546     		mov	r5, r2
 471 0156 1F46     		mov	r7, r3
 472 0158 0C46     		mov	r4, r1
 473 015a BDF81880 		ldrh	r8, [sp, #24]
 504:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 474              		.loc 1 504 0
 475 015e FFF7FEFF 		bl	Write_Command_Glcd
 476              	.LVL38:
 505:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 477              		.loc 1 505 0
 478 0162 3046     		mov	r0, r6
 479 0164 FFF7FEFF 		bl	Write_Data_Glcd
 480              	.LVL39:
 507:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 481              		.loc 1 507 0
 482 0168 4620     		movs	r0, #70
 483 016a FFF7FEFF 		bl	Write_Command_Glcd
 484              	.LVL40:
 508:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 485              		.loc 1 508 0
 486 016e 701E     		subs	r0, r6, #1
 487 0170 2918     		adds	r1, r5, r0
 488 0172 88B2     		uxth	r0, r1
 489 0174 FFF7FEFF 		bl	Write_Data_Glcd
 490              	.LVL41:
 510:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 491              		.loc 1 510 0
 492 0178 4420     		movs	r0, #68
 493 017a FFF7FEFF 		bl	Write_Command_Glcd
 494              	.LVL42:
 511:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 495              		.loc 1 511 0
 496 017e 2046     		mov	r0, r4
 497 0180 FFF7FEFF 		bl	Write_Data_Glcd
 498              	.LVL43:
 513:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 499              		.loc 1 513 0
 500 0184 4420     		movs	r0, #68
 501 0186 FFF7FEFF 		bl	Write_Command_Glcd
 502              	.LVL44:
 514:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 503              		.loc 1 514 0
 504 018a 04F11702 		add	r2, r4, #23
 505 018e 1302     		lsls	r3, r2, #8
 506 0190 03F47F40 		and	r0, r3, #65280
 507 0194 FFF7FEFF 		bl	Write_Data_Glcd
 508              	.LVL45:
 516:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 509              		.loc 1 516 0
 510 0198 4E20     		movs	r0, #78
 511 019a FFF7FEFF 		bl	Write_Command_Glcd
 512              	.LVL46:
 517:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 513              		.loc 1 517 0
 514 019e 3046     		mov	r0, r6
 515 01a0 FFF7FEFF 		bl	Write_Data_Glcd
 516              	.LVL47:
 519:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 517              		.loc 1 519 0
 518 01a4 4F20     		movs	r0, #79
 519 01a6 FFF7FEFF 		bl	Write_Command_Glcd
 520              	.LVL48:
 520:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 521              		.loc 1 520 0
 522 01aa 2046     		mov	r0, r4
 523 01ac FFF7FEFF 		bl	Write_Data_Glcd
 524              	.LVL49:
 522:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 525              		.loc 1 522 0
 526 01b0 2220     		movs	r0, #34
 527 01b2 FFF7FEFF 		bl	Write_Command_Glcd
 528              	.LVL50:
 526:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 529              		.loc 1 526 0
 530 01b6 FFF723FF 		bl	wr_dat_start
 531              	.LVL51:
 524:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 532              		.loc 1 524 0
 533 01ba 05FB08F6 		mul	r6, r5, r8
 534 01be 4FEAA628 		asr	r8, r6, #10
 535              	.LVL52:
 527:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 536              		.loc 1 527 0
 537 01c2 0026     		movs	r6, #0
 538              	.LVL53:
 539              	.L35:
 527:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 540              		.loc 1 527 0 is_stmt 0 discriminator 1
 541 01c4 B742     		cmp	r7, r6
 542 01c6 10D0     		beq	.L42
 543              	.L40:
 527:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 544              		.loc 1 527 0
 545 01c8 0024     		movs	r4, #0
 546              	.L39:
 547              	.LVL54:
 529:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 548              		.loc 1 529 0 is_stmt 1 discriminator 1
 549 01ca A542     		cmp	r5, r4
 550 01cc 0BDD     		ble	.L43
 551              	.L38:
 531:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 552              		.loc 1 531 0
 553 01ce 1FFA88F0 		uxth	r0, r8
 554 01d2 8442     		cmp	r4, r0
 533:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 555              		.loc 1 533 0
 556 01d4 D4BF     		ite	le
 557 01d6 0748     		ldrle	r0, .L44
 537:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 558              		.loc 1 537 0
 559 01d8 0748     		ldrgt	r0, .L44+4
 529:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 560              		.loc 1 529 0
 561 01da 0134     		adds	r4, r4, #1
 562              	.LVL55:
 537:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 563              		.loc 1 537 0
 564 01dc 0188     		ldrh	r1, [r0, #0]
 565 01de 88B2     		uxth	r0, r1
 566 01e0 FFF722FF 		bl	wr_dat_only
 567              	.LVL56:
 568 01e4 F1E7     		b	.L39
 569              	.L43:
 570 01e6 0136     		adds	r6, r6, #1
 571 01e8 ECE7     		b	.L35
 572              	.LVL57:
 573              	.L42:
 542:../Source Files/lpc_ssp_glcd.c **** }
 574              		.loc 1 542 0
 575 01ea BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 541:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 576              		.loc 1 541 0
 577 01ee FFF715BF 		b	wr_dat_stop
 578              	.LVL58:
 579              	.L45:
 580 01f2 00BF     		.align	2
 581              	.L44:
 582 01f4 00000000 		.word	.LANCHOR1
 583 01f8 00000000 		.word	.LANCHOR0
 584              		.cfi_endproc
 585              	.LFE73:
 587              		.align	1
 588              		.global	GLCD_Draw_Char
 589              		.thumb
 590              		.thumb_func
 592              	GLCD_Draw_Char:
 593              	.LFB69:
 404:../Source Files/lpc_ssp_glcd.c **** {
 594              		.loc 1 404 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              	.LVL59:
 599 01fc F8B5     		push	{r3, r4, r5, r6, r7, lr}
 600              	.LCFI8:
 601              		.cfi_def_cfa_offset 24
 602              		.cfi_offset 3, -24
 603              		.cfi_offset 4, -20
 604              		.cfi_offset 5, -16
 605              		.cfi_offset 6, -12
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 407:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 608              		.loc 1 407 0
 609 01fe A0F11005 		sub	r5, r0, #16
 610 0202 ADB2     		uxth	r5, r5
 611              	.LVL60:
 404:../Source Files/lpc_ssp_glcd.c **** {
 612              		.loc 1 404 0
 613 0204 0646     		mov	r6, r0
 409:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 614              		.loc 1 409 0
 615 0206 4520     		movs	r0, #69
 404:../Source Files/lpc_ssp_glcd.c **** {
 616              		.loc 1 404 0
 617 0208 0C46     		mov	r4, r1
 618 020a 1746     		mov	r7, r2
 409:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 619              		.loc 1 409 0
 620 020c FFF7FEFF 		bl	Write_Command_Glcd
 621              	.LVL61:
 410:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 622              		.loc 1 410 0
 623 0210 2846     		mov	r0, r5
 624 0212 FFF7FEFF 		bl	Write_Data_Glcd
 625              	.LVL62:
 412:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 626              		.loc 1 412 0
 627 0216 4620     		movs	r0, #70
 628 0218 FFF7FEFF 		bl	Write_Command_Glcd
 629              	.LVL63:
 413:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 630              		.loc 1 413 0
 631 021c 701E     		subs	r0, r6, #1
 632 021e 80B2     		uxth	r0, r0
 633 0220 FFF7FEFF 		bl	Write_Data_Glcd
 634              	.LVL64:
 415:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 635              		.loc 1 415 0
 636 0224 4420     		movs	r0, #68
 637 0226 FFF7FEFF 		bl	Write_Command_Glcd
 638              	.LVL65:
 416:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 639              		.loc 1 416 0
 640 022a 2046     		mov	r0, r4
 641 022c FFF7FEFF 		bl	Write_Data_Glcd
 642              	.LVL66:
 418:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 643              		.loc 1 418 0
 644 0230 4420     		movs	r0, #68
 645 0232 FFF7FEFF 		bl	Write_Command_Glcd
 646              	.LVL67:
 419:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 647              		.loc 1 419 0
 648 0236 04F11701 		add	r1, r4, #23
 649 023a 0A02     		lsls	r2, r1, #8
 650 023c 02F47F40 		and	r0, r2, #65280
 651 0240 FFF7FEFF 		bl	Write_Data_Glcd
 652              	.LVL68:
 421:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 653              		.loc 1 421 0
 654 0244 4E20     		movs	r0, #78
 655 0246 FFF7FEFF 		bl	Write_Command_Glcd
 656              	.LVL69:
 422:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 657              		.loc 1 422 0
 658 024a 2846     		mov	r0, r5
 659 024c FFF7FEFF 		bl	Write_Data_Glcd
 660              	.LVL70:
 424:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 661              		.loc 1 424 0
 662 0250 4F20     		movs	r0, #79
 663 0252 FFF7FEFF 		bl	Write_Command_Glcd
 664              	.LVL71:
 425:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 665              		.loc 1 425 0
 666 0256 2046     		mov	r0, r4
 667 0258 FFF7FEFF 		bl	Write_Data_Glcd
 668              	.LVL72:
 427:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 669              		.loc 1 427 0
 670 025c 2220     		movs	r0, #34
 671 025e FFF7FEFF 		bl	Write_Command_Glcd
 672              	.LVL73:
 429:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 673              		.loc 1 429 0
 674 0262 FFF7CDFE 		bl	wr_dat_start
 675              	.LVL74:
 676 0266 0025     		movs	r5, #0
 677              	.LVL75:
 678              	.L47:
 404:../Source Files/lpc_ssp_glcd.c **** {
 679              		.loc 1 404 0 discriminator 1
 680 0268 0024     		movs	r4, #0
 681              	.LVL76:
 682              	.L50:
 434:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 683              		.loc 1 434 0
 684 026a 7B5B     		ldrh	r3, [r7, r5]
 685 026c 43FA04F3 		asr	r3, r3, r4
 686 0270 D807     		lsls	r0, r3, #31
 436:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 687              		.loc 1 436 0
 688 0272 54BF     		ite	pl
 689 0274 0748     		ldrpl	r0, .L54
 440:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 690              		.loc 1 440 0
 691 0276 0848     		ldrmi	r0, .L54+4
 432:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 692              		.loc 1 432 0
 693 0278 0134     		adds	r4, r4, #1
 440:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 694              		.loc 1 440 0
 695 027a 0188     		ldrh	r1, [r0, #0]
 696 027c 88B2     		uxth	r0, r1
 697 027e FFF7D3FE 		bl	wr_dat_only
 698              	.LVL77:
 432:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 699              		.loc 1 432 0
 700 0282 102C     		cmp	r4, #16
 701 0284 F1D1     		bne	.L50
 702 0286 0235     		adds	r5, r5, #2
 430:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 703              		.loc 1 430 0
 704 0288 302D     		cmp	r5, #48
 705 028a EDD1     		bne	.L47
 706              	.L51:
 446:../Source Files/lpc_ssp_glcd.c **** }
 707              		.loc 1 446 0
 708 028c BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 445:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 709              		.loc 1 445 0
 710 0290 FFF7C4BE 		b	wr_dat_stop
 711              	.LVL78:
 712              	.L55:
 713              		.align	2
 714              	.L54:
 715 0294 00000000 		.word	.LANCHOR1
 716 0298 00000000 		.word	.LANCHOR0
 717              		.cfi_endproc
 718              	.LFE69:
 720              		.align	1
 721              		.global	GLCD_Display_Char
 722              		.thumb
 723              		.thumb_func
 725              	GLCD_Display_Char:
 726              	.LFB70:
 457:../Source Files/lpc_ssp_glcd.c **** {
 727              		.loc 1 457 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              	.LVL79:
 458:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 732              		.loc 1 458 0
 733 029c 203A     		subs	r2, r2, #32
 734              	.LVL80:
 459:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 735              		.loc 1 459 0
 736 029e 1823     		movs	r3, #24
 737 02a0 D2B2     		uxtb	r2, r2
 738 02a2 5843     		muls	r0, r3, r0
 739              	.LVL81:
 457:../Source Files/lpc_ssp_glcd.c **** {
 740              		.loc 1 457 0
 741 02a4 10B5     		push	{r4, lr}
 742              	.LCFI9:
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 4, -8
 745              		.cfi_offset 14, -4
 459:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 746              		.loc 1 459 0
 747 02a6 5343     		muls	r3, r2, r3
 748 02a8 0901     		lsls	r1, r1, #4
 749              	.LVL82:
 750 02aa 054A     		ldr	r2, .L57
 751 02ac 8CB2     		uxth	r4, r1
 752 02ae 02EB4302 		add	r2, r2, r3, lsl #1
 753 02b2 81B2     		uxth	r1, r0
 754 02b4 2046     		mov	r0, r4
 460:../Source Files/lpc_ssp_glcd.c **** }
 755              		.loc 1 460 0
 756 02b6 BDE81040 		pop	{r4, lr}
 459:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 757              		.loc 1 459 0
 758 02ba FFF7FEBF 		b	GLCD_Draw_Char
 759              	.LVL83:
 760              	.L58:
 761 02be 00BF     		.align	2
 762              	.L57:
 763 02c0 00000000 		.word	.LANCHOR2
 764              		.cfi_endproc
 765              	.LFE70:
 767              		.align	1
 768              		.global	GLCD_PutPixel
 769              		.thumb
 770              		.thumb_func
 772              	GLCD_PutPixel:
 773              	.LFB62:
 295:../Source Files/lpc_ssp_glcd.c **** {
 774              		.loc 1 295 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              	.LVL84:
 779 02c4 70B5     		push	{r4, r5, r6, lr}
 780              	.LCFI10:
 781              		.cfi_def_cfa_offset 16
 782              		.cfi_offset 4, -16
 783              		.cfi_offset 5, -12
 784              		.cfi_offset 6, -8
 785              		.cfi_offset 14, -4
 295:../Source Files/lpc_ssp_glcd.c **** {
 786              		.loc 1 295 0
 787 02c6 0446     		mov	r4, r0
 296:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 788              		.loc 1 296 0
 789 02c8 4E20     		movs	r0, #78
 790              	.LVL85:
 295:../Source Files/lpc_ssp_glcd.c **** {
 791              		.loc 1 295 0
 792 02ca 0D46     		mov	r5, r1
 793 02cc 1646     		mov	r6, r2
 296:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 794              		.loc 1 296 0
 795 02ce FFF7FEFF 		bl	Write_Command_Glcd
 796              	.LVL86:
 297:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 797              		.loc 1 297 0
 798 02d2 2046     		mov	r0, r4
 799 02d4 FFF7FEFF 		bl	Write_Data_Glcd
 800              	.LVL87:
 299:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 801              		.loc 1 299 0
 802 02d8 4F20     		movs	r0, #79
 803 02da FFF7FEFF 		bl	Write_Command_Glcd
 804              	.LVL88:
 300:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 805              		.loc 1 300 0
 806 02de 2846     		mov	r0, r5
 807 02e0 FFF7FEFF 		bl	Write_Data_Glcd
 808              	.LVL89:
 302:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 809              		.loc 1 302 0
 810 02e4 2220     		movs	r0, #34
 811 02e6 FFF7FEFF 		bl	Write_Command_Glcd
 812              	.LVL90:
 303:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 813              		.loc 1 303 0
 814 02ea 3046     		mov	r0, r6
 304:../Source Files/lpc_ssp_glcd.c **** }
 815              		.loc 1 304 0
 816 02ec BDE87040 		pop	{r4, r5, r6, lr}
 303:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 817              		.loc 1 303 0
 818 02f0 FFF7FEBF 		b	Write_Data_Glcd
 819              	.LVL91:
 820              		.cfi_endproc
 821              	.LFE62:
 823              		.align	1
 824              		.global	GLCD_Line
 825              		.thumb
 826              		.thumb_func
 828              	GLCD_Line:
 829              	.LFB76:
 615:../Source Files/lpc_ssp_glcd.c **** {
 830              		.loc 1 615 0
 831              		.cfi_startproc
 832              		@ args = 4, pretend = 0, frame = 16
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              	.LVL92:
 835 02f4 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 836              	.LCFI11:
 837              		.cfi_def_cfa_offset 36
 838              		.cfi_offset 4, -36
 839              		.cfi_offset 5, -32
 840              		.cfi_offset 6, -28
 841              		.cfi_offset 7, -24
 842              		.cfi_offset 8, -20
 843              		.cfi_offset 9, -16
 844              		.cfi_offset 10, -12
 845              		.cfi_offset 11, -8
 846              		.cfi_offset 14, -4
 619:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 847              		.loc 1 619 0
 848 02f8 141A     		subs	r4, r2, r0
 620:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 849              		.loc 1 620 0
 850 02fa 5E1A     		subs	r6, r3, r1
 619:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 851              		.loc 1 619 0
 852 02fc 24B2     		sxth	r4, r4
 620:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 853              		.loc 1 620 0
 854 02fe 36B2     		sxth	r6, r6
 619:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 855              		.loc 1 619 0
 856 0300 002C     		cmp	r4, #0
 857 0302 B8BF     		it	lt
 858 0304 6442     		rsblt	r4, r4, #0
 859              	.LVL93:
 620:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 860              		.loc 1 620 0
 861 0306 002E     		cmp	r6, #0
 862 0308 B8BF     		it	lt
 863 030a 7642     		rsblt	r6, r6, #0
 864              	.LVL94:
 625:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 865              		.loc 1 625 0
 866 030c 4FF6FF75 		movw	r5, #65535
 634:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 867              		.loc 1 634 0
 868 0310 24B2     		sxth	r4, r4
 869              	.LVL95:
 870 0312 36B2     		sxth	r6, r6
 871              	.LVL96:
 615:../Source Files/lpc_ssp_glcd.c **** {
 872              		.loc 1 615 0
 873 0314 85B0     		sub	sp, sp, #20
 874              	.LCFI12:
 875              		.cfi_def_cfa_offset 56
 625:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 876              		.loc 1 625 0
 877 0316 9042     		cmp	r0, r2
 878 0318 CCBF     		ite	gt
 879 031a 2F46     		movgt	r7, r5
 880 031c 0127     		movle	r7, #1
 881              	.LVL97:
 629:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 882              		.loc 1 629 0
 883 031e 9942     		cmp	r1, r3
 884 0320 CCBF     		ite	gt
 885 0322 A846     		movgt	r8, r5
 886 0324 4FF00108 		movle	r8, #1
 887              	.LVL98:
 634:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 888              		.loc 1 634 0
 889 0328 B442     		cmp	r4, r6
 615:../Source Files/lpc_ssp_glcd.c **** {
 890              		.loc 1 615 0
 891 032a BDF83890 		ldrh	r9, [sp, #56]
 634:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 892              		.loc 1 634 0
 893 032e 29DB     		blt	.L63
 636:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 894              		.loc 1 636 0
 895 0330 4FEA460B 		lsl	fp, r6, #1
 649:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 896              		.loc 1 649 0
 897 0334 361B     		subs	r6, r6, r4
 898 0336 7300     		lsls	r3, r6, #1
 899              	.LVL99:
 636:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 900              		.loc 1 636 0
 901 0338 C4EB0B05 		rsb	r5, r4, fp
 902              	.LVL100:
 649:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 903              		.loc 1 649 0
 904 033c 0393     		str	r3, [sp, #12]
 638:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 905              		.loc 1 638 0
 906 033e 8A46     		mov	sl, r1
 907 0340 0026     		movs	r6, #0
 908              	.LVL101:
 909              	.L64:
 638:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 910              		.loc 1 638 0 is_stmt 0 discriminator 1
 911 0342 A642     		cmp	r6, r4
 912 0344 47DC     		bgt	.L60
 913              	.L67:
 640:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 914              		.loc 1 640 0 is_stmt 1
 915 0346 1FFA8AF3 		uxth	r3, sl
 916 034a 1FFA80FE 		uxth	lr, r0
 917 034e 1946     		mov	r1, r3
 918 0350 7046     		mov	r0, lr
 919              	.LVL102:
 920 0352 4A46     		mov	r2, r9
 921 0354 0193     		str	r3, [sp, #4]
 922 0356 CDF808E0 		str	lr, [sp, #8]
 923 035a FFF7FEFF 		bl	GLCD_PutPixel
 924              	.LVL103:
 925 035e DDF808C0 		ldr	ip, [sp, #8]
 642:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 926              		.loc 1 642 0
 927 0362 002D     		cmp	r5, #0
 928 0364 0CEB0701 		add	r1, ip, r7
 929 0368 019B     		ldr	r3, [sp, #4]
 930 036a 02DA     		bge	.L65
 644:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 931              		.loc 1 644 0
 932 036c 5D44     		add	r5, r5, fp
 933              	.LVL104:
 645:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 934              		.loc 1 645 0
 935 036e 88B2     		uxth	r0, r1
 936              	.LVL105:
 937 0370 06E0     		b	.L66
 938              	.LVL106:
 939              	.L65:
 649:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 940              		.loc 1 649 0
 941 0372 0398     		ldr	r0, [sp, #12]
 651:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 942              		.loc 1 651 0
 943 0374 03EB080A 		add	sl, r3, r8
 944              	.LVL107:
 649:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 945              		.loc 1 649 0
 946 0378 2D18     		adds	r5, r5, r0
 947              	.LVL108:
 651:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 948              		.loc 1 651 0
 949 037a 1FFA8AFA 		uxth	sl, sl
 650:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 950              		.loc 1 650 0
 951 037e 88B2     		uxth	r0, r1
 952              	.LVL109:
 953              	.L66:
 638:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 954              		.loc 1 638 0
 955 0380 0136     		adds	r6, r6, #1
 956              	.LVL110:
 957 0382 DEE7     		b	.L64
 958              	.LVL111:
 959              	.L63:
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 960              		.loc 1 670 0
 961 0384 A21B     		subs	r2, r4, r6
 962              	.LVL112:
 657:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 963              		.loc 1 657 0
 964 0386 4FEA440A 		lsl	sl, r4, #1
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 965              		.loc 1 670 0
 966 038a 5300     		lsls	r3, r2, #1
 967              	.LVL113:
 657:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 968              		.loc 1 657 0
 969 038c C6EB0A05 		rsb	r5, r6, sl
 970              	.LVL114:
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 971              		.loc 1 670 0
 972 0390 0393     		str	r3, [sp, #12]
 659:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 973              		.loc 1 659 0
 974 0392 8346     		mov	fp, r0
 975 0394 0024     		movs	r4, #0
 976              	.LVL115:
 977              	.L68:
 659:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 978              		.loc 1 659 0 is_stmt 0 discriminator 1
 979 0396 B442     		cmp	r4, r6
 980 0398 1DDC     		bgt	.L60
 981              	.L71:
 661:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 982              		.loc 1 661 0 is_stmt 1
 983 039a 1FFA81FC 		uxth	ip, r1
 984 039e 1FFA8BF3 		uxth	r3, fp
 985 03a2 6146     		mov	r1, ip
 986              	.LVL116:
 987 03a4 1846     		mov	r0, r3
 988 03a6 4A46     		mov	r2, r9
 989 03a8 CDF808C0 		str	ip, [sp, #8]
 990 03ac 0193     		str	r3, [sp, #4]
 991 03ae FFF7FEFF 		bl	GLCD_PutPixel
 992              	.LVL117:
 993 03b2 DDF808C0 		ldr	ip, [sp, #8]
 663:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 994              		.loc 1 663 0
 995 03b6 002D     		cmp	r5, #0
 996 03b8 0CEB0801 		add	r1, ip, r8
 997 03bc 0198     		ldr	r0, [sp, #4]
 998 03be 01DA     		bge	.L69
 665:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 999              		.loc 1 665 0
 1000 03c0 5544     		add	r5, r5, sl
 1001              	.LVL118:
 1002 03c2 05E0     		b	.L75
 1003              	.L69:
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1004              		.loc 1 670 0
 1005 03c4 039A     		ldr	r2, [sp, #12]
 671:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1006              		.loc 1 671 0
 1007 03c6 00EB070B 		add	fp, r0, r7
 1008              	.LVL119:
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1009              		.loc 1 670 0
 1010 03ca AD18     		adds	r5, r5, r2
 1011              	.LVL120:
 671:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1012              		.loc 1 671 0
 1013 03cc 1FFA8BFB 		uxth	fp, fp
 1014              	.L75:
 1015              	.LVL121:
 672:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1016              		.loc 1 672 0
 1017 03d0 89B2     		uxth	r1, r1
 1018              	.LVL122:
 659:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1019              		.loc 1 659 0
 1020 03d2 0134     		adds	r4, r4, #1
 1021              	.LVL123:
 1022 03d4 DFE7     		b	.L68
 1023              	.LVL124:
 1024              	.L60:
 676:../Source Files/lpc_ssp_glcd.c **** }
 1025              		.loc 1 676 0
 1026 03d6 05B0     		add	sp, sp, #20
 1027 03d8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1028              		.cfi_endproc
 1029              	.LFE76:
 1031              		.align	1
 1032              		.global	GLCD_Triangle
 1033              		.thumb
 1034              		.thumb_func
 1036              	GLCD_Triangle:
 1037              	.LFB79:
 792:../Source Files/lpc_ssp_glcd.c **** {
 1038              		.loc 1 792 0
 1039              		.cfi_startproc
 1040              		@ args = 8, pretend = 0, frame = 56
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042              	.LVL125:
 1043 03dc 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1044              	.LCFI13:
 1045              		.cfi_def_cfa_offset 36
 1046              		.cfi_offset 4, -36
 1047              		.cfi_offset 5, -32
 1048              		.cfi_offset 6, -28
 1049              		.cfi_offset 7, -24
 1050              		.cfi_offset 8, -20
 1051              		.cfi_offset 9, -16
 1052              		.cfi_offset 10, -12
 1053              		.cfi_offset 11, -8
 1054              		.cfi_offset 14, -4
 1055 03e0 91B0     		sub	sp, sp, #68
 1056              	.LCFI14:
 1057              		.cfi_def_cfa_offset 104
 792:../Source Files/lpc_ssp_glcd.c **** {
 1058              		.loc 1 792 0
 1059 03e2 0646     		mov	r6, r0
 1060 03e4 BDF86840 		ldrh	r4, [sp, #104]
 1061 03e8 BDF86C00 		ldrh	r0, [sp, #108]
 1062              	.LVL126:
 1063 03ec 0D46     		mov	r5, r1
 1064 03ee 1746     		mov	r7, r2
 1065 03f0 0E94     		str	r4, [sp, #56]
 1066 03f2 0F90     		str	r0, [sp, #60]
 793:../Source Files/lpc_ssp_glcd.c ****     if(fill)
 1067              		.loc 1 793 0
 1068 03f4 23BB     		cbnz	r3, .L77
 1069              	.LVL127:
 1070              	.L117:
 944:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, color);
 1071              		.loc 1 944 0
 1072 03f6 0E9C     		ldr	r4, [sp, #56]
 1073 03f8 B6F90000 		ldrsh	r0, [r6, #0]
 1074 03fc B6F90210 		ldrsh	r1, [r6, #2]
 1075 0400 B5F90020 		ldrsh	r2, [r5, #0]
 1076 0404 B5F90230 		ldrsh	r3, [r5, #2]
 1077 0408 0094     		str	r4, [sp, #0]
 1078 040a FFF7FEFF 		bl	GLCD_Line
 1079              	.LVL128:
 945:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, color);
 1080              		.loc 1 945 0
 1081 040e B7F90020 		ldrsh	r2, [r7, #0]
 1082 0412 B7F90230 		ldrsh	r3, [r7, #2]
 1083 0416 B6F90000 		ldrsh	r0, [r6, #0]
 1084 041a B6F90210 		ldrsh	r1, [r6, #2]
 1085 041e 0094     		str	r4, [sp, #0]
 1086 0420 FFF7FEFF 		bl	GLCD_Line
 1087              	.LVL129:
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, color);
 1088              		.loc 1 946 0
 1089 0424 B7F90020 		ldrsh	r2, [r7, #0]
 1090 0428 B7F90230 		ldrsh	r3, [r7, #2]
 1091 042c B5F90000 		ldrsh	r0, [r5, #0]
 1092 0430 B5F90210 		ldrsh	r1, [r5, #2]
 1093 0434 1A94     		str	r4, [sp, #104]
 948:../Source Files/lpc_ssp_glcd.c **** }
 1094              		.loc 1 948 0
 1095 0436 11B0     		add	sp, sp, #68
 1096 0438 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, color);
 1097              		.loc 1 946 0
 1098 043c FFF7FEBF 		b	GLCD_Line
 1099              	.LVL130:
 1100              	.L77:
 1101              	.LBB10:
 801:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 1102              		.loc 1 801 0
 1103 0440 7388     		ldrh	r3, [r6, #2]
 1104              	.LVL131:
 1105 0442 4A88     		ldrh	r2, [r1, #2]
 1106              	.LVL132:
 1107 0444 1CB2     		sxth	r4, r3
 1108 0446 11B2     		sxth	r1, r2
 1109              	.LVL133:
 1110 0448 8C42     		cmp	r4, r1
 1111 044a 14DD     		ble	.L78
 801:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 1112              		.loc 1 801 0 is_stmt 0 discriminator 1
 1113 044c 82EA0300 		eor	r0, r2, r3
 1114 0450 7080     		strh	r0, [r6, #2]	@ movhi
 1115 0452 6B88     		ldrh	r3, [r5, #2]
 1116 0454 2C88     		ldrh	r4, [r5, #0]
 1117 0456 5840     		eors	r0, r0, r3
 1118 0458 6880     		strh	r0, [r5, #2]	@ movhi
 1119 045a 7288     		ldrh	r2, [r6, #2]
 1120 045c 3188     		ldrh	r1, [r6, #0]
 1121 045e 5040     		eors	r0, r0, r2
 1122 0460 7080     		strh	r0, [r6, #2]	@ movhi
 1123 0462 84EA0100 		eor	r0, r4, r1
 1124 0466 83B2     		uxth	r3, r0
 1125 0468 3380     		strh	r3, [r6, #0]	@ movhi
 1126 046a 2A88     		ldrh	r2, [r5, #0]
 1127 046c 5340     		eors	r3, r3, r2
 1128 046e 2B80     		strh	r3, [r5, #0]	@ movhi
 1129 0470 3488     		ldrh	r4, [r6, #0]
 1130 0472 6340     		eors	r3, r3, r4
 1131 0474 3380     		strh	r3, [r6, #0]	@ movhi
 1132              	.L78:
 802:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 1133              		.loc 1 802 0 is_stmt 1
 1134 0476 7388     		ldrh	r3, [r6, #2]
 1135 0478 7A88     		ldrh	r2, [r7, #2]
 1136 047a 18B2     		sxth	r0, r3
 1137 047c 11B2     		sxth	r1, r2
 1138 047e 8842     		cmp	r0, r1
 1139 0480 14DD     		ble	.L79
 802:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 1140              		.loc 1 802 0 is_stmt 0 discriminator 1
 1141 0482 82EA0304 		eor	r4, r2, r3
 1142 0486 7480     		strh	r4, [r6, #2]	@ movhi
 1143 0488 7B88     		ldrh	r3, [r7, #2]
 1144 048a 3888     		ldrh	r0, [r7, #0]
 1145 048c 5C40     		eors	r4, r4, r3
 1146 048e 7C80     		strh	r4, [r7, #2]	@ movhi
 1147 0490 7288     		ldrh	r2, [r6, #2]
 1148 0492 3188     		ldrh	r1, [r6, #0]
 1149 0494 5440     		eors	r4, r4, r2
 1150 0496 7480     		strh	r4, [r6, #2]	@ movhi
 1151 0498 80EA0104 		eor	r4, r0, r1
 1152 049c A3B2     		uxth	r3, r4
 1153 049e 3380     		strh	r3, [r6, #0]	@ movhi
 1154 04a0 3A88     		ldrh	r2, [r7, #0]
 1155 04a2 5340     		eors	r3, r3, r2
 1156 04a4 3B80     		strh	r3, [r7, #0]	@ movhi
 1157 04a6 3088     		ldrh	r0, [r6, #0]
 1158 04a8 4340     		eors	r3, r3, r0
 1159 04aa 3380     		strh	r3, [r6, #0]	@ movhi
 1160              	.L79:
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 1161              		.loc 1 803 0 is_stmt 1
 1162 04ac 6C88     		ldrh	r4, [r5, #2]
 1163 04ae 7B88     		ldrh	r3, [r7, #2]
 1164 04b0 22B2     		sxth	r2, r4
 1165 04b2 19B2     		sxth	r1, r3
 1166 04b4 8A42     		cmp	r2, r1
 1167 04b6 14DD     		ble	.L80
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 1168              		.loc 1 803 0 is_stmt 0 discriminator 1
 1169 04b8 83EA0400 		eor	r0, r3, r4
 1170 04bc 6880     		strh	r0, [r5, #2]	@ movhi
 1171 04be 7C88     		ldrh	r4, [r7, #2]
 1172 04c0 3A88     		ldrh	r2, [r7, #0]
 1173 04c2 6040     		eors	r0, r0, r4
 1174 04c4 7880     		strh	r0, [r7, #2]	@ movhi
 1175 04c6 6B88     		ldrh	r3, [r5, #2]
 1176 04c8 2988     		ldrh	r1, [r5, #0]
 1177 04ca 5840     		eors	r0, r0, r3
 1178 04cc 6880     		strh	r0, [r5, #2]	@ movhi
 1179 04ce 82EA0100 		eor	r0, r2, r1
 1180 04d2 84B2     		uxth	r4, r0
 1181 04d4 2C80     		strh	r4, [r5, #0]	@ movhi
 1182 04d6 3B88     		ldrh	r3, [r7, #0]
 1183 04d8 5C40     		eors	r4, r4, r3
 1184 04da 3C80     		strh	r4, [r7, #0]	@ movhi
 1185 04dc 2A88     		ldrh	r2, [r5, #0]
 1186 04de 5440     		eors	r4, r4, r2
 1187 04e0 2C80     		strh	r4, [r5, #0]	@ movhi
 1188              	.L80:
 805:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1189              		.loc 1 805 0 is_stmt 1
 1190 04e2 3188     		ldrh	r1, [r6, #0]
 1191 04e4 7388     		ldrh	r3, [r6, #2]
 807:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1192              		.loc 1 807 0
 1193 04e6 2888     		ldrh	r0, [r5, #0]
 805:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1194              		.loc 1 805 0
 1195 04e8 1FFA83F8 		uxth	r8, r3
 1196 04ec 8CB2     		uxth	r4, r1
 1197              	.LVL134:
 1198 04ee CDF81880 		str	r8, [sp, #24]
 1199              	.LVL135:
 807:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1200              		.loc 1 807 0
 1201 04f2 021B     		subs	r2, r0, r4
 1202 04f4 90B2     		uxth	r0, r2
 809:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1203              		.loc 1 809 0
 1204 04f6 B5F802A0 		ldrh	sl, [r5, #2]
 1205 04fa DDF818B0 		ldr	fp, [sp, #24]
 807:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1206              		.loc 1 807 0
 1207 04fe 1FFA80F9 		uxth	r9, r0
 1208              	.LVL136:
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1209              		.loc 1 808 0
 1210 0502 19F4004F 		tst	r9, #32768
 809:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1211              		.loc 1 809 0
 1212 0506 CBEB0A02 		rsb	r2, fp, sl
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1213              		.loc 1 808 0
 1214 050a 18BF     		it	ne
 1215 050c C0F10009 		rsbne	r9, r0, #0
 809:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1216              		.loc 1 809 0
 1217 0510 90B2     		uxth	r0, r2
 1218              	.LVL137:
 811:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1219              		.loc 1 811 0
 1220 0512 3A78     		ldrb	r2, [r7, #0]	@ zero_extendqisi2
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1221              		.loc 1 808 0
 1222 0514 18BF     		it	ne
 1223 0516 4FF6FF78 		movwne	r8, #65535
 811:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1224              		.loc 1 811 0
 1225 051a C1EB0201 		rsb	r1, r1, r2
 1226              	.LVL138:
 1227 051e 4AB2     		sxtb	r2, r1
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1228              		.loc 1 812 0
 1229 0520 11B2     		sxth	r1, r2
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1230              		.loc 1 808 0
 1231 0522 0CBF     		ite	eq
 1232 0524 4FF00108 		moveq	r8, #1
 1233 0528 1FFA89F9 		uxthne	r9, r9
 1234              	.LVL139:
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1235              		.loc 1 812 0
 1236 052c 0029     		cmp	r1, #0
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1237              		.loc 1 808 0
 1238 052e CDF82080 		str	r8, [sp, #32]
 1239              	.LVL140:
 809:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1240              		.loc 1 809 0
 1241 0532 0490     		str	r0, [sp, #16]
 1242              	.LVL141:
 811:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1243              		.loc 1 811 0
 1244 0534 1FFA82FC 		uxth	ip, r2
 1245              	.LVL142:
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1246              		.loc 1 812 0
 1247 0538 05DA     		bge	.L120
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1248              		.loc 1 812 0 is_stmt 0 discriminator 1
 1249 053a 5242     		negs	r2, r2
 1250              	.LVL143:
 1251 053c 1FFA82FC 		uxth	ip, r2
 1252              	.LVL144:
 1253 0540 4FF6FF7E 		movw	lr, #65535
 1254 0544 01E0     		b	.L137
 1255              	.LVL145:
 1256              	.L120:
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1257              		.loc 1 812 0
 1258 0546 4FF0010E 		mov	lr, #1
 1259              	.LVL146:
 1260              	.L137:
 813:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1261              		.loc 1 813 0 is_stmt 1
 1262 054a B878     		ldrb	r0, [r7, #2]	@ zero_extendqisi2
 815:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1263              		.loc 1 815 0
 1264 054c DDF810B0 		ldr	fp, [sp, #16]
 813:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1265              		.loc 1 813 0
 1266 0550 C11A     		subs	r1, r0, r3
 1267 0552 49B2     		sxtb	r1, r1
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1268              		.loc 1 812 0
 1269 0554 CDF828E0 		str	lr, [sp, #40]
 1270              	.LVL147:
 815:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1271              		.loc 1 815 0
 1272 0558 0FFA8BF2 		sxth	r2, fp
 1273 055c 0FFA89FE 		sxth	lr, r9
 813:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1274              		.loc 1 813 0
 1275 0560 1FFA81F8 		uxth	r8, r1
 815:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1276              		.loc 1 815 0
 1277 0564 7245     		cmp	r2, lr
 813:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1278              		.loc 1 813 0
 1279 0566 0846     		mov	r0, r1	@ movhi
 1280 0568 CDF83480 		str	r8, [sp, #52]
 1281              	.LVL148:
 815:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1282              		.loc 1 815 0
 1283 056c 0FDD     		ble	.L121
 817:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 1284              		.loc 1 817 0
 1285 056e DDF81080 		ldr	r8, [sp, #16]
 1286 0572 89EA0809 		eor	r9, r9, r8
 1287              	.LVL149:
 1288 0576 89EA0802 		eor	r2, r9, r8
 1289 057a 1FFA82FB 		uxth	fp, r2
 1290 057e 8BEA090E 		eor	lr, fp, r9
 1291 0582 CDF810B0 		str	fp, [sp, #16]
 1292 0586 1FFA8EF9 		uxth	r9, lr
 1293              	.LVL150:
 818:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1294              		.loc 1 818 0
 1295 058a 0122     		movs	r2, #1
 1296 058c 00E0     		b	.L138
 1297              	.LVL151:
 1298              	.L121:
 796:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 1299              		.loc 1 796 0
 1300 058e 0022     		movs	r2, #0
 1301              	.LVL152:
 1302              	.L138:
 820:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 1303              		.loc 1 820 0
 1304 0590 00B2     		sxth	r0, r0
 1305              	.LVL153:
 1306 0592 0FFA8CF8 		sxth	r8, ip
 1307 0596 4045     		cmp	r0, r8
 796:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 1308              		.loc 1 796 0
 1309 0598 0792     		str	r2, [sp, #28]
 1310              	.LVL154:
 820:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 1311              		.loc 1 820 0
 1312 059a 0BDD     		ble	.L122
 822:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 1313              		.loc 1 822 0
 1314 059c 8CEA0100 		eor	r0, ip, r1
 1315 05a0 81B2     		uxth	r1, r0
 1316              	.LVL155:
 1317 05a2 81EA0C0C 		eor	ip, r1, ip
 1318              	.LVL156:
 1319 05a6 8CEA0100 		eor	r0, ip, r1
 1320              	.LVL157:
 1321 05aa 81B2     		uxth	r1, r0
 1322              	.LVL158:
 823:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 1323              		.loc 1 823 0
 1324 05ac 0120     		movs	r0, #1
 822:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 1325              		.loc 1 822 0
 1326 05ae 0D91     		str	r1, [sp, #52]
 1327              	.LVL159:
 823:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 1328              		.loc 1 823 0
 1329 05b0 0990     		str	r0, [sp, #36]
 1330 05b2 01E0     		b	.L84
 1331              	.LVL160:
 1332              	.L122:
 797:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 1333              		.loc 1 797 0
 1334 05b4 0021     		movs	r1, #0
 1335              	.LVL161:
 1336 05b6 0991     		str	r1, [sp, #36]
 1337              	.LVL162:
 1338              	.L84:
 826:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 1339              		.loc 1 826 0
 1340 05b8 4CF34E01 		sbfx	r1, ip, #1, #15
 1341 05bc 89B2     		uxth	r1, r1
 828:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 1342              		.loc 1 828 0
 1343 05be 9A45     		cmp	sl, r3
 826:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 1344              		.loc 1 826 0
 1345 05c0 0591     		str	r1, [sp, #20]
 1346              	.LVL163:
 828:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 1347              		.loc 1 828 0
 1348 05c2 00F09580 		beq	.L85
 829:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 1349              		.loc 1 829 0
 1350 05c6 49F34E03 		sbfx	r3, r9, #1, #15
 1351 05ca 1FFA83FA 		uxth	sl, r3
 1352              	.LVL164:
 1353              	.LBB11:
 805:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1354              		.loc 1 805 0
 1355 05ce A046     		mov	r8, r4
 831:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 1356              		.loc 1 831 0
 1357 05d0 4FF0000B 		mov	fp, #0
 1358              	.LVL165:
 1359              	.L86:
 831:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 1360              		.loc 1 831 0 is_stmt 0 discriminator 1
 1361 05d4 0FFA89F3 		sxth	r3, r9
 1362 05d8 9B45     		cmp	fp, r3
 1363 05da 80F28980 		bge	.L85
 1364              	.L100:
 1365              	.LVL166:
 834:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1366              		.loc 1 834 0 is_stmt 1
 1367 05de A045     		cmp	r8, r4
 837:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1368              		.loc 1 837 0
 1369 05e0 4FF0000E 		mov	lr, #0
 834:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1370              		.loc 1 834 0
 1371 05e4 39BF     		ittee	cc
 1372 05e6 2246     		movcc	r2, r4
 1373 05e8 4146     		movcc	r1, r8
 1374 05ea 4246     		movcs	r2, r8
 1375 05ec 2146     		movcs	r1, r4
 837:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1376              		.loc 1 837 0
 1377 05ee CDF82CE0 		str	lr, [sp, #44]
 1378              	.LVL167:
 1379              	.L88:
 837:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1380              		.loc 1 837 0 is_stmt 0 discriminator 1
 1381 05f2 9B45     		cmp	fp, r3
 1382 05f4 08DA     		bge	.L91
 1383              	.L94:
 840:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1384              		.loc 1 840 0 is_stmt 1
 1385 05f6 0498     		ldr	r0, [sp, #16]
 839:../Source Files/lpc_ssp_glcd.c ****     			i++;
 1386              		.loc 1 839 0
 1387 05f8 0BF1010B 		add	fp, fp, #1
 1388              	.LVL168:
 840:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1389              		.loc 1 840 0
 1390 05fc 8244     		add	sl, sl, r0
 1391              	.LVL169:
 839:../Source Files/lpc_ssp_glcd.c ****     			i++;
 1392              		.loc 1 839 0
 1393 05fe 5FFA8BFB 		uxtb	fp, fp
 1394              	.LVL170:
 840:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1395              		.loc 1 840 0
 1396 0602 1FFA8AFA 		uxth	sl, sl
 1397              	.LVL171:
 841:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1398              		.loc 1 841 0
 1399 0606 0FE0     		b	.L89
 1400              	.LVL172:
 1401              	.L91:
 1402 0608 0023     		movs	r3, #0
 1403 060a 0C93     		str	r3, [sp, #48]
 1404 060c 2FE0     		b	.L92
 1405              	.LVL173:
 1406              	.L93:
 844:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1407              		.loc 1 844 0
 1408 060e 0798     		ldr	r0, [sp, #28]
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1409              		.loc 1 791 0
 1410 0610 C9EB0A0A 		rsb	sl, r9, sl
 1411              	.LVL174:
 1412 0614 1FFA8AFA 		uxth	sl, sl
 1413              	.LVL175:
 844:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1414              		.loc 1 844 0
 1415 0618 0028     		cmp	r0, #0
 1416 061a F5D0     		beq	.L91
 1417              	.L90:
 844:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1418              		.loc 1 844 0 is_stmt 0 discriminator 1
 1419 061c DDF820E0 		ldr	lr, [sp, #32]
 1420 0620 1FFA8EFE 		uxth	lr, lr
 1421 0624 CDF82CE0 		str	lr, [sp, #44]
 1422              	.LVL176:
 1423              	.L89:
 841:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1424              		.loc 1 841 0 is_stmt 1 discriminator 1
 1425 0628 9A45     		cmp	sl, r3
 1426 062a F0DA     		bge	.L93
 847:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 1427              		.loc 1 847 0
 1428 062c 0798     		ldr	r0, [sp, #28]
 1429 062e 0028     		cmp	r0, #0
 1430 0630 EAD1     		bne	.L91
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1431              		.loc 1 791 0
 1432 0632 DDF820E0 		ldr	lr, [sp, #32]
 1433 0636 F044     		add	r8, r8, lr
 1434              	.LVL177:
 1435 0638 1FFA88F8 		uxth	r8, r8
 1436              	.LVL178:
 1437 063c D9E7     		b	.L88
 1438              	.LVL179:
 1439              	.L97:
 1440 063e 0598     		ldr	r0, [sp, #20]
 1441 0640 CCEB0003 		rsb	r3, ip, r0
 1442 0644 98B2     		uxth	r0, r3
 859:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1443              		.loc 1 859 0
 1444 0646 099B     		ldr	r3, [sp, #36]
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1445              		.loc 1 791 0
 1446 0648 0590     		str	r0, [sp, #20]
 859:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1447              		.loc 1 859 0
 1448 064a C3B1     		cbz	r3, .L96
 859:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1449              		.loc 1 859 0 is_stmt 0 discriminator 1
 1450 064c DDF828E0 		ldr	lr, [sp, #40]
 1451 0650 1FFA8EFE 		uxth	lr, lr
 1452 0654 CDF830E0 		str	lr, [sp, #48]
 1453              	.L95:
 856:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 1454              		.loc 1 856 0 is_stmt 1 discriminator 1
 1455 0658 0598     		ldr	r0, [sp, #20]
 1456 065a 0FFA8CF3 		sxth	r3, ip
 1457 065e 9842     		cmp	r0, r3
 1458 0660 EDDA     		bge	.L97
 862:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 1459              		.loc 1 862 0
 1460 0662 099B     		ldr	r3, [sp, #36]
 1461 0664 5BB9     		cbnz	r3, .L96
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1462              		.loc 1 791 0
 1463 0666 DDF828E0 		ldr	lr, [sp, #40]
 1464 066a 7444     		add	r4, r4, lr
 1465              	.LVL180:
 1466 066c A4B2     		uxth	r4, r4
 1467              	.LVL181:
 1468              	.L92:
 855:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 1469              		.loc 1 855 0
 1470 066e 0598     		ldr	r0, [sp, #20]
 1471 0670 DDF834E0 		ldr	lr, [sp, #52]
 1472 0674 00EB0E03 		add	r3, r0, lr
 1473 0678 98B2     		uxth	r0, r3
 1474 067a 0590     		str	r0, [sp, #20]
 856:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 1475              		.loc 1 856 0
 1476 067c ECE7     		b	.L95
 1477              	.L96:
 868:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 1478              		.loc 1 868 0
 1479 067e 069B     		ldr	r3, [sp, #24]
 1480 0680 8845     		cmp	r8, r1
 1481 0682 38BF     		it	cc
 1482 0684 4146     		movcc	r1, r8
 1483 0686 9045     		cmp	r8, r2
 1484 0688 28BF     		it	cs
 1485 068a 4246     		movcs	r2, r8
 1486 068c 88B2     		uxth	r0, r1
 1487              	.LVL182:
 1488 068e 92B2     		uxth	r2, r2
 1489              	.LVL183:
 1490 0690 19B2     		sxth	r1, r3
 1491 0692 0F9B     		ldr	r3, [sp, #60]
 1492 0694 A042     		cmp	r0, r4
 1493 0696 28BF     		it	cs
 1494 0698 2046     		movcs	r0, r4
 1495              	.LVL184:
 1496 069a A242     		cmp	r2, r4
 1497 069c 38BF     		it	cc
 1498 069e 2246     		movcc	r2, r4
 1499              	.LVL185:
 1500 06a0 0093     		str	r3, [sp, #0]
 1501 06a2 00B2     		sxth	r0, r0
 1502 06a4 0B46     		mov	r3, r1
 1503 06a6 12B2     		sxth	r2, r2
 1504 06a8 CDF80CC0 		str	ip, [sp, #12]
 1505 06ac FFF7FEFF 		bl	GLCD_Line
 1506              	.LVL186:
 871:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1507              		.loc 1 871 0
 1508 06b0 0799     		ldr	r1, [sp, #28]
 1509 06b2 DDF80CC0 		ldr	ip, [sp, #12]
 1510 06b6 19B9     		cbnz	r1, .L98
 871:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1511              		.loc 1 871 0 is_stmt 0 discriminator 1
 1512 06b8 0898     		ldr	r0, [sp, #32]
 1513 06ba 8044     		add	r8, r8, r0
 1514              	.LVL187:
 1515 06bc 1FFA88F8 		uxth	r8, r8
 1516              	.LVL188:
 1517              	.L98:
 872:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1518              		.loc 1 872 0 is_stmt 1
 1519 06c0 0B9A     		ldr	r2, [sp, #44]
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1520              		.loc 1 873 0
 1521 06c2 0999     		ldr	r1, [sp, #36]
 872:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1522              		.loc 1 872 0
 1523 06c4 08EB0203 		add	r3, r8, r2
 1524 06c8 1FFA83F8 		uxth	r8, r3
 1525              	.LVL189:
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1526              		.loc 1 873 0
 1527 06cc 19B9     		cbnz	r1, .L99
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1528              		.loc 1 873 0 is_stmt 0 discriminator 1
 1529 06ce DDF828E0 		ldr	lr, [sp, #40]
 1530 06d2 7444     		add	r4, r4, lr
 1531              	.LVL190:
 1532 06d4 A4B2     		uxth	r4, r4
 1533              	.LVL191:
 1534              	.L99:
 875:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1535              		.loc 1 875 0 is_stmt 1
 1536 06d6 0699     		ldr	r1, [sp, #24]
 874:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1537              		.loc 1 874 0
 1538 06d8 0C98     		ldr	r0, [sp, #48]
 1539 06da 2318     		adds	r3, r4, r0
 1540              	.LVL192:
 875:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1541              		.loc 1 875 0
 1542 06dc 481C     		adds	r0, r1, #1
 874:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1543              		.loc 1 874 0
 1544 06de 9CB2     		uxth	r4, r3
 1545              	.LVL193:
 875:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1546              		.loc 1 875 0
 1547 06e0 83B2     		uxth	r3, r0
 1548              	.LVL194:
 1549 06e2 0693     		str	r3, [sp, #24]
 876:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 1550              		.loc 1 876 0
 1551 06e4 B5F90200 		ldrsh	r0, [r5, #2]
 1552 06e8 0699     		ldr	r1, [sp, #24]
 1553 06ea 8142     		cmp	r1, r0
 1554 06ec 7FF472AF 		bne	.L86
 1555              	.LVL195:
 1556              	.L85:
 1557              	.LBE11:
 880:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1558              		.loc 1 880 0
 1559 06f0 3A78     		ldrb	r2, [r7, #0]	@ zero_extendqisi2
 1560 06f2 B5F800A0 		ldrh	sl, [r5, #0]
 1561 06f6 CAEB0203 		rsb	r3, sl, r2
 1562 06fa 58B2     		sxtb	r0, r3
 1563 06fc 02B2     		sxth	r2, r0
 1564 06fe 002A     		cmp	r2, #0
 1565 0700 1FFA80F9 		uxth	r9, r0
 1566              	.LVL196:
 1567 0704 07DA     		bge	.L127
 880:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1568              		.loc 1 880 0 is_stmt 0 discriminator 1
 1569 0706 C0F10009 		rsb	r9, r0, #0
 1570 070a 4FF6FF70 		movw	r0, #65535
 1571              	.LVL197:
 1572 070e 1FFA89F9 		uxth	r9, r9
 1573              	.LVL198:
 1574 0712 0790     		str	r0, [sp, #28]
 1575 0714 01E0     		b	.L101
 1576              	.LVL199:
 1577              	.L127:
 880:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1578              		.loc 1 880 0
 1579 0716 0123     		movs	r3, #1
 1580 0718 0793     		str	r3, [sp, #28]
 1581              	.LVL200:
 1582              	.L101:
 881:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1583              		.loc 1 881 0 is_stmt 1
 1584 071a B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 1585 071c AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 882:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 1586              		.loc 1 882 0
 1587 071e 1FFA8AF8 		uxth	r8, sl
 881:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1588              		.loc 1 881 0
 1589 0722 8B1A     		subs	r3, r1, r2
 1590 0724 58B2     		sxtb	r0, r3
 884:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1591              		.loc 1 884 0
 1592 0726 02B2     		sxth	r2, r0
 1593 0728 0FFA89F1 		sxth	r1, r9
 881:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1594              		.loc 1 881 0
 1595 072c 1FFA80FB 		uxth	fp, r0
 884:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1596              		.loc 1 884 0
 1597 0730 8A42     		cmp	r2, r1
 881:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1598              		.loc 1 881 0
 1599 0732 CDF830B0 		str	fp, [sp, #48]
 1600              	.LVL201:
 884:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1601              		.loc 1 884 0
 1602 0736 0BDD     		ble	.L128
 886:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 1603              		.loc 1 886 0
 1604 0738 89EA0003 		eor	r3, r9, r0
 1605 073c 98B2     		uxth	r0, r3
 1606              	.LVL202:
 1607 073e 80EA0909 		eor	r9, r0, r9
 1608              	.LVL203:
 1609 0742 89EA0003 		eor	r3, r9, r0
 1610              	.LVL204:
 1611 0746 98B2     		uxth	r0, r3
 1612              	.LVL205:
 887:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1613              		.loc 1 887 0
 1614 0748 0123     		movs	r3, #1
 886:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 1615              		.loc 1 886 0
 1616 074a 0C90     		str	r0, [sp, #48]
 1617              	.LVL206:
 887:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1618              		.loc 1 887 0
 1619 074c 0493     		str	r3, [sp, #16]
 1620 074e 01E0     		b	.L102
 1621              	.LVL207:
 1622              	.L128:
 888:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 1623              		.loc 1 888 0
 1624 0750 0021     		movs	r1, #0
 1625 0752 0491     		str	r1, [sp, #16]
 1626              	.LVL208:
 1627              	.L102:
 890:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 1628              		.loc 1 890 0
 1629 0754 C9F3470B 		ubfx	fp, r9, #1, #8
 1630              	.LVL209:
 1631              	.LBB12:
 892:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1632              		.loc 1 892 0
 1633 0758 4FF0000A 		mov	sl, #0
 1634              	.LVL210:
 1635              	.L103:
 892:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1636              		.loc 1 892 0 is_stmt 0 discriminator 1
 1637 075c 0FFA89F3 		sxth	r3, r9
 1638 0760 9A45     		cmp	sl, r3
 1639 0762 3FF748AE 		bgt	.L117
 1640              	.L118:
 1641              	.LVL211:
 895:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1642              		.loc 1 895 0 is_stmt 1
 1643 0766 A045     		cmp	r8, r4
 1644 0768 39BF     		ittee	cc
 1645 076a 2246     		movcc	r2, r4
 1646 076c 4146     		movcc	r1, r8
 1647 076e 4246     		movcs	r2, r8
 1648 0770 2146     		movcs	r1, r4
 1649              	.LVL212:
 1650              	.L135:
 898:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1651              		.loc 1 898 0 discriminator 1
 1652 0772 9A45     		cmp	sl, r3
 1653 0774 12DA     		bge	.L140
 1654              	.L110:
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1655              		.loc 1 791 0
 1656 0776 DDF830E0 		ldr	lr, [sp, #48]
 1657 077a 0BEB0E00 		add	r0, fp, lr
 1658 077e 1FFA80FB 		uxth	fp, r0
 1659              	.LVL213:
 901:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1660              		.loc 1 901 0
 1661 0782 9B45     		cmp	fp, r3
 1662 0784 08DB     		blt	.L106
 904:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1663              		.loc 1 904 0
 1664 0786 049B     		ldr	r3, [sp, #16]
 903:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 1665              		.loc 1 903 0
 1666 0788 C9EB0B00 		rsb	r0, r9, fp
 1667              	.LVL214:
 1668 078c 1FFA80FB 		uxth	fp, r0
 1669              	.LVL215:
 904:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1670              		.loc 1 904 0
 1671 0790 3BB1     		cbz	r3, .L130
 904:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1672              		.loc 1 904 0 is_stmt 0 discriminator 1
 1673 0792 079B     		ldr	r3, [sp, #28]
 1674 0794 9BB2     		uxth	r3, r3
 1675 0796 02E0     		b	.L139
 1676              	.L106:
 1677              	.LVL216:
 907:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 1678              		.loc 1 907 0 is_stmt 1
 1679 0798 0498     		ldr	r0, [sp, #16]
 1680 079a 60B1     		cbz	r0, .L108
 1681              	.LVL217:
 1682              	.L140:
 1683 079c 0023     		movs	r3, #0
 1684              	.L139:
 1685 079e 0893     		str	r3, [sp, #32]
 1686 07a0 01E0     		b	.L107
 1687              	.LVL218:
 1688              	.L130:
 904:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1689              		.loc 1 904 0
 1690 07a2 0498     		ldr	r0, [sp, #16]
 1691              	.LVL219:
 1692 07a4 0890     		str	r0, [sp, #32]
 1693              	.LVL220:
 1694              	.L107:
 913:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 1695              		.loc 1 913 0 discriminator 1
 1696 07a6 B7F90000 		ldrsh	r0, [r7, #0]
 1697 07aa 4FF0000E 		mov	lr, #0
 1698 07ae 0290     		str	r0, [sp, #8]
 1699 07b0 CDF82CE0 		str	lr, [sp, #44]
 1700 07b4 1EE0     		b	.L109
 1701              	.LVL221:
 1702              	.L108:
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1703              		.loc 1 791 0
 1704 07b6 0798     		ldr	r0, [sp, #28]
 909:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 1705              		.loc 1 909 0
 1706 07b8 0AF1010A 		add	sl, sl, #1
 1707              	.LVL222:
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1708              		.loc 1 791 0
 1709 07bc 8044     		add	r8, r8, r0
 1710              	.LVL223:
 1711 07be 1FFA88F8 		uxth	r8, r8
 1712              	.LVL224:
 909:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 1713              		.loc 1 909 0
 1714 07c2 5FFA8AFA 		uxtb	sl, sl
 1715              	.LVL225:
 1716 07c6 D4E7     		b	.L135
 1717              	.LVL226:
 1718              	.L113:
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1719              		.loc 1 791 0
 1720 07c8 DDF814E0 		ldr	lr, [sp, #20]
 1721 07cc CCEB0E03 		rsb	r3, ip, lr
 1722 07d0 98B2     		uxth	r0, r3
 919:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 1723              		.loc 1 919 0
 1724 07d2 099B     		ldr	r3, [sp, #36]
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1725              		.loc 1 791 0
 1726 07d4 0590     		str	r0, [sp, #20]
 919:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 1727              		.loc 1 919 0
 1728 07d6 CBB1     		cbz	r3, .L112
 919:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 1729              		.loc 1 919 0 is_stmt 0 discriminator 1
 1730 07d8 0A9B     		ldr	r3, [sp, #40]
 1731 07da 98B2     		uxth	r0, r3
 1732 07dc 0B90     		str	r0, [sp, #44]
 1733              	.L111:
 916:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 1734              		.loc 1 916 0 is_stmt 1 discriminator 1
 1735 07de DDF814E0 		ldr	lr, [sp, #20]
 1736 07e2 0FFA8CF0 		sxth	r0, ip
 1737 07e6 8645     		cmp	lr, r0
 1738 07e8 EEDA     		bge	.L113
 922:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 1739              		.loc 1 922 0
 1740 07ea 099B     		ldr	r3, [sp, #36]
 1741 07ec 73B9     		cbnz	r3, .L112
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1742              		.loc 1 791 0
 1743 07ee 0A98     		ldr	r0, [sp, #40]
 1744 07f0 2418     		adds	r4, r4, r0
 1745              	.LVL227:
 1746 07f2 A4B2     		uxth	r4, r4
 1747              	.LVL228:
 1748              	.L109:
 913:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 1749              		.loc 1 913 0 discriminator 1
 1750 07f4 DDF808E0 		ldr	lr, [sp, #8]
 1751 07f8 7445     		cmp	r4, lr
 1752 07fa 07D0     		beq	.L112
 1753              	.L114:
 915:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 1754              		.loc 1 915 0
 1755 07fc DDF814E0 		ldr	lr, [sp, #20]
 1756 0800 0D9B     		ldr	r3, [sp, #52]
 1757 0802 0EEB0300 		add	r0, lr, r3
 1758 0806 83B2     		uxth	r3, r0
 1759 0808 0593     		str	r3, [sp, #20]
 916:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 1760              		.loc 1 916 0
 1761 080a E8E7     		b	.L111
 1762              	.L112:
 1763              	.LVL229:
 929:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 1764              		.loc 1 929 0
 1765 080c 069B     		ldr	r3, [sp, #24]
 1766 080e 8845     		cmp	r8, r1
 1767 0810 38BF     		it	cc
 1768 0812 4146     		movcc	r1, r8
 1769 0814 9045     		cmp	r8, r2
 1770 0816 28BF     		it	cs
 1771 0818 4246     		movcs	r2, r8
 1772 081a 88B2     		uxth	r0, r1
 1773              	.LVL230:
 1774 081c 92B2     		uxth	r2, r2
 1775              	.LVL231:
 1776 081e 19B2     		sxth	r1, r3
 1777 0820 0F9B     		ldr	r3, [sp, #60]
 1778 0822 A042     		cmp	r0, r4
 1779 0824 28BF     		it	cs
 1780 0826 2046     		movcs	r0, r4
 1781              	.LVL232:
 1782 0828 A242     		cmp	r2, r4
 1783 082a 38BF     		it	cc
 1784 082c 2246     		movcc	r2, r4
 1785              	.LVL233:
 1786 082e 0093     		str	r3, [sp, #0]
 1787 0830 00B2     		sxth	r0, r0
 1788 0832 0B46     		mov	r3, r1
 1789 0834 12B2     		sxth	r2, r2
 1790 0836 CDF80CC0 		str	ip, [sp, #12]
 1791 083a FFF7FEFF 		bl	GLCD_Line
 1792              	.LVL234:
 931:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1793              		.loc 1 931 0
 1794 083e 0499     		ldr	r1, [sp, #16]
 1795 0840 DDF80CC0 		ldr	ip, [sp, #12]
 1796 0844 19B9     		cbnz	r1, .L115
 931:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1797              		.loc 1 931 0 is_stmt 0 discriminator 1
 1798 0846 0798     		ldr	r0, [sp, #28]
 1799 0848 8044     		add	r8, r8, r0
 1800              	.LVL235:
 1801 084a 1FFA88F8 		uxth	r8, r8
 1802              	.LVL236:
 1803              	.L115:
 932:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1804              		.loc 1 932 0 is_stmt 1
 1805 084e 089A     		ldr	r2, [sp, #32]
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1806              		.loc 1 933 0
 1807 0850 0999     		ldr	r1, [sp, #36]
 932:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1808              		.loc 1 932 0
 1809 0852 08EB0203 		add	r3, r8, r2
 1810 0856 1FFA83F8 		uxth	r8, r3
 1811              	.LVL237:
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1812              		.loc 1 933 0
 1813 085a 19B9     		cbnz	r1, .L116
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1814              		.loc 1 933 0 is_stmt 0 discriminator 1
 1815 085c DDF828E0 		ldr	lr, [sp, #40]
 1816 0860 7444     		add	r4, r4, lr
 1817              	.LVL238:
 1818 0862 A4B2     		uxth	r4, r4
 1819              	.LVL239:
 1820              	.L116:
 935:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1821              		.loc 1 935 0 is_stmt 1
 1822 0864 0699     		ldr	r1, [sp, #24]
 934:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1823              		.loc 1 934 0
 1824 0866 0B98     		ldr	r0, [sp, #44]
 1825 0868 2318     		adds	r3, r4, r0
 1826              	.LVL240:
 935:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1827              		.loc 1 935 0
 1828 086a 481C     		adds	r0, r1, #1
 934:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1829              		.loc 1 934 0
 1830 086c 9CB2     		uxth	r4, r3
 1831              	.LVL241:
 935:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1832              		.loc 1 935 0
 1833 086e 83B2     		uxth	r3, r0
 1834              	.LVL242:
 1835 0870 0693     		str	r3, [sp, #24]
 936:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 1836              		.loc 1 936 0
 1837 0872 B7F90200 		ldrsh	r0, [r7, #2]
 1838 0876 0699     		ldr	r1, [sp, #24]
 1839 0878 8142     		cmp	r1, r0
 1840 087a 3FF7BCAD 		bgt	.L117
 892:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1841              		.loc 1 892 0
 1842 087e 0AF1010A 		add	sl, sl, #1
 1843              	.LVL243:
 1844 0882 5FFA8AFA 		uxtb	sl, sl
 1845              	.LVL244:
 1846 0886 69E7     		b	.L103
 1847              	.LBE12:
 1848              	.LBE10:
 1849              		.cfi_endproc
 1850              	.LFE79:
 1852              		.align	1
 1853              		.global	GLCD_Frame
 1854              		.thumb
 1855              		.thumb_func
 1857              	GLCD_Frame:
 1858              	.LFB78:
 746:../Source Files/lpc_ssp_glcd.c **** {
 1859              		.loc 1 746 0
 1860              		.cfi_startproc
 1861              		@ args = 4, pretend = 0, frame = 0
 1862              		@ frame_needed = 0, uses_anonymous_args = 0
 1863              	.LVL245:
 1864 0888 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1865              	.LCFI15:
 1866              		.cfi_def_cfa_offset 40
 1867              		.cfi_offset 0, -40
 1868              		.cfi_offset 1, -36
 1869              		.cfi_offset 2, -32
 1870              		.cfi_offset 4, -28
 1871              		.cfi_offset 5, -24
 1872              		.cfi_offset 6, -20
 1873              		.cfi_offset 7, -16
 1874              		.cfi_offset 8, -12
 1875              		.cfi_offset 9, -8
 1876              		.cfi_offset 14, -4
 746:../Source Files/lpc_ssp_glcd.c **** {
 1877              		.loc 1 746 0
 1878 088c BDF82880 		ldrh	r8, [sp, #40]
 1879 0890 0546     		mov	r5, r0
 1880 0892 0C46     		mov	r4, r1
 1881 0894 9146     		mov	r9, r2
 1882 0896 1F46     		mov	r7, r3
 1883 0898 96B2     		uxth	r6, r2
 1884              	.LVL246:
 1885              	.L142:
 751:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 1886              		.loc 1 751 0 discriminator 1
 1887 089a 002E     		cmp	r6, #0
 1888 089c 58D0     		beq	.L147
 1889              	.L145:
 1890 089e 6988     		ldrh	r1, [r5, #2]
 753:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 1891              		.loc 1 753 0
 1892 08a0 33B2     		sxth	r3, r6
 755:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 1893              		.loc 1 755 0
 1894 08a2 7218     		adds	r2, r6, r1
 753:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 1895              		.loc 1 753 0
 1896 08a4 4B45     		cmp	r3, r9
 755:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 1897              		.loc 1 755 0
 1898 08a6 11B2     		sxth	r1, r2
 1899 08a8 B5F90000 		ldrsh	r0, [r5, #0]
 1900 08ac B4F90020 		ldrsh	r2, [r4, #0]
 753:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 1901              		.loc 1 753 0
 1902 08b0 26DA     		bge	.L143
 755:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 1903              		.loc 1 755 0
 1904 08b2 0B46     		mov	r3, r1
 1905 08b4 CDF80080 		str	r8, [sp, #0]
 1906 08b8 FFF7FEFF 		bl	GLCD_Line
 1907              	.LVL247:
 756:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 1908              		.loc 1 756 0
 1909 08bc 6188     		ldrh	r1, [r4, #2]
 1910 08be B5F90000 		ldrsh	r0, [r5, #0]
 1911 08c2 8A1B     		subs	r2, r1, r6
 1912 08c4 11B2     		sxth	r1, r2
 1913 08c6 0B46     		mov	r3, r1
 1914 08c8 B4F90020 		ldrsh	r2, [r4, #0]
 1915 08cc CDF80080 		str	r8, [sp, #0]
 1916 08d0 FFF7FEFF 		bl	GLCD_Line
 1917              	.LVL248:
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 1918              		.loc 1 757 0
 1919 08d4 2888     		ldrh	r0, [r5, #0]
 1920 08d6 B5F90210 		ldrsh	r1, [r5, #2]
 1921 08da 3318     		adds	r3, r6, r0
 1922 08dc 18B2     		sxth	r0, r3
 1923 08de 0246     		mov	r2, r0
 1924 08e0 B4F90230 		ldrsh	r3, [r4, #2]
 1925 08e4 CDF80080 		str	r8, [sp, #0]
 1926 08e8 FFF7FEFF 		bl	GLCD_Line
 1927              	.LVL249:
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 1928              		.loc 1 758 0
 1929 08ec 2188     		ldrh	r1, [r4, #0]
 1930 08ee B4F90230 		ldrsh	r3, [r4, #2]
 1931 08f2 8A1B     		subs	r2, r1, r6
 1932 08f4 10B2     		sxth	r0, r2
 1933 08f6 B5F90210 		ldrsh	r1, [r5, #2]
 1934 08fa CDF80080 		str	r8, [sp, #0]
 1935 08fe 21E0     		b	.L146
 1936              	.L143:
 763:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 1937              		.loc 1 763 0
 1938 0900 0B46     		mov	r3, r1
 1939 0902 0097     		str	r7, [sp, #0]
 1940 0904 FFF7FEFF 		bl	GLCD_Line
 1941              	.LVL250:
 764:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 1942              		.loc 1 764 0
 1943 0908 6088     		ldrh	r0, [r4, #2]
 1944 090a B4F90020 		ldrsh	r2, [r4, #0]
 1945 090e 831B     		subs	r3, r0, r6
 1946 0910 19B2     		sxth	r1, r3
 1947 0912 0B46     		mov	r3, r1
 1948 0914 B5F90000 		ldrsh	r0, [r5, #0]
 1949 0918 0097     		str	r7, [sp, #0]
 1950 091a FFF7FEFF 		bl	GLCD_Line
 1951              	.LVL251:
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 1952              		.loc 1 765 0
 1953 091e 2988     		ldrh	r1, [r5, #0]
 1954 0920 B4F90230 		ldrsh	r3, [r4, #2]
 1955 0924 7218     		adds	r2, r6, r1
 1956 0926 10B2     		sxth	r0, r2
 1957 0928 B5F90210 		ldrsh	r1, [r5, #2]
 1958 092c 0246     		mov	r2, r0
 1959 092e 0097     		str	r7, [sp, #0]
 1960 0930 FFF7FEFF 		bl	GLCD_Line
 1961              	.LVL252:
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 1962              		.loc 1 766 0
 1963 0934 2088     		ldrh	r0, [r4, #0]
 1964 0936 B5F90210 		ldrsh	r1, [r5, #2]
 1965 093a 831B     		subs	r3, r0, r6
 1966 093c 18B2     		sxth	r0, r3
 1967 093e B4F90230 		ldrsh	r3, [r4, #2]
 1968 0942 0097     		str	r7, [sp, #0]
 1969              	.L146:
 1970 0944 0246     		mov	r2, r0
 1971 0946 013E     		subs	r6, r6, #1
 1972 0948 FFF7FEFF 		bl	GLCD_Line
 1973              	.LVL253:
 1974 094c B6B2     		uxth	r6, r6
 1975 094e A4E7     		b	.L142
 1976              	.L147:
 773:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 1977              		.loc 1 773 0
 1978 0950 B5F90210 		ldrsh	r1, [r5, #2]
 1979 0954 B5F90000 		ldrsh	r0, [r5, #0]
 1980 0958 B4F90020 		ldrsh	r2, [r4, #0]
 1981 095c 0B46     		mov	r3, r1
 1982 095e 0097     		str	r7, [sp, #0]
 1983 0960 FFF7FEFF 		bl	GLCD_Line
 1984              	.LVL254:
 774:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 1985              		.loc 1 774 0
 1986 0964 B4F90210 		ldrsh	r1, [r4, #2]
 1987 0968 B5F90000 		ldrsh	r0, [r5, #0]
 1988 096c B4F90020 		ldrsh	r2, [r4, #0]
 1989 0970 0B46     		mov	r3, r1
 1990 0972 0097     		str	r7, [sp, #0]
 1991 0974 FFF7FEFF 		bl	GLCD_Line
 1992              	.LVL255:
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 1993              		.loc 1 775 0
 1994 0978 B5F90000 		ldrsh	r0, [r5, #0]
 1995 097c B5F90210 		ldrsh	r1, [r5, #2]
 1996 0980 B4F90230 		ldrsh	r3, [r4, #2]
 1997 0984 0246     		mov	r2, r0
 1998 0986 0097     		str	r7, [sp, #0]
 1999 0988 FFF7FEFF 		bl	GLCD_Line
 2000              	.LVL256:
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2001              		.loc 1 776 0
 2002 098c B4F90000 		ldrsh	r0, [r4, #0]
 2003 0990 B5F90210 		ldrsh	r1, [r5, #2]
 2004 0994 B4F90230 		ldrsh	r3, [r4, #2]
 2005 0998 0246     		mov	r2, r0
 2006 099a 0A97     		str	r7, [sp, #40]
 778:../Source Files/lpc_ssp_glcd.c **** }
 2007              		.loc 1 778 0
 2008 099c 03B0     		add	sp, sp, #12
 2009 099e BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2010              		.loc 1 776 0
 2011 09a2 FFF7FEBF 		b	GLCD_Line
 2012              	.LVL257:
 2013              		.cfi_endproc
 2014              	.LFE78:
 2016              		.align	1
 2017              		.global	GLCD_Circle
 2018              		.thumb
 2019              		.thumb_func
 2021              	GLCD_Circle:
 2022              	.LFB80:
 960:../Source Files/lpc_ssp_glcd.c **** {
 2023              		.loc 1 960 0
 2024              		.cfi_startproc
 2025              		@ args = 8, pretend = 0, frame = 40
 2026              		@ frame_needed = 0, uses_anonymous_args = 0
 2027              	.LVL258:
 2028 09a6 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2029              	.LCFI16:
 2030              		.cfi_def_cfa_offset 36
 2031              		.cfi_offset 4, -36
 2032              		.cfi_offset 5, -32
 2033              		.cfi_offset 6, -28
 2034              		.cfi_offset 7, -24
 2035              		.cfi_offset 8, -20
 2036              		.cfi_offset 9, -16
 2037              		.cfi_offset 10, -12
 2038              		.cfi_offset 11, -8
 2039              		.cfi_offset 14, -4
 2040 09aa 8DB0     		sub	sp, sp, #52
 2041              	.LCFI17:
 2042              		.cfi_def_cfa_offset 88
 960:../Source Files/lpc_ssp_glcd.c **** {
 2043              		.loc 1 960 0
 2044 09ac 0990     		str	r0, [sp, #36]
 2045 09ae 0A91     		str	r1, [sp, #40]
 2046 09b0 0B93     		str	r3, [sp, #44]
 2047 09b2 BDF85C00 		ldrh	r0, [sp, #92]
 2048              	.LVL259:
 2049 09b6 BDF85830 		ldrh	r3, [sp, #88]
 2050              	.LVL260:
 964:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2051              		.loc 1 964 0
 2052 09ba C2F10101 		rsb	r1, r2, #1
 2053              	.LVL261:
 960:../Source Files/lpc_ssp_glcd.c **** {
 2054              		.loc 1 960 0
 2055 09be 9446     		mov	ip, r2
 964:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2056              		.loc 1 964 0
 2057 09c0 8AB2     		uxth	r2, r1
 2058              	.LVL262:
 960:../Source Files/lpc_ssp_glcd.c **** {
 2059              		.loc 1 960 0
 2060 09c2 0593     		str	r3, [sp, #20]
 2061 09c4 0890     		str	r0, [sp, #32]
 964:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2062              		.loc 1 964 0
 2063 09c6 0792     		str	r2, [sp, #28]
 2064              	.LVL263:
 2065 09c8 1646     		mov	r6, r2
 963:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 2066              		.loc 1 963 0
 2067 09ca 6546     		mov	r5, ip
 964:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2068              		.loc 1 964 0
 2069 09cc 0024     		movs	r4, #0
 2070              	.LVL264:
 2071              	.L152:
 968:../Source Files/lpc_ssp_glcd.c **** 		if(fill)
 2072              		.loc 1 968 0
 2073 09ce 0B9F     		ldr	r7, [sp, #44]
 2074 09d0 002F     		cmp	r7, #0
 2075 09d2 43D0     		beq	.L149
 970:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2076              		.loc 1 970 0
 2077 09d4 099B     		ldr	r3, [sp, #36]
 2078 09d6 0A99     		ldr	r1, [sp, #40]
 2079 09d8 1FFA83F8 		uxth	r8, r3
 2080 09dc 8FB2     		uxth	r7, r1
 2081 09de 1FFA85F9 		uxth	r9, r5
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2082              		.loc 1 959 0
 2083 09e2 A0B2     		uxth	r0, r4
 970:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2084              		.loc 1 970 0
 2085 09e4 09EB0702 		add	r2, r9, r7
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2086              		.loc 1 959 0
 2087 09e8 C0EB080B 		rsb	fp, r0, r8
 2088 09ec 00EB080A 		add	sl, r0, r8
 970:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2089              		.loc 1 970 0
 2090 09f0 089B     		ldr	r3, [sp, #32]
 2091 09f2 11B2     		sxth	r1, r2
 2092 09f4 0FFA8BFB 		sxth	fp, fp
 2093 09f8 0FFA8AFA 		sxth	sl, sl
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2094              		.loc 1 959 0
 2095 09fc 0690     		str	r0, [sp, #24]
 970:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2096              		.loc 1 970 0
 2097 09fe 0093     		str	r3, [sp, #0]
 2098 0a00 5846     		mov	r0, fp
 2099 0a02 0B46     		mov	r3, r1
 2100 0a04 5246     		mov	r2, sl
 2101 0a06 CDF80CC0 		str	ip, [sp, #12]
 2102 0a0a FFF7FEFF 		bl	GLCD_Line
 2103              	.LVL265:
 971:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, fill_color);
 2104              		.loc 1 971 0
 2105 0a0e C9EB0700 		rsb	r0, r9, r7
 2106 0a12 089A     		ldr	r2, [sp, #32]
 2107 0a14 01B2     		sxth	r1, r0
 2108 0a16 0B46     		mov	r3, r1
 2109 0a18 5846     		mov	r0, fp
 2110 0a1a 0092     		str	r2, [sp, #0]
 2111 0a1c 5246     		mov	r2, sl
 2112 0a1e FFF7FEFF 		bl	GLCD_Line
 2113              	.LVL266:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2114              		.loc 1 959 0
 2115 0a22 0699     		ldr	r1, [sp, #24]
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, fill_color);
 2116              		.loc 1 972 0
 2117 0a24 C9EB080C 		rsb	ip, r9, r8
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2118              		.loc 1 959 0
 2119 0a28 CB19     		adds	r3, r1, r7
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, fill_color);
 2120              		.loc 1 972 0
 2121 0a2a 0898     		ldr	r0, [sp, #32]
 2122 0a2c C844     		add	r8, r9, r8
 2123 0a2e 19B2     		sxth	r1, r3
 2124 0a30 0FFA8CF9 		sxth	r9, ip
 2125 0a34 0FFA88FB 		sxth	fp, r8
 2126 0a38 0B46     		mov	r3, r1
 2127 0a3a 0090     		str	r0, [sp, #0]
 2128 0a3c 5A46     		mov	r2, fp
 2129 0a3e 4846     		mov	r0, r9
 2130 0a40 FFF7FEFF 		bl	GLCD_Line
 2131              	.LVL267:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2132              		.loc 1 959 0
 2133 0a44 069A     		ldr	r2, [sp, #24]
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, fill_color);
 2134              		.loc 1 973 0
 2135 0a46 089B     		ldr	r3, [sp, #32]
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2136              		.loc 1 959 0
 2137 0a48 BF1A     		subs	r7, r7, r2
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, fill_color);
 2138              		.loc 1 973 0
 2139 0a4a 39B2     		sxth	r1, r7
 2140 0a4c 0093     		str	r3, [sp, #0]
 2141 0a4e 4846     		mov	r0, r9
 2142 0a50 5A46     		mov	r2, fp
 2143 0a52 0B46     		mov	r3, r1
 2144 0a54 FFF7FEFF 		bl	GLCD_Line
 2145              	.LVL268:
 2146 0a58 DDF80CC0 		ldr	ip, [sp, #12]
 2147              	.L149:
 976:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 2148              		.loc 1 976 0
 2149 0a5c 3104     		lsls	r1, r6, #16
 2150 0a5e 07D5     		bpl	.L150
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2151              		.loc 1 959 0
 2152 0a60 A1B2     		uxth	r1, r4
 977:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2153              		.loc 1 977 0
 2154 0a62 F01C     		adds	r0, r6, #3
 2155 0a64 00EB4102 		add	r2, r0, r1, lsl #1
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2156              		.loc 1 959 0
 2157 0a68 4F1C     		adds	r7, r1, #1
 977:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2158              		.loc 1 977 0
 2159 0a6a 96B2     		uxth	r6, r2
 2160              	.LVL269:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2161              		.loc 1 959 0
 2162 0a6c BBB2     		uxth	r3, r7
 2163              	.LVL270:
 2164 0a6e 09E0     		b	.L151
 2165              	.LVL271:
 2166              	.L150:
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2167              		.loc 1 979 0
 2168 0a70 29B2     		sxth	r1, r5
 2169 0a72 0536     		adds	r6, r6, #5
 2170              	.LVL272:
 2171 0a74 601A     		subs	r0, r4, r1
 2172 0a76 06EB4002 		add	r2, r6, r0, lsl #1
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2173              		.loc 1 959 0
 2174 0a7a 671C     		adds	r7, r4, #1
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2175              		.loc 1 979 0
 2176 0a7c 013D     		subs	r5, r5, #1
 2177              	.LVL273:
 2178 0a7e 96B2     		uxth	r6, r2
 2179              	.LVL274:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2180              		.loc 1 959 0
 2181 0a80 BBB2     		uxth	r3, r7
 2182              	.LVL275:
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2183              		.loc 1 979 0
 2184 0a82 ADB2     		uxth	r5, r5
 2185              	.LVL276:
 2186              	.L151:
 980:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 2187              		.loc 1 980 0
 2188 0a84 1BB2     		sxth	r3, r3
 2189              	.LVL277:
 2190 0a86 29B2     		sxth	r1, r5
 2191 0a88 0134     		adds	r4, r4, #1
 2192 0a8a 8B42     		cmp	r3, r1
 2193 0a8c 9FDD     		ble	.L152
 2194 0a8e 6546     		mov	r5, ip
 2195              	.LVL278:
 2196 0a90 4FF00009 		mov	r9, #0
 2197              	.LVL279:
 2198              	.L155:
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2199              		.loc 1 990 0
 2200 0a94 099E     		ldr	r6, [sp, #36]
 2201 0a96 0A9F     		ldr	r7, [sp, #40]
 2202 0a98 1FFA86F8 		uxth	r8, r6
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2203              		.loc 1 959 0
 2204 0a9c 1FFA89F4 		uxth	r4, r9
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2205              		.loc 1 990 0
 2206 0aa0 AEB2     		uxth	r6, r5
 2207 0aa2 BFB2     		uxth	r7, r7
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2208              		.loc 1 959 0
 2209 0aa4 04EB0800 		add	r0, r4, r8
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2210              		.loc 1 990 0
 2211 0aa8 06EB070E 		add	lr, r6, r7
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2212              		.loc 1 959 0
 2213 0aac 82B2     		uxth	r2, r0
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2214              		.loc 1 990 0
 2215 0aae 1FFA8EFA 		uxth	sl, lr
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2216              		.loc 1 959 0
 2217 0ab2 0692     		str	r2, [sp, #24]
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2218              		.loc 1 990 0
 2219 0ab4 5146     		mov	r1, sl
 2220 0ab6 0698     		ldr	r0, [sp, #24]
 2221 0ab8 059A     		ldr	r2, [sp, #20]
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, color);
 2222              		.loc 1 991 0
 2223 0aba 06EB080B 		add	fp, r6, r8
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2224              		.loc 1 990 0
 2225 0abe CDF80CA0 		str	sl, [sp, #12]
 2226 0ac2 FFF7FEFF 		bl	GLCD_PutPixel
 2227              	.LVL280:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2228              		.loc 1 959 0
 2229 0ac6 E319     		adds	r3, r4, r7
 2230 0ac8 9BB2     		uxth	r3, r3
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, color);
 2231              		.loc 1 991 0
 2232 0aca 1FFA8BFB 		uxth	fp, fp
 2233 0ace 1946     		mov	r1, r3
 2234 0ad0 5846     		mov	r0, fp
 2235 0ad2 059A     		ldr	r2, [sp, #20]
 2236 0ad4 0493     		str	r3, [sp, #16]
 2237 0ad6 FFF7FEFF 		bl	GLCD_PutPixel
 2238              	.LVL281:
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, color);
 2239              		.loc 1 992 0
 2240 0ada DDF80CC0 		ldr	ip, [sp, #12]
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2241              		.loc 1 959 0
 2242 0ade C4EB0801 		rsb	r1, r4, r8
 2243 0ae2 1FFA81FA 		uxth	sl, r1
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, color);
 2244              		.loc 1 992 0
 2245 0ae6 5046     		mov	r0, sl
 2246 0ae8 6146     		mov	r1, ip
 2247 0aea 059A     		ldr	r2, [sp, #20]
 2248 0aec FFF7FEFF 		bl	GLCD_PutPixel
 2249              	.LVL282:
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, color);
 2250              		.loc 1 993 0
 2251 0af0 C6EB0808 		rsb	r8, r6, r8
 2252 0af4 049A     		ldr	r2, [sp, #16]
 2253 0af6 1FFA88F8 		uxth	r8, r8
 2254 0afa 1146     		mov	r1, r2
 2255 0afc 4046     		mov	r0, r8
 2256 0afe 059A     		ldr	r2, [sp, #20]
 2257 0b00 FFF7FEFF 		bl	GLCD_PutPixel
 2258              	.LVL283:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2259              		.loc 1 959 0
 2260 0b04 381B     		subs	r0, r7, r4
 2261 0b06 83B2     		uxth	r3, r0
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 2262              		.loc 1 995 0
 2263 0b08 BE1B     		subs	r6, r7, r6
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, color);
 2264              		.loc 1 994 0
 2265 0b0a 1946     		mov	r1, r3
 2266 0b0c 5846     		mov	r0, fp
 2267 0b0e 059A     		ldr	r2, [sp, #20]
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 2268              		.loc 1 995 0
 2269 0b10 B6B2     		uxth	r6, r6
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, color);
 2270              		.loc 1 994 0
 2271 0b12 0493     		str	r3, [sp, #16]
 2272 0b14 FFF7FEFF 		bl	GLCD_PutPixel
 2273              	.LVL284:
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 2274              		.loc 1 995 0
 2275 0b18 0698     		ldr	r0, [sp, #24]
 2276 0b1a 3146     		mov	r1, r6
 2277 0b1c 059A     		ldr	r2, [sp, #20]
 2278 0b1e FFF7FEFF 		bl	GLCD_PutPixel
 2279              	.LVL285:
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, color);
 2280              		.loc 1 996 0
 2281 0b22 5046     		mov	r0, sl
 2282 0b24 3146     		mov	r1, r6
 2283 0b26 059A     		ldr	r2, [sp, #20]
 2284 0b28 FFF7FEFF 		bl	GLCD_PutPixel
 2285              	.LVL286:
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, color);
 2286              		.loc 1 997 0
 2287 0b2c 4046     		mov	r0, r8
 2288 0b2e 059A     		ldr	r2, [sp, #20]
 2289 0b30 0499     		ldr	r1, [sp, #16]
 2290 0b32 FFF7FEFF 		bl	GLCD_PutPixel
 2291              	.LVL287:
1000:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 2292              		.loc 1 1000 0
 2293 0b36 0798     		ldr	r0, [sp, #28]
 2294 0b38 0204     		lsls	r2, r0, #16
 2295 0b3a 07D5     		bpl	.L153
1001:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2296              		.loc 1 1001 0
 2297 0b3c 0330     		adds	r0, r0, #3
 2298 0b3e 00EB4402 		add	r2, r0, r4, lsl #1
 2299 0b42 91B2     		uxth	r1, r2
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2300              		.loc 1 959 0
 2301 0b44 0134     		adds	r4, r4, #1
1001:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2302              		.loc 1 1001 0
 2303 0b46 0791     		str	r1, [sp, #28]
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2304              		.loc 1 959 0
 2305 0b48 A3B2     		uxth	r3, r4
 2306              	.LVL288:
 2307 0b4a 0CE0     		b	.L154
 2308              	.LVL289:
 2309              	.L153:
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2310              		.loc 1 1003 0
 2311 0b4c 079A     		ldr	r2, [sp, #28]
 2312 0b4e 2BB2     		sxth	r3, r5
 2313 0b50 511D     		adds	r1, r2, #5
 2314 0b52 C3EB0900 		rsb	r0, r3, r9
 2315 0b56 01EB4002 		add	r2, r1, r0, lsl #1
 2316 0b5a 91B2     		uxth	r1, r2
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2317              		.loc 1 959 0
 2318 0b5c 0134     		adds	r4, r4, #1
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2319              		.loc 1 1003 0
 2320 0b5e 013D     		subs	r5, r5, #1
 2321              	.LVL290:
 2322 0b60 0791     		str	r1, [sp, #28]
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2323              		.loc 1 959 0
 2324 0b62 A3B2     		uxth	r3, r4
 2325              	.LVL291:
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2326              		.loc 1 1003 0
 2327 0b64 ADB2     		uxth	r5, r5
 2328              	.LVL292:
 2329              	.L154:
1004:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 2330              		.loc 1 1004 0
 2331 0b66 1CB2     		sxth	r4, r3
 2332 0b68 2BB2     		sxth	r3, r5
 2333              	.LVL293:
 2334 0b6a 9C42     		cmp	r4, r3
 2335 0b6c 09F10109 		add	r9, r9, #1
 2336 0b70 90DD     		ble	.L155
1005:../Source Files/lpc_ssp_glcd.c **** }
 2337              		.loc 1 1005 0
 2338 0b72 0DB0     		add	sp, sp, #52
 2339 0b74 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2340              		.cfi_endproc
 2341              	.LFE80:
 2343              		.align	1
 2344              		.global	GLCD_Window
 2345              		.thumb
 2346              		.thumb_func
 2348              	GLCD_Window:
 2349              	.LFB58:
 131:../Source Files/lpc_ssp_glcd.c **** {
 2350              		.loc 1 131 0
 2351              		.cfi_startproc
 2352              		@ args = 0, pretend = 0, frame = 0
 2353              		@ frame_needed = 0, uses_anonymous_args = 0
 2354              	.LVL294:
 2355 0b78 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2356              	.LCFI18:
 2357              		.cfi_def_cfa_offset 24
 2358              		.cfi_offset 3, -24
 2359              		.cfi_offset 4, -20
 2360              		.cfi_offset 5, -16
 2361              		.cfi_offset 6, -12
 2362              		.cfi_offset 7, -8
 2363              		.cfi_offset 14, -4
 131:../Source Files/lpc_ssp_glcd.c **** {
 2364              		.loc 1 131 0
 2365 0b7a 0546     		mov	r5, r0
 132:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 2366              		.loc 1 132 0
 2367 0b7c 4520     		movs	r0, #69
 2368              	.LVL295:
 131:../Source Files/lpc_ssp_glcd.c **** {
 2369              		.loc 1 131 0
 2370 0b7e 0C46     		mov	r4, r1
 2371 0b80 1646     		mov	r6, r2
 2372 0b82 1F46     		mov	r7, r3
 132:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 2373              		.loc 1 132 0
 2374 0b84 FFF7FEFF 		bl	Write_Command_Glcd
 2375              	.LVL296:
 133:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 2376              		.loc 1 133 0
 2377 0b88 2846     		mov	r0, r5
 2378 0b8a FFF7FEFF 		bl	Write_Data_Glcd
 2379              	.LVL297:
 136:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 2380              		.loc 1 136 0
 2381 0b8e 013D     		subs	r5, r5, #1
 135:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 2382              		.loc 1 135 0
 2383 0b90 4620     		movs	r0, #70
 2384 0b92 FFF7FEFF 		bl	Write_Command_Glcd
 2385              	.LVL298:
 136:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 2386              		.loc 1 136 0
 2387 0b96 7019     		adds	r0, r6, r5
 2388 0b98 80B2     		uxth	r0, r0
 2389 0b9a FFF7FEFF 		bl	Write_Data_Glcd
 2390              	.LVL299:
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 2391              		.loc 1 138 0
 2392 0b9e 4420     		movs	r0, #68
 2393 0ba0 FFF7FEFF 		bl	Write_Command_Glcd
 2394              	.LVL300:
 139:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 2395              		.loc 1 139 0
 2396 0ba4 2046     		mov	r0, r4
 2397 0ba6 FFF7FEFF 		bl	Write_Data_Glcd
 2398              	.LVL301:
 141:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 2399              		.loc 1 141 0
 2400 0baa 4420     		movs	r0, #68
 2401 0bac FFF7FEFF 		bl	Write_Command_Glcd
 2402              	.LVL302:
 142:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 2403              		.loc 1 142 0
 2404 0bb0 013C     		subs	r4, r4, #1
 2405 0bb2 3F19     		adds	r7, r7, r4
 2406 0bb4 3902     		lsls	r1, r7, #8
 2407 0bb6 01F47F40 		and	r0, r1, #65280
 143:../Source Files/lpc_ssp_glcd.c **** }
 2408              		.loc 1 143 0
 2409 0bba BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 142:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 2410              		.loc 1 142 0
 2411 0bbe FFF7FEBF 		b	Write_Data_Glcd
 2412              	.LVL303:
 2413              		.cfi_endproc
 2414              	.LFE58:
 2416              		.align	1
 2417              		.global	GLCD_Display_String
 2418              		.thumb
 2419              		.thumb_func
 2421              	GLCD_Display_String:
 2422              	.LFB71:
 471:../Source Files/lpc_ssp_glcd.c **** {
 2423              		.loc 1 471 0
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 0
 2426              		@ frame_needed = 0, uses_anonymous_args = 0
 2427              	.LVL304:
 2428 0bc2 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2429              	.LCFI19:
 2430              		.cfi_def_cfa_offset 24
 2431              		.cfi_offset 3, -24
 2432              		.cfi_offset 4, -20
 2433              		.cfi_offset 5, -16
 2434              		.cfi_offset 6, -12
 2435              		.cfi_offset 7, -8
 2436              		.cfi_offset 14, -4
 471:../Source Files/lpc_ssp_glcd.c **** {
 2437              		.loc 1 471 0
 2438 0bc4 0746     		mov	r7, r0
 472:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2439              		.loc 1 472 0
 2440 0bc6 0020     		movs	r0, #0
 2441              	.LVL305:
 471:../Source Files/lpc_ssp_glcd.c **** {
 2442              		.loc 1 471 0
 2443 0bc8 0E46     		mov	r6, r1
 2444 0bca 1546     		mov	r5, r2
 472:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2445              		.loc 1 472 0
 2446 0bcc 0146     		mov	r1, r0
 2447              	.LVL306:
 2448 0bce 4FF4A072 		mov	r2, #320
 2449              	.LVL307:
 2450 0bd2 F023     		movs	r3, #240
 2451 0bd4 FFF7FEFF 		bl	GLCD_Window
 2452              	.LVL308:
 473:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2453              		.loc 1 473 0
 2454 0bd8 0024     		movs	r4, #0
 2455              	.LVL309:
 2456              	.L163:
 470:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 2457              		.loc 1 470 0 discriminator 1
 2458 0bda 3119     		adds	r1, r6, r4
 2459 0bdc 0134     		adds	r4, r4, #1
 2460 0bde 2B19     		adds	r3, r5, r4
 473:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2461              		.loc 1 473 0 discriminator 1
 2462 0be0 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
 470:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 2463              		.loc 1 470 0 discriminator 1
 2464 0be4 89B2     		uxth	r1, r1
 2465              	.LVL310:
 473:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2466              		.loc 1 473 0 discriminator 1
 2467 0be6 1AB1     		cbz	r2, .L165
 2468              	.L164:
 2469              	.LVL311:
 475:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 2470              		.loc 1 475 0
 2471 0be8 3846     		mov	r0, r7
 2472 0bea FFF7FEFF 		bl	GLCD_Display_Char
 2473              	.LVL312:
 2474 0bee F4E7     		b	.L163
 2475              	.LVL313:
 2476              	.L165:
 477:../Source Files/lpc_ssp_glcd.c **** }
 2477              		.loc 1 477 0
 2478 0bf0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2479              		.cfi_endproc
 2480              	.LFE71:
 2482              		.align	1
 2483              		.global	GLCD_ClearLn
 2484              		.thumb
 2485              		.thumb_func
 2487              	GLCD_ClearLn:
 2488              	.LFB72:
 486:../Source Files/lpc_ssp_glcd.c **** {
 2489              		.loc 1 486 0
 2490              		.cfi_startproc
 2491              		@ args = 0, pretend = 0, frame = 0
 2492              		@ frame_needed = 0, uses_anonymous_args = 0
 2493              	.LVL314:
 2494 0bf2 10B5     		push	{r4, lr}
 2495              	.LCFI20:
 2496              		.cfi_def_cfa_offset 8
 2497              		.cfi_offset 4, -8
 2498              		.cfi_offset 14, -4
 486:../Source Files/lpc_ssp_glcd.c **** {
 2499              		.loc 1 486 0
 2500 0bf4 0446     		mov	r4, r0
 487:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2501              		.loc 1 487 0
 2502 0bf6 0020     		movs	r0, #0
 2503              	.LVL315:
 2504 0bf8 0146     		mov	r1, r0
 2505 0bfa 4FF4A072 		mov	r2, #320
 2506 0bfe F023     		movs	r3, #240
 2507 0c00 FFF7FEFF 		bl	GLCD_Window
 2508              	.LVL316:
 488:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 2509              		.loc 1 488 0
 2510 0c04 034A     		ldr	r2, .L167
 2511 0c06 2046     		mov	r0, r4
 2512 0c08 0021     		movs	r1, #0
 489:../Source Files/lpc_ssp_glcd.c **** }
 2513              		.loc 1 489 0
 2514 0c0a BDE81040 		pop	{r4, lr}
 488:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 2515              		.loc 1 488 0
 2516 0c0e FFF7FEBF 		b	GLCD_Display_String
 2517              	.LVL317:
 2518              	.L168:
 2519 0c12 00BF     		.align	2
 2520              	.L167:
 2521 0c14 00000000 		.word	.LC0
 2522              		.cfi_endproc
 2523              	.LFE72:
 2525              		.align	1
 2526              		.global	GLCD_Clear
 2527              		.thumb
 2528              		.thumb_func
 2530              	GLCD_Clear:
 2531              	.LFB68:
 377:../Source Files/lpc_ssp_glcd.c **** {
 2532              		.loc 1 377 0
 2533              		.cfi_startproc
 2534              		@ args = 0, pretend = 0, frame = 0
 2535              		@ frame_needed = 0, uses_anonymous_args = 0
 2536              	.LVL318:
 2537 0c18 38B5     		push	{r3, r4, r5, lr}
 2538              	.LCFI21:
 2539              		.cfi_def_cfa_offset 16
 2540              		.cfi_offset 3, -16
 2541              		.cfi_offset 4, -12
 2542              		.cfi_offset 5, -8
 2543              		.cfi_offset 14, -4
 377:../Source Files/lpc_ssp_glcd.c **** {
 2544              		.loc 1 377 0
 2545 0c1a 0546     		mov	r5, r0
 380:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 2546              		.loc 1 380 0
 2547 0c1c 0020     		movs	r0, #0
 2548              	.LVL319:
 2549 0c1e 0146     		mov	r1, r0
 2550 0c20 4FF4A072 		mov	r2, #320
 2551 0c24 F023     		movs	r3, #240
 2552 0c26 FFF7FEFF 		bl	GLCD_Window
 2553              	.LVL320:
 382:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 2554              		.loc 1 382 0
 2555 0c2a 4E20     		movs	r0, #78
 2556 0c2c FFF7FEFF 		bl	Write_Command_Glcd
 2557              	.LVL321:
 383:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 2558              		.loc 1 383 0
 2559 0c30 0020     		movs	r0, #0
 2560 0c32 FFF7FEFF 		bl	Write_Data_Glcd
 2561              	.LVL322:
 385:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 2562              		.loc 1 385 0
 2563 0c36 4F20     		movs	r0, #79
 2564 0c38 FFF7FEFF 		bl	Write_Command_Glcd
 2565              	.LVL323:
 386:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 2566              		.loc 1 386 0
 2567 0c3c 0020     		movs	r0, #0
 2568 0c3e FFF7FEFF 		bl	Write_Data_Glcd
 2569              	.LVL324:
 388:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 2570              		.loc 1 388 0
 2571 0c42 2220     		movs	r0, #34
 2572 0c44 FFF7FEFF 		bl	Write_Command_Glcd
 2573              	.LVL325:
 389:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 2574              		.loc 1 389 0
 2575 0c48 FFF7DAF9 		bl	wr_dat_start
 2576              	.LVL326:
 2577 0c4c 4FF49634 		mov	r4, #76800
 2578              	.LVL327:
 2579              	.L170:
 391:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 2580              		.loc 1 391 0 discriminator 2
 2581 0c50 2846     		mov	r0, r5
 2582 0c52 FFF7E9F9 		bl	wr_dat_only
 2583              	.LVL328:
 390:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 2584              		.loc 1 390 0 discriminator 2
 2585 0c56 013C     		subs	r4, r4, #1
 2586 0c58 FAD1     		bne	.L170
 393:../Source Files/lpc_ssp_glcd.c **** }
 2587              		.loc 1 393 0
 2588 0c5a BDE83840 		pop	{r3, r4, r5, lr}
 392:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 2589              		.loc 1 392 0
 2590 0c5e FFF7DDB9 		b	wr_dat_stop
 2591              	.LVL329:
 2592              		.cfi_endproc
 2593              	.LFE68:
 2595              		.align	1
 2596              		.global	GLCD_Set_Loc
 2597              		.thumb
 2598              		.thumb_func
 2600              	GLCD_Set_Loc:
 2601              	.LFB59:
 155:../Source Files/lpc_ssp_glcd.c **** {
 2602              		.loc 1 155 0
 2603              		.cfi_startproc
 2604              		@ args = 0, pretend = 0, frame = 0
 2605              		@ frame_needed = 0, uses_anonymous_args = 0
 2606              	.LVL330:
 2607 0c62 38B5     		push	{r3, r4, r5, lr}
 2608              	.LCFI22:
 2609              		.cfi_def_cfa_offset 16
 2610              		.cfi_offset 3, -16
 2611              		.cfi_offset 4, -12
 2612              		.cfi_offset 5, -8
 2613              		.cfi_offset 14, -4
 155:../Source Files/lpc_ssp_glcd.c **** {
 2614              		.loc 1 155 0
 2615 0c64 0C46     		mov	r4, r1
 2616 0c66 0546     		mov	r5, r0
 156:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 2617              		.loc 1 156 0
 2618 0c68 FFF7FEFF 		bl	GLCD_Window
 2619              	.LVL331:
 158:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 2620              		.loc 1 158 0
 2621 0c6c 4E20     		movs	r0, #78
 2622 0c6e FFF7FEFF 		bl	Write_Command_Glcd
 2623              	.LVL332:
 159:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 2624              		.loc 1 159 0
 2625 0c72 2846     		mov	r0, r5
 2626 0c74 FFF7FEFF 		bl	Write_Data_Glcd
 2627              	.LVL333:
 161:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 2628              		.loc 1 161 0
 2629 0c78 4F20     		movs	r0, #79
 2630 0c7a FFF7FEFF 		bl	Write_Command_Glcd
 2631              	.LVL334:
 162:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 2632              		.loc 1 162 0
 2633 0c7e 2046     		mov	r0, r4
 2634 0c80 FFF7FEFF 		bl	Write_Data_Glcd
 2635              	.LVL335:
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 2636              		.loc 1 164 0
 2637 0c84 2220     		movs	r0, #34
 165:../Source Files/lpc_ssp_glcd.c **** }
 2638              		.loc 1 165 0
 2639 0c86 BDE83840 		pop	{r3, r4, r5, lr}
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 2640              		.loc 1 164 0
 2641 0c8a FFF7FEBF 		b	Write_Command_Glcd
 2642              	.LVL336:
 2643              		.cfi_endproc
 2644              	.LFE59:
 2646              		.align	1
 2647              		.global	GLCD_Window_Fill
 2648              		.thumb
 2649              		.thumb_func
 2651              	GLCD_Window_Fill:
 2652              	.LFB75:
 589:../Source Files/lpc_ssp_glcd.c **** {
 2653              		.loc 1 589 0
 2654              		.cfi_startproc
 2655              		@ args = 4, pretend = 0, frame = 0
 2656              		@ frame_needed = 0, uses_anonymous_args = 0
 2657              	.LVL337:
 2658 0c8e 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2659              	.LCFI23:
 2660              		.cfi_def_cfa_offset 24
 2661              		.cfi_offset 4, -24
 2662              		.cfi_offset 5, -20
 2663              		.cfi_offset 6, -16
 2664              		.cfi_offset 7, -12
 2665              		.cfi_offset 8, -8
 2666              		.cfi_offset 14, -4
 589:../Source Files/lpc_ssp_glcd.c **** {
 2667              		.loc 1 589 0
 2668 0c92 1746     		mov	r7, r2
 2669 0c94 1E46     		mov	r6, r3
 2670 0c96 BDF81880 		ldrh	r8, [sp, #24]
 592:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 2671              		.loc 1 592 0
 2672 0c9a FFF7FEFF 		bl	GLCD_Set_Loc
 2673              	.LVL338:
 594:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 2674              		.loc 1 594 0
 2675 0c9e FFF7AFF9 		bl	wr_dat_start
 2676              	.LVL339:
 595:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2677              		.loc 1 595 0
 2678 0ca2 0024     		movs	r4, #0
 2679              	.LVL340:
 2680              	.L174:
 595:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2681              		.loc 1 595 0 is_stmt 0 discriminator 1
 2682 0ca4 B442     		cmp	r4, r6
 2683 0ca6 09D2     		bcs	.L178
 2684              	.L177:
 595:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2685              		.loc 1 595 0
 2686 0ca8 0025     		movs	r5, #0
 2687              	.L176:
 2688              	.LVL341:
 597:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2689              		.loc 1 597 0 is_stmt 1 discriminator 1
 2690 0caa BD42     		cmp	r5, r7
 2691 0cac 04D2     		bcs	.L179
 2692              	.L175:
 599:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 2693              		.loc 1 599 0 discriminator 2
 2694 0cae 4046     		mov	r0, r8
 2695 0cb0 FFF7BAF9 		bl	wr_dat_only
 2696              	.LVL342:
 597:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2697              		.loc 1 597 0 discriminator 2
 2698 0cb4 0135     		adds	r5, r5, #1
 2699              	.LVL343:
 2700 0cb6 F8E7     		b	.L176
 2701              	.L179:
 595:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2702              		.loc 1 595 0
 2703 0cb8 0134     		adds	r4, r4, #1
 2704              	.LVL344:
 2705 0cba F3E7     		b	.L174
 2706              	.LVL345:
 2707              	.L178:
 603:../Source Files/lpc_ssp_glcd.c **** }
 2708              		.loc 1 603 0
 2709 0cbc BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 602:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 2710              		.loc 1 602 0
 2711 0cc0 FFF7ACB9 		b	wr_dat_stop
 2712              	.LVL346:
 2713              		.cfi_endproc
 2714              	.LFE75:
 2716              		.align	1
 2717              		.global	GLCD_Rect
 2718              		.thumb
 2719              		.thumb_func
 2721              	GLCD_Rect:
 2722              	.LFB77:
 689:../Source Files/lpc_ssp_glcd.c **** {
 2723              		.loc 1 689 0
 2724              		.cfi_startproc
 2725              		@ args = 4, pretend = 0, frame = 0
 2726              		@ frame_needed = 0, uses_anonymous_args = 0
 2727              	.LVL347:
 2728 0cc4 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 2729              	.LCFI24:
 2730              		.cfi_def_cfa_offset 32
 2731              		.cfi_offset 0, -32
 2732              		.cfi_offset 1, -28
 2733              		.cfi_offset 4, -24
 2734              		.cfi_offset 5, -20
 2735              		.cfi_offset 6, -16
 2736              		.cfi_offset 7, -12
 2737              		.cfi_offset 8, -8
 2738              		.cfi_offset 14, -4
 689:../Source Files/lpc_ssp_glcd.c **** {
 2739              		.loc 1 689 0
 2740 0cc8 0C46     		mov	r4, r1
 2741 0cca 0546     		mov	r5, r0
 2742 0ccc 9846     		mov	r8, r3
 2743 0cce BDF82010 		ldrh	r1, [sp, #32]
 2744              	.LVL348:
 692:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 2745              		.loc 1 692 0
 2746 0cd2 002A     		cmp	r2, #0
 2747 0cd4 41D0     		beq	.L181
 694:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 2748              		.loc 1 694 0
 2749 0cd6 B0F800E0 		ldrh	lr, [r0, #0]
 2750 0cda 2288     		ldrh	r2, [r4, #0]
 2751              	.LVL349:
 2752 0cdc 0FFA8EF3 		sxth	r3, lr
 2753              	.LVL350:
 2754 0ce0 10B2     		sxth	r0, r2
 2755              	.LVL351:
 2756 0ce2 6788     		ldrh	r7, [r4, #2]
 2757 0ce4 6E88     		ldrh	r6, [r5, #2]
 2758 0ce6 9842     		cmp	r0, r3
 696:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 2759              		.loc 1 696 0
 2760 0ce8 38B2     		sxth	r0, r7
 2761 0cea 33B2     		sxth	r3, r6
 694:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 2762              		.loc 1 694 0
 2763 0cec 13DD     		ble	.L182
 696:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 2764              		.loc 1 696 0
 2765 0cee 9842     		cmp	r0, r3
 2766 0cf0 1FFA8EFC 		uxth	ip, lr
 2767 0cf4 07DD     		ble	.L183
 2768              	.LVL352:
 699:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 2769              		.loc 1 699 0
 2770 0cf6 B6B2     		uxth	r6, r6
 2771              	.LVL353:
 698:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 2772              		.loc 1 698 0
 2773 0cf8 013A     		subs	r2, r2, #1
 2774              	.LVL354:
 700:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 2775              		.loc 1 700 0
 2776 0cfa 0CF10100 		add	r0, ip, #1
 2777 0cfe 731C     		adds	r3, r6, #1
 2778 0d00 CCEB0202 		rsb	r2, ip, r2
 2779              	.LVL355:
 2780 0d04 11E0     		b	.L190
 2781              	.LVL356:
 2782              	.L183:
 705:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 2783              		.loc 1 705 0
 2784 0d06 BFB2     		uxth	r7, r7
 2785              	.LVL357:
 704:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 2786              		.loc 1 704 0
 2787 0d08 013A     		subs	r2, r2, #1
 2788              	.LVL358:
 706:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 2789              		.loc 1 706 0
 2790 0d0a 0CF10100 		add	r0, ip, #1
 2791 0d0e 7B1C     		adds	r3, r7, #1
 2792 0d10 CCEB0202 		rsb	r2, ip, r2
 2793 0d14 18E0     		b	.L188
 2794              	.LVL359:
 2795              	.L182:
 711:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 2796              		.loc 1 711 0
 2797 0d16 9842     		cmp	r0, r3
 2798 0d18 92B2     		uxth	r2, r2
 2799 0d1a 0EDD     		ble	.L184
 2800              	.LVL360:
 714:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 2801              		.loc 1 714 0
 2802 0d1c B6B2     		uxth	r6, r6
 2803              	.LVL361:
 713:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 2804              		.loc 1 713 0
 2805 0d1e 0EF1FF3E 		add	lr, lr, #-1
 2806              	.LVL362:
 715:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 2807              		.loc 1 715 0
 2808 0d22 501C     		adds	r0, r2, #1
 2809 0d24 731C     		adds	r3, r6, #1
 2810 0d26 C2EB0E02 		rsb	r2, r2, lr
 2811              	.LVL363:
 2812              	.L190:
 714:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 2813              		.loc 1 714 0
 2814 0d2a 013F     		subs	r7, r7, #1
 715:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 2815              		.loc 1 715 0
 2816 0d2c BE1B     		subs	r6, r7, r6
 2817 0d2e 0091     		str	r1, [sp, #0]
 2818 0d30 80B2     		uxth	r0, r0
 2819 0d32 99B2     		uxth	r1, r3
 2820 0d34 92B2     		uxth	r2, r2
 2821 0d36 B3B2     		uxth	r3, r6
 2822 0d38 0DE0     		b	.L189
 2823              	.L184:
 2824              	.LVL364:
 720:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 2825              		.loc 1 720 0
 2826 0d3a BFB2     		uxth	r7, r7
 2827              	.LVL365:
 719:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 2828              		.loc 1 719 0
 2829 0d3c 0EF1FF3C 		add	ip, lr, #-1
 721:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 2830              		.loc 1 721 0
 2831 0d40 501C     		adds	r0, r2, #1
 2832 0d42 7B1C     		adds	r3, r7, #1
 2833 0d44 C2EB0C02 		rsb	r2, r2, ip
 2834              	.LVL366:
 2835              	.L188:
 720:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 2836              		.loc 1 720 0
 2837 0d48 013E     		subs	r6, r6, #1
 721:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 2838              		.loc 1 721 0
 2839 0d4a F71B     		subs	r7, r6, r7
 2840 0d4c 0091     		str	r1, [sp, #0]
 2841 0d4e 80B2     		uxth	r0, r0
 2842 0d50 99B2     		uxth	r1, r3
 2843 0d52 92B2     		uxth	r2, r2
 2844 0d54 BBB2     		uxth	r3, r7
 2845              	.L189:
 2846 0d56 FFF7FEFF 		bl	GLCD_Window_Fill
 2847              	.LVL367:
 2848              	.L181:
 728:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 2849              		.loc 1 728 0
 2850 0d5a B5F90210 		ldrsh	r1, [r5, #2]
 2851 0d5e B5F90000 		ldrsh	r0, [r5, #0]
 2852 0d62 B4F90020 		ldrsh	r2, [r4, #0]
 2853 0d66 0B46     		mov	r3, r1
 2854 0d68 CDF80080 		str	r8, [sp, #0]
 2855 0d6c FFF7FEFF 		bl	GLCD_Line
 2856              	.LVL368:
 729:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 2857              		.loc 1 729 0
 2858 0d70 B4F90210 		ldrsh	r1, [r4, #2]
 2859 0d74 B5F90000 		ldrsh	r0, [r5, #0]
 2860 0d78 B4F90020 		ldrsh	r2, [r4, #0]
 2861 0d7c 0B46     		mov	r3, r1
 2862 0d7e CDF80080 		str	r8, [sp, #0]
 2863 0d82 FFF7FEFF 		bl	GLCD_Line
 2864              	.LVL369:
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 2865              		.loc 1 730 0
 2866 0d86 B5F90000 		ldrsh	r0, [r5, #0]
 2867 0d8a B5F90210 		ldrsh	r1, [r5, #2]
 2868 0d8e B4F90230 		ldrsh	r3, [r4, #2]
 2869 0d92 0246     		mov	r2, r0
 2870 0d94 CDF80080 		str	r8, [sp, #0]
 2871 0d98 FFF7FEFF 		bl	GLCD_Line
 2872              	.LVL370:
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2873              		.loc 1 731 0
 2874 0d9c B4F90000 		ldrsh	r0, [r4, #0]
 2875 0da0 B5F90210 		ldrsh	r1, [r5, #2]
 2876 0da4 B4F90230 		ldrsh	r3, [r4, #2]
 2877 0da8 0246     		mov	r2, r0
 2878 0daa CDF82080 		str	r8, [sp, #32]
 733:../Source Files/lpc_ssp_glcd.c **** }
 2879              		.loc 1 733 0
 2880 0dae 02B0     		add	sp, sp, #8
 2881 0db0 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2882              		.loc 1 731 0
 2883 0db4 FFF7FEBF 		b	GLCD_Line
 2884              	.LVL371:
 2885              		.cfi_endproc
 2886              	.LFE77:
 2888              		.align	1
 2889              		.global	GLCD_Bitmap
 2890              		.thumb
 2891              		.thumb_func
 2893              	GLCD_Bitmap:
 2894              	.LFB74:
 558:../Source Files/lpc_ssp_glcd.c **** {
 2895              		.loc 1 558 0
 2896              		.cfi_startproc
 2897              		@ args = 4, pretend = 0, frame = 0
 2898              		@ frame_needed = 0, uses_anonymous_args = 0
 2899              	.LVL372:
 2900 0db8 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 2901              	.LCFI25:
 2902              		.cfi_def_cfa_offset 32
 2903              		.cfi_offset 4, -32
 2904              		.cfi_offset 5, -28
 2905              		.cfi_offset 6, -24
 2906              		.cfi_offset 7, -20
 2907              		.cfi_offset 8, -16
 2908              		.cfi_offset 9, -12
 2909              		.cfi_offset 10, -8
 2910              		.cfi_offset 14, -4
 558:../Source Files/lpc_ssp_glcd.c **** {
 2911              		.loc 1 558 0
 2912 0dbc DDF82080 		ldr	r8, [sp, #32]
 2913 0dc0 1746     		mov	r7, r2
 2914 0dc2 9946     		mov	r9, r3
 561:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 2915              		.loc 1 561 0
 2916 0dc4 FFF7FEFF 		bl	GLCD_Set_Loc
 2917              	.LVL373:
 563:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 2918              		.loc 1 563 0
 2919 0dc8 FFF71AF9 		bl	wr_dat_start
 2920              	.LVL374:
 564:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 2921              		.loc 1 564 0
 2922 0dcc 1025     		movs	r5, #16
 565:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2923              		.loc 1 565 0
 2924 0dce 0026     		movs	r6, #0
 2925              	.LVL375:
 2926              	.L192:
 565:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2927              		.loc 1 565 0 is_stmt 0 discriminator 1
 2928 0dd0 4E45     		cmp	r6, r9
 2929 0dd2 0DD2     		bcs	.L194
 557:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 2930              		.loc 1 557 0 is_stmt 1
 2931 0dd4 08EB450A 		add	sl, r8, r5, lsl #1
 2932 0dd8 0024     		movs	r4, #0
 2933              	.LVL376:
 2934              	.L195:
 567:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2935              		.loc 1 567 0 discriminator 1
 2936 0dda BC42     		cmp	r4, r7
 2937 0ddc 05D2     		bcs	.L196
 2938              	.L193:
 569:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 2939              		.loc 1 569 0 discriminator 2
 2940 0dde 3AF81400 		ldrh	r0, [sl, r4, lsl #1]
 2941 0de2 FFF721F9 		bl	wr_dat_only
 2942              	.LVL377:
 567:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2943              		.loc 1 567 0 discriminator 2
 2944 0de6 0134     		adds	r4, r4, #1
 2945              	.LVL378:
 2946 0de8 F7E7     		b	.L195
 2947              	.L196:
 557:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 2948              		.loc 1 557 0
 2949 0dea ED19     		adds	r5, r5, r7
 565:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2950              		.loc 1 565 0
 2951 0dec 0136     		adds	r6, r6, #1
 2952              	.LVL379:
 2953 0dee EFE7     		b	.L192
 2954              	.LVL380:
 2955              	.L194:
 573:../Source Files/lpc_ssp_glcd.c **** }
 2956              		.loc 1 573 0
 2957 0df0 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 572:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 2958              		.loc 1 572 0
 2959 0df4 FFF712B9 		b	wr_dat_stop
 2960              	.LVL381:
 2961              		.cfi_endproc
 2962              	.LFE74:
 2964              		.align	1
 2965              		.global	GLCD_Display_Home
 2966              		.thumb
 2967              		.thumb_func
 2969              	GLCD_Display_Home:
 2970              	.LFB60:
 174:../Source Files/lpc_ssp_glcd.c **** {
 2971              		.loc 1 174 0
 2972              		.cfi_startproc
 2973              		@ args = 0, pretend = 0, frame = 0
 2974              		@ frame_needed = 0, uses_anonymous_args = 0
 2975              		@ link register save eliminated.
 175:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 2976              		.loc 1 175 0
 2977 0df8 0020     		movs	r0, #0
 2978 0dfa 0146     		mov	r1, r0
 2979 0dfc 4FF4A072 		mov	r2, #320
 2980 0e00 F023     		movs	r3, #240
 176:../Source Files/lpc_ssp_glcd.c **** }
 2981              		.loc 1 176 0
 175:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 2982              		.loc 1 175 0
 2983 0e02 FFF7FEBF 		b	GLCD_Set_Loc
 2984              	.LVL382:
 2985              		.cfi_endproc
 2986              	.LFE60:
 2988              		.align	1
 2989              		.global	GLCD_Driver_OutCtrl
 2990              		.thumb
 2991              		.thumb_func
 2993              	GLCD_Driver_OutCtrl:
 2994              	.LFB57:
  94:../Source Files/lpc_ssp_glcd.c **** {
 2995              		.loc 1 94 0
 2996              		.cfi_startproc
 2997              		@ args = 0, pretend = 0, frame = 0
 2998              		@ frame_needed = 0, uses_anonymous_args = 0
 2999              	.LVL383:
 3000 0e06 10B5     		push	{r4, lr}
 3001              	.LCFI26:
 3002              		.cfi_def_cfa_offset 8
 3003              		.cfi_offset 4, -8
 3004              		.cfi_offset 14, -4
  94:../Source Files/lpc_ssp_glcd.c **** {
 3005              		.loc 1 94 0
 3006 0e08 0446     		mov	r4, r0
  95:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
 3007              		.loc 1 95 0
 3008 0e0a 0120     		movs	r0, #1
 3009              	.LVL384:
 3010 0e0c FFF7FEFF 		bl	Write_Command_Glcd
 3011              	.LVL385:
  97:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
 3012              		.loc 1 97 0
 3013 0e10 032C     		cmp	r4, #3
 3014 0e12 12D8     		bhi	.L198
 3015 0e14 DFE804F0 		tbb	[pc, r4]
 3016              	.L204:
 3017 0e18 02       		.byte	(.L200-.L204)/2
 3018 0e19 05       		.byte	(.L201-.L204)/2
 3019 0e1a 08       		.byte	(.L202-.L204)/2
 3020 0e1b 0B       		.byte	(.L203-.L204)/2
 3021              		.align	1
 3022              	.L200:
 100:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 3023              		.loc 1 100 0
 3024 0e1c 47F2EF20 		movw	r0, #29423
 3025 0e20 07E0     		b	.L205
 3026              	.L201:
 104:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 3027              		.loc 1 104 0
 3028 0e22 47F2EF00 		movw	r0, #28911
 3029 0e26 04E0     		b	.L205
 3030              	.L202:
 108:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 3031              		.loc 1 108 0
 3032 0e28 43F2EF20 		movw	r0, #13039
 3033 0e2c 01E0     		b	.L205
 3034              	.L203:
 112:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 3035              		.loc 1 112 0
 3036 0e2e 43F2EF00 		movw	r0, #12527
 3037              	.L205:
 118:../Source Files/lpc_ssp_glcd.c **** }
 3038              		.loc 1 118 0
 3039 0e32 BDE81040 		pop	{r4, lr}
 112:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 3040              		.loc 1 112 0
 3041 0e36 FFF7FEBF 		b	Write_Data_Glcd
 3042              	.LVL386:
 3043              	.L198:
 3044 0e3a 10BD     		pop	{r4, pc}
 3045              		.cfi_endproc
 3046              	.LFE57:
 3048              		.align	1
 3049              		.global	GLCD_Init
 3050              		.thumb
 3051              		.thumb_func
 3053              	GLCD_Init:
 3054              	.LFB61:
 185:../Source Files/lpc_ssp_glcd.c **** {
 3055              		.loc 1 185 0
 3056              		.cfi_startproc
 3057              		@ args = 0, pretend = 0, frame = 0
 3058              		@ frame_needed = 0, uses_anonymous_args = 0
 186:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 3059              		.loc 1 186 0
 3060 0e3c 0121     		movs	r1, #1
 185:../Source Files/lpc_ssp_glcd.c **** {
 3061              		.loc 1 185 0
 3062 0e3e 10B5     		push	{r4, lr}
 3063              	.LCFI27:
 3064              		.cfi_def_cfa_offset 8
 3065              		.cfi_offset 4, -8
 3066              		.cfi_offset 14, -4
 186:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 3067              		.loc 1 186 0
 3068 0e40 0220     		movs	r0, #2
 3069 0e42 0A46     		mov	r2, r1
 3070 0e44 FFF7FEFF 		bl	GPIO_SetDir
 3071              	.LVL387:
 187:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 3072              		.loc 1 187 0
 3073 0e48 0020     		movs	r0, #0
 3074 0e4a 2021     		movs	r1, #32
 3075 0e4c 0122     		movs	r2, #1
 3076 0e4e FFF7FEFF 		bl	GPIO_SetDir
 3077              	.LVL388:
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 3078              		.loc 1 188 0
 3079 0e52 4FF48071 		mov	r1, #256
 3080 0e56 0122     		movs	r2, #1
 3081 0e58 0220     		movs	r0, #2
 3082 0e5a FFF7FEFF 		bl	GPIO_SetDir
 3083              	.LVL389:
 190:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 3084              		.loc 1 190 0
 3085 0e5e 0220     		movs	r0, #2
 3086 0e60 FFF7FEFF 		bl	delay_ms
 3087              	.LVL390:
 191:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 3088              		.loc 1 191 0
 3089 0e64 FFF7FEFF 		bl	GLCD_Reset
 3090              	.LVL391:
 192:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 3091              		.loc 1 192 0
 3092 0e68 0120     		movs	r0, #1
 3093 0e6a FFF7FEFF 		bl	GLCD_Backlight
 3094              	.LVL392:
 193:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 3095              		.loc 1 193 0
 3096 0e6e 0220     		movs	r0, #2
 3097 0e70 FFF7FEFF 		bl	delay_ms
 3098              	.LVL393:
 195:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 3099              		.loc 1 195 0
 3100 0e74 2820     		movs	r0, #40
 3101 0e76 FFF7FEFF 		bl	Write_Command_Glcd
 3102              	.LVL394:
 196:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 3103              		.loc 1 196 0
 3104 0e7a 0620     		movs	r0, #6
 3105 0e7c FFF7FEFF 		bl	Write_Data_Glcd
 3106              	.LVL395:
 198:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 3107              		.loc 1 198 0
 3108 0e80 0020     		movs	r0, #0
 3109 0e82 FFF7FEFF 		bl	Write_Command_Glcd
 3110              	.LVL396:
 199:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 3111              		.loc 1 199 0
 3112 0e86 0120     		movs	r0, #1
 3113 0e88 FFF7FEFF 		bl	Write_Data_Glcd
 3114              	.LVL397:
 201:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 3115              		.loc 1 201 0
 3116 0e8c 1020     		movs	r0, #16
 3117 0e8e FFF7FEFF 		bl	Write_Command_Glcd
 3118              	.LVL398:
 202:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 3119              		.loc 1 202 0
 3120 0e92 0020     		movs	r0, #0
 3121 0e94 FFF7FEFF 		bl	Write_Data_Glcd
 3122              	.LVL399:
 204:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 3123              		.loc 1 204 0
 3124 0e98 0020     		movs	r0, #0
 3125 0e9a FFF7FEFF 		bl	GLCD_Driver_OutCtrl
 3126              	.LVL400:
 206:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 3127              		.loc 1 206 0
 3128 0e9e 0220     		movs	r0, #2
 3129 0ea0 FFF7FEFF 		bl	Write_Command_Glcd
 3130              	.LVL401:
 207:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 3131              		.loc 1 207 0
 3132 0ea4 4FF4C060 		mov	r0, #1536
 3133 0ea8 FFF7FEFF 		bl	Write_Data_Glcd
 3134              	.LVL402:
 209:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 3135              		.loc 1 209 0
 3136 0eac 0320     		movs	r0, #3
 3137 0eae FFF7FEFF 		bl	Write_Command_Glcd
 3138              	.LVL403:
 210:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 3139              		.loc 1 210 0
 3140 0eb2 46F63820 		movw	r0, #27192
 3141 0eb6 FFF7FEFF 		bl	Write_Data_Glcd
 3142              	.LVL404:
 212:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 3143              		.loc 1 212 0
 3144 0eba 1120     		movs	r0, #17
 3145 0ebc FFF7FEFF 		bl	Write_Command_Glcd
 3146              	.LVL405:
 213:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 3147              		.loc 1 213 0
 3148 0ec0 46F67000 		movw	r0, #26736
 3149 0ec4 FFF7FEFF 		bl	Write_Data_Glcd
 3150              	.LVL406:
 215:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 3151              		.loc 1 215 0
 3152 0ec8 0F20     		movs	r0, #15
 3153 0eca FFF7FEFF 		bl	Write_Command_Glcd
 3154              	.LVL407:
 216:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 3155              		.loc 1 216 0
 3156 0ece 0020     		movs	r0, #0
 3157 0ed0 FFF7FEFF 		bl	Write_Data_Glcd
 3158              	.LVL408:
 218:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 3159              		.loc 1 218 0
 3160 0ed4 0B20     		movs	r0, #11
 3161 0ed6 FFF7FEFF 		bl	Write_Command_Glcd
 3162              	.LVL409:
 219:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 3163              		.loc 1 219 0
 3164 0eda 45F20830 		movw	r0, #21256
 3165 0ede FFF7FEFF 		bl	Write_Data_Glcd
 3166              	.LVL410:
 221:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 3167              		.loc 1 221 0
 3168 0ee2 0C20     		movs	r0, #12
 3169 0ee4 FFF7FEFF 		bl	Write_Command_Glcd
 3170              	.LVL411:
 222:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 3171              		.loc 1 222 0
 3172 0ee8 0320     		movs	r0, #3
 3173 0eea FFF7FEFF 		bl	Write_Data_Glcd
 3174              	.LVL412:
 224:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 3175              		.loc 1 224 0
 3176 0eee 0D20     		movs	r0, #13
 3177 0ef0 FFF7FEFF 		bl	Write_Command_Glcd
 3178              	.LVL413:
 225:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 3179              		.loc 1 225 0
 3180 0ef4 0A20     		movs	r0, #10
 3181 0ef6 FFF7FEFF 		bl	Write_Data_Glcd
 3182              	.LVL414:
 227:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 3183              		.loc 1 227 0
 3184 0efa 0E20     		movs	r0, #14
 3185 0efc FFF7FEFF 		bl	Write_Command_Glcd
 3186              	.LVL415:
 228:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 3187              		.loc 1 228 0
 3188 0f00 4FF43850 		mov	r0, #11776
 3189 0f04 FFF7FEFF 		bl	Write_Data_Glcd
 3190              	.LVL416:
 230:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 3191              		.loc 1 230 0
 3192 0f08 1E20     		movs	r0, #30
 3193 0f0a FFF7FEFF 		bl	Write_Command_Glcd
 3194              	.LVL417:
 231:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 3195              		.loc 1 231 0
 3196 0f0e BE20     		movs	r0, #190
 3197 0f10 FFF7FEFF 		bl	Write_Data_Glcd
 3198              	.LVL418:
 233:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 3199              		.loc 1 233 0
 3200 0f14 2520     		movs	r0, #37
 3201 0f16 FFF7FEFF 		bl	Write_Command_Glcd
 3202              	.LVL419:
 234:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 3203              		.loc 1 234 0
 3204 0f1a 4FF40040 		mov	r0, #32768
 3205 0f1e FFF7FEFF 		bl	Write_Data_Glcd
 3206              	.LVL420:
 236:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 3207              		.loc 1 236 0
 3208 0f22 2620     		movs	r0, #38
 3209 0f24 FFF7FEFF 		bl	Write_Command_Glcd
 3210              	.LVL421:
 237:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 3211              		.loc 1 237 0
 3212 0f28 4FF4F040 		mov	r0, #30720
 3213 0f2c FFF7FEFF 		bl	Write_Data_Glcd
 3214              	.LVL422:
 239:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 3215              		.loc 1 239 0
 3216 0f30 4E20     		movs	r0, #78
 3217 0f32 FFF7FEFF 		bl	Write_Command_Glcd
 3218              	.LVL423:
 240:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 3219              		.loc 1 240 0
 3220 0f36 0020     		movs	r0, #0
 3221 0f38 FFF7FEFF 		bl	Write_Data_Glcd
 3222              	.LVL424:
 242:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 3223              		.loc 1 242 0
 3224 0f3c 4F20     		movs	r0, #79
 3225 0f3e FFF7FEFF 		bl	Write_Command_Glcd
 3226              	.LVL425:
 243:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 3227              		.loc 1 243 0
 3228 0f42 0020     		movs	r0, #0
 3229 0f44 FFF7FEFF 		bl	Write_Data_Glcd
 3230              	.LVL426:
 245:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 3231              		.loc 1 245 0
 3232 0f48 1220     		movs	r0, #18
 3233 0f4a FFF7FEFF 		bl	Write_Command_Glcd
 3234              	.LVL427:
 246:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 3235              		.loc 1 246 0
 3236 0f4e 40F6D900 		movw	r0, #2265
 3237 0f52 FFF7FEFF 		bl	Write_Data_Glcd
 3238              	.LVL428:
 249:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 3239              		.loc 1 249 0
 3240 0f56 3020     		movs	r0, #48
 3241 0f58 FFF7FEFF 		bl	Write_Command_Glcd
 3242              	.LVL429:
 250:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 3243              		.loc 1 250 0
 3244 0f5c 0020     		movs	r0, #0
 3245 0f5e FFF7FEFF 		bl	Write_Data_Glcd
 3246              	.LVL430:
 252:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 3247              		.loc 1 252 0
 3248 0f62 3120     		movs	r0, #49
 3249 0f64 FFF7FEFF 		bl	Write_Command_Glcd
 3250              	.LVL431:
 253:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 3251              		.loc 1 253 0
 3252 0f68 4FF48270 		mov	r0, #260
 3253 0f6c FFF7FEFF 		bl	Write_Data_Glcd
 3254              	.LVL432:
 255:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 3255              		.loc 1 255 0
 3256 0f70 3220     		movs	r0, #50
 3257 0f72 FFF7FEFF 		bl	Write_Command_Glcd
 3258              	.LVL433:
 256:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 3259              		.loc 1 256 0
 3260 0f76 4FF48070 		mov	r0, #256
 3261 0f7a FFF7FEFF 		bl	Write_Data_Glcd
 3262              	.LVL434:
 259:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3263              		.loc 1 259 0
 3264 0f7e 40F20534 		movw	r4, #773
 258:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 3265              		.loc 1 258 0
 3266 0f82 3320     		movs	r0, #51
 3267 0f84 FFF7FEFF 		bl	Write_Command_Glcd
 3268              	.LVL435:
 259:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3269              		.loc 1 259 0
 3270 0f88 2046     		mov	r0, r4
 3271 0f8a FFF7FEFF 		bl	Write_Data_Glcd
 3272              	.LVL436:
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 3273              		.loc 1 261 0
 3274 0f8e 3420     		movs	r0, #52
 3275 0f90 FFF7FEFF 		bl	Write_Command_Glcd
 3276              	.LVL437:
 262:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 3277              		.loc 1 262 0
 3278 0f94 40F20550 		movw	r0, #1285
 3279 0f98 FFF7FEFF 		bl	Write_Data_Glcd
 3280              	.LVL438:
 264:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 3281              		.loc 1 264 0
 3282 0f9c 3520     		movs	r0, #53
 3283 0f9e FFF7FEFF 		bl	Write_Command_Glcd
 3284              	.LVL439:
 265:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3285              		.loc 1 265 0
 3286 0fa2 2046     		mov	r0, r4
 3287 0fa4 FFF7FEFF 		bl	Write_Data_Glcd
 3288              	.LVL440:
 267:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 3289              		.loc 1 267 0
 3290 0fa8 3620     		movs	r0, #54
 3291 0faa FFF7FEFF 		bl	Write_Command_Glcd
 3292              	.LVL441:
 268:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 3293              		.loc 1 268 0
 3294 0fae 40F20770 		movw	r0, #1799
 3295 0fb2 FFF7FEFF 		bl	Write_Data_Glcd
 3296              	.LVL442:
 270:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 3297              		.loc 1 270 0
 3298 0fb6 3720     		movs	r0, #55
 3299 0fb8 FFF7FEFF 		bl	Write_Command_Glcd
 3300              	.LVL443:
 271:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 3301              		.loc 1 271 0
 3302 0fbc 4FF44070 		mov	r0, #768
 3303 0fc0 FFF7FEFF 		bl	Write_Data_Glcd
 3304              	.LVL444:
 273:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 3305              		.loc 1 273 0
 3306 0fc4 3A20     		movs	r0, #58
 3307 0fc6 FFF7FEFF 		bl	Write_Command_Glcd
 3308              	.LVL445:
 274:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 3309              		.loc 1 274 0
 3310 0fca 4FF49050 		mov	r0, #4608
 3311 0fce FFF7FEFF 		bl	Write_Data_Glcd
 3312              	.LVL446:
 276:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 3313              		.loc 1 276 0
 3314 0fd2 3B20     		movs	r0, #59
 3315 0fd4 FFF7FEFF 		bl	Write_Command_Glcd
 3316              	.LVL447:
 277:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 3317              		.loc 1 277 0
 3318 0fd8 4FF40060 		mov	r0, #2048
 3319 0fdc FFF7FEFF 		bl	Write_Data_Glcd
 3320              	.LVL448:
 279:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 3321              		.loc 1 279 0
 3322 0fe0 0720     		movs	r0, #7
 3323 0fe2 FFF7FEFF 		bl	Write_Command_Glcd
 3324              	.LVL449:
 280:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 3325              		.loc 1 280 0
 3326 0fe6 3320     		movs	r0, #51
 3327 0fe8 FFF7FEFF 		bl	Write_Data_Glcd
 3328              	.LVL450:
 282:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 3329              		.loc 1 282 0
 3330 0fec 0520     		movs	r0, #5
 3331 0fee FFF7FEFF 		bl	delay_ms
 3332              	.LVL451:
 284:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 3333              		.loc 1 284 0
 3334 0ff2 2220     		movs	r0, #34
 285:../Source Files/lpc_ssp_glcd.c **** }
 3335              		.loc 1 285 0
 3336 0ff4 BDE81040 		pop	{r4, lr}
 284:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 3337              		.loc 1 284 0
 3338 0ff8 FFF7FEBF 		b	Write_Command_Glcd
 3339              	.LVL452:
 3340              		.cfi_endproc
 3341              	.LFE61:
 3343              		.global	Font_24x16
 3344              		.comm	I2C_Rx_Buf,64,1
 3345              		.comm	I2C_Tx_Buf,64,1
 3346              		.comm	Rx_Buf1,64,1
 3347              		.comm	Tx_Buf1,64,1
 3348              		.comm	TxIntStat,1,1
 3349              		.comm	rb,528,4
 3350              		.comm	EscFlag,2,2
 3351              		.section	.rodata
 3352              		.align	1
 3353              		.set	.LANCHOR2,. + 0
 3356              	Font_24x16:
 3357 0000 0000     		.short	0
 3358 0002 0000     		.short	0
 3359 0004 0000     		.short	0
 3360 0006 0000     		.short	0
 3361 0008 0000     		.short	0
 3362 000a 0000     		.short	0
 3363 000c 0000     		.short	0
 3364 000e 0000     		.short	0
 3365 0010 0000     		.short	0
 3366 0012 0000     		.short	0
 3367 0014 0000     		.short	0
 3368 0016 0000     		.short	0
 3369 0018 0000     		.short	0
 3370 001a 0000     		.short	0
 3371 001c 0000     		.short	0
 3372 001e 0000     		.short	0
 3373 0020 0000     		.short	0
 3374 0022 0000     		.short	0
 3375 0024 0000     		.short	0
 3376 0026 0000     		.short	0
 3377 0028 0000     		.short	0
 3378 002a 0000     		.short	0
 3379 002c 0000     		.short	0
 3380 002e 0000     		.short	0
 3381 0030 0000     		.short	0
 3382 0032 8001     		.short	384
 3383 0034 8001     		.short	384
 3384 0036 8001     		.short	384
 3385 0038 8001     		.short	384
 3386 003a 8001     		.short	384
 3387 003c 8001     		.short	384
 3388 003e 8001     		.short	384
 3389 0040 8001     		.short	384
 3390 0042 8001     		.short	384
 3391 0044 8001     		.short	384
 3392 0046 8001     		.short	384
 3393 0048 8001     		.short	384
 3394 004a 8001     		.short	384
 3395 004c 0000     		.short	0
 3396 004e 0000     		.short	0
 3397 0050 8001     		.short	384
 3398 0052 8001     		.short	384
 3399 0054 0000     		.short	0
 3400 0056 0000     		.short	0
 3401 0058 0000     		.short	0
 3402 005a 0000     		.short	0
 3403 005c 0000     		.short	0
 3404 005e 0000     		.short	0
 3405 0060 0000     		.short	0
 3406 0062 0000     		.short	0
 3407 0064 CC00     		.short	204
 3408 0066 CC00     		.short	204
 3409 0068 CC00     		.short	204
 3410 006a CC00     		.short	204
 3411 006c CC00     		.short	204
 3412 006e CC00     		.short	204
 3413 0070 0000     		.short	0
 3414 0072 0000     		.short	0
 3415 0074 0000     		.short	0
 3416 0076 0000     		.short	0
 3417 0078 0000     		.short	0
 3418 007a 0000     		.short	0
 3419 007c 0000     		.short	0
 3420 007e 0000     		.short	0
 3421 0080 0000     		.short	0
 3422 0082 0000     		.short	0
 3423 0084 0000     		.short	0
 3424 0086 0000     		.short	0
 3425 0088 0000     		.short	0
 3426 008a 0000     		.short	0
 3427 008c 0000     		.short	0
 3428 008e 0000     		.short	0
 3429 0090 0000     		.short	0
 3430 0092 0000     		.short	0
 3431 0094 0000     		.short	0
 3432 0096 0000     		.short	0
 3433 0098 0000     		.short	0
 3434 009a 0000     		.short	0
 3435 009c 600C     		.short	3168
 3436 009e 600C     		.short	3168
 3437 00a0 600C     		.short	3168
 3438 00a2 3006     		.short	1584
 3439 00a4 3006     		.short	1584
 3440 00a6 FE1F     		.short	8190
 3441 00a8 FE1F     		.short	8190
 3442 00aa 3006     		.short	1584
 3443 00ac 3807     		.short	1848
 3444 00ae 1803     		.short	792
 3445 00b0 FE1F     		.short	8190
 3446 00b2 FE1F     		.short	8190
 3447 00b4 1803     		.short	792
 3448 00b6 1803     		.short	792
 3449 00b8 8C01     		.short	396
 3450 00ba 8C01     		.short	396
 3451 00bc 8C01     		.short	396
 3452 00be 0000     		.short	0
 3453 00c0 0000     		.short	0
 3454 00c2 8000     		.short	128
 3455 00c4 E003     		.short	992
 3456 00c6 F80F     		.short	4088
 3457 00c8 9C0E     		.short	3740
 3458 00ca 8C1C     		.short	7308
 3459 00cc 8C18     		.short	6284
 3460 00ce 8C00     		.short	140
 3461 00d0 9800     		.short	152
 3462 00d2 F801     		.short	504
 3463 00d4 E007     		.short	2016
 3464 00d6 800E     		.short	3712
 3465 00d8 801C     		.short	7296
 3466 00da 8C18     		.short	6284
 3467 00dc 8C18     		.short	6284
 3468 00de 9C18     		.short	6300
 3469 00e0 B80C     		.short	3256
 3470 00e2 F00F     		.short	4080
 3471 00e4 E003     		.short	992
 3472 00e6 8000     		.short	128
 3473 00e8 8000     		.short	128
 3474 00ea 0000     		.short	0
 3475 00ec 0000     		.short	0
 3476 00ee 0000     		.short	0
 3477 00f0 0000     		.short	0
 3478 00f2 0000     		.short	0
 3479 00f4 0000     		.short	0
 3480 00f6 0E18     		.short	6158
 3481 00f8 1B0C     		.short	3099
 3482 00fa 110C     		.short	3089
 3483 00fc 1106     		.short	1553
 3484 00fe 1106     		.short	1553
 3485 0100 1103     		.short	785
 3486 0102 1103     		.short	785
 3487 0104 9B01     		.short	411
 3488 0106 8E01     		.short	398
 3489 0108 C038     		.short	14528
 3490 010a C06C     		.short	27840
 3491 010c 6044     		.short	17504
 3492 010e 6044     		.short	17504
 3493 0110 3044     		.short	17456
 3494 0112 3044     		.short	17456
 3495 0114 1844     		.short	17432
 3496 0116 186C     		.short	27672
 3497 0118 0C38     		.short	14348
 3498 011a 0000     		.short	0
 3499 011c 0000     		.short	0
 3500 011e 0000     		.short	0
 3501 0120 0000     		.short	0
 3502 0122 E001     		.short	480
 3503 0124 F003     		.short	1008
 3504 0126 3807     		.short	1848
 3505 0128 1806     		.short	1560
 3506 012a 1806     		.short	1560
 3507 012c 3003     		.short	816
 3508 012e F001     		.short	496
 3509 0130 F000     		.short	240
 3510 0132 F800     		.short	248
 3511 0134 9C31     		.short	12700
 3512 0136 0E33     		.short	13070
 3513 0138 061E     		.short	7686
 3514 013a 061C     		.short	7174
 3515 013c 061C     		.short	7174
 3516 013e 063F     		.short	16134
 3517 0140 FC73     		.short	29692
 3518 0142 F021     		.short	8688
 3519 0144 0000     		.short	0
 3520 0146 0000     		.short	0
 3521 0148 0000     		.short	0
 3522 014a 0000     		.short	0
 3523 014c 0000     		.short	0
 3524 014e 0000     		.short	0
 3525 0150 0000     		.short	0
 3526 0152 0000     		.short	0
 3527 0154 0C00     		.short	12
 3528 0156 0C00     		.short	12
 3529 0158 0C00     		.short	12
 3530 015a 0C00     		.short	12
 3531 015c 0C00     		.short	12
 3532 015e 0C00     		.short	12
 3533 0160 0000     		.short	0
 3534 0162 0000     		.short	0
 3535 0164 0000     		.short	0
 3536 0166 0000     		.short	0
 3537 0168 0000     		.short	0
 3538 016a 0000     		.short	0
 3539 016c 0000     		.short	0
 3540 016e 0000     		.short	0
 3541 0170 0000     		.short	0
 3542 0172 0000     		.short	0
 3543 0174 0000     		.short	0
 3544 0176 0000     		.short	0
 3545 0178 0000     		.short	0
 3546 017a 0000     		.short	0
 3547 017c 0000     		.short	0
 3548 017e 0000     		.short	0
 3549 0180 0000     		.short	0
 3550 0182 0002     		.short	512
 3551 0184 0003     		.short	768
 3552 0186 8001     		.short	384
 3553 0188 C000     		.short	192
 3554 018a C000     		.short	192
 3555 018c 6000     		.short	96
 3556 018e 6000     		.short	96
 3557 0190 3000     		.short	48
 3558 0192 3000     		.short	48
 3559 0194 3000     		.short	48
 3560 0196 3000     		.short	48
 3561 0198 3000     		.short	48
 3562 019a 3000     		.short	48
 3563 019c 3000     		.short	48
 3564 019e 3000     		.short	48
 3565 01a0 6000     		.short	96
 3566 01a2 6000     		.short	96
 3567 01a4 C000     		.short	192
 3568 01a6 C000     		.short	192
 3569 01a8 8001     		.short	384
 3570 01aa 0003     		.short	768
 3571 01ac 0002     		.short	512
 3572 01ae 0000     		.short	0
 3573 01b0 0000     		.short	0
 3574 01b2 2000     		.short	32
 3575 01b4 6000     		.short	96
 3576 01b6 C000     		.short	192
 3577 01b8 8001     		.short	384
 3578 01ba 8001     		.short	384
 3579 01bc 0003     		.short	768
 3580 01be 0003     		.short	768
 3581 01c0 0006     		.short	1536
 3582 01c2 0006     		.short	1536
 3583 01c4 0006     		.short	1536
 3584 01c6 0006     		.short	1536
 3585 01c8 0006     		.short	1536
 3586 01ca 0006     		.short	1536
 3587 01cc 0006     		.short	1536
 3588 01ce 0006     		.short	1536
 3589 01d0 0003     		.short	768
 3590 01d2 0003     		.short	768
 3591 01d4 8001     		.short	384
 3592 01d6 8001     		.short	384
 3593 01d8 C000     		.short	192
 3594 01da 6000     		.short	96
 3595 01dc 2000     		.short	32
 3596 01de 0000     		.short	0
 3597 01e0 0000     		.short	0
 3598 01e2 0000     		.short	0
 3599 01e4 0000     		.short	0
 3600 01e6 0000     		.short	0
 3601 01e8 0000     		.short	0
 3602 01ea 0000     		.short	0
 3603 01ec C000     		.short	192
 3604 01ee C000     		.short	192
 3605 01f0 D806     		.short	1752
 3606 01f2 F807     		.short	2040
 3607 01f4 E001     		.short	480
 3608 01f6 3003     		.short	816
 3609 01f8 3807     		.short	1848
 3610 01fa 0000     		.short	0
 3611 01fc 0000     		.short	0
 3612 01fe 0000     		.short	0
 3613 0200 0000     		.short	0
 3614 0202 0000     		.short	0
 3615 0204 0000     		.short	0
 3616 0206 0000     		.short	0
 3617 0208 0000     		.short	0
 3618 020a 0000     		.short	0
 3619 020c 0000     		.short	0
 3620 020e 0000     		.short	0
 3621 0210 0000     		.short	0
 3622 0212 0000     		.short	0
 3623 0214 0000     		.short	0
 3624 0216 0000     		.short	0
 3625 0218 0000     		.short	0
 3626 021a 0000     		.short	0
 3627 021c 8001     		.short	384
 3628 021e 8001     		.short	384
 3629 0220 8001     		.short	384
 3630 0222 8001     		.short	384
 3631 0224 8001     		.short	384
 3632 0226 FC3F     		.short	16380
 3633 0228 FC3F     		.short	16380
 3634 022a 8001     		.short	384
 3635 022c 8001     		.short	384
 3636 022e 8001     		.short	384
 3637 0230 8001     		.short	384
 3638 0232 8001     		.short	384
 3639 0234 0000     		.short	0
 3640 0236 0000     		.short	0
 3641 0238 0000     		.short	0
 3642 023a 0000     		.short	0
 3643 023c 0000     		.short	0
 3644 023e 0000     		.short	0
 3645 0240 0000     		.short	0
 3646 0242 0000     		.short	0
 3647 0244 0000     		.short	0
 3648 0246 0000     		.short	0
 3649 0248 0000     		.short	0
 3650 024a 0000     		.short	0
 3651 024c 0000     		.short	0
 3652 024e 0000     		.short	0
 3653 0250 0000     		.short	0
 3654 0252 0000     		.short	0
 3655 0254 0000     		.short	0
 3656 0256 0000     		.short	0
 3657 0258 0000     		.short	0
 3658 025a 0000     		.short	0
 3659 025c 0000     		.short	0
 3660 025e 0000     		.short	0
 3661 0260 0000     		.short	0
 3662 0262 8001     		.short	384
 3663 0264 8001     		.short	384
 3664 0266 0001     		.short	256
 3665 0268 0001     		.short	256
 3666 026a 8000     		.short	128
 3667 026c 0000     		.short	0
 3668 026e 0000     		.short	0
 3669 0270 0000     		.short	0
 3670 0272 0000     		.short	0
 3671 0274 0000     		.short	0
 3672 0276 0000     		.short	0
 3673 0278 0000     		.short	0
 3674 027a 0000     		.short	0
 3675 027c 0000     		.short	0
 3676 027e 0000     		.short	0
 3677 0280 0000     		.short	0
 3678 0282 0000     		.short	0
 3679 0284 0000     		.short	0
 3680 0286 0000     		.short	0
 3681 0288 E007     		.short	2016
 3682 028a E007     		.short	2016
 3683 028c 0000     		.short	0
 3684 028e 0000     		.short	0
 3685 0290 0000     		.short	0
 3686 0292 0000     		.short	0
 3687 0294 0000     		.short	0
 3688 0296 0000     		.short	0
 3689 0298 0000     		.short	0
 3690 029a 0000     		.short	0
 3691 029c 0000     		.short	0
 3692 029e 0000     		.short	0
 3693 02a0 0000     		.short	0
 3694 02a2 0000     		.short	0
 3695 02a4 0000     		.short	0
 3696 02a6 0000     		.short	0
 3697 02a8 0000     		.short	0
 3698 02aa 0000     		.short	0
 3699 02ac 0000     		.short	0
 3700 02ae 0000     		.short	0
 3701 02b0 0000     		.short	0
 3702 02b2 0000     		.short	0
 3703 02b4 0000     		.short	0
 3704 02b6 0000     		.short	0
 3705 02b8 0000     		.short	0
 3706 02ba 0000     		.short	0
 3707 02bc 0000     		.short	0
 3708 02be 0000     		.short	0
 3709 02c0 0000     		.short	0
 3710 02c2 C000     		.short	192
 3711 02c4 C000     		.short	192
 3712 02c6 0000     		.short	0
 3713 02c8 0000     		.short	0
 3714 02ca 0000     		.short	0
 3715 02cc 0000     		.short	0
 3716 02ce 0000     		.short	0
 3717 02d0 0000     		.short	0
 3718 02d2 000C     		.short	3072
 3719 02d4 000C     		.short	3072
 3720 02d6 0006     		.short	1536
 3721 02d8 0006     		.short	1536
 3722 02da 0006     		.short	1536
 3723 02dc 0003     		.short	768
 3724 02de 0003     		.short	768
 3725 02e0 0003     		.short	768
 3726 02e2 8003     		.short	896
 3727 02e4 8001     		.short	384
 3728 02e6 8001     		.short	384
 3729 02e8 8001     		.short	384
 3730 02ea C000     		.short	192
 3731 02ec C000     		.short	192
 3732 02ee C000     		.short	192
 3733 02f0 6000     		.short	96
 3734 02f2 6000     		.short	96
 3735 02f4 0000     		.short	0
 3736 02f6 0000     		.short	0
 3737 02f8 0000     		.short	0
 3738 02fa 0000     		.short	0
 3739 02fc 0000     		.short	0
 3740 02fe 0000     		.short	0
 3741 0300 0000     		.short	0
 3742 0302 E003     		.short	992
 3743 0304 F007     		.short	2032
 3744 0306 380E     		.short	3640
 3745 0308 180C     		.short	3096
 3746 030a 0C18     		.short	6156
 3747 030c 0C18     		.short	6156
 3748 030e 0C18     		.short	6156
 3749 0310 0C18     		.short	6156
 3750 0312 0C18     		.short	6156
 3751 0314 0C18     		.short	6156
 3752 0316 0C18     		.short	6156
 3753 0318 0C18     		.short	6156
 3754 031a 0C18     		.short	6156
 3755 031c 180C     		.short	3096
 3756 031e 380E     		.short	3640
 3757 0320 F007     		.short	2032
 3758 0322 E003     		.short	992
 3759 0324 0000     		.short	0
 3760 0326 0000     		.short	0
 3761 0328 0000     		.short	0
 3762 032a 0000     		.short	0
 3763 032c 0000     		.short	0
 3764 032e 0000     		.short	0
 3765 0330 0000     		.short	0
 3766 0332 0001     		.short	256
 3767 0334 8001     		.short	384
 3768 0336 C001     		.short	448
 3769 0338 F001     		.short	496
 3770 033a 9801     		.short	408
 3771 033c 8801     		.short	392
 3772 033e 8001     		.short	384
 3773 0340 8001     		.short	384
 3774 0342 8001     		.short	384
 3775 0344 8001     		.short	384
 3776 0346 8001     		.short	384
 3777 0348 8001     		.short	384
 3778 034a 8001     		.short	384
 3779 034c 8001     		.short	384
 3780 034e 8001     		.short	384
 3781 0350 8001     		.short	384
 3782 0352 8001     		.short	384
 3783 0354 0000     		.short	0
 3784 0356 0000     		.short	0
 3785 0358 0000     		.short	0
 3786 035a 0000     		.short	0
 3787 035c 0000     		.short	0
 3788 035e 0000     		.short	0
 3789 0360 0000     		.short	0
 3790 0362 E003     		.short	992
 3791 0364 F80F     		.short	4088
 3792 0366 180C     		.short	3096
 3793 0368 0C18     		.short	6156
 3794 036a 0C18     		.short	6156
 3795 036c 0018     		.short	6144
 3796 036e 0018     		.short	6144
 3797 0370 000C     		.short	3072
 3798 0372 0006     		.short	1536
 3799 0374 0003     		.short	768
 3800 0376 8001     		.short	384
 3801 0378 C000     		.short	192
 3802 037a 6000     		.short	96
 3803 037c 3000     		.short	48
 3804 037e 1800     		.short	24
 3805 0380 FC1F     		.short	8188
 3806 0382 FC1F     		.short	8188
 3807 0384 0000     		.short	0
 3808 0386 0000     		.short	0
 3809 0388 0000     		.short	0
 3810 038a 0000     		.short	0
 3811 038c 0000     		.short	0
 3812 038e 0000     		.short	0
 3813 0390 0000     		.short	0
 3814 0392 E001     		.short	480
 3815 0394 F807     		.short	2040
 3816 0396 180E     		.short	3608
 3817 0398 0C0C     		.short	3084
 3818 039a 0C0C     		.short	3084
 3819 039c 000C     		.short	3072
 3820 039e 0006     		.short	1536
 3821 03a0 C003     		.short	960
 3822 03a2 C007     		.short	1984
 3823 03a4 000C     		.short	3072
 3824 03a6 0018     		.short	6144
 3825 03a8 0018     		.short	6144
 3826 03aa 0C18     		.short	6156
 3827 03ac 0C18     		.short	6156
 3828 03ae 180C     		.short	3096
 3829 03b0 F807     		.short	2040
 3830 03b2 E003     		.short	992
 3831 03b4 0000     		.short	0
 3832 03b6 0000     		.short	0
 3833 03b8 0000     		.short	0
 3834 03ba 0000     		.short	0
 3835 03bc 0000     		.short	0
 3836 03be 0000     		.short	0
 3837 03c0 0000     		.short	0
 3838 03c2 000C     		.short	3072
 3839 03c4 000E     		.short	3584
 3840 03c6 000F     		.short	3840
 3841 03c8 000F     		.short	3840
 3842 03ca 800D     		.short	3456
 3843 03cc C00C     		.short	3264
 3844 03ce 600C     		.short	3168
 3845 03d0 600C     		.short	3168
 3846 03d2 300C     		.short	3120
 3847 03d4 180C     		.short	3096
 3848 03d6 0C0C     		.short	3084
 3849 03d8 FC3F     		.short	16380
 3850 03da FC3F     		.short	16380
 3851 03dc 000C     		.short	3072
 3852 03de 000C     		.short	3072
 3853 03e0 000C     		.short	3072
 3854 03e2 000C     		.short	3072
 3855 03e4 0000     		.short	0
 3856 03e6 0000     		.short	0
 3857 03e8 0000     		.short	0
 3858 03ea 0000     		.short	0
 3859 03ec 0000     		.short	0
 3860 03ee 0000     		.short	0
 3861 03f0 0000     		.short	0
 3862 03f2 F80F     		.short	4088
 3863 03f4 F80F     		.short	4088
 3864 03f6 1800     		.short	24
 3865 03f8 1800     		.short	24
 3866 03fa 0C00     		.short	12
 3867 03fc EC03     		.short	1004
 3868 03fe FC07     		.short	2044
 3869 0400 1C0E     		.short	3612
 3870 0402 001C     		.short	7168
 3871 0404 0018     		.short	6144
 3872 0406 0018     		.short	6144
 3873 0408 0018     		.short	6144
 3874 040a 0C18     		.short	6156
 3875 040c 1C0C     		.short	3100
 3876 040e 180E     		.short	3608
 3877 0410 F807     		.short	2040
 3878 0412 E003     		.short	992
 3879 0414 0000     		.short	0
 3880 0416 0000     		.short	0
 3881 0418 0000     		.short	0
 3882 041a 0000     		.short	0
 3883 041c 0000     		.short	0
 3884 041e 0000     		.short	0
 3885 0420 0000     		.short	0
 3886 0422 C007     		.short	1984
 3887 0424 F00F     		.short	4080
 3888 0426 381C     		.short	7224
 3889 0428 1818     		.short	6168
 3890 042a 1800     		.short	24
 3891 042c 0C00     		.short	12
 3892 042e CC03     		.short	972
 3893 0430 EC0F     		.short	4076
 3894 0432 3C0E     		.short	3644
 3895 0434 1C1C     		.short	7196
 3896 0436 0C18     		.short	6156
 3897 0438 0C18     		.short	6156
 3898 043a 0C18     		.short	6156
 3899 043c 181C     		.short	7192
 3900 043e 380E     		.short	3640
 3901 0440 F007     		.short	2032
 3902 0442 E003     		.short	992
 3903 0444 0000     		.short	0
 3904 0446 0000     		.short	0
 3905 0448 0000     		.short	0
 3906 044a 0000     		.short	0
 3907 044c 0000     		.short	0
 3908 044e 0000     		.short	0
 3909 0450 0000     		.short	0
 3910 0452 FC1F     		.short	8188
 3911 0454 FC1F     		.short	8188
 3912 0456 000C     		.short	3072
 3913 0458 0006     		.short	1536
 3914 045a 0006     		.short	1536
 3915 045c 0003     		.short	768
 3916 045e 8003     		.short	896
 3917 0460 8001     		.short	384
 3918 0462 C001     		.short	448
 3919 0464 C000     		.short	192
 3920 0466 E000     		.short	224
 3921 0468 6000     		.short	96
 3922 046a 6000     		.short	96
 3923 046c 7000     		.short	112
 3924 046e 3000     		.short	48
 3925 0470 3000     		.short	48
 3926 0472 3000     		.short	48
 3927 0474 0000     		.short	0
 3928 0476 0000     		.short	0
 3929 0478 0000     		.short	0
 3930 047a 0000     		.short	0
 3931 047c 0000     		.short	0
 3932 047e 0000     		.short	0
 3933 0480 0000     		.short	0
 3934 0482 E003     		.short	992
 3935 0484 F007     		.short	2032
 3936 0486 380E     		.short	3640
 3937 0488 180C     		.short	3096
 3938 048a 180C     		.short	3096
 3939 048c 180C     		.short	3096
 3940 048e 3806     		.short	1592
 3941 0490 F007     		.short	2032
 3942 0492 F007     		.short	2032
 3943 0494 180C     		.short	3096
 3944 0496 0C18     		.short	6156
 3945 0498 0C18     		.short	6156
 3946 049a 0C18     		.short	6156
 3947 049c 0C18     		.short	6156
 3948 049e 380C     		.short	3128
 3949 04a0 F80F     		.short	4088
 3950 04a2 E003     		.short	992
 3951 04a4 0000     		.short	0
 3952 04a6 0000     		.short	0
 3953 04a8 0000     		.short	0
 3954 04aa 0000     		.short	0
 3955 04ac 0000     		.short	0
 3956 04ae 0000     		.short	0
 3957 04b0 0000     		.short	0
 3958 04b2 E003     		.short	992
 3959 04b4 F007     		.short	2032
 3960 04b6 380E     		.short	3640
 3961 04b8 1C0C     		.short	3100
 3962 04ba 0C18     		.short	6156
 3963 04bc 0C18     		.short	6156
 3964 04be 0C18     		.short	6156
 3965 04c0 1C1C     		.short	7196
 3966 04c2 381E     		.short	7736
 3967 04c4 F81B     		.short	7160
 3968 04c6 E019     		.short	6624
 3969 04c8 0018     		.short	6144
 3970 04ca 000C     		.short	3072
 3971 04cc 000C     		.short	3072
 3972 04ce 1C0E     		.short	3612
 3973 04d0 F807     		.short	2040
 3974 04d2 F001     		.short	496
 3975 04d4 0000     		.short	0
 3976 04d6 0000     		.short	0
 3977 04d8 0000     		.short	0
 3978 04da 0000     		.short	0
 3979 04dc 0000     		.short	0
 3980 04de 0000     		.short	0
 3981 04e0 0000     		.short	0
 3982 04e2 0000     		.short	0
 3983 04e4 0000     		.short	0
 3984 04e6 0000     		.short	0
 3985 04e8 0000     		.short	0
 3986 04ea 0000     		.short	0
 3987 04ec 8001     		.short	384
 3988 04ee 8001     		.short	384
 3989 04f0 0000     		.short	0
 3990 04f2 0000     		.short	0
 3991 04f4 0000     		.short	0
 3992 04f6 0000     		.short	0
 3993 04f8 0000     		.short	0
 3994 04fa 0000     		.short	0
 3995 04fc 0000     		.short	0
 3996 04fe 0000     		.short	0
 3997 0500 8001     		.short	384
 3998 0502 8001     		.short	384
 3999 0504 0000     		.short	0
 4000 0506 0000     		.short	0
 4001 0508 0000     		.short	0
 4002 050a 0000     		.short	0
 4003 050c 0000     		.short	0
 4004 050e 0000     		.short	0
 4005 0510 0000     		.short	0
 4006 0512 0000     		.short	0
 4007 0514 0000     		.short	0
 4008 0516 0000     		.short	0
 4009 0518 0000     		.short	0
 4010 051a 0000     		.short	0
 4011 051c 8001     		.short	384
 4012 051e 8001     		.short	384
 4013 0520 0000     		.short	0
 4014 0522 0000     		.short	0
 4015 0524 0000     		.short	0
 4016 0526 0000     		.short	0
 4017 0528 0000     		.short	0
 4018 052a 0000     		.short	0
 4019 052c 0000     		.short	0
 4020 052e 0000     		.short	0
 4021 0530 8001     		.short	384
 4022 0532 8001     		.short	384
 4023 0534 0001     		.short	256
 4024 0536 0001     		.short	256
 4025 0538 8000     		.short	128
 4026 053a 0000     		.short	0
 4027 053c 0000     		.short	0
 4028 053e 0000     		.short	0
 4029 0540 0000     		.short	0
 4030 0542 0000     		.short	0
 4031 0544 0000     		.short	0
 4032 0546 0000     		.short	0
 4033 0548 0000     		.short	0
 4034 054a 0000     		.short	0
 4035 054c 0000     		.short	0
 4036 054e 0000     		.short	0
 4037 0550 0010     		.short	4096
 4038 0552 001C     		.short	7168
 4039 0554 800F     		.short	3968
 4040 0556 E003     		.short	992
 4041 0558 F800     		.short	248
 4042 055a 1800     		.short	24
 4043 055c F800     		.short	248
 4044 055e E003     		.short	992
 4045 0560 800F     		.short	3968
 4046 0562 001C     		.short	7168
 4047 0564 0010     		.short	4096
 4048 0566 0000     		.short	0
 4049 0568 0000     		.short	0
 4050 056a 0000     		.short	0
 4051 056c 0000     		.short	0
 4052 056e 0000     		.short	0
 4053 0570 0000     		.short	0
 4054 0572 0000     		.short	0
 4055 0574 0000     		.short	0
 4056 0576 0000     		.short	0
 4057 0578 0000     		.short	0
 4058 057a 0000     		.short	0
 4059 057c 0000     		.short	0
 4060 057e 0000     		.short	0
 4061 0580 F81F     		.short	8184
 4062 0582 0000     		.short	0
 4063 0584 0000     		.short	0
 4064 0586 0000     		.short	0
 4065 0588 F81F     		.short	8184
 4066 058a 0000     		.short	0
 4067 058c 0000     		.short	0
 4068 058e 0000     		.short	0
 4069 0590 0000     		.short	0
 4070 0592 0000     		.short	0
 4071 0594 0000     		.short	0
 4072 0596 0000     		.short	0
 4073 0598 0000     		.short	0
 4074 059a 0000     		.short	0
 4075 059c 0000     		.short	0
 4076 059e 0000     		.short	0
 4077 05a0 0000     		.short	0
 4078 05a2 0000     		.short	0
 4079 05a4 0000     		.short	0
 4080 05a6 0000     		.short	0
 4081 05a8 0000     		.short	0
 4082 05aa 0000     		.short	0
 4083 05ac 0000     		.short	0
 4084 05ae 0000     		.short	0
 4085 05b0 0800     		.short	8
 4086 05b2 3800     		.short	56
 4087 05b4 F001     		.short	496
 4088 05b6 C007     		.short	1984
 4089 05b8 001F     		.short	7936
 4090 05ba 0018     		.short	6144
 4091 05bc 001F     		.short	7936
 4092 05be C007     		.short	1984
 4093 05c0 F001     		.short	496
 4094 05c2 3800     		.short	56
 4095 05c4 0800     		.short	8
 4096 05c6 0000     		.short	0
 4097 05c8 0000     		.short	0
 4098 05ca 0000     		.short	0
 4099 05cc 0000     		.short	0
 4100 05ce 0000     		.short	0
 4101 05d0 0000     		.short	0
 4102 05d2 E003     		.short	992
 4103 05d4 F80F     		.short	4088
 4104 05d6 180C     		.short	3096
 4105 05d8 0C18     		.short	6156
 4106 05da 0C18     		.short	6156
 4107 05dc 0018     		.short	6144
 4108 05de 000C     		.short	3072
 4109 05e0 0006     		.short	1536
 4110 05e2 0003     		.short	768
 4111 05e4 8001     		.short	384
 4112 05e6 C000     		.short	192
 4113 05e8 C000     		.short	192
 4114 05ea C000     		.short	192
 4115 05ec 0000     		.short	0
 4116 05ee 0000     		.short	0
 4117 05f0 C000     		.short	192
 4118 05f2 C000     		.short	192
 4119 05f4 0000     		.short	0
 4120 05f6 0000     		.short	0
 4121 05f8 0000     		.short	0
 4122 05fa 0000     		.short	0
 4123 05fc 0000     		.short	0
 4124 05fe 0000     		.short	0
 4125 0600 0000     		.short	0
 4126 0602 0000     		.short	0
 4127 0604 E007     		.short	2016
 4128 0606 1818     		.short	6168
 4129 0608 0420     		.short	8196
 4130 060a C229     		.short	10690
 4131 060c 224A     		.short	18978
 4132 060e 1144     		.short	17425
 4133 0610 0944     		.short	17417
 4134 0612 0944     		.short	17417
 4135 0614 0944     		.short	17417
 4136 0616 0922     		.short	8713
 4137 0618 1113     		.short	4881
 4138 061a E20C     		.short	3298
 4139 061c 0240     		.short	16386
 4140 061e 0420     		.short	8196
 4141 0620 1818     		.short	6168
 4142 0622 E007     		.short	2016
 4143 0624 0000     		.short	0
 4144 0626 0000     		.short	0
 4145 0628 0000     		.short	0
 4146 062a 0000     		.short	0
 4147 062c 0000     		.short	0
 4148 062e 0000     		.short	0
 4149 0630 0000     		.short	0
 4150 0632 8003     		.short	896
 4151 0634 8003     		.short	896
 4152 0636 C006     		.short	1728
 4153 0638 C006     		.short	1728
 4154 063a C006     		.short	1728
 4155 063c 600C     		.short	3168
 4156 063e 600C     		.short	3168
 4157 0640 3018     		.short	6192
 4158 0642 3018     		.short	6192
 4159 0644 3018     		.short	6192
 4160 0646 F83F     		.short	16376
 4161 0648 F83F     		.short	16376
 4162 064a 1C70     		.short	28700
 4163 064c 0C60     		.short	24588
 4164 064e 0C60     		.short	24588
 4165 0650 06C0     		.short	-16378
 4166 0652 06C0     		.short	-16378
 4167 0654 0000     		.short	0
 4168 0656 0000     		.short	0
 4169 0658 0000     		.short	0
 4170 065a 0000     		.short	0
 4171 065c 0000     		.short	0
 4172 065e 0000     		.short	0
 4173 0660 0000     		.short	0
 4174 0662 FC03     		.short	1020
 4175 0664 FC0F     		.short	4092
 4176 0666 0C0C     		.short	3084
 4177 0668 0C18     		.short	6156
 4178 066a 0C18     		.short	6156
 4179 066c 0C18     		.short	6156
 4180 066e 0C0C     		.short	3084
 4181 0670 FC07     		.short	2044
 4182 0672 FC0F     		.short	4092
 4183 0674 0C18     		.short	6156
 4184 0676 0C30     		.short	12300
 4185 0678 0C30     		.short	12300
 4186 067a 0C30     		.short	12300
 4187 067c 0C30     		.short	12300
 4188 067e 0C18     		.short	6156
 4189 0680 FC1F     		.short	8188
 4190 0682 FC07     		.short	2044
 4191 0684 0000     		.short	0
 4192 0686 0000     		.short	0
 4193 0688 0000     		.short	0
 4194 068a 0000     		.short	0
 4195 068c 0000     		.short	0
 4196 068e 0000     		.short	0
 4197 0690 0000     		.short	0
 4198 0692 C007     		.short	1984
 4199 0694 F01F     		.short	8176
 4200 0696 3838     		.short	14392
 4201 0698 1C30     		.short	12316
 4202 069a 0C70     		.short	28684
 4203 069c 0660     		.short	24582
 4204 069e 0600     		.short	6
 4205 06a0 0600     		.short	6
 4206 06a2 0600     		.short	6
 4207 06a4 0600     		.short	6
 4208 06a6 0600     		.short	6
 4209 06a8 0600     		.short	6
 4210 06aa 0660     		.short	24582
 4211 06ac 0C70     		.short	28684
 4212 06ae 1C30     		.short	12316
 4213 06b0 F01F     		.short	8176
 4214 06b2 E007     		.short	2016
 4215 06b4 0000     		.short	0
 4216 06b6 0000     		.short	0
 4217 06b8 0000     		.short	0
 4218 06ba 0000     		.short	0
 4219 06bc 0000     		.short	0
 4220 06be 0000     		.short	0
 4221 06c0 0000     		.short	0
 4222 06c2 FE03     		.short	1022
 4223 06c4 FE0F     		.short	4094
 4224 06c6 060E     		.short	3590
 4225 06c8 0618     		.short	6150
 4226 06ca 0618     		.short	6150
 4227 06cc 0630     		.short	12294
 4228 06ce 0630     		.short	12294
 4229 06d0 0630     		.short	12294
 4230 06d2 0630     		.short	12294
 4231 06d4 0630     		.short	12294
 4232 06d6 0630     		.short	12294
 4233 06d8 0630     		.short	12294
 4234 06da 0618     		.short	6150
 4235 06dc 0618     		.short	6150
 4236 06de 060E     		.short	3590
 4237 06e0 FE0F     		.short	4094
 4238 06e2 FE03     		.short	1022
 4239 06e4 0000     		.short	0
 4240 06e6 0000     		.short	0
 4241 06e8 0000     		.short	0
 4242 06ea 0000     		.short	0
 4243 06ec 0000     		.short	0
 4244 06ee 0000     		.short	0
 4245 06f0 0000     		.short	0
 4246 06f2 FC3F     		.short	16380
 4247 06f4 FC3F     		.short	16380
 4248 06f6 0C00     		.short	12
 4249 06f8 0C00     		.short	12
 4250 06fa 0C00     		.short	12
 4251 06fc 0C00     		.short	12
 4252 06fe 0C00     		.short	12
 4253 0700 FC1F     		.short	8188
 4254 0702 FC1F     		.short	8188
 4255 0704 0C00     		.short	12
 4256 0706 0C00     		.short	12
 4257 0708 0C00     		.short	12
 4258 070a 0C00     		.short	12
 4259 070c 0C00     		.short	12
 4260 070e 0C00     		.short	12
 4261 0710 FC3F     		.short	16380
 4262 0712 FC3F     		.short	16380
 4263 0714 0000     		.short	0
 4264 0716 0000     		.short	0
 4265 0718 0000     		.short	0
 4266 071a 0000     		.short	0
 4267 071c 0000     		.short	0
 4268 071e 0000     		.short	0
 4269 0720 0000     		.short	0
 4270 0722 F83F     		.short	16376
 4271 0724 F83F     		.short	16376
 4272 0726 1800     		.short	24
 4273 0728 1800     		.short	24
 4274 072a 1800     		.short	24
 4275 072c 1800     		.short	24
 4276 072e 1800     		.short	24
 4277 0730 F81F     		.short	8184
 4278 0732 F81F     		.short	8184
 4279 0734 1800     		.short	24
 4280 0736 1800     		.short	24
 4281 0738 1800     		.short	24
 4282 073a 1800     		.short	24
 4283 073c 1800     		.short	24
 4284 073e 1800     		.short	24
 4285 0740 1800     		.short	24
 4286 0742 1800     		.short	24
 4287 0744 0000     		.short	0
 4288 0746 0000     		.short	0
 4289 0748 0000     		.short	0
 4290 074a 0000     		.short	0
 4291 074c 0000     		.short	0
 4292 074e 0000     		.short	0
 4293 0750 0000     		.short	0
 4294 0752 E00F     		.short	4064
 4295 0754 F83F     		.short	16376
 4296 0756 3C78     		.short	30780
 4297 0758 0E60     		.short	24590
 4298 075a 06E0     		.short	-8186
 4299 075c 07C0     		.short	-16377
 4300 075e 0300     		.short	3
 4301 0760 0300     		.short	3
 4302 0762 03FE     		.short	-509
 4303 0764 03FE     		.short	-509
 4304 0766 03C0     		.short	-16381
 4305 0768 07C0     		.short	-16377
 4306 076a 06C0     		.short	-16378
 4307 076c 0EC0     		.short	-16370
 4308 076e 3CF0     		.short	-4036
 4309 0770 F83F     		.short	16376
 4310 0772 E00F     		.short	4064
 4311 0774 0000     		.short	0
 4312 0776 0000     		.short	0
 4313 0778 0000     		.short	0
 4314 077a 0000     		.short	0
 4315 077c 0000     		.short	0
 4316 077e 0000     		.short	0
 4317 0780 0000     		.short	0
 4318 0782 0C30     		.short	12300
 4319 0784 0C30     		.short	12300
 4320 0786 0C30     		.short	12300
 4321 0788 0C30     		.short	12300
 4322 078a 0C30     		.short	12300
 4323 078c 0C30     		.short	12300
 4324 078e 0C30     		.short	12300
 4325 0790 FC3F     		.short	16380
 4326 0792 FC3F     		.short	16380
 4327 0794 0C30     		.short	12300
 4328 0796 0C30     		.short	12300
 4329 0798 0C30     		.short	12300
 4330 079a 0C30     		.short	12300
 4331 079c 0C30     		.short	12300
 4332 079e 0C30     		.short	12300
 4333 07a0 0C30     		.short	12300
 4334 07a2 0C30     		.short	12300
 4335 07a4 0000     		.short	0
 4336 07a6 0000     		.short	0
 4337 07a8 0000     		.short	0
 4338 07aa 0000     		.short	0
 4339 07ac 0000     		.short	0
 4340 07ae 0000     		.short	0
 4341 07b0 0000     		.short	0
 4342 07b2 8001     		.short	384
 4343 07b4 8001     		.short	384
 4344 07b6 8001     		.short	384
 4345 07b8 8001     		.short	384
 4346 07ba 8001     		.short	384
 4347 07bc 8001     		.short	384
 4348 07be 8001     		.short	384
 4349 07c0 8001     		.short	384
 4350 07c2 8001     		.short	384
 4351 07c4 8001     		.short	384
 4352 07c6 8001     		.short	384
 4353 07c8 8001     		.short	384
 4354 07ca 8001     		.short	384
 4355 07cc 8001     		.short	384
 4356 07ce 8001     		.short	384
 4357 07d0 8001     		.short	384
 4358 07d2 8001     		.short	384
 4359 07d4 0000     		.short	0
 4360 07d6 0000     		.short	0
 4361 07d8 0000     		.short	0
 4362 07da 0000     		.short	0
 4363 07dc 0000     		.short	0
 4364 07de 0000     		.short	0
 4365 07e0 0000     		.short	0
 4366 07e2 0006     		.short	1536
 4367 07e4 0006     		.short	1536
 4368 07e6 0006     		.short	1536
 4369 07e8 0006     		.short	1536
 4370 07ea 0006     		.short	1536
 4371 07ec 0006     		.short	1536
 4372 07ee 0006     		.short	1536
 4373 07f0 0006     		.short	1536
 4374 07f2 0006     		.short	1536
 4375 07f4 0006     		.short	1536
 4376 07f6 0006     		.short	1536
 4377 07f8 0006     		.short	1536
 4378 07fa 1806     		.short	1560
 4379 07fc 1806     		.short	1560
 4380 07fe 3807     		.short	1848
 4381 0800 F003     		.short	1008
 4382 0802 E001     		.short	480
 4383 0804 0000     		.short	0
 4384 0806 0000     		.short	0
 4385 0808 0000     		.short	0
 4386 080a 0000     		.short	0
 4387 080c 0000     		.short	0
 4388 080e 0000     		.short	0
 4389 0810 0000     		.short	0
 4390 0812 0630     		.short	12294
 4391 0814 0618     		.short	6150
 4392 0816 060C     		.short	3078
 4393 0818 0606     		.short	1542
 4394 081a 0603     		.short	774
 4395 081c 8601     		.short	390
 4396 081e C600     		.short	198
 4397 0820 6600     		.short	102
 4398 0822 7600     		.short	118
 4399 0824 DE00     		.short	222
 4400 0826 8E01     		.short	398
 4401 0828 0603     		.short	774
 4402 082a 0606     		.short	1542
 4403 082c 060C     		.short	3078
 4404 082e 0618     		.short	6150
 4405 0830 0630     		.short	12294
 4406 0832 0660     		.short	24582
 4407 0834 0000     		.short	0
 4408 0836 0000     		.short	0
 4409 0838 0000     		.short	0
 4410 083a 0000     		.short	0
 4411 083c 0000     		.short	0
 4412 083e 0000     		.short	0
 4413 0840 0000     		.short	0
 4414 0842 1800     		.short	24
 4415 0844 1800     		.short	24
 4416 0846 1800     		.short	24
 4417 0848 1800     		.short	24
 4418 084a 1800     		.short	24
 4419 084c 1800     		.short	24
 4420 084e 1800     		.short	24
 4421 0850 1800     		.short	24
 4422 0852 1800     		.short	24
 4423 0854 1800     		.short	24
 4424 0856 1800     		.short	24
 4425 0858 1800     		.short	24
 4426 085a 1800     		.short	24
 4427 085c 1800     		.short	24
 4428 085e 1800     		.short	24
 4429 0860 F81F     		.short	8184
 4430 0862 F81F     		.short	8184
 4431 0864 0000     		.short	0
 4432 0866 0000     		.short	0
 4433 0868 0000     		.short	0
 4434 086a 0000     		.short	0
 4435 086c 0000     		.short	0
 4436 086e 0000     		.short	0
 4437 0870 0000     		.short	0
 4438 0872 0EE0     		.short	-8178
 4439 0874 1EF0     		.short	-4066
 4440 0876 1EF0     		.short	-4066
 4441 0878 1EF0     		.short	-4066
 4442 087a 36D8     		.short	-10186
 4443 087c 36D8     		.short	-10186
 4444 087e 36D8     		.short	-10186
 4445 0880 36D8     		.short	-10186
 4446 0882 66CC     		.short	-13210
 4447 0884 66CC     		.short	-13210
 4448 0886 66CC     		.short	-13210
 4449 0888 C6C6     		.short	-14650
 4450 088a C6C6     		.short	-14650
 4451 088c C6C6     		.short	-14650
 4452 088e C6C6     		.short	-14650
 4453 0890 86C3     		.short	-15482
 4454 0892 86C3     		.short	-15482
 4455 0894 0000     		.short	0
 4456 0896 0000     		.short	0
 4457 0898 0000     		.short	0
 4458 089a 0000     		.short	0
 4459 089c 0000     		.short	0
 4460 089e 0000     		.short	0
 4461 08a0 0000     		.short	0
 4462 08a2 0C30     		.short	12300
 4463 08a4 1C30     		.short	12316
 4464 08a6 3C30     		.short	12348
 4465 08a8 3C30     		.short	12348
 4466 08aa 6C30     		.short	12396
 4467 08ac 6C30     		.short	12396
 4468 08ae CC30     		.short	12492
 4469 08b0 CC30     		.short	12492
 4470 08b2 8C31     		.short	12684
 4471 08b4 0C33     		.short	13068
 4472 08b6 0C33     		.short	13068
 4473 08b8 0C36     		.short	13836
 4474 08ba 0C36     		.short	13836
 4475 08bc 0C3C     		.short	15372
 4476 08be 0C3C     		.short	15372
 4477 08c0 0C38     		.short	14348
 4478 08c2 0C30     		.short	12300
 4479 08c4 0000     		.short	0
 4480 08c6 0000     		.short	0
 4481 08c8 0000     		.short	0
 4482 08ca 0000     		.short	0
 4483 08cc 0000     		.short	0
 4484 08ce 0000     		.short	0
 4485 08d0 0000     		.short	0
 4486 08d2 E007     		.short	2016
 4487 08d4 F81F     		.short	8184
 4488 08d6 1C38     		.short	14364
 4489 08d8 0E70     		.short	28686
 4490 08da 0660     		.short	24582
 4491 08dc 03C0     		.short	-16381
 4492 08de 03C0     		.short	-16381
 4493 08e0 03C0     		.short	-16381
 4494 08e2 03C0     		.short	-16381
 4495 08e4 03C0     		.short	-16381
 4496 08e6 03C0     		.short	-16381
 4497 08e8 03C0     		.short	-16381
 4498 08ea 0660     		.short	24582
 4499 08ec 0E70     		.short	28686
 4500 08ee 1C38     		.short	14364
 4501 08f0 F81F     		.short	8184
 4502 08f2 E007     		.short	2016
 4503 08f4 0000     		.short	0
 4504 08f6 0000     		.short	0
 4505 08f8 0000     		.short	0
 4506 08fa 0000     		.short	0
 4507 08fc 0000     		.short	0
 4508 08fe 0000     		.short	0
 4509 0900 0000     		.short	0
 4510 0902 FC0F     		.short	4092
 4511 0904 FC1F     		.short	8188
 4512 0906 0C38     		.short	14348
 4513 0908 0C30     		.short	12300
 4514 090a 0C30     		.short	12300
 4515 090c 0C30     		.short	12300
 4516 090e 0C30     		.short	12300
 4517 0910 0C18     		.short	6156
 4518 0912 FC1F     		.short	8188
 4519 0914 FC07     		.short	2044
 4520 0916 0C00     		.short	12
 4521 0918 0C00     		.short	12
 4522 091a 0C00     		.short	12
 4523 091c 0C00     		.short	12
 4524 091e 0C00     		.short	12
 4525 0920 0C00     		.short	12
 4526 0922 0C00     		.short	12
 4527 0924 0000     		.short	0
 4528 0926 0000     		.short	0
 4529 0928 0000     		.short	0
 4530 092a 0000     		.short	0
 4531 092c 0000     		.short	0
 4532 092e 0000     		.short	0
 4533 0930 0000     		.short	0
 4534 0932 E007     		.short	2016
 4535 0934 F81F     		.short	8184
 4536 0936 1C38     		.short	14364
 4537 0938 0E70     		.short	28686
 4538 093a 0660     		.short	24582
 4539 093c 03E0     		.short	-8189
 4540 093e 03C0     		.short	-16381
 4541 0940 03C0     		.short	-16381
 4542 0942 03C0     		.short	-16381
 4543 0944 03C0     		.short	-16381
 4544 0946 03C0     		.short	-16381
 4545 0948 07E0     		.short	-8185
 4546 094a 0663     		.short	25350
 4547 094c 0E3F     		.short	16142
 4548 094e 1C3C     		.short	15388
 4549 0950 F83F     		.short	16376
 4550 0952 E0F7     		.short	-2080
 4551 0954 00C0     		.short	-16384
 4552 0956 0000     		.short	0
 4553 0958 0000     		.short	0
 4554 095a 0000     		.short	0
 4555 095c 0000     		.short	0
 4556 095e 0000     		.short	0
 4557 0960 0000     		.short	0
 4558 0962 FE0F     		.short	4094
 4559 0964 FE1F     		.short	8190
 4560 0966 0638     		.short	14342
 4561 0968 0630     		.short	12294
 4562 096a 0630     		.short	12294
 4563 096c 0630     		.short	12294
 4564 096e 0638     		.short	14342
 4565 0970 FE1F     		.short	8190
 4566 0972 FE07     		.short	2046
 4567 0974 0603     		.short	774
 4568 0976 0606     		.short	1542
 4569 0978 060C     		.short	3078
 4570 097a 0618     		.short	6150
 4571 097c 0618     		.short	6150
 4572 097e 0630     		.short	12294
 4573 0980 0630     		.short	12294
 4574 0982 0660     		.short	24582
 4575 0984 0000     		.short	0
 4576 0986 0000     		.short	0
 4577 0988 0000     		.short	0
 4578 098a 0000     		.short	0
 4579 098c 0000     		.short	0
 4580 098e 0000     		.short	0
 4581 0990 0000     		.short	0
 4582 0992 E003     		.short	992
 4583 0994 F80F     		.short	4088
 4584 0996 1C0C     		.short	3100
 4585 0998 0C18     		.short	6156
 4586 099a 0C18     		.short	6156
 4587 099c 0C00     		.short	12
 4588 099e 1C00     		.short	28
 4589 09a0 F803     		.short	1016
 4590 09a2 E00F     		.short	4064
 4591 09a4 001E     		.short	7680
 4592 09a6 0038     		.short	14336
 4593 09a8 0630     		.short	12294
 4594 09aa 0630     		.short	12294
 4595 09ac 0E30     		.short	12302
 4596 09ae 1C1C     		.short	7196
 4597 09b0 F80F     		.short	4088
 4598 09b2 E007     		.short	2016
 4599 09b4 0000     		.short	0
 4600 09b6 0000     		.short	0
 4601 09b8 0000     		.short	0
 4602 09ba 0000     		.short	0
 4603 09bc 0000     		.short	0
 4604 09be 0000     		.short	0
 4605 09c0 0000     		.short	0
 4606 09c2 FE7F     		.short	32766
 4607 09c4 FE7F     		.short	32766
 4608 09c6 8001     		.short	384
 4609 09c8 8001     		.short	384
 4610 09ca 8001     		.short	384
 4611 09cc 8001     		.short	384
 4612 09ce 8001     		.short	384
 4613 09d0 8001     		.short	384
 4614 09d2 8001     		.short	384
 4615 09d4 8001     		.short	384
 4616 09d6 8001     		.short	384
 4617 09d8 8001     		.short	384
 4618 09da 8001     		.short	384
 4619 09dc 8001     		.short	384
 4620 09de 8001     		.short	384
 4621 09e0 8001     		.short	384
 4622 09e2 8001     		.short	384
 4623 09e4 0000     		.short	0
 4624 09e6 0000     		.short	0
 4625 09e8 0000     		.short	0
 4626 09ea 0000     		.short	0
 4627 09ec 0000     		.short	0
 4628 09ee 0000     		.short	0
 4629 09f0 0000     		.short	0
 4630 09f2 0C30     		.short	12300
 4631 09f4 0C30     		.short	12300
 4632 09f6 0C30     		.short	12300
 4633 09f8 0C30     		.short	12300
 4634 09fa 0C30     		.short	12300
 4635 09fc 0C30     		.short	12300
 4636 09fe 0C30     		.short	12300
 4637 0a00 0C30     		.short	12300
 4638 0a02 0C30     		.short	12300
 4639 0a04 0C30     		.short	12300
 4640 0a06 0C30     		.short	12300
 4641 0a08 0C30     		.short	12300
 4642 0a0a 0C30     		.short	12300
 4643 0a0c 0C30     		.short	12300
 4644 0a0e 1818     		.short	6168
 4645 0a10 F81F     		.short	8184
 4646 0a12 E007     		.short	2016
 4647 0a14 0000     		.short	0
 4648 0a16 0000     		.short	0
 4649 0a18 0000     		.short	0
 4650 0a1a 0000     		.short	0
 4651 0a1c 0000     		.short	0
 4652 0a1e 0000     		.short	0
 4653 0a20 0000     		.short	0
 4654 0a22 0360     		.short	24579
 4655 0a24 0630     		.short	12294
 4656 0a26 0630     		.short	12294
 4657 0a28 0630     		.short	12294
 4658 0a2a 0C18     		.short	6156
 4659 0a2c 0C18     		.short	6156
 4660 0a2e 0C18     		.short	6156
 4661 0a30 180C     		.short	3096
 4662 0a32 180C     		.short	3096
 4663 0a34 380E     		.short	3640
 4664 0a36 3006     		.short	1584
 4665 0a38 3006     		.short	1584
 4666 0a3a 7007     		.short	1904
 4667 0a3c 6003     		.short	864
 4668 0a3e 6003     		.short	864
 4669 0a40 C001     		.short	448
 4670 0a42 C001     		.short	448
 4671 0a44 0000     		.short	0
 4672 0a46 0000     		.short	0
 4673 0a48 0000     		.short	0
 4674 0a4a 0000     		.short	0
 4675 0a4c 0000     		.short	0
 4676 0a4e 0000     		.short	0
 4677 0a50 0000     		.short	0
 4678 0a52 0360     		.short	24579
 4679 0a54 C361     		.short	25027
 4680 0a56 C361     		.short	25027
 4681 0a58 C361     		.short	25027
 4682 0a5a 6633     		.short	13158
 4683 0a5c 6633     		.short	13158
 4684 0a5e 6633     		.short	13158
 4685 0a60 6633     		.short	13158
 4686 0a62 6633     		.short	13158
 4687 0a64 6633     		.short	13158
 4688 0a66 6C1B     		.short	7020
 4689 0a68 6C1B     		.short	7020
 4690 0a6a 6C1B     		.short	7020
 4691 0a6c 2C1A     		.short	6700
 4692 0a6e 3C1E     		.short	7740
 4693 0a70 380E     		.short	3640
 4694 0a72 380E     		.short	3640
 4695 0a74 0000     		.short	0
 4696 0a76 0000     		.short	0
 4697 0a78 0000     		.short	0
 4698 0a7a 0000     		.short	0
 4699 0a7c 0000     		.short	0
 4700 0a7e 0000     		.short	0
 4701 0a80 0000     		.short	0
 4702 0a82 0FE0     		.short	-8177
 4703 0a84 0C70     		.short	28684
 4704 0a86 1830     		.short	12312
 4705 0a88 3018     		.short	6192
 4706 0a8a 700C     		.short	3184
 4707 0a8c 600E     		.short	3680
 4708 0a8e C007     		.short	1984
 4709 0a90 8003     		.short	896
 4710 0a92 8003     		.short	896
 4711 0a94 C003     		.short	960
 4712 0a96 E006     		.short	1760
 4713 0a98 700C     		.short	3184
 4714 0a9a 301C     		.short	7216
 4715 0a9c 1818     		.short	6168
 4716 0a9e 0C30     		.short	12300
 4717 0aa0 0E60     		.short	24590
 4718 0aa2 07E0     		.short	-8185
 4719 0aa4 0000     		.short	0
 4720 0aa6 0000     		.short	0
 4721 0aa8 0000     		.short	0
 4722 0aaa 0000     		.short	0
 4723 0aac 0000     		.short	0
 4724 0aae 0000     		.short	0
 4725 0ab0 0000     		.short	0
 4726 0ab2 03C0     		.short	-16381
 4727 0ab4 0660     		.short	24582
 4728 0ab6 0C30     		.short	12300
 4729 0ab8 1C38     		.short	14364
 4730 0aba 3818     		.short	6200
 4731 0abc 300C     		.short	3120
 4732 0abe 6006     		.short	1632
 4733 0ac0 E007     		.short	2016
 4734 0ac2 C003     		.short	960
 4735 0ac4 8001     		.short	384
 4736 0ac6 8001     		.short	384
 4737 0ac8 8001     		.short	384
 4738 0aca 8001     		.short	384
 4739 0acc 8001     		.short	384
 4740 0ace 8001     		.short	384
 4741 0ad0 8001     		.short	384
 4742 0ad2 8001     		.short	384
 4743 0ad4 0000     		.short	0
 4744 0ad6 0000     		.short	0
 4745 0ad8 0000     		.short	0
 4746 0ada 0000     		.short	0
 4747 0adc 0000     		.short	0
 4748 0ade 0000     		.short	0
 4749 0ae0 0000     		.short	0
 4750 0ae2 FC7F     		.short	32764
 4751 0ae4 FC7F     		.short	32764
 4752 0ae6 0060     		.short	24576
 4753 0ae8 0030     		.short	12288
 4754 0aea 0018     		.short	6144
 4755 0aec 000C     		.short	3072
 4756 0aee 0006     		.short	1536
 4757 0af0 0003     		.short	768
 4758 0af2 8001     		.short	384
 4759 0af4 C000     		.short	192
 4760 0af6 6000     		.short	96
 4761 0af8 3000     		.short	48
 4762 0afa 1800     		.short	24
 4763 0afc 0C00     		.short	12
 4764 0afe 0600     		.short	6
 4765 0b00 FE7F     		.short	32766
 4766 0b02 FE7F     		.short	32766
 4767 0b04 0000     		.short	0
 4768 0b06 0000     		.short	0
 4769 0b08 0000     		.short	0
 4770 0b0a 0000     		.short	0
 4771 0b0c 0000     		.short	0
 4772 0b0e 0000     		.short	0
 4773 0b10 0000     		.short	0
 4774 0b12 E003     		.short	992
 4775 0b14 E003     		.short	992
 4776 0b16 6000     		.short	96
 4777 0b18 6000     		.short	96
 4778 0b1a 6000     		.short	96
 4779 0b1c 6000     		.short	96
 4780 0b1e 6000     		.short	96
 4781 0b20 6000     		.short	96
 4782 0b22 6000     		.short	96
 4783 0b24 6000     		.short	96
 4784 0b26 6000     		.short	96
 4785 0b28 6000     		.short	96
 4786 0b2a 6000     		.short	96
 4787 0b2c 6000     		.short	96
 4788 0b2e 6000     		.short	96
 4789 0b30 6000     		.short	96
 4790 0b32 6000     		.short	96
 4791 0b34 6000     		.short	96
 4792 0b36 6000     		.short	96
 4793 0b38 6000     		.short	96
 4794 0b3a E003     		.short	992
 4795 0b3c E003     		.short	992
 4796 0b3e 0000     		.short	0
 4797 0b40 0000     		.short	0
 4798 0b42 3000     		.short	48
 4799 0b44 3000     		.short	48
 4800 0b46 6000     		.short	96
 4801 0b48 6000     		.short	96
 4802 0b4a 6000     		.short	96
 4803 0b4c C000     		.short	192
 4804 0b4e C000     		.short	192
 4805 0b50 C000     		.short	192
 4806 0b52 C001     		.short	448
 4807 0b54 8001     		.short	384
 4808 0b56 8001     		.short	384
 4809 0b58 8001     		.short	384
 4810 0b5a 0003     		.short	768
 4811 0b5c 0003     		.short	768
 4812 0b5e 0003     		.short	768
 4813 0b60 0006     		.short	1536
 4814 0b62 0006     		.short	1536
 4815 0b64 0000     		.short	0
 4816 0b66 0000     		.short	0
 4817 0b68 0000     		.short	0
 4818 0b6a 0000     		.short	0
 4819 0b6c 0000     		.short	0
 4820 0b6e 0000     		.short	0
 4821 0b70 0000     		.short	0
 4822 0b72 E003     		.short	992
 4823 0b74 E003     		.short	992
 4824 0b76 0003     		.short	768
 4825 0b78 0003     		.short	768
 4826 0b7a 0003     		.short	768
 4827 0b7c 0003     		.short	768
 4828 0b7e 0003     		.short	768
 4829 0b80 0003     		.short	768
 4830 0b82 0003     		.short	768
 4831 0b84 0003     		.short	768
 4832 0b86 0003     		.short	768
 4833 0b88 0003     		.short	768
 4834 0b8a 0003     		.short	768
 4835 0b8c 0003     		.short	768
 4836 0b8e 0003     		.short	768
 4837 0b90 0003     		.short	768
 4838 0b92 0003     		.short	768
 4839 0b94 0003     		.short	768
 4840 0b96 0003     		.short	768
 4841 0b98 0003     		.short	768
 4842 0b9a E003     		.short	992
 4843 0b9c E003     		.short	992
 4844 0b9e 0000     		.short	0
 4845 0ba0 0000     		.short	0
 4846 0ba2 0000     		.short	0
 4847 0ba4 C001     		.short	448
 4848 0ba6 C001     		.short	448
 4849 0ba8 6003     		.short	864
 4850 0baa 6003     		.short	864
 4851 0bac 6003     		.short	864
 4852 0bae 3006     		.short	1584
 4853 0bb0 3006     		.short	1584
 4854 0bb2 180C     		.short	3096
 4855 0bb4 180C     		.short	3096
 4856 0bb6 0000     		.short	0
 4857 0bb8 0000     		.short	0
 4858 0bba 0000     		.short	0
 4859 0bbc 0000     		.short	0
 4860 0bbe 0000     		.short	0
 4861 0bc0 0000     		.short	0
 4862 0bc2 0000     		.short	0
 4863 0bc4 0000     		.short	0
 4864 0bc6 0000     		.short	0
 4865 0bc8 0000     		.short	0
 4866 0bca 0000     		.short	0
 4867 0bcc 0000     		.short	0
 4868 0bce 0000     		.short	0
 4869 0bd0 0000     		.short	0
 4870 0bd2 0000     		.short	0
 4871 0bd4 0000     		.short	0
 4872 0bd6 0000     		.short	0
 4873 0bd8 0000     		.short	0
 4874 0bda 0000     		.short	0
 4875 0bdc 0000     		.short	0
 4876 0bde 0000     		.short	0
 4877 0be0 0000     		.short	0
 4878 0be2 0000     		.short	0
 4879 0be4 0000     		.short	0
 4880 0be6 0000     		.short	0
 4881 0be8 0000     		.short	0
 4882 0bea 0000     		.short	0
 4883 0bec 0000     		.short	0
 4884 0bee 0000     		.short	0
 4885 0bf0 0000     		.short	0
 4886 0bf2 FFFF     		.short	-1
 4887 0bf4 FFFF     		.short	-1
 4888 0bf6 0000     		.short	0
 4889 0bf8 0000     		.short	0
 4890 0bfa 0000     		.short	0
 4891 0bfc 0000     		.short	0
 4892 0bfe 0000     		.short	0
 4893 0c00 0000     		.short	0
 4894 0c02 0C00     		.short	12
 4895 0c04 0C00     		.short	12
 4896 0c06 0C00     		.short	12
 4897 0c08 0C00     		.short	12
 4898 0c0a 0C00     		.short	12
 4899 0c0c 0C00     		.short	12
 4900 0c0e 0000     		.short	0
 4901 0c10 0000     		.short	0
 4902 0c12 0000     		.short	0
 4903 0c14 0000     		.short	0
 4904 0c16 0000     		.short	0
 4905 0c18 0000     		.short	0
 4906 0c1a 0000     		.short	0
 4907 0c1c 0000     		.short	0
 4908 0c1e 0000     		.short	0
 4909 0c20 0000     		.short	0
 4910 0c22 0000     		.short	0
 4911 0c24 0000     		.short	0
 4912 0c26 0000     		.short	0
 4913 0c28 0000     		.short	0
 4914 0c2a 0000     		.short	0
 4915 0c2c 0000     		.short	0
 4916 0c2e 0000     		.short	0
 4917 0c30 0000     		.short	0
 4918 0c32 0000     		.short	0
 4919 0c34 0000     		.short	0
 4920 0c36 0000     		.short	0
 4921 0c38 0000     		.short	0
 4922 0c3a 0000     		.short	0
 4923 0c3c F003     		.short	1008
 4924 0c3e F807     		.short	2040
 4925 0c40 1C0C     		.short	3100
 4926 0c42 0C0C     		.short	3084
 4927 0c44 000F     		.short	3840
 4928 0c46 F00F     		.short	4080
 4929 0c48 F80C     		.short	3320
 4930 0c4a 0C0C     		.short	3084
 4931 0c4c 0C0C     		.short	3084
 4932 0c4e 1C0F     		.short	3868
 4933 0c50 F80F     		.short	4088
 4934 0c52 F018     		.short	6384
 4935 0c54 0000     		.short	0
 4936 0c56 0000     		.short	0
 4937 0c58 0000     		.short	0
 4938 0c5a 0000     		.short	0
 4939 0c5c 0000     		.short	0
 4940 0c5e 0000     		.short	0
 4941 0c60 0000     		.short	0
 4942 0c62 1800     		.short	24
 4943 0c64 1800     		.short	24
 4944 0c66 1800     		.short	24
 4945 0c68 1800     		.short	24
 4946 0c6a 1800     		.short	24
 4947 0c6c D803     		.short	984
 4948 0c6e F80F     		.short	4088
 4949 0c70 380C     		.short	3128
 4950 0c72 1818     		.short	6168
 4951 0c74 1818     		.short	6168
 4952 0c76 1818     		.short	6168
 4953 0c78 1818     		.short	6168
 4954 0c7a 1818     		.short	6168
 4955 0c7c 1818     		.short	6168
 4956 0c7e 380C     		.short	3128
 4957 0c80 F80F     		.short	4088
 4958 0c82 D803     		.short	984
 4959 0c84 0000     		.short	0
 4960 0c86 0000     		.short	0
 4961 0c88 0000     		.short	0
 4962 0c8a 0000     		.short	0
 4963 0c8c 0000     		.short	0
 4964 0c8e 0000     		.short	0
 4965 0c90 0000     		.short	0
 4966 0c92 0000     		.short	0
 4967 0c94 0000     		.short	0
 4968 0c96 0000     		.short	0
 4969 0c98 0000     		.short	0
 4970 0c9a 0000     		.short	0
 4971 0c9c C003     		.short	960
 4972 0c9e F007     		.short	2032
 4973 0ca0 300E     		.short	3632
 4974 0ca2 180C     		.short	3096
 4975 0ca4 1800     		.short	24
 4976 0ca6 1800     		.short	24
 4977 0ca8 1800     		.short	24
 4978 0caa 1800     		.short	24
 4979 0cac 180C     		.short	3096
 4980 0cae 300E     		.short	3632
 4981 0cb0 F007     		.short	2032
 4982 0cb2 C003     		.short	960
 4983 0cb4 0000     		.short	0
 4984 0cb6 0000     		.short	0
 4985 0cb8 0000     		.short	0
 4986 0cba 0000     		.short	0
 4987 0cbc 0000     		.short	0
 4988 0cbe 0000     		.short	0
 4989 0cc0 0000     		.short	0
 4990 0cc2 0018     		.short	6144
 4991 0cc4 0018     		.short	6144
 4992 0cc6 0018     		.short	6144
 4993 0cc8 0018     		.short	6144
 4994 0cca 0018     		.short	6144
 4995 0ccc C01B     		.short	7104
 4996 0cce F01F     		.short	8176
 4997 0cd0 301C     		.short	7216
 4998 0cd2 1818     		.short	6168
 4999 0cd4 1818     		.short	6168
 5000 0cd6 1818     		.short	6168
 5001 0cd8 1818     		.short	6168
 5002 0cda 1818     		.short	6168
 5003 0cdc 1818     		.short	6168
 5004 0cde 301C     		.short	7216
 5005 0ce0 F01F     		.short	8176
 5006 0ce2 C01B     		.short	7104
 5007 0ce4 0000     		.short	0
 5008 0ce6 0000     		.short	0
 5009 0ce8 0000     		.short	0
 5010 0cea 0000     		.short	0
 5011 0cec 0000     		.short	0
 5012 0cee 0000     		.short	0
 5013 0cf0 0000     		.short	0
 5014 0cf2 0000     		.short	0
 5015 0cf4 0000     		.short	0
 5016 0cf6 0000     		.short	0
 5017 0cf8 0000     		.short	0
 5018 0cfa 0000     		.short	0
 5019 0cfc C003     		.short	960
 5020 0cfe F00F     		.short	4080
 5021 0d00 300C     		.short	3120
 5022 0d02 1818     		.short	6168
 5023 0d04 F81F     		.short	8184
 5024 0d06 F81F     		.short	8184
 5025 0d08 1800     		.short	24
 5026 0d0a 1800     		.short	24
 5027 0d0c 3818     		.short	6200
 5028 0d0e 301C     		.short	7216
 5029 0d10 F00F     		.short	4080
 5030 0d12 C007     		.short	1984
 5031 0d14 0000     		.short	0
 5032 0d16 0000     		.short	0
 5033 0d18 0000     		.short	0
 5034 0d1a 0000     		.short	0
 5035 0d1c 0000     		.short	0
 5036 0d1e 0000     		.short	0
 5037 0d20 0000     		.short	0
 5038 0d22 800F     		.short	3968
 5039 0d24 C00F     		.short	4032
 5040 0d26 C000     		.short	192
 5041 0d28 C000     		.short	192
 5042 0d2a C000     		.short	192
 5043 0d2c F007     		.short	2032
 5044 0d2e F007     		.short	2032
 5045 0d30 C000     		.short	192
 5046 0d32 C000     		.short	192
 5047 0d34 C000     		.short	192
 5048 0d36 C000     		.short	192
 5049 0d38 C000     		.short	192
 5050 0d3a C000     		.short	192
 5051 0d3c C000     		.short	192
 5052 0d3e C000     		.short	192
 5053 0d40 C000     		.short	192
 5054 0d42 C000     		.short	192
 5055 0d44 0000     		.short	0
 5056 0d46 0000     		.short	0
 5057 0d48 0000     		.short	0
 5058 0d4a 0000     		.short	0
 5059 0d4c 0000     		.short	0
 5060 0d4e 0000     		.short	0
 5061 0d50 0000     		.short	0
 5062 0d52 0000     		.short	0
 5063 0d54 0000     		.short	0
 5064 0d56 0000     		.short	0
 5065 0d58 0000     		.short	0
 5066 0d5a 0000     		.short	0
 5067 0d5c E00D     		.short	3552
 5068 0d5e F80F     		.short	4088
 5069 0d60 180E     		.short	3608
 5070 0d62 0C0C     		.short	3084
 5071 0d64 0C0C     		.short	3084
 5072 0d66 0C0C     		.short	3084
 5073 0d68 0C0C     		.short	3084
 5074 0d6a 0C0C     		.short	3084
 5075 0d6c 0C0C     		.short	3084
 5076 0d6e 180E     		.short	3608
 5077 0d70 F80F     		.short	4088
 5078 0d72 E00D     		.short	3552
 5079 0d74 000C     		.short	3072
 5080 0d76 0C0C     		.short	3084
 5081 0d78 1C06     		.short	1564
 5082 0d7a F807     		.short	2040
 5083 0d7c F001     		.short	496
 5084 0d7e 0000     		.short	0
 5085 0d80 0000     		.short	0
 5086 0d82 1800     		.short	24
 5087 0d84 1800     		.short	24
 5088 0d86 1800     		.short	24
 5089 0d88 1800     		.short	24
 5090 0d8a 1800     		.short	24
 5091 0d8c D807     		.short	2008
 5092 0d8e F80F     		.short	4088
 5093 0d90 381C     		.short	7224
 5094 0d92 1818     		.short	6168
 5095 0d94 1818     		.short	6168
 5096 0d96 1818     		.short	6168
 5097 0d98 1818     		.short	6168
 5098 0d9a 1818     		.short	6168
 5099 0d9c 1818     		.short	6168
 5100 0d9e 1818     		.short	6168
 5101 0da0 1818     		.short	6168
 5102 0da2 1818     		.short	6168
 5103 0da4 0000     		.short	0
 5104 0da6 0000     		.short	0
 5105 0da8 0000     		.short	0
 5106 0daa 0000     		.short	0
 5107 0dac 0000     		.short	0
 5108 0dae 0000     		.short	0
 5109 0db0 0000     		.short	0
 5110 0db2 C000     		.short	192
 5111 0db4 C000     		.short	192
 5112 0db6 0000     		.short	0
 5113 0db8 0000     		.short	0
 5114 0dba 0000     		.short	0
 5115 0dbc C000     		.short	192
 5116 0dbe C000     		.short	192
 5117 0dc0 C000     		.short	192
 5118 0dc2 C000     		.short	192
 5119 0dc4 C000     		.short	192
 5120 0dc6 C000     		.short	192
 5121 0dc8 C000     		.short	192
 5122 0dca C000     		.short	192
 5123 0dcc C000     		.short	192
 5124 0dce C000     		.short	192
 5125 0dd0 C000     		.short	192
 5126 0dd2 C000     		.short	192
 5127 0dd4 0000     		.short	0
 5128 0dd6 0000     		.short	0
 5129 0dd8 0000     		.short	0
 5130 0dda 0000     		.short	0
 5131 0ddc 0000     		.short	0
 5132 0dde 0000     		.short	0
 5133 0de0 0000     		.short	0
 5134 0de2 C000     		.short	192
 5135 0de4 C000     		.short	192
 5136 0de6 0000     		.short	0
 5137 0de8 0000     		.short	0
 5138 0dea 0000     		.short	0
 5139 0dec C000     		.short	192
 5140 0dee C000     		.short	192
 5141 0df0 C000     		.short	192
 5142 0df2 C000     		.short	192
 5143 0df4 C000     		.short	192
 5144 0df6 C000     		.short	192
 5145 0df8 C000     		.short	192
 5146 0dfa C000     		.short	192
 5147 0dfc C000     		.short	192
 5148 0dfe C000     		.short	192
 5149 0e00 C000     		.short	192
 5150 0e02 C000     		.short	192
 5151 0e04 C000     		.short	192
 5152 0e06 C000     		.short	192
 5153 0e08 C000     		.short	192
 5154 0e0a F800     		.short	248
 5155 0e0c 7800     		.short	120
 5156 0e0e 0000     		.short	0
 5157 0e10 0000     		.short	0
 5158 0e12 0C00     		.short	12
 5159 0e14 0C00     		.short	12
 5160 0e16 0C00     		.short	12
 5161 0e18 0C00     		.short	12
 5162 0e1a 0C00     		.short	12
 5163 0e1c 0C0C     		.short	3084
 5164 0e1e 0C06     		.short	1548
 5165 0e20 0C03     		.short	780
 5166 0e22 8C01     		.short	396
 5167 0e24 CC00     		.short	204
 5168 0e26 6C00     		.short	108
 5169 0e28 FC00     		.short	252
 5170 0e2a 9C01     		.short	412
 5171 0e2c 8C03     		.short	908
 5172 0e2e 0C03     		.short	780
 5173 0e30 0C06     		.short	1548
 5174 0e32 0C0C     		.short	3084
 5175 0e34 0000     		.short	0
 5176 0e36 0000     		.short	0
 5177 0e38 0000     		.short	0
 5178 0e3a 0000     		.short	0
 5179 0e3c 0000     		.short	0
 5180 0e3e 0000     		.short	0
 5181 0e40 0000     		.short	0
 5182 0e42 C000     		.short	192
 5183 0e44 C000     		.short	192
 5184 0e46 C000     		.short	192
 5185 0e48 C000     		.short	192
 5186 0e4a C000     		.short	192
 5187 0e4c C000     		.short	192
 5188 0e4e C000     		.short	192
 5189 0e50 C000     		.short	192
 5190 0e52 C000     		.short	192
 5191 0e54 C000     		.short	192
 5192 0e56 C000     		.short	192
 5193 0e58 C000     		.short	192
 5194 0e5a C000     		.short	192
 5195 0e5c C000     		.short	192
 5196 0e5e C000     		.short	192
 5197 0e60 C000     		.short	192
 5198 0e62 C000     		.short	192
 5199 0e64 0000     		.short	0
 5200 0e66 0000     		.short	0
 5201 0e68 0000     		.short	0
 5202 0e6a 0000     		.short	0
 5203 0e6c 0000     		.short	0
 5204 0e6e 0000     		.short	0
 5205 0e70 0000     		.short	0
 5206 0e72 0000     		.short	0
 5207 0e74 0000     		.short	0
 5208 0e76 0000     		.short	0
 5209 0e78 0000     		.short	0
 5210 0e7a 0000     		.short	0
 5211 0e7c 7C3C     		.short	15484
 5212 0e7e FF7E     		.short	32511
 5213 0e80 C7E3     		.short	-7225
 5214 0e82 83C1     		.short	-15997
 5215 0e84 83C1     		.short	-15997
 5216 0e86 83C1     		.short	-15997
 5217 0e88 83C1     		.short	-15997
 5218 0e8a 83C1     		.short	-15997
 5219 0e8c 83C1     		.short	-15997
 5220 0e8e 83C1     		.short	-15997
 5221 0e90 83C1     		.short	-15997
 5222 0e92 83C1     		.short	-15997
 5223 0e94 0000     		.short	0
 5224 0e96 0000     		.short	0
 5225 0e98 0000     		.short	0
 5226 0e9a 0000     		.short	0
 5227 0e9c 0000     		.short	0
 5228 0e9e 0000     		.short	0
 5229 0ea0 0000     		.short	0
 5230 0ea2 0000     		.short	0
 5231 0ea4 0000     		.short	0
 5232 0ea6 0000     		.short	0
 5233 0ea8 0000     		.short	0
 5234 0eaa 0000     		.short	0
 5235 0eac 9807     		.short	1944
 5236 0eae F80F     		.short	4088
 5237 0eb0 381C     		.short	7224
 5238 0eb2 1818     		.short	6168
 5239 0eb4 1818     		.short	6168
 5240 0eb6 1818     		.short	6168
 5241 0eb8 1818     		.short	6168
 5242 0eba 1818     		.short	6168
 5243 0ebc 1818     		.short	6168
 5244 0ebe 1818     		.short	6168
 5245 0ec0 1818     		.short	6168
 5246 0ec2 1818     		.short	6168
 5247 0ec4 0000     		.short	0
 5248 0ec6 0000     		.short	0
 5249 0ec8 0000     		.short	0
 5250 0eca 0000     		.short	0
 5251 0ecc 0000     		.short	0
 5252 0ece 0000     		.short	0
 5253 0ed0 0000     		.short	0
 5254 0ed2 0000     		.short	0
 5255 0ed4 0000     		.short	0
 5256 0ed6 0000     		.short	0
 5257 0ed8 0000     		.short	0
 5258 0eda 0000     		.short	0
 5259 0edc C003     		.short	960
 5260 0ede F00F     		.short	4080
 5261 0ee0 300C     		.short	3120
 5262 0ee2 1818     		.short	6168
 5263 0ee4 1818     		.short	6168
 5264 0ee6 1818     		.short	6168
 5265 0ee8 1818     		.short	6168
 5266 0eea 1818     		.short	6168
 5267 0eec 1818     		.short	6168
 5268 0eee 300C     		.short	3120
 5269 0ef0 F00F     		.short	4080
 5270 0ef2 C003     		.short	960
 5271 0ef4 0000     		.short	0
 5272 0ef6 0000     		.short	0
 5273 0ef8 0000     		.short	0
 5274 0efa 0000     		.short	0
 5275 0efc 0000     		.short	0
 5276 0efe 0000     		.short	0
 5277 0f00 0000     		.short	0
 5278 0f02 0000     		.short	0
 5279 0f04 0000     		.short	0
 5280 0f06 0000     		.short	0
 5281 0f08 0000     		.short	0
 5282 0f0a 0000     		.short	0
 5283 0f0c D803     		.short	984
 5284 0f0e F80F     		.short	4088
 5285 0f10 380C     		.short	3128
 5286 0f12 1818     		.short	6168
 5287 0f14 1818     		.short	6168
 5288 0f16 1818     		.short	6168
 5289 0f18 1818     		.short	6168
 5290 0f1a 1818     		.short	6168
 5291 0f1c 1818     		.short	6168
 5292 0f1e 380C     		.short	3128
 5293 0f20 F80F     		.short	4088
 5294 0f22 D803     		.short	984
 5295 0f24 1800     		.short	24
 5296 0f26 1800     		.short	24
 5297 0f28 1800     		.short	24
 5298 0f2a 1800     		.short	24
 5299 0f2c 1800     		.short	24
 5300 0f2e 0000     		.short	0
 5301 0f30 0000     		.short	0
 5302 0f32 0000     		.short	0
 5303 0f34 0000     		.short	0
 5304 0f36 0000     		.short	0
 5305 0f38 0000     		.short	0
 5306 0f3a 0000     		.short	0
 5307 0f3c C01B     		.short	7104
 5308 0f3e F01F     		.short	8176
 5309 0f40 301C     		.short	7216
 5310 0f42 1818     		.short	6168
 5311 0f44 1818     		.short	6168
 5312 0f46 1818     		.short	6168
 5313 0f48 1818     		.short	6168
 5314 0f4a 1818     		.short	6168
 5315 0f4c 1818     		.short	6168
 5316 0f4e 301C     		.short	7216
 5317 0f50 F01F     		.short	8176
 5318 0f52 C01B     		.short	7104
 5319 0f54 0018     		.short	6144
 5320 0f56 0018     		.short	6144
 5321 0f58 0018     		.short	6144
 5322 0f5a 0018     		.short	6144
 5323 0f5c 0018     		.short	6144
 5324 0f5e 0000     		.short	0
 5325 0f60 0000     		.short	0
 5326 0f62 0000     		.short	0
 5327 0f64 0000     		.short	0
 5328 0f66 0000     		.short	0
 5329 0f68 0000     		.short	0
 5330 0f6a 0000     		.short	0
 5331 0f6c B007     		.short	1968
 5332 0f6e F003     		.short	1008
 5333 0f70 7000     		.short	112
 5334 0f72 3000     		.short	48
 5335 0f74 3000     		.short	48
 5336 0f76 3000     		.short	48
 5337 0f78 3000     		.short	48
 5338 0f7a 3000     		.short	48
 5339 0f7c 3000     		.short	48
 5340 0f7e 3000     		.short	48
 5341 0f80 3000     		.short	48
 5342 0f82 3000     		.short	48
 5343 0f84 0000     		.short	0
 5344 0f86 0000     		.short	0
 5345 0f88 0000     		.short	0
 5346 0f8a 0000     		.short	0
 5347 0f8c 0000     		.short	0
 5348 0f8e 0000     		.short	0
 5349 0f90 0000     		.short	0
 5350 0f92 0000     		.short	0
 5351 0f94 0000     		.short	0
 5352 0f96 0000     		.short	0
 5353 0f98 0000     		.short	0
 5354 0f9a 0000     		.short	0
 5355 0f9c E003     		.short	992
 5356 0f9e F003     		.short	1008
 5357 0fa0 380E     		.short	3640
 5358 0fa2 180C     		.short	3096
 5359 0fa4 3800     		.short	56
 5360 0fa6 F003     		.short	1008
 5361 0fa8 C007     		.short	1984
 5362 0faa 000C     		.short	3072
 5363 0fac 180C     		.short	3096
 5364 0fae 380E     		.short	3640
 5365 0fb0 F007     		.short	2032
 5366 0fb2 E003     		.short	992
 5367 0fb4 0000     		.short	0
 5368 0fb6 0000     		.short	0
 5369 0fb8 0000     		.short	0
 5370 0fba 0000     		.short	0
 5371 0fbc 0000     		.short	0
 5372 0fbe 0000     		.short	0
 5373 0fc0 0000     		.short	0
 5374 0fc2 0000     		.short	0
 5375 0fc4 8000     		.short	128
 5376 0fc6 C000     		.short	192
 5377 0fc8 C000     		.short	192
 5378 0fca C000     		.short	192
 5379 0fcc F007     		.short	2032
 5380 0fce F007     		.short	2032
 5381 0fd0 C000     		.short	192
 5382 0fd2 C000     		.short	192
 5383 0fd4 C000     		.short	192
 5384 0fd6 C000     		.short	192
 5385 0fd8 C000     		.short	192
 5386 0fda C000     		.short	192
 5387 0fdc C000     		.short	192
 5388 0fde C000     		.short	192
 5389 0fe0 C007     		.short	1984
 5390 0fe2 8007     		.short	1920
 5391 0fe4 0000     		.short	0
 5392 0fe6 0000     		.short	0
 5393 0fe8 0000     		.short	0
 5394 0fea 0000     		.short	0
 5395 0fec 0000     		.short	0
 5396 0fee 0000     		.short	0
 5397 0ff0 0000     		.short	0
 5398 0ff2 0000     		.short	0
 5399 0ff4 0000     		.short	0
 5400 0ff6 0000     		.short	0
 5401 0ff8 0000     		.short	0
 5402 0ffa 0000     		.short	0
 5403 0ffc 1818     		.short	6168
 5404 0ffe 1818     		.short	6168
 5405 1000 1818     		.short	6168
 5406 1002 1818     		.short	6168
 5407 1004 1818     		.short	6168
 5408 1006 1818     		.short	6168
 5409 1008 1818     		.short	6168
 5410 100a 1818     		.short	6168
 5411 100c 1818     		.short	6168
 5412 100e 381C     		.short	7224
 5413 1010 F01F     		.short	8176
 5414 1012 E019     		.short	6624
 5415 1014 0000     		.short	0
 5416 1016 0000     		.short	0
 5417 1018 0000     		.short	0
 5418 101a 0000     		.short	0
 5419 101c 0000     		.short	0
 5420 101e 0000     		.short	0
 5421 1020 0000     		.short	0
 5422 1022 0000     		.short	0
 5423 1024 0000     		.short	0
 5424 1026 0000     		.short	0
 5425 1028 0000     		.short	0
 5426 102a 0000     		.short	0
 5427 102c 0C18     		.short	6156
 5428 102e 180C     		.short	3096
 5429 1030 180C     		.short	3096
 5430 1032 180C     		.short	3096
 5431 1034 3006     		.short	1584
 5432 1036 3006     		.short	1584
 5433 1038 3006     		.short	1584
 5434 103a 6003     		.short	864
 5435 103c 6003     		.short	864
 5436 103e 6003     		.short	864
 5437 1040 C001     		.short	448
 5438 1042 C001     		.short	448
 5439 1044 0000     		.short	0
 5440 1046 0000     		.short	0
 5441 1048 0000     		.short	0
 5442 104a 0000     		.short	0
 5443 104c 0000     		.short	0
 5444 104e 0000     		.short	0
 5445 1050 0000     		.short	0
 5446 1052 0000     		.short	0
 5447 1054 0000     		.short	0
 5448 1056 0000     		.short	0
 5449 1058 0000     		.short	0
 5450 105a 0000     		.short	0
 5451 105c C141     		.short	16833
 5452 105e C141     		.short	16833
 5453 1060 C361     		.short	25027
 5454 1062 6363     		.short	25443
 5455 1064 6363     		.short	25443
 5456 1066 6363     		.short	25443
 5457 1068 3636     		.short	13878
 5458 106a 3636     		.short	13878
 5459 106c 3636     		.short	13878
 5460 106e 1C1C     		.short	7196
 5461 1070 1C1C     		.short	7196
 5462 1072 1C1C     		.short	7196
 5463 1074 0000     		.short	0
 5464 1076 0000     		.short	0
 5465 1078 0000     		.short	0
 5466 107a 0000     		.short	0
 5467 107c 0000     		.short	0
 5468 107e 0000     		.short	0
 5469 1080 0000     		.short	0
 5470 1082 0000     		.short	0
 5471 1084 0000     		.short	0
 5472 1086 0000     		.short	0
 5473 1088 0000     		.short	0
 5474 108a 0000     		.short	0
 5475 108c 1C38     		.short	14364
 5476 108e 381C     		.short	7224
 5477 1090 300C     		.short	3120
 5478 1092 6006     		.short	1632
 5479 1094 C003     		.short	960
 5480 1096 C003     		.short	960
 5481 1098 C003     		.short	960
 5482 109a C003     		.short	960
 5483 109c 6006     		.short	1632
 5484 109e 300C     		.short	3120
 5485 10a0 381C     		.short	7224
 5486 10a2 1C38     		.short	14364
 5487 10a4 0000     		.short	0
 5488 10a6 0000     		.short	0
 5489 10a8 0000     		.short	0
 5490 10aa 0000     		.short	0
 5491 10ac 0000     		.short	0
 5492 10ae 0000     		.short	0
 5493 10b0 0000     		.short	0
 5494 10b2 0000     		.short	0
 5495 10b4 0000     		.short	0
 5496 10b6 0000     		.short	0
 5497 10b8 0000     		.short	0
 5498 10ba 0000     		.short	0
 5499 10bc 1830     		.short	12312
 5500 10be 3018     		.short	6192
 5501 10c0 3018     		.short	6192
 5502 10c2 7018     		.short	6256
 5503 10c4 600C     		.short	3168
 5504 10c6 600C     		.short	3168
 5505 10c8 E00C     		.short	3296
 5506 10ca C006     		.short	1728
 5507 10cc C006     		.short	1728
 5508 10ce 8003     		.short	896
 5509 10d0 8003     		.short	896
 5510 10d2 8003     		.short	896
 5511 10d4 8001     		.short	384
 5512 10d6 8001     		.short	384
 5513 10d8 C001     		.short	448
 5514 10da F000     		.short	240
 5515 10dc 7000     		.short	112
 5516 10de 0000     		.short	0
 5517 10e0 0000     		.short	0
 5518 10e2 0000     		.short	0
 5519 10e4 0000     		.short	0
 5520 10e6 0000     		.short	0
 5521 10e8 0000     		.short	0
 5522 10ea 0000     		.short	0
 5523 10ec FC1F     		.short	8188
 5524 10ee FC1F     		.short	8188
 5525 10f0 000C     		.short	3072
 5526 10f2 0006     		.short	1536
 5527 10f4 0003     		.short	768
 5528 10f6 8001     		.short	384
 5529 10f8 C000     		.short	192
 5530 10fa 6000     		.short	96
 5531 10fc 3000     		.short	48
 5532 10fe 1800     		.short	24
 5533 1100 FC1F     		.short	8188
 5534 1102 FC1F     		.short	8188
 5535 1104 0000     		.short	0
 5536 1106 0000     		.short	0
 5537 1108 0000     		.short	0
 5538 110a 0000     		.short	0
 5539 110c 0000     		.short	0
 5540 110e 0000     		.short	0
 5541 1110 0000     		.short	0
 5542 1112 0003     		.short	768
 5543 1114 8001     		.short	384
 5544 1116 C000     		.short	192
 5545 1118 C000     		.short	192
 5546 111a C000     		.short	192
 5547 111c C000     		.short	192
 5548 111e C000     		.short	192
 5549 1120 C000     		.short	192
 5550 1122 6000     		.short	96
 5551 1124 6000     		.short	96
 5552 1126 3000     		.short	48
 5553 1128 6000     		.short	96
 5554 112a 4000     		.short	64
 5555 112c C000     		.short	192
 5556 112e C000     		.short	192
 5557 1130 C000     		.short	192
 5558 1132 C000     		.short	192
 5559 1134 C000     		.short	192
 5560 1136 C000     		.short	192
 5561 1138 8001     		.short	384
 5562 113a 0003     		.short	768
 5563 113c 0000     		.short	0
 5564 113e 0000     		.short	0
 5565 1140 0000     		.short	0
 5566 1142 8001     		.short	384
 5567 1144 8001     		.short	384
 5568 1146 8001     		.short	384
 5569 1148 8001     		.short	384
 5570 114a 8001     		.short	384
 5571 114c 8001     		.short	384
 5572 114e 8001     		.short	384
 5573 1150 8001     		.short	384
 5574 1152 8001     		.short	384
 5575 1154 8001     		.short	384
 5576 1156 8001     		.short	384
 5577 1158 8001     		.short	384
 5578 115a 8001     		.short	384
 5579 115c 8001     		.short	384
 5580 115e 8001     		.short	384
 5581 1160 8001     		.short	384
 5582 1162 8001     		.short	384
 5583 1164 8001     		.short	384
 5584 1166 8001     		.short	384
 5585 1168 8001     		.short	384
 5586 116a 8001     		.short	384
 5587 116c 8001     		.short	384
 5588 116e 0000     		.short	0
 5589 1170 0000     		.short	0
 5590 1172 6000     		.short	96
 5591 1174 C000     		.short	192
 5592 1176 C001     		.short	448
 5593 1178 8001     		.short	384
 5594 117a 8001     		.short	384
 5595 117c 8001     		.short	384
 5596 117e 8001     		.short	384
 5597 1180 8001     		.short	384
 5598 1182 0003     		.short	768
 5599 1184 0003     		.short	768
 5600 1186 0006     		.short	1536
 5601 1188 0003     		.short	768
 5602 118a 0001     		.short	256
 5603 118c 8001     		.short	384
 5604 118e 8001     		.short	384
 5605 1190 8001     		.short	384
 5606 1192 8001     		.short	384
 5607 1194 8001     		.short	384
 5608 1196 8001     		.short	384
 5609 1198 C000     		.short	192
 5610 119a 6000     		.short	96
 5611 119c 0000     		.short	0
 5612 119e 0000     		.short	0
 5613 11a0 0000     		.short	0
 5614 11a2 0000     		.short	0
 5615 11a4 0000     		.short	0
 5616 11a6 0000     		.short	0
 5617 11a8 0000     		.short	0
 5618 11aa 0000     		.short	0
 5619 11ac 0000     		.short	0
 5620 11ae 0000     		.short	0
 5621 11b0 F010     		.short	4336
 5622 11b2 F81F     		.short	8184
 5623 11b4 080F     		.short	3848
 5624 11b6 0000     		.short	0
 5625 11b8 0000     		.short	0
 5626 11ba 0000     		.short	0
 5627 11bc 0000     		.short	0
 5628 11be 0000     		.short	0
 5629 11c0 0000     		.short	0
 5630 11c2 0000     		.short	0
 5631 11c4 0000     		.short	0
 5632 11c6 0000     		.short	0
 5633 11c8 0000     		.short	0
 5634 11ca 0000     		.short	0
 5635 11cc 0000     		.short	0
 5636 11ce 0000     		.short	0
 5637 11d0 0000     		.short	0
 5638 11d2 0000     		.short	0
 5639 11d4 0000     		.short	0
 5640 11d6 0000     		.short	0
 5641 11d8 0000     		.short	0
 5642 11da 0000     		.short	0
 5643 11dc 0000     		.short	0
 5644 11de 0000     		.short	0
 5645 11e0 0000     		.short	0
 5646 11e2 0000     		.short	0
 5647 11e4 0000     		.short	0
 5648 11e6 0000     		.short	0
 5649 11e8 0000     		.short	0
 5650 11ea 0000     		.short	0
 5651 11ec 0000     		.short	0
 5652 11ee 0000     		.short	0
 5653 11f0 0000     		.short	0
 5654 11f2 0000     		.short	0
 5655 11f4 0000     		.short	0
 5656 11f6 0000     		.short	0
 5657 11f8 0000     		.short	0
 5658 11fa 0000     		.short	0
 5659 11fc 0000     		.short	0
 5660 11fe 0000     		.short	0
 5661 1200 0000     		.short	0
 5662 1202 0000     		.short	0
 5663 1204 0000     		.short	0
 5664 1206 0000     		.short	0
 5665 1208 0000     		.short	0
 5666 120a C003     		.short	960
 5667 120c 300C     		.short	3120
 5668 120e 0810     		.short	4104
 5669 1210 0420     		.short	8196
 5670 1212 0420     		.short	8196
 5671 1214 0240     		.short	16386
 5672 1216 0240     		.short	16386
 5673 1218 0240     		.short	16386
 5674 121a 0240     		.short	16386
 5675 121c 0240     		.short	16386
 5676 121e 0420     		.short	8196
 5677 1220 0420     		.short	8196
 5678 1222 0810     		.short	4104
 5679 1224 300C     		.short	3120
 5680 1226 C003     		.short	960
 5681 1228 0000     		.short	0
 5682 122a 0000     		.short	0
 5683 122c 0000     		.short	0
 5684 122e 0000     		.short	0
 5685 1230 0000     		.short	0
 5686 1232 0000     		.short	0
 5687 1234 0000     		.short	0
 5688 1236 0000     		.short	0
 5689 1238 0000     		.short	0
 5690 123a C003     		.short	960
 5691 123c F00F     		.short	4080
 5692 123e F81F     		.short	8184
 5693 1240 FC3F     		.short	16380
 5694 1242 FC3F     		.short	16380
 5695 1244 FE7F     		.short	32766
 5696 1246 FE7F     		.short	32766
 5697 1248 FE7F     		.short	32766
 5698 124a FE7F     		.short	32766
 5699 124c FE7F     		.short	32766
 5700 124e FC3F     		.short	16380
 5701 1250 FC3F     		.short	16380
 5702 1252 F81F     		.short	8184
 5703 1254 F00F     		.short	4080
 5704 1256 C003     		.short	960
 5705 1258 0000     		.short	0
 5706 125a 0000     		.short	0
 5707 125c 0000     		.short	0
 5708 125e 0000     		.short	0
 5709 1260 0000     		.short	0
 5710 1262 0000     		.short	0
 5711 1264 0000     		.short	0
 5712 1266 0000     		.short	0
 5713 1268 0000     		.short	0
 5714 126a 0000     		.short	0
 5715 126c 0000     		.short	0
 5716 126e E007     		.short	2016
 5717 1270 F00F     		.short	4080
 5718 1272 1818     		.short	6168
 5719 1274 1818     		.short	6168
 5720 1276 1818     		.short	6168
 5721 1278 1818     		.short	6168
 5722 127a 1818     		.short	6168
 5723 127c 1818     		.short	6168
 5724 127e F00F     		.short	4080
 5725 1280 E007     		.short	2016
 5726 1282 0000     		.short	0
 5727 1284 0000     		.short	0
 5728 1286 0000     		.short	0
 5729 1288 0000     		.short	0
 5730 128a 0000     		.short	0
 5731 128c 0000     		.short	0
 5732 128e 0000     		.short	0
 5733 1290 0000     		.short	0
 5734 1292 0000     		.short	0
 5735 1294 0000     		.short	0
 5736 1296 0000     		.short	0
 5737 1298 0000     		.short	0
 5738 129a 0000     		.short	0
 5739 129c 0000     		.short	0
 5740 129e E007     		.short	2016
 5741 12a0 F00F     		.short	4080
 5742 12a2 F81F     		.short	8184
 5743 12a4 F81F     		.short	8184
 5744 12a6 F81F     		.short	8184
 5745 12a8 F81F     		.short	8184
 5746 12aa F81F     		.short	8184
 5747 12ac F81F     		.short	8184
 5748 12ae F00F     		.short	4080
 5749 12b0 E007     		.short	2016
 5750 12b2 0000     		.short	0
 5751 12b4 0000     		.short	0
 5752 12b6 0000     		.short	0
 5753 12b8 0000     		.short	0
 5754 12ba 0000     		.short	0
 5755 12bc 0000     		.short	0
 5756 12be 0000     		.short	0
 5757 12c0 0000     		.short	0
 5758 12c2 0000     		.short	0
 5759 12c4 0000     		.short	0
 5760 12c6 0000     		.short	0
 5761 12c8 0000     		.short	0
 5762 12ca 0000     		.short	0
 5763 12cc 0000     		.short	0
 5764 12ce 0000     		.short	0
 5765 12d0 0000     		.short	0
 5766 12d2 0000     		.short	0
 5767 12d4 0000     		.short	0
 5768 12d6 0000     		.short	0
 5769 12d8 8001     		.short	384
 5770 12da C003     		.short	960
 5771 12dc 6006     		.short	1632
 5772 12de 300C     		.short	3120
 5773 12e0 1818     		.short	6168
 5774 12e2 1818     		.short	6168
 5775 12e4 F81F     		.short	8184
 5776 12e6 F81F     		.short	8184
 5777 12e8 0000     		.short	0
 5778 12ea 0000     		.short	0
 5779 12ec 0000     		.short	0
 5780 12ee 0000     		.short	0
 5781 12f0 0000     		.short	0
 5782 12f2 0000     		.short	0
 5783 12f4 0000     		.short	0
 5784 12f6 0000     		.short	0
 5785 12f8 0000     		.short	0
 5786 12fa 0000     		.short	0
 5787 12fc 0000     		.short	0
 5788 12fe 0000     		.short	0
 5789 1300 0000     		.short	0
 5790 1302 0000     		.short	0
 5791 1304 0000     		.short	0
 5792 1306 0000     		.short	0
 5793 1308 8001     		.short	384
 5794 130a C003     		.short	960
 5795 130c E007     		.short	2016
 5796 130e F00F     		.short	4080
 5797 1310 F81F     		.short	8184
 5798 1312 F81F     		.short	8184
 5799 1314 F81F     		.short	8184
 5800 1316 F81F     		.short	8184
 5801 1318 0000     		.short	0
 5802 131a 0000     		.short	0
 5803 131c 0000     		.short	0
 5804 131e 0000     		.short	0
 5805 1320 0000     		.short	0
 5806 1322 0000     		.short	0
 5807 1324 0000     		.short	0
 5808 1326 0000     		.short	0
 5809 1328 F81F     		.short	8184
 5810 132a F81F     		.short	8184
 5811 132c 1818     		.short	6168
 5812 132e 1818     		.short	6168
 5813 1330 300C     		.short	3120
 5814 1332 6006     		.short	1632
 5815 1334 C003     		.short	960
 5816 1336 8001     		.short	384
 5817 1338 0000     		.short	0
 5818 133a 0000     		.short	0
 5819 133c 0000     		.short	0
 5820 133e 0000     		.short	0
 5821 1340 0000     		.short	0
 5822 1342 0000     		.short	0
 5823 1344 0000     		.short	0
 5824 1346 0000     		.short	0
 5825 1348 0000     		.short	0
 5826 134a 0000     		.short	0
 5827 134c 0000     		.short	0
 5828 134e 0000     		.short	0
 5829 1350 0000     		.short	0
 5830 1352 0000     		.short	0
 5831 1354 0000     		.short	0
 5832 1356 0000     		.short	0
 5833 1358 F81F     		.short	8184
 5834 135a F81F     		.short	8184
 5835 135c F81F     		.short	8184
 5836 135e F81F     		.short	8184
 5837 1360 F00F     		.short	4080
 5838 1362 E007     		.short	2016
 5839 1364 C003     		.short	960
 5840 1366 8001     		.short	384
 5841 1368 0000     		.short	0
 5842 136a 0000     		.short	0
 5843 136c 0000     		.short	0
 5844 136e 0000     		.short	0
 5845 1370 0000     		.short	0
 5846 1372 0000     		.short	0
 5847 1374 0000     		.short	0
 5848 1376 0000     		.short	0
 5849 1378 0000     		.short	0
 5850 137a 0000     		.short	0
 5851 137c 0000     		.short	0
 5852 137e 0000     		.short	0
 5853 1380 0000     		.short	0
 5854 1382 0000     		.short	0
 5855 1384 0000     		.short	0
 5856 1386 0000     		.short	0
 5857 1388 0000     		.short	0
 5858 138a 0000     		.short	0
 5859 138c 0000     		.short	0
 5860 138e E001     		.short	480
 5861 1390 F001     		.short	496
 5862 1392 9801     		.short	408
 5863 1394 8C01     		.short	396
 5864 1396 8601     		.short	390
 5865 1398 8601     		.short	390
 5866 139a 8C01     		.short	396
 5867 139c 9801     		.short	408
 5868 139e F001     		.short	496
 5869 13a0 E001     		.short	480
 5870 13a2 0000     		.short	0
 5871 13a4 0000     		.short	0
 5872 13a6 0000     		.short	0
 5873 13a8 0000     		.short	0
 5874 13aa 0000     		.short	0
 5875 13ac 0000     		.short	0
 5876 13ae 0000     		.short	0
 5877 13b0 0000     		.short	0
 5878 13b2 0000     		.short	0
 5879 13b4 0000     		.short	0
 5880 13b6 0000     		.short	0
 5881 13b8 0000     		.short	0
 5882 13ba 0000     		.short	0
 5883 13bc 0000     		.short	0
 5884 13be E001     		.short	480
 5885 13c0 F001     		.short	496
 5886 13c2 F801     		.short	504
 5887 13c4 FC01     		.short	508
 5888 13c6 FE01     		.short	510
 5889 13c8 FE01     		.short	510
 5890 13ca FC01     		.short	508
 5891 13cc F801     		.short	504
 5892 13ce F001     		.short	496
 5893 13d0 E001     		.short	480
 5894 13d2 0000     		.short	0
 5895 13d4 0000     		.short	0
 5896 13d6 0000     		.short	0
 5897 13d8 0000     		.short	0
 5898 13da 0000     		.short	0
 5899 13dc 0000     		.short	0
 5900 13de 0000     		.short	0
 5901 13e0 0000     		.short	0
 5902 13e2 0000     		.short	0
 5903 13e4 0000     		.short	0
 5904 13e6 0000     		.short	0
 5905 13e8 0000     		.short	0
 5906 13ea 0000     		.short	0
 5907 13ec 0000     		.short	0
 5908 13ee 8007     		.short	1920
 5909 13f0 800F     		.short	3968
 5910 13f2 8019     		.short	6528
 5911 13f4 8031     		.short	12672
 5912 13f6 8061     		.short	24960
 5913 13f8 8061     		.short	24960
 5914 13fa 8031     		.short	12672
 5915 13fc 8019     		.short	6528
 5916 13fe 800F     		.short	3968
 5917 1400 8007     		.short	1920
 5918 1402 0000     		.short	0
 5919 1404 0000     		.short	0
 5920 1406 0000     		.short	0
 5921 1408 0000     		.short	0
 5922 140a 0000     		.short	0
 5923 140c 0000     		.short	0
 5924 140e 0000     		.short	0
 5925 1410 0000     		.short	0
 5926 1412 0000     		.short	0
 5927 1414 0000     		.short	0
 5928 1416 0000     		.short	0
 5929 1418 0000     		.short	0
 5930 141a 0000     		.short	0
 5931 141c 0000     		.short	0
 5932 141e 8007     		.short	1920
 5933 1420 800F     		.short	3968
 5934 1422 801F     		.short	8064
 5935 1424 803F     		.short	16256
 5936 1426 807F     		.short	32640
 5937 1428 807F     		.short	32640
 5938 142a 803F     		.short	16256
 5939 142c 801F     		.short	8064
 5940 142e 800F     		.short	3968
 5941 1430 8007     		.short	1920
 5942 1432 0000     		.short	0
 5943 1434 0000     		.short	0
 5944 1436 0000     		.short	0
 5945 1438 0000     		.short	0
 5946 143a 0000     		.short	0
 5947 143c 0000     		.short	0
 5948 143e 0000     		.short	0
 5949 1440 0000     		.short	0
 5950 1442 C001     		.short	448
 5951 1444 2002     		.short	544
 5952 1446 2002     		.short	544
 5953 1448 4001     		.short	320
 5954 144a 3006     		.short	1584
 5955 144c 0808     		.short	2056
 5956 144e 0808     		.short	2056
 5957 1450 0808     		.short	2056
 5958 1452 0808     		.short	2056
 5959 1454 0808     		.short	2056
 5960 1456 0808     		.short	2056
 5961 1458 0808     		.short	2056
 5962 145a 2002     		.short	544
 5963 145c 2002     		.short	544
 5964 145e 2002     		.short	544
 5965 1460 2002     		.short	544
 5966 1462 2002     		.short	544
 5967 1464 2002     		.short	544
 5968 1466 2002     		.short	544
 5969 1468 2002     		.short	544
 5970 146a 2002     		.short	544
 5971 146c 2002     		.short	544
 5972 146e 0000     		.short	0
 5973 1470 0000     		.short	0
 5974 1472 C001     		.short	448
 5975 1474 E003     		.short	992
 5976 1476 E003     		.short	992
 5977 1478 C001     		.short	448
 5978 147a F007     		.short	2032
 5979 147c D80D     		.short	3544
 5980 147e D80D     		.short	3544
 5981 1480 D80D     		.short	3544
 5982 1482 D80D     		.short	3544
 5983 1484 D80D     		.short	3544
 5984 1486 D80D     		.short	3544
 5985 1488 D80D     		.short	3544
 5986 148a 6003     		.short	864
 5987 148c 6003     		.short	864
 5988 148e 6003     		.short	864
 5989 1490 6003     		.short	864
 5990 1492 6003     		.short	864
 5991 1494 6003     		.short	864
 5992 1496 6003     		.short	864
 5993 1498 6003     		.short	864
 5994 149a 6003     		.short	864
 5995 149c 6003     		.short	864
 5996 149e 0000     		.short	0
 5997 14a0 0000     		.short	0
 5998 14a2 C001     		.short	448
 5999 14a4 2002     		.short	544
 6000 14a6 2002     		.short	544
 6001 14a8 4001     		.short	320
 6002 14aa 3006     		.short	1584
 6003 14ac 0808     		.short	2056
 6004 14ae 0808     		.short	2056
 6005 14b0 0808     		.short	2056
 6006 14b2 0410     		.short	4100
 6007 14b4 0220     		.short	8194
 6008 14b6 0220     		.short	8194
 6009 14b8 4001     		.short	320
 6010 14ba 2002     		.short	544
 6011 14bc 2002     		.short	544
 6012 14be 1004     		.short	1040
 6013 14c0 0808     		.short	2056
 6014 14c2 0808     		.short	2056
 6015 14c4 0410     		.short	4100
 6016 14c6 0410     		.short	4100
 6017 14c8 0420     		.short	8196
 6018 14ca 0440     		.short	16388
 6019 14cc 0000     		.short	0
 6020 14ce 0000     		.short	0
 6021 14d0 0000     		.short	0
 6022 14d2 C001     		.short	448
 6023 14d4 E003     		.short	992
 6024 14d6 E003     		.short	992
 6025 14d8 C001     		.short	448
 6026 14da F007     		.short	2032
 6027 14dc D80D     		.short	3544
 6028 14de D80D     		.short	3544
 6029 14e0 D80D     		.short	3544
 6030 14e2 CC19     		.short	6604
 6031 14e4 C631     		.short	12742
 6032 14e6 C261     		.short	25026
 6033 14e8 C001     		.short	448
 6034 14ea 6003     		.short	864
 6035 14ec 6003     		.short	864
 6036 14ee 7006     		.short	1648
 6037 14f0 380C     		.short	3128
 6038 14f2 180C     		.short	3096
 6039 14f4 0C18     		.short	6156
 6040 14f6 0C18     		.short	6156
 6041 14f8 0C30     		.short	12300
 6042 14fa 0C60     		.short	24588
 6043 14fc 0000     		.short	0
 6044 14fe 0000     		.short	0
 6045              		.section	.rodata.str1.1,"aMS",%progbits,1
 6046              	.LC0:
 6047 0000 20202020 		.ascii	"                    \000"
 6047      20202020 
 6047      20202020 
 6047      20202020 
 6047      20202020 
 6048              		.data
 6049              		.align	1
 6050              		.set	.LANCHOR1,. + 0
 6053              	BackColor:
 6054 0000 FFFF     		.short	-1
 6055              		.bss
 6056              		.align	1
 6057              		.set	.LANCHOR0,. + 0
 6060              	TextColor:
 6061 0000 0000     		.space	2
 6062              		.text
 6063              	.Letext0:
 6064              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q2\\bin\\../lib/gcc/arm-none-eab
 6065              		.file 3 "../CM3 Core/LPC17xx.h"
 6066              		.file 4 "../Header Files/lpc_types.h"
 6067              		.file 5 "../Header Files/lpc17xx_uart.h"
 6068              		.file 6 "../Header Files/lpc17xx_ssp.h"
 6069              		.file 7 "../Header Files/lpc_ssp_glcd.h"
 6070              		.file 8 "../CM3 Core/core_cm3.h"
 6071              		.file 9 "../Header Files/lpc17xx_i2c.h"
 6072              		.file 10 "../Header Files/Font_24x16.h"
 6073              		.file 11 "../Header Files/lpc17xx_gpio.h"
 6074              		.file 12 "../Header Files/lpc17xx_systick.h"
 6075              		.file 13 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 lpc_ssp_glcd.c
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:18     .text:00000000 $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:22     .text:00000000 wr_dat_start
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:52     .text:00000018 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:56     .text:0000001c $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:60     .text:0000001c wr_dat_stop
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:77     .text:00000024 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:81     .text:00000028 $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:85     .text:00000028 wr_dat_only
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:133    .text:00000048 $d
                            *COM*:00000040 Tx_Buf1
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:138    .text:00000050 $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:143    .text:00000050 GLCD_Backlight
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:178    .text:00000066 GLCD_Reset
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:223    .text:00000090 GLCD_SetTextColor
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:238    .text:00000098 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:242    .text:0000009c $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:247    .text:0000009c GLCD_SetBackColor
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:262    .text:000000a4 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:266    .text:000000a8 $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:271    .text:000000a8 Write_Command_Glcd
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:356    .text:00000100 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:360    .text:00000104 $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:365    .text:00000104 Write_Data_Glcd
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:438    .text:00000144 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:443    .text:0000014c $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:448    .text:0000014c GLCD_Bargraph
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:582    .text:000001f4 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:587    .text:000001fc $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:592    .text:000001fc GLCD_Draw_Char
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:715    .text:00000294 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:720    .text:0000029c $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:725    .text:0000029c GLCD_Display_Char
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:763    .text:000002c0 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:767    .text:000002c4 $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:772    .text:000002c4 GLCD_PutPixel
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:828    .text:000002f4 GLCD_Line
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:1036   .text:000003dc GLCD_Triangle
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:1857   .text:00000888 GLCD_Frame
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2021   .text:000009a6 GLCD_Circle
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2348   .text:00000b78 GLCD_Window
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2421   .text:00000bc2 GLCD_Display_String
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2487   .text:00000bf2 GLCD_ClearLn
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2521   .text:00000c14 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2525   .text:00000c18 $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2530   .text:00000c18 GLCD_Clear
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2600   .text:00000c62 GLCD_Set_Loc
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2651   .text:00000c8e GLCD_Window_Fill
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2721   .text:00000cc4 GLCD_Rect
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2893   .text:00000db8 GLCD_Bitmap
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2969   .text:00000df8 GLCD_Display_Home
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:2993   .text:00000e06 GLCD_Driver_OutCtrl
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:3017   .text:00000e18 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:3021   .text:00000e1c $t
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:3053   .text:00000e3c GLCD_Init
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:3356   .rodata:00000000 Font_24x16
                            *COM*:00000040 I2C_Rx_Buf
                            *COM*:00000040 I2C_Tx_Buf
                            *COM*:00000040 Rx_Buf1
                            *COM*:00000001 TxIntStat
                            *COM*:00000210 rb
                            *COM*:00000002 EscFlag
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:3352   .rodata:00000000 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:6049   .data:00000000 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:6053   .data:00000000 BackColor
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:6056   .bss:00000000 $d
C:\Users\raghav\AppData\Local\Temp\ccmEbg1s.s:6060   .bss:00000000 TextColor
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.549b84bf9d8399e395ff8216fcbb3d69
                           .group:00000000 wm4.LPC17xx.h.27.964facdaadd4aa3f18ac78c8a78f0013
                           .group:00000000 wm4.core_cm3.h.32.3cac756d6e704b813781f82afd94fa5f
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.6beb15babd14c076008ec0890c26e21c
                           .group:00000000 wm4.core_cm3.h.83.1a3cb9afc687cf157efeddb3d5f3109e
                           .group:00000000 wm4.LPC17xx.h.953.82b7a9ed60bb594048bc8738cf1d3489
                           .group:00000000 wm4.lpc_types.h.32.72d58ce80fabd1a5430c6ec0500a090b
                           .group:00000000 wm4.lpc17xx_pinsel.h.30.767cda9b27a5c688cd97e5947d664047
                           .group:00000000 wm4.lpc17xx_clkpwr.h.30.8537d92ff6965961e80fda89ac5019f2
                           .group:00000000 wm4.lpc17xx_systick.h.30.9f34c15ae315a203fed1d933040ad7b9
                           .group:00000000 wm4.lpc17xx_gpio.h.30.0b884ee110dd20865784f12e1569ecf1
                           .group:00000000 wm4.lpc17xx_wdt.h.34.a2dcafab9849854019efb51f717a8129
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832
                           .group:00000000 wm4.lpc17xx_uart.h.58.dbba6e724b29a6214e9cafbaf3ee8a9e
                           .group:00000000 wm4.lpc17xx_ssp.h.48.cd045d667ab7b89d5d550d38997df61b
                           .group:00000000 wm4.lpc17xx_i2c.h.30.8ecc2351e7cba41135ba36b3ad45f764
                           .group:00000000 wm4.lpc_i2c_tsc2004.h.29.34082f268f216caa8d0bf2c0960ad4a6
                           .group:00000000 wm4.lpc_ssp_glcd.h.46.c050a23f7d3e575d1eafabe862fb4f95
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.Font_24x16.h.16.3819cadfc08710b0322707370d919056

UNDEFINED SYMBOLS
CS_Force1
GPIO_SetValue
SSP_ReadWrite
GPIO_ClearValue
delay_ms
GPIO_SetDir
