   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"lpc_ssp_glcd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	1
  19              		.thumb
  20              		.thumb_func
  22              	wr_dat_start:
  23              	.LFB65:
  24              		.file 1 "../Source Files/lpc_ssp_glcd.c"
   1:../Source Files/lpc_ssp_glcd.c **** /**********************************************************************
   2:../Source Files/lpc_ssp_glcd.c **** * $Id$		lpc_ssp_glcd.c
   3:../Source Files/lpc_ssp_glcd.c **** *//**
   4:../Source Files/lpc_ssp_glcd.c **** * @file		lpc_ssp_glcd.c
   5:../Source Files/lpc_ssp_glcd.c **** * @brief	Contains all functions support for SSP based GLCD
   6:../Source Files/lpc_ssp_glcd.c **** *           library on LPC17xx
   7:../Source Files/lpc_ssp_glcd.c **** * @version	1.0
   8:../Source Files/lpc_ssp_glcd.c **** * @date		18. Dec. 2013
   9:../Source Files/lpc_ssp_glcd.c **** * @author	Dwijay.Edutech Learning Solutions
  10:../Source Files/lpc_ssp_glcd.c **** ***********************************************************************
  11:../Source Files/lpc_ssp_glcd.c **** * Software that is described herein is for illustrative purposes only
  12:../Source Files/lpc_ssp_glcd.c **** * which provides customers with programming information regarding the
  13:../Source Files/lpc_ssp_glcd.c **** * products. This software is supplied "AS IS" without any warranties.
  14:../Source Files/lpc_ssp_glcd.c **** * NXP Semiconductors assumes no responsibility or liability for the
  15:../Source Files/lpc_ssp_glcd.c **** * use of the software, conveys no license or title under any patent,
  16:../Source Files/lpc_ssp_glcd.c **** * copyright, or mask work right to the product. NXP Semiconductors
  17:../Source Files/lpc_ssp_glcd.c **** * reserves the right to make changes in the software without
  18:../Source Files/lpc_ssp_glcd.c **** * notification. NXP Semiconductors also make no representation or
  19:../Source Files/lpc_ssp_glcd.c **** * warranty that such application will be suitable for the specified
  20:../Source Files/lpc_ssp_glcd.c **** * use without further testing or modification.
  21:../Source Files/lpc_ssp_glcd.c **** **********************************************************************/
  22:../Source Files/lpc_ssp_glcd.c **** 
  23:../Source Files/lpc_ssp_glcd.c **** /* Peripheral group ----------------------------------------------------------- */
  24:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD
  25:../Source Files/lpc_ssp_glcd.c ****  * @{
  26:../Source Files/lpc_ssp_glcd.c ****  */
  27:../Source Files/lpc_ssp_glcd.c **** 
  28:../Source Files/lpc_ssp_glcd.c **** /* Includes ------------------------------------------------------------------- */
  29:../Source Files/lpc_ssp_glcd.c **** #include "lpc_ssp_glcd.h"
  30:../Source Files/lpc_ssp_glcd.c **** #include "math.h"
  31:../Source Files/lpc_ssp_glcd.c **** #include "Font_24x16.h"
  32:../Source Files/lpc_ssp_glcd.c **** #include "Font_5x7.h"
  33:../Source Files/lpc_ssp_glcd.c **** 
  34:../Source Files/lpc_ssp_glcd.c **** 
  35:../Source Files/lpc_ssp_glcd.c **** /* If this source file built with example, the LPC17xx FW library configuration
  36:../Source Files/lpc_ssp_glcd.c ****  * file in each example directory ("lpc17xx_libcfg.h") must be included,
  37:../Source Files/lpc_ssp_glcd.c ****  * otherwise the default FW library configuration file must be included instead
  38:../Source Files/lpc_ssp_glcd.c ****  */
  39:../Source Files/lpc_ssp_glcd.c **** 
  40:../Source Files/lpc_ssp_glcd.c **** /******************************************************************************/
  41:../Source Files/lpc_ssp_glcd.c **** static volatile uint16_t TextColor = Black, BackColor = White;
  42:../Source Files/lpc_ssp_glcd.c **** 
  43:../Source Files/lpc_ssp_glcd.c **** // Swap two bytes
  44:../Source Files/lpc_ssp_glcd.c **** #define SWAP(x,y) do { (x)=(x)^(y); (y)=(x)^(y); (x)=(x)^(y); } while(0)
  45:../Source Files/lpc_ssp_glcd.c **** #define bit_test(D,i) (D & (0x01 << i))
  46:../Source Files/lpc_ssp_glcd.c **** 
  47:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD_Public_Functions
  48:../Source Files/lpc_ssp_glcd.c ****  * @{
  49:../Source Files/lpc_ssp_glcd.c ****  */
  50:../Source Files/lpc_ssp_glcd.c **** 
  51:../Source Files/lpc_ssp_glcd.c **** /* Public Functions ----------------------------------------------------------- */
  52:../Source Files/lpc_ssp_glcd.c **** 
  53:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  54:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls Backlight
  55:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	NewState	ENABLE/DISABLE the Backlight
  56:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  57:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  58:../Source Files/lpc_ssp_glcd.c **** void GLCD_Backlight (FunctionalState NewState)
  59:../Source Files/lpc_ssp_glcd.c **** {
  60:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
  61:../Source Files/lpc_ssp_glcd.c **** 	{
  62:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
  63:../Source Files/lpc_ssp_glcd.c **** 	}
  64:../Source Files/lpc_ssp_glcd.c **** 	else
  65:../Source Files/lpc_ssp_glcd.c **** 	{
  66:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
  67:../Source Files/lpc_ssp_glcd.c **** 	}
  68:../Source Files/lpc_ssp_glcd.c **** }
  69:../Source Files/lpc_ssp_glcd.c **** 
  70:../Source Files/lpc_ssp_glcd.c **** 
  71:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  72:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function resets GLCD
  73:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
  74:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  75:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  76:../Source Files/lpc_ssp_glcd.c **** void GLCD_Reset (void)
  77:../Source Files/lpc_ssp_glcd.c **** {
  78:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
  79:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
  81:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
  82:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
  83:../Source Files/lpc_ssp_glcd.c **** }
  84:../Source Files/lpc_ssp_glcd.c **** 
  85:../Source Files/lpc_ssp_glcd.c **** 
  86:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  87:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls GLCD Output
  88:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	drv	    Output Format
  89:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_LEFT
  90:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_RIGHT
  91:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_LEFT
  92:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_RIGHT
  93:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  94:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  95:../Source Files/lpc_ssp_glcd.c **** void GLCD_Driver_OutCtrl (DRIVER_OUT_Type drv)
  96:../Source Files/lpc_ssp_glcd.c **** {
  97:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
  98:../Source Files/lpc_ssp_glcd.c **** 
  99:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
 100:../Source Files/lpc_ssp_glcd.c **** 	{
 101:../Source Files/lpc_ssp_glcd.c **** 	case TOP_LEFT:
 102:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 103:../Source Files/lpc_ssp_glcd.c **** 		break;
 104:../Source Files/lpc_ssp_glcd.c **** 
 105:../Source Files/lpc_ssp_glcd.c **** 	case TOP_RIGHT:
 106:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 107:../Source Files/lpc_ssp_glcd.c **** 		break;
 108:../Source Files/lpc_ssp_glcd.c **** 
 109:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_LEFT:
 110:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 111:../Source Files/lpc_ssp_glcd.c **** 		break;
 112:../Source Files/lpc_ssp_glcd.c **** 
 113:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_RIGHT:
 114:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 115:../Source Files/lpc_ssp_glcd.c **** 		break;
 116:../Source Files/lpc_ssp_glcd.c **** 
 117:../Source Files/lpc_ssp_glcd.c **** 	default:
 118:../Source Files/lpc_ssp_glcd.c **** 		break;
 119:../Source Files/lpc_ssp_glcd.c **** 	}
 120:../Source Files/lpc_ssp_glcd.c **** }
 121:../Source Files/lpc_ssp_glcd.c **** 
 122:../Source Files/lpc_ssp_glcd.c **** 
 123:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 124:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set draw window region to required width and height
 125:../Source Files/lpc_ssp_glcd.c ****  *              as well as location
 126:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 127:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 128:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 129:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 130:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 131:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 132:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 133:../Source Files/lpc_ssp_glcd.c **** {
 134:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 135:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 136:../Source Files/lpc_ssp_glcd.c **** 
 137:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 139:../Source Files/lpc_ssp_glcd.c **** 
 140:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 141:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 142:../Source Files/lpc_ssp_glcd.c **** 
 143:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 144:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 145:../Source Files/lpc_ssp_glcd.c **** }
 146:../Source Files/lpc_ssp_glcd.c **** 
 147:../Source Files/lpc_ssp_glcd.c **** 
 148:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 149:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to to desired location
 150:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 151:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 152:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 153:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 154:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 155:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 156:../Source Files/lpc_ssp_glcd.c **** void GLCD_Set_Loc (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 157:../Source Files/lpc_ssp_glcd.c **** {
 158:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 159:../Source Files/lpc_ssp_glcd.c **** 
 160:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 161:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 162:../Source Files/lpc_ssp_glcd.c **** 
 163:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 165:../Source Files/lpc_ssp_glcd.c **** 
 166:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 167:../Source Files/lpc_ssp_glcd.c **** }
 168:../Source Files/lpc_ssp_glcd.c **** 
 169:../Source Files/lpc_ssp_glcd.c **** 
 170:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 171:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to Home
 172:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 173:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 174:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 175:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Home (void)
 176:../Source Files/lpc_ssp_glcd.c **** {
 177:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 178:../Source Files/lpc_ssp_glcd.c **** }
 179:../Source Files/lpc_ssp_glcd.c **** 
 180:../Source Files/lpc_ssp_glcd.c **** 
 181:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 182:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Initializes GLCD
 183:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 184:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 185:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 186:../Source Files/lpc_ssp_glcd.c **** void GLCD_Init (void)
 187:../Source Files/lpc_ssp_glcd.c **** {
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 189:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 190:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 191:../Source Files/lpc_ssp_glcd.c **** 
 192:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 193:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 194:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 195:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 196:../Source Files/lpc_ssp_glcd.c **** 
 197:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 198:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 199:../Source Files/lpc_ssp_glcd.c **** 
 200:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 201:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 202:../Source Files/lpc_ssp_glcd.c **** 
 203:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 204:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 205:../Source Files/lpc_ssp_glcd.c **** 
 206:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 207:../Source Files/lpc_ssp_glcd.c **** 
 208:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 209:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 210:../Source Files/lpc_ssp_glcd.c **** 
 211:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 212:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 213:../Source Files/lpc_ssp_glcd.c **** 
 214:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 215:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 216:../Source Files/lpc_ssp_glcd.c **** 
 217:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 218:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 219:../Source Files/lpc_ssp_glcd.c **** 
 220:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 221:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 222:../Source Files/lpc_ssp_glcd.c **** 
 223:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 224:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 225:../Source Files/lpc_ssp_glcd.c **** 
 226:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 227:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 228:../Source Files/lpc_ssp_glcd.c **** 
 229:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 230:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 231:../Source Files/lpc_ssp_glcd.c **** 
 232:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 233:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 234:../Source Files/lpc_ssp_glcd.c **** 
 235:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 236:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 237:../Source Files/lpc_ssp_glcd.c **** 
 238:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 239:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 240:../Source Files/lpc_ssp_glcd.c **** 
 241:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 242:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 243:../Source Files/lpc_ssp_glcd.c **** 
 244:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 245:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 246:../Source Files/lpc_ssp_glcd.c **** 
 247:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 248:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 249:../Source Files/lpc_ssp_glcd.c **** 
 250:../Source Files/lpc_ssp_glcd.c **** 	// Gamma Control (R30h to R3Bh) -- Page 56 of SSD2119 datasheet
 251:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 252:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 253:../Source Files/lpc_ssp_glcd.c **** 
 254:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 255:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 256:../Source Files/lpc_ssp_glcd.c **** 
 257:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 258:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 259:../Source Files/lpc_ssp_glcd.c **** 
 260:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 262:../Source Files/lpc_ssp_glcd.c **** 
 263:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 264:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 265:../Source Files/lpc_ssp_glcd.c **** 
 266:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 267:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 268:../Source Files/lpc_ssp_glcd.c **** 
 269:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 270:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 271:../Source Files/lpc_ssp_glcd.c **** 
 272:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 273:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 274:../Source Files/lpc_ssp_glcd.c **** 
 275:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 276:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 277:../Source Files/lpc_ssp_glcd.c **** 
 278:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 279:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 280:../Source Files/lpc_ssp_glcd.c **** 
 281:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 282:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 283:../Source Files/lpc_ssp_glcd.c **** 
 284:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 285:../Source Files/lpc_ssp_glcd.c **** 
 286:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 287:../Source Files/lpc_ssp_glcd.c **** }
 288:../Source Files/lpc_ssp_glcd.c **** 
 289:../Source Files/lpc_ssp_glcd.c **** 
 290:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 291:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a pixel in foreground color
 292:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 293:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 294:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 295:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 296:../Source Files/lpc_ssp_glcd.c **** void GLCD_PutPixel (uint16_t x, uint16_t y, uint16_t color)
 297:../Source Files/lpc_ssp_glcd.c **** {
 298:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 299:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 300:../Source Files/lpc_ssp_glcd.c **** 
 301:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 302:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 303:../Source Files/lpc_ssp_glcd.c **** 
 304:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 305:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 306:../Source Files/lpc_ssp_glcd.c **** }
 307:../Source Files/lpc_ssp_glcd.c **** 
 308:../Source Files/lpc_ssp_glcd.c **** 
 309:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 310:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set foreground color
 311:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    foreground color
 312:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 313:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 314:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetTextColor (uint16_t color)
 315:../Source Files/lpc_ssp_glcd.c **** {
 316:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 317:../Source Files/lpc_ssp_glcd.c **** }
 318:../Source Files/lpc_ssp_glcd.c **** 
 319:../Source Files/lpc_ssp_glcd.c **** 
 320:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 321:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set background color
 322:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    background color
 323:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 324:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 325:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetBackColor (uint16_t color)
 326:../Source Files/lpc_ssp_glcd.c **** {
 327:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 328:../Source Files/lpc_ssp_glcd.c **** }
 329:../Source Files/lpc_ssp_glcd.c **** 
 330:../Source Files/lpc_ssp_glcd.c **** 
 331:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 332:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Start of data writing to LCD controller
 333:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 334:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 335:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 336:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_start (void)
 337:../Source Files/lpc_ssp_glcd.c **** {
  25              		.loc 1 337 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
 338:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);
  29              		.loc 1 338 0
  30 0000 0021     		movs	r1, #0
 337:../Source Files/lpc_ssp_glcd.c **** {
  31              		.loc 1 337 0
  32 0002 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              		.loc 1 338 0
  38 0004 0448     		ldr	r0, .L2
  39 0006 FFF7FEFF 		bl	CS_Force1
  40              	.LVL0:
 339:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  41              		.loc 1 339 0
  42 000a 0220     		movs	r0, #2
  43 000c 0121     		movs	r1, #1
 340:../Source Files/lpc_ssp_glcd.c **** }
  44              		.loc 1 340 0
  45 000e BDE80840 		pop	{r3, lr}
 339:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  46              		.loc 1 339 0
  47 0012 FFF7FEBF 		b	GPIO_SetValue
  48              	.LVL1:
  49              	.L3:
  50 0016 00BF     		.align	2
  51              	.L2:
  52 0018 00000340 		.word	1073938432
  53              		.cfi_endproc
  54              	.LFE65:
  56              		.align	1
  57              		.thumb
  58              		.thumb_func
  60              	wr_dat_stop:
  61              	.LFB66:
 341:../Source Files/lpc_ssp_glcd.c **** 
 342:../Source Files/lpc_ssp_glcd.c **** 
 343:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 344:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Stop of data writing to LCD controller
 345:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 346:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 347:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 348:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_stop (void)
 349:../Source Files/lpc_ssp_glcd.c **** {
  62              		.loc 1 349 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 350:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  67              		.loc 1 350 0
  68 001c 0148     		ldr	r0, .L5
  69 001e 0121     		movs	r1, #1
 351:../Source Files/lpc_ssp_glcd.c **** }
  70              		.loc 1 351 0
 350:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  71              		.loc 1 350 0
  72 0020 FFF7FEBF 		b	CS_Force1
  73              	.LVL2:
  74              	.L6:
  75              		.align	2
  76              	.L5:
  77 0024 00000340 		.word	1073938432
  78              		.cfi_endproc
  79              	.LFE66:
  81              		.align	1
  82              		.thumb
  83              		.thumb_func
  85              	wr_dat_only:
  86              	.LFB67:
 352:../Source Files/lpc_ssp_glcd.c **** 
 353:../Source Files/lpc_ssp_glcd.c **** 
 354:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 355:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Data writing to LCD controller
 356:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	c     data to be written
 357:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 358:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 359:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_only (uint16_t c)
 360:../Source Files/lpc_ssp_glcd.c **** {
  87              		.loc 1 360 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 24
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL3:
  92 0028 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 32
  95              		.cfi_offset 0, -32
  96              		.cfi_offset 1, -28
  97              		.cfi_offset 2, -24
  98              		.cfi_offset 3, -20
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 6, -8
 102              		.cfi_offset 14, -4
 361:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
 362:../Source Files/lpc_ssp_glcd.c **** 
 363:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 103              		.loc 1 363 0
 104 002a 074B     		ldr	r3, .L8
 105 002c 020A     		lsrs	r2, r0, #8
 364:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) c;        // 2nd byte extract
 106              		.loc 1 364 0
 107 002e 5870     		strb	r0, [r3, #1]
 365:../Source Files/lpc_ssp_glcd.c **** 
 366:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 367:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 368:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 108              		.loc 1 368 0
 109 0030 0220     		movs	r0, #2
 110              	.LVL4:
 363:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 111              		.loc 1 363 0
 112 0032 1A70     		strb	r2, [r3, #0]
 113              		.loc 1 368 0
 114 0034 0490     		str	r0, [sp, #16]
 367:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 115              		.loc 1 367 0
 116 0036 0022     		movs	r2, #0
 369:../Source Files/lpc_ssp_glcd.c **** 	SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 117              		.loc 1 369 0
 118 0038 6946     		mov	r1, sp
 119 003a 0448     		ldr	r0, .L8+4
 366:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 120              		.loc 1 366 0
 121 003c 0093     		str	r3, [sp, #0]
 367:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 122              		.loc 1 367 0
 123 003e 0292     		str	r2, [sp, #8]
 124              		.loc 1 369 0
 125 0040 FFF7FEFF 		bl	SSP_ReadWrite
 126              	.LVL5:
 370:../Source Files/lpc_ssp_glcd.c **** }
 127              		.loc 1 370 0
 128 0044 07B0     		add	sp, sp, #28
 129 0046 00BD     		pop	{pc}
 130              	.L9:
 131              		.align	2
 132              	.L8:
 133 0048 00000000 		.word	Tx_Buf1
 134 004c 00000340 		.word	1073938432
 135              		.cfi_endproc
 136              	.LFE67:
 138              		.align	1
 139              		.global	GLCD_Backlight
 140              		.thumb
 141              		.thumb_func
 143              	GLCD_Backlight:
 144              	.LFB55:
  59:../Source Files/lpc_ssp_glcd.c **** {
 145              		.loc 1 59 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150              	.LVL6:
  60:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
 151              		.loc 1 60 0
 152 0050 20B1     		cbz	r0, .L11
  62:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 153              		.loc 1 62 0
 154 0052 0220     		movs	r0, #2
 155              	.LVL7:
 156 0054 4FF48071 		mov	r1, #256
  68:../Source Files/lpc_ssp_glcd.c **** }
 157              		.loc 1 68 0
  62:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 158              		.loc 1 62 0
 159 0058 FFF7FEBF 		b	GPIO_SetValue
 160              	.LVL8:
 161              	.L11:
  66:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 162              		.loc 1 66 0
 163 005c 0220     		movs	r0, #2
 164              	.LVL9:
 165 005e 4FF48071 		mov	r1, #256
  68:../Source Files/lpc_ssp_glcd.c **** }
 166              		.loc 1 68 0
  66:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 167              		.loc 1 66 0
 168 0062 FFF7FEBF 		b	GPIO_ClearValue
 169              	.LVL10:
 170              		.cfi_endproc
 171              	.LFE55:
 173              		.align	1
 174              		.global	GLCD_Reset
 175              		.thumb
 176              		.thumb_func
 178              	GLCD_Reset:
 179              	.LFB56:
  77:../Source Files/lpc_ssp_glcd.c **** {
 180              		.loc 1 77 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0066 08B5     		push	{r3, lr}
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
  78:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
 189              		.loc 1 78 0
 190 0068 2021     		movs	r1, #32
 191 006a 0020     		movs	r0, #0
 192 006c FFF7FEFF 		bl	GPIO_SetValue
 193              	.LVL11:
  79:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 194              		.loc 1 79 0
 195 0070 0220     		movs	r0, #2
 196 0072 FFF7FEFF 		bl	delay_ms
 197              	.LVL12:
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
 198              		.loc 1 80 0
 199 0076 2021     		movs	r1, #32
 200 0078 0020     		movs	r0, #0
 201 007a FFF7FEFF 		bl	GPIO_ClearValue
 202              	.LVL13:
  81:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
 203              		.loc 1 81 0
 204 007e 0420     		movs	r0, #4
 205 0080 FFF7FEFF 		bl	delay_ms
 206              	.LVL14:
  82:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 207              		.loc 1 82 0
 208 0084 0020     		movs	r0, #0
 209 0086 2021     		movs	r1, #32
  83:../Source Files/lpc_ssp_glcd.c **** }
 210              		.loc 1 83 0
 211 0088 BDE80840 		pop	{r3, lr}
  82:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 212              		.loc 1 82 0
 213 008c FFF7FEBF 		b	GPIO_SetValue
 214              	.LVL15:
 215              		.cfi_endproc
 216              	.LFE56:
 218              		.align	1
 219              		.global	GLCD_SetTextColor
 220              		.thumb
 221              		.thumb_func
 223              	GLCD_SetTextColor:
 224              	.LFB63:
 315:../Source Files/lpc_ssp_glcd.c **** {
 225              		.loc 1 315 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL16:
 316:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 231              		.loc 1 316 0
 232 0090 014B     		ldr	r3, .L15
 233 0092 1880     		strh	r0, [r3, #0]	@ movhi
 234 0094 7047     		bx	lr
 235              	.L16:
 236 0096 00BF     		.align	2
 237              	.L15:
 238 0098 00000000 		.word	.LANCHOR0
 239              		.cfi_endproc
 240              	.LFE63:
 242              		.align	1
 243              		.global	GLCD_SetBackColor
 244              		.thumb
 245              		.thumb_func
 247              	GLCD_SetBackColor:
 248              	.LFB64:
 326:../Source Files/lpc_ssp_glcd.c **** {
 249              		.loc 1 326 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL17:
 327:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 255              		.loc 1 327 0
 256 009c 014B     		ldr	r3, .L18
 257 009e 1880     		strh	r0, [r3, #0]	@ movhi
 258 00a0 7047     		bx	lr
 259              	.L19:
 260 00a2 00BF     		.align	2
 261              	.L18:
 262 00a4 00000000 		.word	.LANCHOR1
 263              		.cfi_endproc
 264              	.LFE64:
 266              		.align	1
 267              		.global	Write_Command_Glcd
 268              		.thumb
 269              		.thumb_func
 271              	Write_Command_Glcd:
 272              	.LFB84:
 371:../Source Files/lpc_ssp_glcd.c **** 
 372:../Source Files/lpc_ssp_glcd.c **** 
 373:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 374:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear display
 375:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    display clearing color
 376:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 377:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 378:../Source Files/lpc_ssp_glcd.c **** void GLCD_Clear (uint16_t color)
 379:../Source Files/lpc_ssp_glcd.c **** {
 380:../Source Files/lpc_ssp_glcd.c **** 	unsigned int   i;
 381:../Source Files/lpc_ssp_glcd.c **** 
 382:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 383:../Source Files/lpc_ssp_glcd.c **** 
 384:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 385:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 386:../Source Files/lpc_ssp_glcd.c **** 
 387:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 388:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 389:../Source Files/lpc_ssp_glcd.c **** 
 390:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 391:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 392:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 393:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 394:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 395:../Source Files/lpc_ssp_glcd.c **** }
 396:../Source Files/lpc_ssp_glcd.c **** 
 397:../Source Files/lpc_ssp_glcd.c **** 
 398:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 399:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw character on given position
 400:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x       horizontal position
 401:../Source Files/lpc_ssp_glcd.c ****  *              y       vertical position
 402:../Source Files/lpc_ssp_glcd.c ****  *              c       pointer to character bitmap
 403:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 404:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 405:../Source Files/lpc_ssp_glcd.c **** void GLCD_Draw_Char (uint16_t x, uint16_t y, uint16_t *c)
 406:../Source Files/lpc_ssp_glcd.c **** {
 407:../Source Files/lpc_ssp_glcd.c **** 	int idx = 0, i, j;
 408:../Source Files/lpc_ssp_glcd.c **** 
 409:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 410:../Source Files/lpc_ssp_glcd.c **** 
 411:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 412:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 413:../Source Files/lpc_ssp_glcd.c **** 
 414:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 415:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 416:../Source Files/lpc_ssp_glcd.c **** 
 417:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 418:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 419:../Source Files/lpc_ssp_glcd.c **** 
 420:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 421:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 422:../Source Files/lpc_ssp_glcd.c **** 
 423:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 424:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 425:../Source Files/lpc_ssp_glcd.c **** 
 426:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 427:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 428:../Source Files/lpc_ssp_glcd.c **** 
 429:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 430:../Source Files/lpc_ssp_glcd.c **** 
 431:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 432:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 433:../Source Files/lpc_ssp_glcd.c **** 	{
 434:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 435:../Source Files/lpc_ssp_glcd.c **** 		{
 436:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 437:../Source Files/lpc_ssp_glcd.c **** 			{
 438:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 439:../Source Files/lpc_ssp_glcd.c **** 			}
 440:../Source Files/lpc_ssp_glcd.c **** 			else
 441:../Source Files/lpc_ssp_glcd.c **** 			{
 442:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 443:../Source Files/lpc_ssp_glcd.c **** 			}
 444:../Source Files/lpc_ssp_glcd.c **** 		}
 445:../Source Files/lpc_ssp_glcd.c **** 		c++;
 446:../Source Files/lpc_ssp_glcd.c **** 	}
 447:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 448:../Source Files/lpc_ssp_glcd.c **** }
 449:../Source Files/lpc_ssp_glcd.c **** 
 450:../Source Files/lpc_ssp_glcd.c **** 
 451:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 452:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply character on given line
 453:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 454:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 455:../Source Files/lpc_ssp_glcd.c ****  *              c        ascii character
 456:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 457:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 458:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Char (uint16_t ln, uint16_t col, uchar c)
 459:../Source Files/lpc_ssp_glcd.c **** {
 460:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 462:../Source Files/lpc_ssp_glcd.c **** }
 463:../Source Files/lpc_ssp_glcd.c **** 
 464:../Source Files/lpc_ssp_glcd.c **** 
 465:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 466:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply string on given line
 467:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 468:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 469:../Source Files/lpc_ssp_glcd.c ****  *              s        pointer to string
 470:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 471:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 472:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 473:../Source Files/lpc_ssp_glcd.c **** {
 474:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 476:../Source Files/lpc_ssp_glcd.c **** 	{
 477:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 478:../Source Files/lpc_ssp_glcd.c **** 	}
 479:../Source Files/lpc_ssp_glcd.c **** }
 480:../Source Files/lpc_ssp_glcd.c **** 
 481:../Source Files/lpc_ssp_glcd.c **** 
 482:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 483:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear given line
 484:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 485:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 486:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 487:../Source Files/lpc_ssp_glcd.c **** void GLCD_ClearLn (uint16_t ln)
 488:../Source Files/lpc_ssp_glcd.c **** {
 489:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 490:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 491:../Source Files/lpc_ssp_glcd.c **** }
 492:../Source Files/lpc_ssp_glcd.c **** 
 493:../Source Files/lpc_ssp_glcd.c **** 
 494:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 495:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw bargraph
 496:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 497:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 498:../Source Files/lpc_ssp_glcd.c ****  *              w        maximum width of bargraph (in pixels)
 499:../Source Files/lpc_ssp_glcd.c ****  *              val      value of active bargraph (in 1/1024)
 500:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 501:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 502:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bargraph (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t val)
 503:../Source Files/lpc_ssp_glcd.c **** {
 504:../Source Files/lpc_ssp_glcd.c **** 	int i,j;
 505:../Source Files/lpc_ssp_glcd.c **** 
 506:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 507:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 508:../Source Files/lpc_ssp_glcd.c **** 
 509:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 510:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 511:../Source Files/lpc_ssp_glcd.c **** 
 512:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 513:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 514:../Source Files/lpc_ssp_glcd.c **** 
 515:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 516:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 517:../Source Files/lpc_ssp_glcd.c **** 
 518:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 519:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 520:../Source Files/lpc_ssp_glcd.c **** 
 521:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 522:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 523:../Source Files/lpc_ssp_glcd.c **** 
 524:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 525:../Source Files/lpc_ssp_glcd.c **** 
 526:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 527:../Source Files/lpc_ssp_glcd.c **** 
 528:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 530:../Source Files/lpc_ssp_glcd.c **** 	{
 531:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 532:../Source Files/lpc_ssp_glcd.c **** 		{
 533:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 534:../Source Files/lpc_ssp_glcd.c **** 			{
 535:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 536:../Source Files/lpc_ssp_glcd.c **** 			}
 537:../Source Files/lpc_ssp_glcd.c **** 			else
 538:../Source Files/lpc_ssp_glcd.c **** 			{
 539:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 540:../Source Files/lpc_ssp_glcd.c **** 			}
 541:../Source Files/lpc_ssp_glcd.c **** 		}
 542:../Source Files/lpc_ssp_glcd.c **** 	}
 543:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 544:../Source Files/lpc_ssp_glcd.c **** }
 545:../Source Files/lpc_ssp_glcd.c **** 
 546:../Source Files/lpc_ssp_glcd.c **** 
 547:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 548:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Display graphical bitmap image at position x horizontally
 549:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 550:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 551:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 552:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 553:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 554:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 555:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 556:../Source Files/lpc_ssp_glcd.c ****  *              bitmap   address at which the bitmap data resides
 557:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 558:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 559:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 560:../Source Files/lpc_ssp_glcd.c **** {
 561:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j,k;
 562:../Source Files/lpc_ssp_glcd.c **** 
 563:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 564:../Source Files/lpc_ssp_glcd.c **** 
 565:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 566:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 568:../Source Files/lpc_ssp_glcd.c **** 	{
 569:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 570:../Source Files/lpc_ssp_glcd.c **** 		{
 571:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 572:../Source Files/lpc_ssp_glcd.c **** 		}
 573:../Source Files/lpc_ssp_glcd.c **** 	}
 574:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 575:../Source Files/lpc_ssp_glcd.c **** }
 576:../Source Files/lpc_ssp_glcd.c **** 
 577:../Source Files/lpc_ssp_glcd.c **** 
 578:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 579:../Source Files/lpc_ssp_glcd.c ****  * @brief	    F at position x horizontally
 580:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 581:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 582:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 583:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 584:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 585:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 586:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 587:../Source Files/lpc_ssp_glcd.c ****  *              color    window color
 588:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 589:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 590:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window_Fill (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color)
 591:../Source Files/lpc_ssp_glcd.c **** {
 592:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j;
 593:../Source Files/lpc_ssp_glcd.c **** 
 594:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 595:../Source Files/lpc_ssp_glcd.c **** 
 596:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 598:../Source Files/lpc_ssp_glcd.c **** 	{
 599:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 600:../Source Files/lpc_ssp_glcd.c **** 		{
 601:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 602:../Source Files/lpc_ssp_glcd.c **** 		}
 603:../Source Files/lpc_ssp_glcd.c **** 	}
 604:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 605:../Source Files/lpc_ssp_glcd.c **** }
 606:../Source Files/lpc_ssp_glcd.c **** 
 607:../Source Files/lpc_ssp_glcd.c **** 
 608:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 609:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a line on a graphic LCD using Bresenham's
 610:../Source Files/lpc_ssp_glcd.c ****  *              line drawing algorithm
 611:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)   the start coordinate
 612:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)   the end coordinate
 613:../Source Files/lpc_ssp_glcd.c ****  *              color      line color
 614:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 615:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 616:../Source Files/lpc_ssp_glcd.c **** void GLCD_Line(int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color)
 617:../Source Files/lpc_ssp_glcd.c **** {
 618:../Source Files/lpc_ssp_glcd.c **** 	int16_t  x, y, addx, addy, dx, dy;
 619:../Source Files/lpc_ssp_glcd.c **** 	int32_t P,i;
 620:../Source Files/lpc_ssp_glcd.c **** 
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 623:../Source Files/lpc_ssp_glcd.c **** 	x = x1;
 624:../Source Files/lpc_ssp_glcd.c **** 	y = y1;
 625:../Source Files/lpc_ssp_glcd.c **** 
 626:../Source Files/lpc_ssp_glcd.c **** 	if(x1 > x2)
 627:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 628:../Source Files/lpc_ssp_glcd.c **** 	else
 629:../Source Files/lpc_ssp_glcd.c **** 		addx = 1;
 630:../Source Files/lpc_ssp_glcd.c **** 	if(y1 > y2)
 631:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 632:../Source Files/lpc_ssp_glcd.c **** 	else
 633:../Source Files/lpc_ssp_glcd.c **** 		addy = 1;
 634:../Source Files/lpc_ssp_glcd.c **** 
 635:../Source Files/lpc_ssp_glcd.c **** 
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 637:../Source Files/lpc_ssp_glcd.c **** 	{
 638:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 639:../Source Files/lpc_ssp_glcd.c **** 
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 641:../Source Files/lpc_ssp_glcd.c **** 		{
 642:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 643:../Source Files/lpc_ssp_glcd.c **** 
 644:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 645:../Source Files/lpc_ssp_glcd.c **** 			{
 646:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 647:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 648:../Source Files/lpc_ssp_glcd.c **** 			}
 649:../Source Files/lpc_ssp_glcd.c **** 			else
 650:../Source Files/lpc_ssp_glcd.c **** 			{
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 652:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 653:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 654:../Source Files/lpc_ssp_glcd.c **** 			}
 655:../Source Files/lpc_ssp_glcd.c **** 		}
 656:../Source Files/lpc_ssp_glcd.c **** 	}
 657:../Source Files/lpc_ssp_glcd.c **** 	else
 658:../Source Files/lpc_ssp_glcd.c **** 	{
 659:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 660:../Source Files/lpc_ssp_glcd.c **** 
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 662:../Source Files/lpc_ssp_glcd.c **** 		{
 663:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 664:../Source Files/lpc_ssp_glcd.c **** 
 665:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 666:../Source Files/lpc_ssp_glcd.c **** 			{
 667:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 668:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 669:../Source Files/lpc_ssp_glcd.c **** 			}
 670:../Source Files/lpc_ssp_glcd.c **** 			else
 671:../Source Files/lpc_ssp_glcd.c **** 			{
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 673:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 674:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 675:../Source Files/lpc_ssp_glcd.c **** 			}
 676:../Source Files/lpc_ssp_glcd.c **** 		}
 677:../Source Files/lpc_ssp_glcd.c **** 	}
 678:../Source Files/lpc_ssp_glcd.c **** }
 679:../Source Files/lpc_ssp_glcd.c **** 
 680:../Source Files/lpc_ssp_glcd.c **** 
 681:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 682:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Rectangle on a graphic LCD
 683:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 684:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 685:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Rectangle TRUE/FALSE or ON/OFF
 686:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 687:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   fill color
 688:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 689:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 690:../Source Files/lpc_ssp_glcd.c **** void GLCD_Rect(COORDINATE_Type *p1, COORDINATE_Type *p2, Bool fill, uint16_t color, uint16_t fill_c
 691:../Source Files/lpc_ssp_glcd.c **** {
 692:../Source Files/lpc_ssp_glcd.c **** 	int16_t  width,height;                          // Find the y min and max
 693:../Source Files/lpc_ssp_glcd.c **** 
 694:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 695:../Source Files/lpc_ssp_glcd.c **** 	{
 696:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 697:../Source Files/lpc_ssp_glcd.c **** 		{
 698:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 699:../Source Files/lpc_ssp_glcd.c **** 			{
 700:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 701:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 702:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 703:../Source Files/lpc_ssp_glcd.c **** 			}
 704:../Source Files/lpc_ssp_glcd.c **** 			else
 705:../Source Files/lpc_ssp_glcd.c **** 			{
 706:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 707:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 708:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 709:../Source Files/lpc_ssp_glcd.c **** 			}
 710:../Source Files/lpc_ssp_glcd.c **** 		}
 711:../Source Files/lpc_ssp_glcd.c **** 		else
 712:../Source Files/lpc_ssp_glcd.c **** 		{
 713:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 714:../Source Files/lpc_ssp_glcd.c **** 			{
 715:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 716:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 717:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 718:../Source Files/lpc_ssp_glcd.c **** 			}
 719:../Source Files/lpc_ssp_glcd.c **** 			else
 720:../Source Files/lpc_ssp_glcd.c **** 			{
 721:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 722:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 723:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 724:../Source Files/lpc_ssp_glcd.c **** 			}
 725:../Source Files/lpc_ssp_glcd.c **** 		}
 726:../Source Files/lpc_ssp_glcd.c **** 		fill = NO;
 727:../Source Files/lpc_ssp_glcd.c **** 	}
 728:../Source Files/lpc_ssp_glcd.c **** 	if(!fill)
 729:../Source Files/lpc_ssp_glcd.c **** 	{
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 732:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 733:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 734:../Source Files/lpc_ssp_glcd.c **** 	}
 735:../Source Files/lpc_ssp_glcd.c **** }
 736:../Source Files/lpc_ssp_glcd.c **** 
 737:../Source Files/lpc_ssp_glcd.c **** 
 738:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 739:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a frame on a graphic LCD
 740:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 741:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 742:../Source Files/lpc_ssp_glcd.c ****  *              frame_width  Total Width of Frame
 743:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 744:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Frame fill color
 745:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 746:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 747:../Source Files/lpc_ssp_glcd.c **** void GLCD_Frame(COORDINATE_Type *p1, COORDINATE_Type *p2, int16_t frame_width, uint16_t color, uint
 748:../Source Files/lpc_ssp_glcd.c **** {
 749:../Source Files/lpc_ssp_glcd.c **** 	int16_t fw;                          // Find the y min and max
 750:../Source Files/lpc_ssp_glcd.c **** 
 751:../Source Files/lpc_ssp_glcd.c **** 	fw = frame_width;
 752:../Source Files/lpc_ssp_glcd.c **** 
 753:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 754:../Source Files/lpc_ssp_glcd.c **** 	{
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 756:../Source Files/lpc_ssp_glcd.c **** 		{
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 759:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 760:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 761:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 762:../Source Files/lpc_ssp_glcd.c **** 		}
 763:../Source Files/lpc_ssp_glcd.c **** 		else
 764:../Source Files/lpc_ssp_glcd.c **** 		{
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 767:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 768:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 769:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 770:../Source Files/lpc_ssp_glcd.c **** 		}
 771:../Source Files/lpc_ssp_glcd.c **** 	}
 772:../Source Files/lpc_ssp_glcd.c **** 
 773:../Source Files/lpc_ssp_glcd.c **** 	if(!fw)
 774:../Source Files/lpc_ssp_glcd.c **** 	{
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 777:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 778:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 779:../Source Files/lpc_ssp_glcd.c **** 	}
 780:../Source Files/lpc_ssp_glcd.c **** }
 781:../Source Files/lpc_ssp_glcd.c **** 
 782:../Source Files/lpc_ssp_glcd.c **** 
 783:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 784:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a rectangle/frame on a graphic LCD
 785:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 786:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 787:../Source Files/lpc_ssp_glcd.c ****  *              (x3, y3)     the end coordinate
 788:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Triangle TRUE/FALSE or ON/OFF
 789:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 790:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Triangle Fill Color
 791:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 792:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 794:../Source Files/lpc_ssp_glcd.c **** {
 795:../Source Files/lpc_ssp_glcd.c ****     if(cfg->fill)
 796:../Source Files/lpc_ssp_glcd.c ****     {
 797:../Source Files/lpc_ssp_glcd.c ****     	uint16_t t1x,t2x,y,minx,maxx,t1xp,t2xp;
 798:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 799:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 800:../Source Files/lpc_ssp_glcd.c ****     	int16_t signx1,signx2,dx1,dy1,dx2,dy2;
 801:../Source Files/lpc_ssp_glcd.c ****     	uint16_t e1,e2;
 802:../Source Files/lpc_ssp_glcd.c ****         // Sort vertices
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 805:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 806:../Source Files/lpc_ssp_glcd.c **** 
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 808:../Source Files/lpc_ssp_glcd.c **** 
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 811:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 812:../Source Files/lpc_ssp_glcd.c **** 
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 816:../Source Files/lpc_ssp_glcd.c **** 
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 818:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 819:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 820:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 821:../Source Files/lpc_ssp_glcd.c ****     	}
 822:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 823:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 824:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 825:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 826:../Source Files/lpc_ssp_glcd.c ****     	}
 827:../Source Files/lpc_ssp_glcd.c **** 
 828:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 829:../Source Files/lpc_ssp_glcd.c ****         // Flat top, just process the second half
 830:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 831:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 832:../Source Files/lpc_ssp_glcd.c **** 
 833:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 834:../Source Files/lpc_ssp_glcd.c ****     	{
 835:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 836:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 837:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 838:../Source Files/lpc_ssp_glcd.c ****             // process first line until y value is about to change
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 840:../Source Files/lpc_ssp_glcd.c ****     		{
 841:../Source Files/lpc_ssp_glcd.c ****     			i++;
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 843:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 844:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 845:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 847:../Source Files/lpc_ssp_glcd.c ****     				else          goto next1;
 848:../Source Files/lpc_ssp_glcd.c ****     			}
 849:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 850:../Source Files/lpc_ssp_glcd.c ****     			else t1x += signx1;
 851:../Source Files/lpc_ssp_glcd.c ****     		}
 852:../Source Files/lpc_ssp_glcd.c ****     	// Move line
 853:../Source Files/lpc_ssp_glcd.c ****     	next1:
 854:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 855:../Source Files/lpc_ssp_glcd.c ****     		while (1)
 856:../Source Files/lpc_ssp_glcd.c ****     		{
 857:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 858:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 859:../Source Files/lpc_ssp_glcd.c ****     			{
 860:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 862:../Source Files/lpc_ssp_glcd.c ****     				else          goto next2;
 863:../Source Files/lpc_ssp_glcd.c ****     			}
 864:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 865:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 866:../Source Files/lpc_ssp_glcd.c ****     		}
 867:../Source Files/lpc_ssp_glcd.c ****     	next2:
 868:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 869:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 870:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 871:../Source Files/lpc_ssp_glcd.c **** 
 872:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 874:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 876:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 878:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 879:../Source Files/lpc_ssp_glcd.c ****        }
 880:../Source Files/lpc_ssp_glcd.c ****     	next:
 881:../Source Files/lpc_ssp_glcd.c ****     	// Second half
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 883:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 884:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 885:../Source Files/lpc_ssp_glcd.c **** 
 886:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 887:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 888:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 889:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 890:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 891:../Source Files/lpc_ssp_glcd.c **** 
 892:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 893:../Source Files/lpc_ssp_glcd.c **** 
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 895:../Source Files/lpc_ssp_glcd.c ****     	{
 896:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 897:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 898:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 899:../Source Files/lpc_ssp_glcd.c ****     	    // process first line until y value is about to change
 900:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 901:../Source Files/lpc_ssp_glcd.c ****     		{
 902:../Source Files/lpc_ssp_glcd.c ****         		e1 += dy1;
 903:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 904:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 905:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 907:../Source Files/lpc_ssp_glcd.c ****     				else          goto next3;
 908:../Source Files/lpc_ssp_glcd.c ****     			}
 909:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 910:../Source Files/lpc_ssp_glcd.c ****     			else   	   	  t1x += signx1;
 911:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 912:../Source Files/lpc_ssp_glcd.c ****     		}
 913:../Source Files/lpc_ssp_glcd.c ****     	next3:
 914:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 915:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 916:../Source Files/lpc_ssp_glcd.c ****     		{
 917:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 918:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 919:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 920:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 921:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 922:../Source Files/lpc_ssp_glcd.c ****     				else          goto next4;
 923:../Source Files/lpc_ssp_glcd.c ****     			}
 924:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 925:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 926:../Source Files/lpc_ssp_glcd.c ****     		}
 927:../Source Files/lpc_ssp_glcd.c ****     	next4:
 928:../Source Files/lpc_ssp_glcd.c **** 
 929:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 930:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 931:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 932:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 934:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 936:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 938:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 939:../Source Files/lpc_ssp_glcd.c ****     	}
 940:../Source Files/lpc_ssp_glcd.c ****     	cfg->fill = NO;
 941:../Source Files/lpc_ssp_glcd.c ****     }
 942:../Source Files/lpc_ssp_glcd.c **** 
 943:../Source Files/lpc_ssp_glcd.c **** 
 944:../Source Files/lpc_ssp_glcd.c **** 	if(!cfg->fill && cfg->bndry)
 945:../Source Files/lpc_ssp_glcd.c **** 	{
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, cfg->bcolor);
 947:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, cfg->bcolor);
 948:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, cfg->bcolor);
 949:../Source Files/lpc_ssp_glcd.c **** 	}
 950:../Source Files/lpc_ssp_glcd.c **** }
 951:../Source Files/lpc_ssp_glcd.c **** 
 952:../Source Files/lpc_ssp_glcd.c **** 
 953:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 954:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Circle with given Center and Radius
 955:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x, y)     the center of the circle
 956:../Source Files/lpc_ssp_glcd.c ****  *              radius     the radius of the circle
 957:../Source Files/lpc_ssp_glcd.c ****  *              fill       YES or NO
 958:../Source Files/lpc_ssp_glcd.c ****  *              color      Boundary color
 959:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 960:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 962:../Source Files/lpc_ssp_glcd.c **** {
 963:../Source Files/lpc_ssp_glcd.c **** 	int16_t a, b, P;
 964:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 965:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 967:../Source Files/lpc_ssp_glcd.c **** 
 968:../Source Files/lpc_ssp_glcd.c **** 	do
 969:../Source Files/lpc_ssp_glcd.c **** 	{
 970:../Source Files/lpc_ssp_glcd.c **** 		if(cfg->fill)
 971:../Source Files/lpc_ssp_glcd.c **** 		{
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, cfg->fill_color);
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, cfg->fill_color);
 975:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, cfg->fill_color);
 976:../Source Files/lpc_ssp_glcd.c **** 		}
 977:../Source Files/lpc_ssp_glcd.c **** 
 978:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 980:../Source Files/lpc_ssp_glcd.c **** 		else
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 982:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 983:../Source Files/lpc_ssp_glcd.c **** 
 984:../Source Files/lpc_ssp_glcd.c **** 	cfg->fill = NO;
 985:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 986:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 987:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 988:../Source Files/lpc_ssp_glcd.c **** 	do
 989:../Source Files/lpc_ssp_glcd.c **** 	{
 990:../Source Files/lpc_ssp_glcd.c **** 		if(!cfg->fill && cfg->bndry)
 991:../Source Files/lpc_ssp_glcd.c **** 		{
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, cfg->bcolor);
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, cfg->bcolor);
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 998:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, cfg->bcolor);
 999:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, cfg->bcolor);
1000:../Source Files/lpc_ssp_glcd.c **** 		}
1001:../Source Files/lpc_ssp_glcd.c **** 
1002:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
1004:../Source Files/lpc_ssp_glcd.c **** 		else
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
1006:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
1007:../Source Files/lpc_ssp_glcd.c **** }
1008:../Source Files/lpc_ssp_glcd.c **** 
1009:../Source Files/lpc_ssp_glcd.c **** 
1010:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1011:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Write text on a graphic LCD
1012:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x,y)      The upper left coordinate of the first letter
1013:../Source Files/lpc_ssp_glcd.c ****  *              textptr    A pointer to an array of text to display
1014:../Source Files/lpc_ssp_glcd.c ****  *              row        Number of rows of pixels
1015:../Source Files/lpc_ssp_glcd.c ****  *              col        Number of Colums of pixels
1016:../Source Files/lpc_ssp_glcd.c ****  *              font       font 2 dimentional array
1017:../Source Files/lpc_ssp_glcd.c ****  *              size       The size of the text: 1 = 5x7, 2 = 10x14, ...
1018:../Source Files/lpc_ssp_glcd.c ****  *              color      font color
1019:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1020:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
1022:../Source Files/lpc_ssp_glcd.c **** {
1023:../Source Files/lpc_ssp_glcd.c ****    int16_t i, j, k, l, m;                     // Loop counters
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
1025:../Source Files/lpc_ssp_glcd.c **** 
1026:../Source Files/lpc_ssp_glcd.c ****    for(i=0; textptr[i] != '\0'; ++i, ++x) // Loop through the passed string
1027:../Source Files/lpc_ssp_glcd.c ****    {
1028:../Source Files/lpc_ssp_glcd.c ****       memcpy(pixelData, font[textptr[i]-' '], row);
1029:../Source Files/lpc_ssp_glcd.c **** 
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
1031:../Source Files/lpc_ssp_glcd.c ****       {
1032:../Source Files/lpc_ssp_glcd.c ****          x = 0;                           // Set x at far left position
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
1034:../Source Files/lpc_ssp_glcd.c ****       }
1035:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
1036:../Source Files/lpc_ssp_glcd.c ****       {
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
1038:../Source Files/lpc_ssp_glcd.c ****          {
1039:../Source Files/lpc_ssp_glcd.c ****             if(bit_test(pixelData[j], k)) // Check if the pixel should be set
1040:../Source Files/lpc_ssp_glcd.c ****             {
1041:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
1042:../Source Files/lpc_ssp_glcd.c ****                {                          // character's size
1043:../Source Files/lpc_ssp_glcd.c ****                   for(m=0; m<size; ++m)
1044:../Source Files/lpc_ssp_glcd.c ****                   {
1045:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
1046:../Source Files/lpc_ssp_glcd.c ****                   }
1047:../Source Files/lpc_ssp_glcd.c ****                }
1048:../Source Files/lpc_ssp_glcd.c ****             }
1049:../Source Files/lpc_ssp_glcd.c ****          }
1050:../Source Files/lpc_ssp_glcd.c ****       }
1051:../Source Files/lpc_ssp_glcd.c ****    }
1052:../Source Files/lpc_ssp_glcd.c **** }
1053:../Source Files/lpc_ssp_glcd.c **** 
1054:../Source Files/lpc_ssp_glcd.c **** 
1055:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1056:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw Bar for Bar Graph (Dependent on Bar Graph Test)
1057:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	index      Bar Number (from 1 to 10)
1058:../Source Files/lpc_ssp_glcd.c ****  *              width      Bar width
1059:../Source Files/lpc_ssp_glcd.c ****  *              per        Percentage height
1060:../Source Files/lpc_ssp_glcd.c ****  *              color      Bar Color
1061:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1062:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1063:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bar(int16_t index,uint8_t width,int16_t per,uint16_t color)
1064:../Source Files/lpc_ssp_glcd.c **** {
1065:../Source Files/lpc_ssp_glcd.c **** 	/**************************************************************************
1066:../Source Files/lpc_ssp_glcd.c **** 	 * Par1 : const 30 indicates  ref distance line. 28 indicates spacing between
1067:../Source Files/lpc_ssp_glcd.c **** 	 * two bar graphs at multiples of 28, now as the center of bar is located
1068:../Source Files/lpc_ssp_glcd.c **** 	 * half of width should be left and other half on right, so after subracting
1069:../Source Files/lpc_ssp_glcd.c **** 	 * half width from center we get x point of bar.
1070:../Source Files/lpc_ssp_glcd.c **** 	 * Par2 : 220 is Y ref line so (220 - bar heigth) will give y point of bar.
1071:../Source Files/lpc_ssp_glcd.c **** 	 * Par4 : per*2 is scaling for 200 pixels for 100 percentage heigth.
1072:../Source Files/lpc_ssp_glcd.c **** 	 **************************************************************************/
1073:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
1074:../Source Files/lpc_ssp_glcd.c **** 	{
1075:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Window_Fill(30+(index*26)-(width-(width/2)),220-(per*2),width,per*2,color);
1076:../Source Files/lpc_ssp_glcd.c **** 	}
1077:../Source Files/lpc_ssp_glcd.c **** }
1078:../Source Files/lpc_ssp_glcd.c **** 
1079:../Source Files/lpc_ssp_glcd.c **** 
1080:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1081:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Bar Graph Test function
1082:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
1083:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1084:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1085:../Source Files/lpc_ssp_glcd.c **** void BarGraph_Test(void)
1086:../Source Files/lpc_ssp_glcd.c **** {
1087:../Source Files/lpc_ssp_glcd.c **** 	COORDINATE_Type point1,point2,point3;
1088:../Source Files/lpc_ssp_glcd.c **** 	COLORCFG_Type tricfg;
1089:../Source Files/lpc_ssp_glcd.c ****     uint8_t x_name[10][3]={"1","2","3","4","5","6","7","8","9","10"};
1090:../Source Files/lpc_ssp_glcd.c ****     uint8_t y_name[10][4]={"10","20","30","40","50","60","70","80","90","100"};
1091:../Source Files/lpc_ssp_glcd.c ****     uint16_t y_scale,x_scale,i;
1092:../Source Files/lpc_ssp_glcd.c **** 
1093:../Source Files/lpc_ssp_glcd.c **** 	/* X and Y lines */
1094:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(30,5,30,238,Black);
1095:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(1,220,315,220,Black);
1096:../Source Files/lpc_ssp_glcd.c **** 
1097:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(22,5,"Y",5,7,default5x7,1,Black);
1098:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(310,225,"X",5,7,default5x7,1,Black);
1099:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(50,5,"X=ADC-CH  Y=VAL  Y-MAX=4096  Y-UNIT=41",5,7,default5x7,1,Black);
1100:../Source Files/lpc_ssp_glcd.c **** 
1101:../Source Files/lpc_ssp_glcd.c **** 	/* Y Line Arrows Top and Bottom */
1102:../Source Files/lpc_ssp_glcd.c **** 	/* Top arrow coordinates */
1103:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
1104:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 5;
1105:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
1106:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 10;
1107:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
1108:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 10;
1109:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1110:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1111:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1112:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1113:../Source Files/lpc_ssp_glcd.c **** 
1114:../Source Files/lpc_ssp_glcd.c **** 	/* Bottom arrow coordinates */
1115:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
1116:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 238;
1117:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
1118:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 233;
1119:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
1120:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 233;
1121:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1122:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1123:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1124:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1125:../Source Files/lpc_ssp_glcd.c **** 
1126:../Source Files/lpc_ssp_glcd.c **** 	/* X Line Arrows Left and Right */
1127:../Source Files/lpc_ssp_glcd.c **** 	/* Left arrow coordinates */
1128:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 1;
1129:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
1130:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 6;
1131:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
1132:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 6;
1133:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
1134:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1135:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1136:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1137:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1138:../Source Files/lpc_ssp_glcd.c **** 
1139:../Source Files/lpc_ssp_glcd.c **** 	/* Right arrow coordinates */
1140:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 315;
1141:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
1142:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 310;
1143:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
1144:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 310;
1145:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
1146:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1147:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1148:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1149:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1150:../Source Files/lpc_ssp_glcd.c **** 
1151:../Source Files/lpc_ssp_glcd.c **** 	/* X and Y scaling */
1152:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(0,225,"(0,0)",5,7,default5x7,1,Black);
1153:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=0; y_scale>=20; y_scale=y_scale-20,i++)
1154:../Source Files/lpc_ssp_glcd.c **** 	{
1155:../Source Files/lpc_ssp_glcd.c **** 		if(y_scale!=20)
1156:../Source Files/lpc_ssp_glcd.c **** 		{
1157:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(14,y_scale,y_name[i],5,7,default5x7,1,Black);
1158:../Source Files/lpc_ssp_glcd.c **** 		}
1159:../Source Files/lpc_ssp_glcd.c **** 		else
1160:../Source Files/lpc_ssp_glcd.c **** 		{
1161:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(10,y_scale,y_name[i],5,7,default5x7,1,Black);
1162:../Source Files/lpc_ssp_glcd.c **** 		}
1163:../Source Files/lpc_ssp_glcd.c **** 
1164:../Source Files/lpc_ssp_glcd.c **** 	}
1165:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=0; x_scale<=300; x_scale=x_scale+26,i++)
1166:../Source Files/lpc_ssp_glcd.c **** 	{
1167:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Text(x_scale,225,x_name[i],5,7,default5x7,1,Black);
1168:../Source Files/lpc_ssp_glcd.c **** 	}
1169:../Source Files/lpc_ssp_glcd.c **** 
1170:../Source Files/lpc_ssp_glcd.c **** 	/* Bar Graph variation */
1171:../Source Files/lpc_ssp_glcd.c **** 	for(i=1;i<=10;i=i++)
1172:../Source Files/lpc_ssp_glcd.c **** 	{
1173:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Bar(i,24,i*10,Green);
1174:../Source Files/lpc_ssp_glcd.c **** 		delay_ms(500);
1175:../Source Files/lpc_ssp_glcd.c **** 	}
1176:../Source Files/lpc_ssp_glcd.c **** 
1177:../Source Files/lpc_ssp_glcd.c **** /*	for(i=10;i>0;i--)
1178:../Source Files/lpc_ssp_glcd.c **** 	{
1179:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Bar(1,24,100,White); // for decrementing value clear previous bar
1180:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Bar(1,24,i*10,Green);
1181:../Source Files/lpc_ssp_glcd.c **** 		delay_ms(500);
1182:../Source Files/lpc_ssp_glcd.c **** 	}*/
1183:../Source Files/lpc_ssp_glcd.c **** }
1184:../Source Files/lpc_ssp_glcd.c **** 
1185:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1186:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes commands to the GLCD
1187:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	Command		command to be written on GLCD
1188:../Source Files/lpc_ssp_glcd.c ****  * @return 		status
1189:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1190:../Source Files/lpc_ssp_glcd.c **** uchar Write_Command_Glcd (uint8_t Command)
1191:../Source Files/lpc_ssp_glcd.c **** {
 273              		.loc 1 1191 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 40
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL18:
 278 00a8 10B5     		push	{r4, lr}
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 283 00aa 8AB0     		sub	sp, sp, #40
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 48
 286              		.loc 1 1191 0
 287 00ac 0AAC     		add	r4, sp, #40
 288 00ae 04F8210D 		strb	r0, [r4, #-33]!
1192:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1193:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1194:../Source Files/lpc_ssp_glcd.c **** 	__IO uint32_t i;
1195:../Source Files/lpc_ssp_glcd.c **** 
1196:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(2, LCD_RS);  //select command mode
 289              		.loc 1 1196 0
 290 00b2 0121     		movs	r1, #1
 291 00b4 0220     		movs	r0, #2
 292              	.LVL19:
 293 00b6 FFF7FEFF 		bl	GPIO_ClearValue
 294              	.LVL20:
1197:../Source Files/lpc_ssp_glcd.c **** 
1198:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 295              		.loc 1 1198 0
 296 00ba 1148     		ldr	r0, .L27
 297 00bc 0021     		movs	r1, #0
 298 00be FFF7FEFF 		bl	CS_Force1
 299              	.LVL21:
1199:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = &Command;               /* Send Instruction Byte    */
 300              		.loc 1 1199 0
 301 00c2 0494     		str	r4, [sp, #16]
1200:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 302              		.loc 1 1200 0
 303 00c4 0022     		movs	r2, #0
1201:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 304              		.loc 1 1201 0
 305 00c6 0124     		movs	r4, #1
1202:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 306              		.loc 1 1202 0
 307 00c8 0D48     		ldr	r0, .L27
 308 00ca 04A9     		add	r1, sp, #16
1200:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 309              		.loc 1 1200 0
 310 00cc 0692     		str	r2, [sp, #24]
1201:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 311              		.loc 1 1201 0
 312 00ce 0894     		str	r4, [sp, #32]
 313              		.loc 1 1202 0
 314 00d0 FFF7FEFF 		bl	SSP_ReadWrite
 315              	.LVL22:
1203:../Source Files/lpc_ssp_glcd.c **** 
1204:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 316              		.loc 1 1204 0
 317 00d4 C0B2     		uxtb	r0, r0
 318 00d6 80B1     		cbz	r0, .L21
 319              	.LBB4:
 320              	.LBB5:
1205:../Source Files/lpc_ssp_glcd.c **** 	{
1206:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 321              		.loc 1 1206 0
 322 00d8 2146     		mov	r1, r4
 323 00da 0948     		ldr	r0, .L27
 324              	.LVL23:
 325 00dc FFF7FEFF 		bl	CS_Force1
 326              	.LVL24:
1207:../Source Files/lpc_ssp_glcd.c **** 		for(i=925; i>0; i--);
 327              		.loc 1 1207 0
 328 00e0 40F29D31 		movw	r1, #925
 329              	.L25:
 330              	.LVL25:
 331 00e4 0391     		str	r1, [sp, #12]
 332 00e6 039B     		ldr	r3, [sp, #12]
 333 00e8 13B1     		cbz	r3, .L26
 334              	.L23:
 335 00ea 0398     		ldr	r0, [sp, #12]
 336 00ec 411E     		subs	r1, r0, #1
 337              	.LVL26:
 338 00ee F9E7     		b	.L25
 339              	.LVL27:
 340              	.L26:
1208:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_RS);  // select data mode
 341              		.loc 1 1208 0
 342 00f0 0220     		movs	r0, #2
 343 00f2 0121     		movs	r1, #1
 344 00f4 FFF7FEFF 		bl	GPIO_SetValue
 345              	.LVL28:
 346 00f8 0120     		movs	r0, #1
 347              	.L21:
 348              	.LBE5:
 349              	.LBE4:
1209:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1210:../Source Files/lpc_ssp_glcd.c **** 	}
1211:../Source Files/lpc_ssp_glcd.c **** 	else
1212:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1213:../Source Files/lpc_ssp_glcd.c **** }
 350              		.loc 1 1213 0
 351 00fa 0AB0     		add	sp, sp, #40
 352 00fc 10BD     		pop	{r4, pc}
 353              	.L28:
 354 00fe 00BF     		.align	2
 355              	.L27:
 356 0100 00000340 		.word	1073938432
 357              		.cfi_endproc
 358              	.LFE84:
 360              		.align	1
 361              		.global	Write_Data_Glcd
 362              		.thumb
 363              		.thumb_func
 365              	Write_Data_Glcd:
 366              	.LFB85:
1214:../Source Files/lpc_ssp_glcd.c **** 
1215:../Source Files/lpc_ssp_glcd.c **** 
1216:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1217:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes data to the GLCD
1218:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	data	data to be written on GLCD
1219:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1220:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1221:../Source Files/lpc_ssp_glcd.c **** uchar Write_Data_Glcd (uint16_t data)
1222:../Source Files/lpc_ssp_glcd.c **** {
 367              		.loc 1 1222 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 24
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL29:
 372 0104 10B5     		push	{r4, lr}
 373              	.LCFI5:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
1223:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1224:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1225:../Source Files/lpc_ssp_glcd.c **** 
1226:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 377              		.loc 1 1226 0
 378 0106 0F4C     		ldr	r4, .L32
1222:../Source Files/lpc_ssp_glcd.c **** {
 379              		.loc 1 1222 0
 380 0108 86B0     		sub	sp, sp, #24
 381              	.LCFI6:
 382              		.cfi_def_cfa_offset 32
 383              		.loc 1 1226 0
 384 010a 030A     		lsrs	r3, r0, #8
1227:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) data;        // 2nd byte extract
 385              		.loc 1 1227 0
 386 010c 6070     		strb	r0, [r4, #1]
1228:../Source Files/lpc_ssp_glcd.c **** 
1229:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
 387              		.loc 1 1229 0
 388 010e 0121     		movs	r1, #1
 389 0110 0220     		movs	r0, #2
 390              	.LVL30:
1226:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 391              		.loc 1 1226 0
 392 0112 2370     		strb	r3, [r4, #0]
 393              		.loc 1 1229 0
 394 0114 FFF7FEFF 		bl	GPIO_SetValue
 395              	.LVL31:
1230:../Source Files/lpc_ssp_glcd.c **** 
1231:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 396              		.loc 1 1231 0
 397 0118 0B48     		ldr	r0, .L32+4
 398 011a 0021     		movs	r1, #0
 399 011c FFF7FEFF 		bl	CS_Force1
 400              	.LVL32:
1232:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
1233:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
1234:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 401              		.loc 1 1234 0
 402 0120 0220     		movs	r0, #2
1233:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 403              		.loc 1 1233 0
 404 0122 0022     		movs	r2, #0
 405              		.loc 1 1234 0
 406 0124 0490     		str	r0, [sp, #16]
1235:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 407              		.loc 1 1235 0
 408 0126 6946     		mov	r1, sp
 409 0128 0748     		ldr	r0, .L32+4
1232:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 410              		.loc 1 1232 0
 411 012a 0094     		str	r4, [sp, #0]
1233:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 412              		.loc 1 1233 0
 413 012c 0292     		str	r2, [sp, #8]
 414              		.loc 1 1235 0
 415 012e FFF7FEFF 		bl	SSP_ReadWrite
 416              	.LVL33:
1236:../Source Files/lpc_ssp_glcd.c **** 
1237:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 417              		.loc 1 1237 0
 418 0132 C0B2     		uxtb	r0, r0
 419 0134 20B1     		cbz	r0, .L30
 420              	.LBB8:
 421              	.LBB9:
1238:../Source Files/lpc_ssp_glcd.c **** 	{
1239:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 422              		.loc 1 1239 0
 423 0136 0448     		ldr	r0, .L32+4
 424              	.LVL34:
 425 0138 0121     		movs	r1, #1
 426 013a FFF7FEFF 		bl	CS_Force1
 427              	.LVL35:
 428 013e 0120     		movs	r0, #1
 429              	.L30:
 430              	.LBE9:
 431              	.LBE8:
1240:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1241:../Source Files/lpc_ssp_glcd.c **** 	}
1242:../Source Files/lpc_ssp_glcd.c **** 	else
1243:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1244:../Source Files/lpc_ssp_glcd.c **** }
 432              		.loc 1 1244 0
 433 0140 06B0     		add	sp, sp, #24
 434 0142 10BD     		pop	{r4, pc}
 435              	.L33:
 436              		.align	2
 437              	.L32:
 438 0144 00000000 		.word	Tx_Buf1
 439 0148 00000340 		.word	1073938432
 440              		.cfi_endproc
 441              	.LFE85:
 443              		.align	1
 444              		.global	GLCD_Bargraph
 445              		.thumb
 446              		.thumb_func
 448              	GLCD_Bargraph:
 449              	.LFB73:
 503:../Source Files/lpc_ssp_glcd.c **** {
 450              		.loc 1 503 0
 451              		.cfi_startproc
 452              		@ args = 4, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              	.LVL36:
 455 014c 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 456              	.LCFI7:
 457              		.cfi_def_cfa_offset 24
 458              		.cfi_offset 4, -24
 459              		.cfi_offset 5, -20
 460              		.cfi_offset 6, -16
 461              		.cfi_offset 7, -12
 462              		.cfi_offset 8, -8
 463              		.cfi_offset 14, -4
 503:../Source Files/lpc_ssp_glcd.c **** {
 464              		.loc 1 503 0
 465 0150 0646     		mov	r6, r0
 506:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 466              		.loc 1 506 0
 467 0152 4520     		movs	r0, #69
 468              	.LVL37:
 503:../Source Files/lpc_ssp_glcd.c **** {
 469              		.loc 1 503 0
 470 0154 1546     		mov	r5, r2
 471 0156 1F46     		mov	r7, r3
 472 0158 0C46     		mov	r4, r1
 473 015a BDF81880 		ldrh	r8, [sp, #24]
 506:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 474              		.loc 1 506 0
 475 015e FFF7FEFF 		bl	Write_Command_Glcd
 476              	.LVL38:
 507:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 477              		.loc 1 507 0
 478 0162 3046     		mov	r0, r6
 479 0164 FFF7FEFF 		bl	Write_Data_Glcd
 480              	.LVL39:
 509:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 481              		.loc 1 509 0
 482 0168 4620     		movs	r0, #70
 483 016a FFF7FEFF 		bl	Write_Command_Glcd
 484              	.LVL40:
 510:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 485              		.loc 1 510 0
 486 016e 701E     		subs	r0, r6, #1
 487 0170 2918     		adds	r1, r5, r0
 488 0172 88B2     		uxth	r0, r1
 489 0174 FFF7FEFF 		bl	Write_Data_Glcd
 490              	.LVL41:
 512:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 491              		.loc 1 512 0
 492 0178 4420     		movs	r0, #68
 493 017a FFF7FEFF 		bl	Write_Command_Glcd
 494              	.LVL42:
 513:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 495              		.loc 1 513 0
 496 017e 2046     		mov	r0, r4
 497 0180 FFF7FEFF 		bl	Write_Data_Glcd
 498              	.LVL43:
 515:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 499              		.loc 1 515 0
 500 0184 4420     		movs	r0, #68
 501 0186 FFF7FEFF 		bl	Write_Command_Glcd
 502              	.LVL44:
 516:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 503              		.loc 1 516 0
 504 018a 04F11702 		add	r2, r4, #23
 505 018e 1302     		lsls	r3, r2, #8
 506 0190 03F47F40 		and	r0, r3, #65280
 507 0194 FFF7FEFF 		bl	Write_Data_Glcd
 508              	.LVL45:
 518:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 509              		.loc 1 518 0
 510 0198 4E20     		movs	r0, #78
 511 019a FFF7FEFF 		bl	Write_Command_Glcd
 512              	.LVL46:
 519:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 513              		.loc 1 519 0
 514 019e 3046     		mov	r0, r6
 515 01a0 FFF7FEFF 		bl	Write_Data_Glcd
 516              	.LVL47:
 521:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 517              		.loc 1 521 0
 518 01a4 4F20     		movs	r0, #79
 519 01a6 FFF7FEFF 		bl	Write_Command_Glcd
 520              	.LVL48:
 522:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 521              		.loc 1 522 0
 522 01aa 2046     		mov	r0, r4
 523 01ac FFF7FEFF 		bl	Write_Data_Glcd
 524              	.LVL49:
 524:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 525              		.loc 1 524 0
 526 01b0 2220     		movs	r0, #34
 527 01b2 FFF7FEFF 		bl	Write_Command_Glcd
 528              	.LVL50:
 528:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 529              		.loc 1 528 0
 530 01b6 FFF723FF 		bl	wr_dat_start
 531              	.LVL51:
 526:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 532              		.loc 1 526 0
 533 01ba 05FB08F6 		mul	r6, r5, r8
 534 01be 4FEAA628 		asr	r8, r6, #10
 535              	.LVL52:
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 536              		.loc 1 529 0
 537 01c2 0026     		movs	r6, #0
 538              	.LVL53:
 539              	.L35:
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 540              		.loc 1 529 0 is_stmt 0 discriminator 1
 541 01c4 B742     		cmp	r7, r6
 542 01c6 10D0     		beq	.L42
 543              	.L40:
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 544              		.loc 1 529 0
 545 01c8 0024     		movs	r4, #0
 546              	.L39:
 547              	.LVL54:
 531:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 548              		.loc 1 531 0 is_stmt 1 discriminator 1
 549 01ca A542     		cmp	r5, r4
 550 01cc 0BDD     		ble	.L43
 551              	.L38:
 533:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 552              		.loc 1 533 0
 553 01ce 1FFA88F0 		uxth	r0, r8
 554 01d2 8442     		cmp	r4, r0
 535:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 555              		.loc 1 535 0
 556 01d4 D4BF     		ite	le
 557 01d6 0748     		ldrle	r0, .L44
 539:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 558              		.loc 1 539 0
 559 01d8 0748     		ldrgt	r0, .L44+4
 531:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 560              		.loc 1 531 0
 561 01da 0134     		adds	r4, r4, #1
 562              	.LVL55:
 539:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 563              		.loc 1 539 0
 564 01dc 0188     		ldrh	r1, [r0, #0]
 565 01de 88B2     		uxth	r0, r1
 566 01e0 FFF722FF 		bl	wr_dat_only
 567              	.LVL56:
 568 01e4 F1E7     		b	.L39
 569              	.L43:
 570 01e6 0136     		adds	r6, r6, #1
 571 01e8 ECE7     		b	.L35
 572              	.LVL57:
 573              	.L42:
 544:../Source Files/lpc_ssp_glcd.c **** }
 574              		.loc 1 544 0
 575 01ea BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 543:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 576              		.loc 1 543 0
 577 01ee FFF715BF 		b	wr_dat_stop
 578              	.LVL58:
 579              	.L45:
 580 01f2 00BF     		.align	2
 581              	.L44:
 582 01f4 00000000 		.word	.LANCHOR1
 583 01f8 00000000 		.word	.LANCHOR0
 584              		.cfi_endproc
 585              	.LFE73:
 587              		.align	1
 588              		.global	GLCD_Draw_Char
 589              		.thumb
 590              		.thumb_func
 592              	GLCD_Draw_Char:
 593              	.LFB69:
 406:../Source Files/lpc_ssp_glcd.c **** {
 594              		.loc 1 406 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              	.LVL59:
 599 01fc F8B5     		push	{r3, r4, r5, r6, r7, lr}
 600              	.LCFI8:
 601              		.cfi_def_cfa_offset 24
 602              		.cfi_offset 3, -24
 603              		.cfi_offset 4, -20
 604              		.cfi_offset 5, -16
 605              		.cfi_offset 6, -12
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 409:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 608              		.loc 1 409 0
 609 01fe A0F11005 		sub	r5, r0, #16
 610 0202 ADB2     		uxth	r5, r5
 611              	.LVL60:
 406:../Source Files/lpc_ssp_glcd.c **** {
 612              		.loc 1 406 0
 613 0204 0646     		mov	r6, r0
 411:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 614              		.loc 1 411 0
 615 0206 4520     		movs	r0, #69
 406:../Source Files/lpc_ssp_glcd.c **** {
 616              		.loc 1 406 0
 617 0208 0C46     		mov	r4, r1
 618 020a 1746     		mov	r7, r2
 411:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 619              		.loc 1 411 0
 620 020c FFF7FEFF 		bl	Write_Command_Glcd
 621              	.LVL61:
 412:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 622              		.loc 1 412 0
 623 0210 2846     		mov	r0, r5
 624 0212 FFF7FEFF 		bl	Write_Data_Glcd
 625              	.LVL62:
 414:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 626              		.loc 1 414 0
 627 0216 4620     		movs	r0, #70
 628 0218 FFF7FEFF 		bl	Write_Command_Glcd
 629              	.LVL63:
 415:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 630              		.loc 1 415 0
 631 021c 701E     		subs	r0, r6, #1
 632 021e 80B2     		uxth	r0, r0
 633 0220 FFF7FEFF 		bl	Write_Data_Glcd
 634              	.LVL64:
 417:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 635              		.loc 1 417 0
 636 0224 4420     		movs	r0, #68
 637 0226 FFF7FEFF 		bl	Write_Command_Glcd
 638              	.LVL65:
 418:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 639              		.loc 1 418 0
 640 022a 2046     		mov	r0, r4
 641 022c FFF7FEFF 		bl	Write_Data_Glcd
 642              	.LVL66:
 420:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 643              		.loc 1 420 0
 644 0230 4420     		movs	r0, #68
 645 0232 FFF7FEFF 		bl	Write_Command_Glcd
 646              	.LVL67:
 421:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 647              		.loc 1 421 0
 648 0236 04F11701 		add	r1, r4, #23
 649 023a 0A02     		lsls	r2, r1, #8
 650 023c 02F47F40 		and	r0, r2, #65280
 651 0240 FFF7FEFF 		bl	Write_Data_Glcd
 652              	.LVL68:
 423:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 653              		.loc 1 423 0
 654 0244 4E20     		movs	r0, #78
 655 0246 FFF7FEFF 		bl	Write_Command_Glcd
 656              	.LVL69:
 424:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 657              		.loc 1 424 0
 658 024a 2846     		mov	r0, r5
 659 024c FFF7FEFF 		bl	Write_Data_Glcd
 660              	.LVL70:
 426:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 661              		.loc 1 426 0
 662 0250 4F20     		movs	r0, #79
 663 0252 FFF7FEFF 		bl	Write_Command_Glcd
 664              	.LVL71:
 427:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 665              		.loc 1 427 0
 666 0256 2046     		mov	r0, r4
 667 0258 FFF7FEFF 		bl	Write_Data_Glcd
 668              	.LVL72:
 429:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 669              		.loc 1 429 0
 670 025c 2220     		movs	r0, #34
 671 025e FFF7FEFF 		bl	Write_Command_Glcd
 672              	.LVL73:
 431:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 673              		.loc 1 431 0
 674 0262 FFF7CDFE 		bl	wr_dat_start
 675              	.LVL74:
 676 0266 0025     		movs	r5, #0
 677              	.LVL75:
 678              	.L47:
 406:../Source Files/lpc_ssp_glcd.c **** {
 679              		.loc 1 406 0 discriminator 1
 680 0268 0024     		movs	r4, #0
 681              	.LVL76:
 682              	.L50:
 436:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 683              		.loc 1 436 0
 684 026a 7B5B     		ldrh	r3, [r7, r5]
 685 026c 43FA04F3 		asr	r3, r3, r4
 686 0270 D807     		lsls	r0, r3, #31
 438:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 687              		.loc 1 438 0
 688 0272 54BF     		ite	pl
 689 0274 0748     		ldrpl	r0, .L54
 442:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 690              		.loc 1 442 0
 691 0276 0848     		ldrmi	r0, .L54+4
 434:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 692              		.loc 1 434 0
 693 0278 0134     		adds	r4, r4, #1
 442:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 694              		.loc 1 442 0
 695 027a 0188     		ldrh	r1, [r0, #0]
 696 027c 88B2     		uxth	r0, r1
 697 027e FFF7D3FE 		bl	wr_dat_only
 698              	.LVL77:
 434:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 699              		.loc 1 434 0
 700 0282 102C     		cmp	r4, #16
 701 0284 F1D1     		bne	.L50
 702 0286 0235     		adds	r5, r5, #2
 432:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 703              		.loc 1 432 0
 704 0288 302D     		cmp	r5, #48
 705 028a EDD1     		bne	.L47
 706              	.L51:
 448:../Source Files/lpc_ssp_glcd.c **** }
 707              		.loc 1 448 0
 708 028c BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 447:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 709              		.loc 1 447 0
 710 0290 FFF7C4BE 		b	wr_dat_stop
 711              	.LVL78:
 712              	.L55:
 713              		.align	2
 714              	.L54:
 715 0294 00000000 		.word	.LANCHOR1
 716 0298 00000000 		.word	.LANCHOR0
 717              		.cfi_endproc
 718              	.LFE69:
 720              		.align	1
 721              		.global	GLCD_Display_Char
 722              		.thumb
 723              		.thumb_func
 725              	GLCD_Display_Char:
 726              	.LFB70:
 459:../Source Files/lpc_ssp_glcd.c **** {
 727              		.loc 1 459 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              	.LVL79:
 460:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 732              		.loc 1 460 0
 733 029c 203A     		subs	r2, r2, #32
 734              	.LVL80:
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 735              		.loc 1 461 0
 736 029e 1823     		movs	r3, #24
 737 02a0 D2B2     		uxtb	r2, r2
 738 02a2 5843     		muls	r0, r3, r0
 739              	.LVL81:
 459:../Source Files/lpc_ssp_glcd.c **** {
 740              		.loc 1 459 0
 741 02a4 10B5     		push	{r4, lr}
 742              	.LCFI9:
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 4, -8
 745              		.cfi_offset 14, -4
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 746              		.loc 1 461 0
 747 02a6 5343     		muls	r3, r2, r3
 748 02a8 0901     		lsls	r1, r1, #4
 749              	.LVL82:
 750 02aa 054A     		ldr	r2, .L57
 751 02ac 8CB2     		uxth	r4, r1
 752 02ae 02EB4302 		add	r2, r2, r3, lsl #1
 753 02b2 81B2     		uxth	r1, r0
 754 02b4 2046     		mov	r0, r4
 462:../Source Files/lpc_ssp_glcd.c **** }
 755              		.loc 1 462 0
 756 02b6 BDE81040 		pop	{r4, lr}
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 757              		.loc 1 461 0
 758 02ba FFF7FEBF 		b	GLCD_Draw_Char
 759              	.LVL83:
 760              	.L58:
 761 02be 00BF     		.align	2
 762              	.L57:
 763 02c0 00000000 		.word	.LANCHOR2
 764              		.cfi_endproc
 765              	.LFE70:
 767              		.align	1
 768              		.global	GLCD_PutPixel
 769              		.thumb
 770              		.thumb_func
 772              	GLCD_PutPixel:
 773              	.LFB62:
 297:../Source Files/lpc_ssp_glcd.c **** {
 774              		.loc 1 297 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              	.LVL84:
 779 02c4 70B5     		push	{r4, r5, r6, lr}
 780              	.LCFI10:
 781              		.cfi_def_cfa_offset 16
 782              		.cfi_offset 4, -16
 783              		.cfi_offset 5, -12
 784              		.cfi_offset 6, -8
 785              		.cfi_offset 14, -4
 297:../Source Files/lpc_ssp_glcd.c **** {
 786              		.loc 1 297 0
 787 02c6 0446     		mov	r4, r0
 298:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 788              		.loc 1 298 0
 789 02c8 4E20     		movs	r0, #78
 790              	.LVL85:
 297:../Source Files/lpc_ssp_glcd.c **** {
 791              		.loc 1 297 0
 792 02ca 0D46     		mov	r5, r1
 793 02cc 1646     		mov	r6, r2
 298:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 794              		.loc 1 298 0
 795 02ce FFF7FEFF 		bl	Write_Command_Glcd
 796              	.LVL86:
 299:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 797              		.loc 1 299 0
 798 02d2 2046     		mov	r0, r4
 799 02d4 FFF7FEFF 		bl	Write_Data_Glcd
 800              	.LVL87:
 301:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 801              		.loc 1 301 0
 802 02d8 4F20     		movs	r0, #79
 803 02da FFF7FEFF 		bl	Write_Command_Glcd
 804              	.LVL88:
 302:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 805              		.loc 1 302 0
 806 02de 2846     		mov	r0, r5
 807 02e0 FFF7FEFF 		bl	Write_Data_Glcd
 808              	.LVL89:
 304:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 809              		.loc 1 304 0
 810 02e4 2220     		movs	r0, #34
 811 02e6 FFF7FEFF 		bl	Write_Command_Glcd
 812              	.LVL90:
 305:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 813              		.loc 1 305 0
 814 02ea 3046     		mov	r0, r6
 306:../Source Files/lpc_ssp_glcd.c **** }
 815              		.loc 1 306 0
 816 02ec BDE87040 		pop	{r4, r5, r6, lr}
 305:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 817              		.loc 1 305 0
 818 02f0 FFF7FEBF 		b	Write_Data_Glcd
 819              	.LVL91:
 820              		.cfi_endproc
 821              	.LFE62:
 823              		.align	1
 824              		.global	GLCD_Text
 825              		.thumb
 826              		.thumb_func
 828              	GLCD_Text:
 829              	.LFB81:
1022:../Source Files/lpc_ssp_glcd.c **** {
 830              		.loc 1 1022 0
 831              		.cfi_startproc
 832              		@ args = 16, pretend = 0, frame = 56
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834              	.LVL92:
 835 02f4 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 836              	.LCFI11:
 837              		.cfi_def_cfa_offset 36
 838              		.cfi_offset 4, -36
 839              		.cfi_offset 5, -32
 840              		.cfi_offset 6, -28
 841              		.cfi_offset 7, -24
 842              		.cfi_offset 8, -20
 843              		.cfi_offset 9, -16
 844              		.cfi_offset 10, -12
 845              		.cfi_offset 11, -8
 846              		.cfi_offset 14, -4
 847 02f8 8FB0     		sub	sp, sp, #60
 848              	.LCFI12:
 849              		.cfi_def_cfa_offset 96
 850 02fa 00AF     		add	r7, sp, #0
 851              	.LCFI13:
 852              		.cfi_def_cfa_register 7
1022:../Source Files/lpc_ssp_glcd.c **** {
 853              		.loc 1 1022 0
 854 02fc 1C46     		mov	r4, r3
 855              	.LVL93:
 856 02fe 97F96880 		ldrsb	r8, [r7, #104]
 857 0302 B7F86C30 		ldrh	r3, [r7, #108]
 858              	.LVL94:
 859 0306 0546     		mov	r5, r0
 860 0308 FB60     		str	r3, [r7, #12]
 861              	.LBB10:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 862              		.loc 1 1033 0
 863 030a 1FFA88F3 		uxth	r3, r8
 864              	.LBE10:
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 865              		.loc 1 1024 0
 866 030e E01D     		adds	r0, r4, #7
 867              	.LVL95:
 868              	.LBB11:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 869              		.loc 1 1033 0
 870 0310 3B63     		str	r3, [r7, #48]
 871 0312 6343     		muls	r3, r4, r3
 872              	.LBE11:
1022:../Source Files/lpc_ssp_glcd.c **** {
 873              		.loc 1 1022 0
 874 0314 F962     		str	r1, [r7, #44]
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 875              		.loc 1 1024 0
 876 0316 00F4FC71 		and	r1, r0, #504
 877              	.LVL96:
 878              	.LBB12:
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 879              		.loc 1 1030 0
 880 031a 08FB04F0 		mul	r0, r8, r4
 881              	.LBE12:
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 882              		.loc 1 1024 0
 883 031e ADEB010D 		sub	sp, sp, r1
 884              	.LBB13:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 885              		.loc 1 1033 0
 886 0322 591C     		adds	r1, r3, #1
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 887              		.loc 1 1030 0
 888 0324 3862     		str	r0, [r7, #32]
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 889              		.loc 1 1033 0
 890 0326 88B2     		uxth	r0, r1
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 891              		.loc 1 1037 0
 892 0328 97F86010 		ldrb	r1, [r7, #96]	@ zero_extendqisi2
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 893              		.loc 1 1033 0
 894 032c F861     		str	r0, [r7, #28]
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 895              		.loc 1 1037 0
 896 032e 08FB01F0 		mul	r0, r8, r1
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 897              		.loc 1 1021 0
 898 0332 013A     		subs	r2, r2, #1
 899              	.LVL97:
 900 0334 9BB2     		uxth	r3, r3
 901              	.LBE13:
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 902              		.loc 1 1024 0
 903 0336 C7F824D0 		str	sp, [r7, #36]
 904              	.LVL98:
 905              	.LBB14:
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 906              		.loc 1 1037 0
 907 033a B861     		str	r0, [r7, #24]
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 908              		.loc 1 1021 0
 909 033c BA62     		str	r2, [r7, #40]
 910 033e 7B61     		str	r3, [r7, #20]
 911              	.LVL99:
 912              	.L61:
 913              	.LBE14:
1026:../Source Files/lpc_ssp_glcd.c ****    for(i=0; textptr[i] != '\0'; ++i, ++x) // Loop through the passed string
 914              		.loc 1 1026 0 discriminator 1
 915 0340 B96A     		ldr	r1, [r7, #40]
 916 0342 11F8010F 		ldrb	r0, [r1, #1]!	@ zero_extendqisi2
 917 0346 B962     		str	r1, [r7, #40]
 918 0348 0028     		cmp	r0, #0
 919 034a 63D0     		beq	.L73
 920              	.L70:
 921              	.LBB15:
1028:../Source Files/lpc_ssp_glcd.c ****       memcpy(pixelData, font[textptr[i]-' '], row);
 922              		.loc 1 1028 0
 923 034c 46B2     		sxtb	r6, r0
 924 034e 7B6E     		ldr	r3, [r7, #100]
 925 0350 A6F12002 		sub	r2, r6, #32
 926 0354 04FB0231 		mla	r1, r4, r2, r3
 927 0358 786A     		ldr	r0, [r7, #36]
 928 035a 2246     		mov	r2, r4
 929 035c FFF7FEFF 		bl	memcpy
 930              	.LVL100:
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 931              		.loc 1 1030 0
 932 0360 396A     		ldr	r1, [r7, #32]
 933 0362 6818     		adds	r0, r5, r1
 934 0364 B0F5A07F 		cmp	r0, #320
 935 0368 05DB     		blt	.L62
 936              	.LVL101:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 937              		.loc 1 1033 0
 938 036a FD69     		ldr	r5, [r7, #28]
 939 036c FE6A     		ldr	r6, [r7, #44]
 940 036e AA19     		adds	r2, r5, r6
 941 0370 13B2     		sxth	r3, r2
 942 0372 FB62     		str	r3, [r7, #44]
1032:../Source Files/lpc_ssp_glcd.c ****          x = 0;                           // Set x at far left position
 943              		.loc 1 1032 0
 944 0374 0025     		movs	r5, #0
 945              	.LVL102:
 946              	.L62:
1035:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
 947              		.loc 1 1035 0
 948 0376 7D63     		str	r5, [r7, #52]
 949 0378 0026     		movs	r6, #0
 950              	.LVL103:
 951              	.L63:
1035:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
 952              		.loc 1 1035 0 is_stmt 0 discriminator 1
 953 037a A642     		cmp	r6, r4
 954 037c 45DA     		bge	.L69
 955 037e FA6A     		ldr	r2, [r7, #44]
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 956              		.loc 1 1021 0 is_stmt 1
 957 0380 4FF00009 		mov	r9, #0
 958 0384 1FFA82FC 		uxth	ip, r2
 959              	.L65:
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 960              		.loc 1 1037 0 discriminator 1
 961 0388 BB69     		ldr	r3, [r7, #24]
 962 038a 9945     		cmp	r9, r3
 963 038c 36DA     		bge	.L74
 964              	.L68:
1039:../Source Files/lpc_ssp_glcd.c ****             if(bit_test(pixelData[j], k)) // Check if the pixel should be set
 965              		.loc 1 1039 0
 966 038e 786A     		ldr	r0, [r7, #36]
 967 0390 8157     		ldrsb	r1, [r0, r6]
 968 0392 41FA09F2 		asr	r2, r1, r9
 969 0396 D207     		lsls	r2, r2, #31
 970 0398 07D4     		bmi	.L71
 971              	.L67:
 972 039a 396B     		ldr	r1, [r7, #48]
 973 039c 09F10109 		add	r9, r9, #1
 974 03a0 0CEB0102 		add	r2, ip, r1
 975 03a4 1FFA82FC 		uxth	ip, r2
 976 03a8 EEE7     		b	.L65
 977              	.L71:
 978 03aa 4FF0000B 		mov	fp, #0
 979              	.L64:
 980              	.LVL104:
1041:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
 981              		.loc 1 1041 0 discriminator 1
 982 03ae 0FFA8BF3 		sxth	r3, fp
 983 03b2 1FFA88F0 		uxth	r0, r8
 984 03b6 9845     		cmp	r8, r3
 985 03b8 3861     		str	r0, [r7, #16]
 986 03ba EEDD     		ble	.L67
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 987              		.loc 1 1021 0
 988 03bc 0CEB0B03 		add	r3, ip, fp
 989 03c0 9BB2     		uxth	r3, r3
 990 03c2 4FF0000A 		mov	sl, #0
 991              	.L66:
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 992              		.loc 1 1021 0 is_stmt 0 discriminator 2
 993 03c6 786B     		ldr	r0, [r7, #52]
1045:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
 994              		.loc 1 1045 0 is_stmt 1 discriminator 2
 995 03c8 FA68     		ldr	r2, [r7, #12]
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 996              		.loc 1 1021 0 discriminator 2
 997 03ca 0AEB0001 		add	r1, sl, r0
1045:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
 998              		.loc 1 1045 0 discriminator 2
 999 03ce 88B2     		uxth	r0, r1
 1000 03d0 1946     		mov	r1, r3
 1001 03d2 BB60     		str	r3, [r7, #8]
 1002 03d4 C7F804C0 		str	ip, [r7, #4]
 1003 03d8 FFF7FEFF 		bl	GLCD_PutPixel
 1004              	.LVL105:
1043:../Source Files/lpc_ssp_glcd.c ****                   for(m=0; m<size; ++m)
 1005              		.loc 1 1043 0 discriminator 2
 1006 03dc 3A69     		ldr	r2, [r7, #16]
 1007 03de 0AF1010A 		add	sl, sl, #1
 1008 03e2 0FFA8AF3 		sxth	r3, sl
 1009 03e6 10B2     		sxth	r0, r2
 1010 03e8 8342     		cmp	r3, r0
 1011 03ea D7F804C0 		ldr	ip, [r7, #4]
 1012 03ee BB68     		ldr	r3, [r7, #8]
 1013 03f0 E9DB     		blt	.L66
1041:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
 1014              		.loc 1 1041 0
 1015 03f2 0BF1010B 		add	fp, fp, #1
 1016              	.LVL106:
 1017 03f6 1FFA8BFB 		uxth	fp, fp
 1018              	.LVL107:
 1019 03fa D8E7     		b	.L64
 1020              	.LVL108:
 1021              	.L74:
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 1022              		.loc 1 1021 0
 1023 03fc 796B     		ldr	r1, [r7, #52]
 1024 03fe 386B     		ldr	r0, [r7, #48]
 1025 0400 0136     		adds	r6, r6, #1
 1026 0402 4218     		adds	r2, r0, r1
 1027 0404 13B2     		sxth	r3, r2
 1028 0406 7B63     		str	r3, [r7, #52]
 1029 0408 B7E7     		b	.L63
 1030              	.L69:
 1031 040a 7969     		ldr	r1, [r7, #20]
 1032 040c 6818     		adds	r0, r5, r1
 1033              	.LBE15:
1026:../Source Files/lpc_ssp_glcd.c ****    for(i=0; textptr[i] != '\0'; ++i, ++x) // Loop through the passed string
 1034              		.loc 1 1026 0
 1035 040e 451C     		adds	r5, r0, #1
 1036 0410 2DB2     		sxth	r5, r5
 1037              	.LVL109:
 1038 0412 95E7     		b	.L61
 1039              	.L73:
1052:../Source Files/lpc_ssp_glcd.c **** }
 1040              		.loc 1 1052 0
 1041 0414 07F13C07 		add	r7, r7, #60
 1042 0418 BD46     		mov	sp, r7
 1043 041a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1044              		.cfi_endproc
 1045              	.LFE81:
 1047              		.align	1
 1048              		.global	GLCD_Line
 1049              		.thumb
 1050              		.thumb_func
 1052              	GLCD_Line:
 1053              	.LFB76:
 617:../Source Files/lpc_ssp_glcd.c **** {
 1054              		.loc 1 617 0
 1055              		.cfi_startproc
 1056              		@ args = 4, pretend = 0, frame = 16
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              	.LVL110:
 1059 041e 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1060              	.LCFI14:
 1061              		.cfi_def_cfa_offset 36
 1062              		.cfi_offset 4, -36
 1063              		.cfi_offset 5, -32
 1064              		.cfi_offset 6, -28
 1065              		.cfi_offset 7, -24
 1066              		.cfi_offset 8, -20
 1067              		.cfi_offset 9, -16
 1068              		.cfi_offset 10, -12
 1069              		.cfi_offset 11, -8
 1070              		.cfi_offset 14, -4
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1071              		.loc 1 621 0
 1072 0422 141A     		subs	r4, r2, r0
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1073              		.loc 1 622 0
 1074 0424 5E1A     		subs	r6, r3, r1
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1075              		.loc 1 621 0
 1076 0426 24B2     		sxth	r4, r4
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1077              		.loc 1 622 0
 1078 0428 36B2     		sxth	r6, r6
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1079              		.loc 1 621 0
 1080 042a 002C     		cmp	r4, #0
 1081 042c B8BF     		it	lt
 1082 042e 6442     		rsblt	r4, r4, #0
 1083              	.LVL111:
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1084              		.loc 1 622 0
 1085 0430 002E     		cmp	r6, #0
 1086 0432 B8BF     		it	lt
 1087 0434 7642     		rsblt	r6, r6, #0
 1088              	.LVL112:
 627:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 1089              		.loc 1 627 0
 1090 0436 4FF6FF75 		movw	r5, #65535
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1091              		.loc 1 636 0
 1092 043a 24B2     		sxth	r4, r4
 1093              	.LVL113:
 1094 043c 36B2     		sxth	r6, r6
 1095              	.LVL114:
 617:../Source Files/lpc_ssp_glcd.c **** {
 1096              		.loc 1 617 0
 1097 043e 85B0     		sub	sp, sp, #20
 1098              	.LCFI15:
 1099              		.cfi_def_cfa_offset 56
 627:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 1100              		.loc 1 627 0
 1101 0440 9042     		cmp	r0, r2
 1102 0442 CCBF     		ite	gt
 1103 0444 2F46     		movgt	r7, r5
 1104 0446 0127     		movle	r7, #1
 1105              	.LVL115:
 631:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 1106              		.loc 1 631 0
 1107 0448 9942     		cmp	r1, r3
 1108 044a CCBF     		ite	gt
 1109 044c A846     		movgt	r8, r5
 1110 044e 4FF00108 		movle	r8, #1
 1111              	.LVL116:
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1112              		.loc 1 636 0
 1113 0452 B442     		cmp	r4, r6
 617:../Source Files/lpc_ssp_glcd.c **** {
 1114              		.loc 1 617 0
 1115 0454 BDF83890 		ldrh	r9, [sp, #56]
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1116              		.loc 1 636 0
 1117 0458 29DB     		blt	.L78
 638:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 1118              		.loc 1 638 0
 1119 045a 4FEA460B 		lsl	fp, r6, #1
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1120              		.loc 1 651 0
 1121 045e 361B     		subs	r6, r6, r4
 1122 0460 7300     		lsls	r3, r6, #1
 1123              	.LVL117:
 638:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 1124              		.loc 1 638 0
 1125 0462 C4EB0B05 		rsb	r5, r4, fp
 1126              	.LVL118:
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1127              		.loc 1 651 0
 1128 0466 0393     		str	r3, [sp, #12]
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1129              		.loc 1 640 0
 1130 0468 8A46     		mov	sl, r1
 1131 046a 0026     		movs	r6, #0
 1132              	.LVL119:
 1133              	.L79:
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1134              		.loc 1 640 0 is_stmt 0 discriminator 1
 1135 046c A642     		cmp	r6, r4
 1136 046e 47DC     		bgt	.L75
 1137              	.L82:
 642:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 1138              		.loc 1 642 0 is_stmt 1
 1139 0470 1FFA8AF3 		uxth	r3, sl
 1140 0474 1FFA80FE 		uxth	lr, r0
 1141 0478 1946     		mov	r1, r3
 1142 047a 7046     		mov	r0, lr
 1143              	.LVL120:
 1144 047c 4A46     		mov	r2, r9
 1145 047e 0193     		str	r3, [sp, #4]
 1146 0480 CDF808E0 		str	lr, [sp, #8]
 1147 0484 FFF7FEFF 		bl	GLCD_PutPixel
 1148              	.LVL121:
 1149 0488 DDF808C0 		ldr	ip, [sp, #8]
 644:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 1150              		.loc 1 644 0
 1151 048c 002D     		cmp	r5, #0
 1152 048e 0CEB0701 		add	r1, ip, r7
 1153 0492 019B     		ldr	r3, [sp, #4]
 1154 0494 02DA     		bge	.L80
 646:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 1155              		.loc 1 646 0
 1156 0496 5D44     		add	r5, r5, fp
 1157              	.LVL122:
 647:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1158              		.loc 1 647 0
 1159 0498 88B2     		uxth	r0, r1
 1160              	.LVL123:
 1161 049a 06E0     		b	.L81
 1162              	.LVL124:
 1163              	.L80:
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1164              		.loc 1 651 0
 1165 049c 0398     		ldr	r0, [sp, #12]
 653:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1166              		.loc 1 653 0
 1167 049e 03EB080A 		add	sl, r3, r8
 1168              	.LVL125:
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1169              		.loc 1 651 0
 1170 04a2 2D18     		adds	r5, r5, r0
 1171              	.LVL126:
 653:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1172              		.loc 1 653 0
 1173 04a4 1FFA8AFA 		uxth	sl, sl
 652:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1174              		.loc 1 652 0
 1175 04a8 88B2     		uxth	r0, r1
 1176              	.LVL127:
 1177              	.L81:
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1178              		.loc 1 640 0
 1179 04aa 0136     		adds	r6, r6, #1
 1180              	.LVL128:
 1181 04ac DEE7     		b	.L79
 1182              	.LVL129:
 1183              	.L78:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1184              		.loc 1 672 0
 1185 04ae A21B     		subs	r2, r4, r6
 1186              	.LVL130:
 659:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 1187              		.loc 1 659 0
 1188 04b0 4FEA440A 		lsl	sl, r4, #1
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1189              		.loc 1 672 0
 1190 04b4 5300     		lsls	r3, r2, #1
 1191              	.LVL131:
 659:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 1192              		.loc 1 659 0
 1193 04b6 C6EB0A05 		rsb	r5, r6, sl
 1194              	.LVL132:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1195              		.loc 1 672 0
 1196 04ba 0393     		str	r3, [sp, #12]
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1197              		.loc 1 661 0
 1198 04bc 8346     		mov	fp, r0
 1199 04be 0024     		movs	r4, #0
 1200              	.LVL133:
 1201              	.L83:
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1202              		.loc 1 661 0 is_stmt 0 discriminator 1
 1203 04c0 B442     		cmp	r4, r6
 1204 04c2 1DDC     		bgt	.L75
 1205              	.L86:
 663:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 1206              		.loc 1 663 0 is_stmt 1
 1207 04c4 1FFA81FC 		uxth	ip, r1
 1208 04c8 1FFA8BF3 		uxth	r3, fp
 1209 04cc 6146     		mov	r1, ip
 1210              	.LVL134:
 1211 04ce 1846     		mov	r0, r3
 1212 04d0 4A46     		mov	r2, r9
 1213 04d2 CDF808C0 		str	ip, [sp, #8]
 1214 04d6 0193     		str	r3, [sp, #4]
 1215 04d8 FFF7FEFF 		bl	GLCD_PutPixel
 1216              	.LVL135:
 1217 04dc DDF808C0 		ldr	ip, [sp, #8]
 665:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 1218              		.loc 1 665 0
 1219 04e0 002D     		cmp	r5, #0
 1220 04e2 0CEB0801 		add	r1, ip, r8
 1221 04e6 0198     		ldr	r0, [sp, #4]
 1222 04e8 01DA     		bge	.L84
 667:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 1223              		.loc 1 667 0
 1224 04ea 5544     		add	r5, r5, sl
 1225              	.LVL136:
 1226 04ec 05E0     		b	.L90
 1227              	.L84:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1228              		.loc 1 672 0
 1229 04ee 039A     		ldr	r2, [sp, #12]
 673:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1230              		.loc 1 673 0
 1231 04f0 00EB070B 		add	fp, r0, r7
 1232              	.LVL137:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1233              		.loc 1 672 0
 1234 04f4 AD18     		adds	r5, r5, r2
 1235              	.LVL138:
 673:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1236              		.loc 1 673 0
 1237 04f6 1FFA8BFB 		uxth	fp, fp
 1238              	.L90:
 1239              	.LVL139:
 674:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1240              		.loc 1 674 0
 1241 04fa 89B2     		uxth	r1, r1
 1242              	.LVL140:
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1243              		.loc 1 661 0
 1244 04fc 0134     		adds	r4, r4, #1
 1245              	.LVL141:
 1246 04fe DFE7     		b	.L83
 1247              	.LVL142:
 1248              	.L75:
 678:../Source Files/lpc_ssp_glcd.c **** }
 1249              		.loc 1 678 0
 1250 0500 05B0     		add	sp, sp, #20
 1251 0502 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1252              		.cfi_endproc
 1253              	.LFE76:
 1255              		.align	1
 1256              		.global	GLCD_Triangle
 1257              		.thumb
 1258              		.thumb_func
 1260              	GLCD_Triangle:
 1261              	.LFB79:
 794:../Source Files/lpc_ssp_glcd.c **** {
 1262              		.loc 1 794 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 48
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 1266              	.LVL143:
 1267 0506 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1268              	.LCFI16:
 1269              		.cfi_def_cfa_offset 36
 1270              		.cfi_offset 4, -36
 1271              		.cfi_offset 5, -32
 1272              		.cfi_offset 6, -28
 1273              		.cfi_offset 7, -24
 1274              		.cfi_offset 8, -20
 1275              		.cfi_offset 9, -16
 1276              		.cfi_offset 10, -12
 1277              		.cfi_offset 11, -8
 1278              		.cfi_offset 14, -4
 1279 050a 8FB0     		sub	sp, sp, #60
 1280              	.LCFI17:
 1281              		.cfi_def_cfa_offset 96
 794:../Source Files/lpc_ssp_glcd.c **** {
 1282              		.loc 1 794 0
 1283 050c 0693     		str	r3, [sp, #24]
 795:../Source Files/lpc_ssp_glcd.c ****     if(cfg->fill)
 1284              		.loc 1 795 0
 1285 050e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1286              	.LVL144:
 794:../Source Files/lpc_ssp_glcd.c **** {
 1287              		.loc 1 794 0
 1288 0510 0746     		mov	r7, r0
 1289 0512 0D46     		mov	r5, r1
 1290 0514 1646     		mov	r6, r2
 795:../Source Files/lpc_ssp_glcd.c ****     if(cfg->fill)
 1291              		.loc 1 795 0
 1292 0516 002B     		cmp	r3, #0
 1293 0518 00F03082 		beq	.L92
 1294              	.LVL145:
 1295              	.LBB16:
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 1296              		.loc 1 803 0
 1297 051c 4488     		ldrh	r4, [r0, #2]
 1298 051e 4A88     		ldrh	r2, [r1, #2]
 1299              	.LVL146:
 1300 0520 20B2     		sxth	r0, r4
 1301              	.LVL147:
 1302 0522 11B2     		sxth	r1, r2
 1303              	.LVL148:
 1304 0524 8842     		cmp	r0, r1
 1305 0526 14DD     		ble	.L93
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 1306              		.loc 1 803 0 is_stmt 0 discriminator 1
 1307 0528 82EA0403 		eor	r3, r2, r4
 1308 052c 7B80     		strh	r3, [r7, #2]	@ movhi
 1309 052e 6C88     		ldrh	r4, [r5, #2]
 1310 0530 2888     		ldrh	r0, [r5, #0]
 1311 0532 6340     		eors	r3, r3, r4
 1312 0534 6B80     		strh	r3, [r5, #2]	@ movhi
 1313 0536 7A88     		ldrh	r2, [r7, #2]
 1314 0538 3988     		ldrh	r1, [r7, #0]
 1315 053a 5340     		eors	r3, r3, r2
 1316 053c 7B80     		strh	r3, [r7, #2]	@ movhi
 1317 053e 80EA0103 		eor	r3, r0, r1
 1318 0542 9CB2     		uxth	r4, r3
 1319 0544 3C80     		strh	r4, [r7, #0]	@ movhi
 1320 0546 2A88     		ldrh	r2, [r5, #0]
 1321 0548 5440     		eors	r4, r4, r2
 1322 054a 2C80     		strh	r4, [r5, #0]	@ movhi
 1323 054c 3888     		ldrh	r0, [r7, #0]
 1324 054e 4440     		eors	r4, r4, r0
 1325 0550 3C80     		strh	r4, [r7, #0]	@ movhi
 1326              	.L93:
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 1327              		.loc 1 804 0 is_stmt 1
 1328 0552 7B88     		ldrh	r3, [r7, #2]
 1329 0554 7488     		ldrh	r4, [r6, #2]
 1330 0556 1AB2     		sxth	r2, r3
 1331 0558 21B2     		sxth	r1, r4
 1332 055a 8A42     		cmp	r2, r1
 1333 055c 14DD     		ble	.L94
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 1334              		.loc 1 804 0 is_stmt 0 discriminator 1
 1335 055e 84EA0300 		eor	r0, r4, r3
 1336 0562 7880     		strh	r0, [r7, #2]	@ movhi
 1337 0564 7388     		ldrh	r3, [r6, #2]
 1338 0566 3288     		ldrh	r2, [r6, #0]
 1339 0568 5840     		eors	r0, r0, r3
 1340 056a 7080     		strh	r0, [r6, #2]	@ movhi
 1341 056c 7C88     		ldrh	r4, [r7, #2]
 1342 056e 3988     		ldrh	r1, [r7, #0]
 1343 0570 6040     		eors	r0, r0, r4
 1344 0572 7880     		strh	r0, [r7, #2]	@ movhi
 1345 0574 82EA0100 		eor	r0, r2, r1
 1346 0578 83B2     		uxth	r3, r0
 1347 057a 3B80     		strh	r3, [r7, #0]	@ movhi
 1348 057c 3488     		ldrh	r4, [r6, #0]
 1349 057e 6340     		eors	r3, r3, r4
 1350 0580 3380     		strh	r3, [r6, #0]	@ movhi
 1351 0582 3A88     		ldrh	r2, [r7, #0]
 1352 0584 5340     		eors	r3, r3, r2
 1353 0586 3B80     		strh	r3, [r7, #0]	@ movhi
 1354              	.L94:
 805:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 1355              		.loc 1 805 0 is_stmt 1
 1356 0588 6B88     		ldrh	r3, [r5, #2]
 1357 058a 7488     		ldrh	r4, [r6, #2]
 1358 058c 18B2     		sxth	r0, r3
 1359 058e 21B2     		sxth	r1, r4
 1360 0590 8842     		cmp	r0, r1
 1361 0592 13DD     		ble	.L95
 805:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 1362              		.loc 1 805 0 is_stmt 0 discriminator 1
 1363 0594 6340     		eors	r3, r3, r4
 1364 0596 6B80     		strh	r3, [r5, #2]	@ movhi
 1365 0598 7288     		ldrh	r2, [r6, #2]
 1366 059a 3088     		ldrh	r0, [r6, #0]
 1367 059c 5340     		eors	r3, r3, r2
 1368 059e 7380     		strh	r3, [r6, #2]	@ movhi
 1369 05a0 6C88     		ldrh	r4, [r5, #2]
 1370 05a2 2988     		ldrh	r1, [r5, #0]
 1371 05a4 6340     		eors	r3, r3, r4
 1372 05a6 6B80     		strh	r3, [r5, #2]	@ movhi
 1373 05a8 80EA0103 		eor	r3, r0, r1
 1374 05ac 9CB2     		uxth	r4, r3
 1375 05ae 2C80     		strh	r4, [r5, #0]	@ movhi
 1376 05b0 3288     		ldrh	r2, [r6, #0]
 1377 05b2 5440     		eors	r4, r4, r2
 1378 05b4 3480     		strh	r4, [r6, #0]	@ movhi
 1379 05b6 2888     		ldrh	r0, [r5, #0]
 1380 05b8 4440     		eors	r4, r4, r0
 1381 05ba 2C80     		strh	r4, [r5, #0]	@ movhi
 1382              	.L95:
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1383              		.loc 1 807 0 is_stmt 1
 1384 05bc 3988     		ldrh	r1, [r7, #0]
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1385              		.loc 1 809 0
 1386 05be 2A88     		ldrh	r2, [r5, #0]
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1387              		.loc 1 807 0
 1388 05c0 8CB2     		uxth	r4, r1
 1389              	.LVL149:
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1390              		.loc 1 809 0
 1391 05c2 101B     		subs	r0, r2, r4
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1392              		.loc 1 807 0
 1393 05c4 7B88     		ldrh	r3, [r7, #2]
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1394              		.loc 1 809 0
 1395 05c6 82B2     		uxth	r2, r0
 1396 05c8 1FFA82F9 		uxth	r9, r2
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1397              		.loc 1 807 0
 1398 05cc 1FFA83F8 		uxth	r8, r3
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1399              		.loc 1 810 0
 1400 05d0 19F4004F 		tst	r9, #32768
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1401              		.loc 1 807 0
 1402 05d4 CDF81480 		str	r8, [sp, #20]
 1403              	.LVL150:
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1404              		.loc 1 810 0
 1405 05d8 08D0     		beq	.L136
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1406              		.loc 1 810 0 is_stmt 0 discriminator 1
 1407 05da C2F10009 		rsb	r9, r2, #0
 1408 05de 4FF6FF7C 		movw	ip, #65535
 1409 05e2 1FFA89F9 		uxth	r9, r9
 1410              	.LVL151:
 1411 05e6 CDF820C0 		str	ip, [sp, #32]
 1412 05ea 03E0     		b	.L96
 1413              	.LVL152:
 1414              	.L136:
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1415              		.loc 1 810 0
 1416 05ec 4FF0010A 		mov	sl, #1
 1417 05f0 CDF820A0 		str	sl, [sp, #32]
 1418              	.LVL153:
 1419              	.L96:
 811:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1420              		.loc 1 811 0 is_stmt 1
 1421 05f4 B5F802B0 		ldrh	fp, [r5, #2]
 1422 05f8 DDF81480 		ldr	r8, [sp, #20]
 1423 05fc C8EB0B00 		rsb	r0, r8, fp
 1424 0600 82B2     		uxth	r2, r0
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1425              		.loc 1 813 0
 1426 0602 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 811:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1427              		.loc 1 811 0
 1428 0604 0392     		str	r2, [sp, #12]
 1429              	.LVL154:
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1430              		.loc 1 813 0
 1431 0606 411A     		subs	r1, r0, r1
 1432              	.LVL155:
 1433 0608 4AB2     		sxtb	r2, r1
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1434              		.loc 1 814 0
 1435 060a 11B2     		sxth	r1, r2
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1436              		.loc 1 813 0
 1437 060c 1FFA82FA 		uxth	sl, r2
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1438              		.loc 1 814 0
 1439 0610 0029     		cmp	r1, #0
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1440              		.loc 1 813 0
 1441 0612 CDF810A0 		str	sl, [sp, #16]
 1442              	.LVL156:
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1443              		.loc 1 814 0
 1444 0616 07DA     		bge	.L137
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1445              		.loc 1 814 0 is_stmt 0 discriminator 1
 1446 0618 5242     		negs	r2, r2
 1447              	.LVL157:
 1448 061a 90B2     		uxth	r0, r2
 1449 061c 4FF6FF78 		movw	r8, #65535
 1450 0620 0490     		str	r0, [sp, #16]
 1451              	.LVL158:
 1452 0622 CDF82880 		str	r8, [sp, #40]
 1453 0626 03E0     		b	.L97
 1454              	.LVL159:
 1455              	.L137:
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1456              		.loc 1 814 0
 1457 0628 4FF0010C 		mov	ip, #1
 1458 062c CDF828C0 		str	ip, [sp, #40]
 1459              	.LVL160:
 1460              	.L97:
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1461              		.loc 1 815 0 is_stmt 1
 1462 0630 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1463              		.loc 1 817 0
 1464 0632 DDF80CC0 		ldr	ip, [sp, #12]
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1465              		.loc 1 815 0
 1466 0636 CA1A     		subs	r2, r1, r3
 1467 0638 51B2     		sxtb	r1, r2
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1468              		.loc 1 817 0
 1469 063a 0FFA8CF8 		sxth	r8, ip
 1470 063e 0FFA89F2 		sxth	r2, r9
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1471              		.loc 1 815 0
 1472 0642 1FFA81FA 		uxth	sl, r1
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1473              		.loc 1 817 0
 1474 0646 9045     		cmp	r8, r2
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1475              		.loc 1 815 0
 1476 0648 0846     		mov	r0, r1	@ movhi
 1477 064a CDF834A0 		str	sl, [sp, #52]
 1478              	.LVL161:
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1479              		.loc 1 817 0
 1480 064e 0FDD     		ble	.L138
 819:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 1481              		.loc 1 819 0
 1482 0650 DDF80CA0 		ldr	sl, [sp, #12]
 1483 0654 89EA0A09 		eor	r9, r9, sl
 1484              	.LVL162:
 1485 0658 89EA0A0C 		eor	ip, r9, sl
 1486 065c 1FFA8CF8 		uxth	r8, ip
 1487 0660 88EA0902 		eor	r2, r8, r9
 1488 0664 1FFA82F9 		uxth	r9, r2
 1489              	.LVL163:
 1490 0668 CDF80C80 		str	r8, [sp, #12]
 1491              	.LVL164:
 820:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1492              		.loc 1 820 0
 1493 066c 0122     		movs	r2, #1
 1494              	.LVL165:
 1495 066e 00E0     		b	.L159
 1496              	.LVL166:
 1497              	.L138:
 798:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 1498              		.loc 1 798 0
 1499 0670 0022     		movs	r2, #0
 1500              	.LVL167:
 1501              	.L159:
 822:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 1502              		.loc 1 822 0
 1503 0672 DDF810A0 		ldr	sl, [sp, #16]
 1504 0676 00B2     		sxth	r0, r0
 1505              	.LVL168:
 1506 0678 0FFA8AFC 		sxth	ip, sl
 1507 067c 6045     		cmp	r0, ip
 798:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 1508              		.loc 1 798 0
 1509 067e 0792     		str	r2, [sp, #28]
 1510              	.LVL169:
 822:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 1511              		.loc 1 822 0
 1512 0680 0DDD     		ble	.L139
 824:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 1513              		.loc 1 824 0
 1514 0682 8AEA0100 		eor	r0, sl, r1
 1515 0686 81B2     		uxth	r1, r0
 1516              	.LVL170:
 1517 0688 81EA0A08 		eor	r8, r1, sl
 1518 068c 88EA0100 		eor	r0, r8, r1
 1519              	.LVL171:
 1520 0690 81B2     		uxth	r1, r0
 1521              	.LVL172:
 825:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 1522              		.loc 1 825 0
 1523 0692 0120     		movs	r0, #1
 824:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 1524              		.loc 1 824 0
 1525 0694 CDF81080 		str	r8, [sp, #16]
 1526 0698 0D91     		str	r1, [sp, #52]
 1527              	.LVL173:
 825:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 1528              		.loc 1 825 0
 1529 069a 0990     		str	r0, [sp, #36]
 1530 069c 01E0     		b	.L99
 1531              	.LVL174:
 1532              	.L139:
 799:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 1533              		.loc 1 799 0
 1534 069e 0021     		movs	r1, #0
 1535              	.LVL175:
 1536 06a0 0991     		str	r1, [sp, #36]
 1537              	.LVL176:
 1538              	.L99:
 828:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 1539              		.loc 1 828 0
 1540 06a2 DDF810A0 		ldr	sl, [sp, #16]
 830:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 1541              		.loc 1 830 0
 1542 06a6 9B45     		cmp	fp, r3
 828:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 1543              		.loc 1 828 0
 1544 06a8 4AF34E01 		sbfx	r1, sl, #1, #15
 1545 06ac 1FFA81FC 		uxth	ip, r1
 1546              	.LVL177:
 830:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 1547              		.loc 1 830 0
 1548 06b0 00F09580 		beq	.L100
 831:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 1549              		.loc 1 831 0
 1550 06b4 49F34E03 		sbfx	r3, r9, #1, #15
 1551 06b8 1FFA83FA 		uxth	sl, r3
 1552              	.LVL178:
 1553              	.LBB17:
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1554              		.loc 1 807 0
 1555 06bc A046     		mov	r8, r4
 833:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 1556              		.loc 1 833 0
 1557 06be 4FF0000B 		mov	fp, #0
 1558              	.LVL179:
 1559              	.L101:
 833:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 1560              		.loc 1 833 0 is_stmt 0 discriminator 1
 1561 06c2 0FFA89F3 		sxth	r3, r9
 1562 06c6 9B45     		cmp	fp, r3
 1563 06c8 80F28980 		bge	.L100
 1564              	.L115:
 1565              	.LVL180:
 836:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1566              		.loc 1 836 0 is_stmt 1
 1567 06cc A045     		cmp	r8, r4
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1568              		.loc 1 839 0
 1569 06ce 4FF0000E 		mov	lr, #0
 836:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1570              		.loc 1 836 0
 1571 06d2 39BF     		ittee	cc
 1572 06d4 2246     		movcc	r2, r4
 1573 06d6 4146     		movcc	r1, r8
 1574 06d8 4246     		movcs	r2, r8
 1575 06da 2146     		movcs	r1, r4
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1576              		.loc 1 839 0
 1577 06dc CDF82CE0 		str	lr, [sp, #44]
 1578              	.LVL181:
 1579              	.L103:
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1580              		.loc 1 839 0 is_stmt 0 discriminator 1
 1581 06e0 9B45     		cmp	fp, r3
 1582 06e2 08DA     		bge	.L106
 1583              	.L109:
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1584              		.loc 1 842 0 is_stmt 1
 1585 06e4 0398     		ldr	r0, [sp, #12]
 841:../Source Files/lpc_ssp_glcd.c ****     			i++;
 1586              		.loc 1 841 0
 1587 06e6 0BF1010B 		add	fp, fp, #1
 1588              	.LVL182:
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1589              		.loc 1 842 0
 1590 06ea 8244     		add	sl, sl, r0
 1591              	.LVL183:
 841:../Source Files/lpc_ssp_glcd.c ****     			i++;
 1592              		.loc 1 841 0
 1593 06ec 5FFA8BFB 		uxtb	fp, fp
 1594              	.LVL184:
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1595              		.loc 1 842 0
 1596 06f0 1FFA8AFA 		uxth	sl, sl
 1597              	.LVL185:
 843:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1598              		.loc 1 843 0
 1599 06f4 0FE0     		b	.L104
 1600              	.LVL186:
 1601              	.L106:
 1602 06f6 0023     		movs	r3, #0
 1603 06f8 0C93     		str	r3, [sp, #48]
 1604 06fa 2DE0     		b	.L107
 1605              	.LVL187:
 1606              	.L108:
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1607              		.loc 1 846 0
 1608 06fc 0798     		ldr	r0, [sp, #28]
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1609              		.loc 1 793 0
 1610 06fe C9EB0A0A 		rsb	sl, r9, sl
 1611              	.LVL188:
 1612 0702 1FFA8AFA 		uxth	sl, sl
 1613              	.LVL189:
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1614              		.loc 1 846 0
 1615 0706 0028     		cmp	r0, #0
 1616 0708 F5D0     		beq	.L106
 1617              	.L105:
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1618              		.loc 1 846 0 is_stmt 0 discriminator 1
 1619 070a DDF820E0 		ldr	lr, [sp, #32]
 1620 070e 1FFA8EFE 		uxth	lr, lr
 1621 0712 CDF82CE0 		str	lr, [sp, #44]
 1622              	.LVL190:
 1623              	.L104:
 843:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1624              		.loc 1 843 0 is_stmt 1 discriminator 1
 1625 0716 9A45     		cmp	sl, r3
 1626 0718 F0DA     		bge	.L108
 849:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 1627              		.loc 1 849 0
 1628 071a 0798     		ldr	r0, [sp, #28]
 1629 071c 0028     		cmp	r0, #0
 1630 071e EAD1     		bne	.L106
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1631              		.loc 1 793 0
 1632 0720 DDF820E0 		ldr	lr, [sp, #32]
 1633 0724 F044     		add	r8, r8, lr
 1634              	.LVL191:
 1635 0726 1FFA88F8 		uxth	r8, r8
 1636              	.LVL192:
 1637 072a D9E7     		b	.L103
 1638              	.LVL193:
 1639              	.L112:
 1640 072c DDF810E0 		ldr	lr, [sp, #16]
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1641              		.loc 1 861 0
 1642 0730 0998     		ldr	r0, [sp, #36]
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1643              		.loc 1 793 0
 1644 0732 CEEB0C03 		rsb	r3, lr, ip
 1645 0736 1FFA83FC 		uxth	ip, r3
 1646              	.LVL194:
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1647              		.loc 1 861 0
 1648 073a 98B1     		cbz	r0, .L111
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1649              		.loc 1 861 0 is_stmt 0 discriminator 1
 1650 073c 0A98     		ldr	r0, [sp, #40]
 1651 073e 83B2     		uxth	r3, r0
 1652              	.LVL195:
 1653 0740 0C93     		str	r3, [sp, #48]
 1654              	.LVL196:
 1655              	.L110:
 858:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 1656              		.loc 1 858 0 is_stmt 1 discriminator 1
 1657 0742 DDF810E0 		ldr	lr, [sp, #16]
 1658 0746 0FFA8EF0 		sxth	r0, lr
 1659 074a 8445     		cmp	ip, r0
 1660 074c EEDA     		bge	.L112
 864:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 1661              		.loc 1 864 0
 1662 074e 099B     		ldr	r3, [sp, #36]
 1663 0750 43B9     		cbnz	r3, .L111
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1664              		.loc 1 793 0
 1665 0752 0A98     		ldr	r0, [sp, #40]
 1666 0754 2418     		adds	r4, r4, r0
 1667              	.LVL197:
 1668 0756 A4B2     		uxth	r4, r4
 1669              	.LVL198:
 1670              	.L107:
 857:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 1671              		.loc 1 857 0
 1672 0758 0D98     		ldr	r0, [sp, #52]
 1673 075a 0CEB0003 		add	r3, ip, r0
 1674 075e 1FFA83FC 		uxth	ip, r3
 1675              	.LVL199:
 858:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 1676              		.loc 1 858 0
 1677 0762 EEE7     		b	.L110
 1678              	.LVL200:
 1679              	.L111:
 870:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 1680              		.loc 1 870 0
 1681 0764 DDF814E0 		ldr	lr, [sp, #20]
 1682 0768 069B     		ldr	r3, [sp, #24]
 1683 076a 8845     		cmp	r8, r1
 1684 076c 38BF     		it	cc
 1685 076e 4146     		movcc	r1, r8
 1686 0770 9045     		cmp	r8, r2
 1687 0772 28BF     		it	cs
 1688 0774 4246     		movcs	r2, r8
 1689 0776 88B2     		uxth	r0, r1
 1690              	.LVL201:
 1691 0778 92B2     		uxth	r2, r2
 1692              	.LVL202:
 1693 077a 0FFA8EF1 		sxth	r1, lr
 1694 077e B3F804E0 		ldrh	lr, [r3, #4]
 1695 0782 A042     		cmp	r0, r4
 1696 0784 28BF     		it	cs
 1697 0786 2046     		movcs	r0, r4
 1698              	.LVL203:
 1699 0788 A242     		cmp	r2, r4
 1700 078a 38BF     		it	cc
 1701 078c 2246     		movcc	r2, r4
 1702              	.LVL204:
 1703 078e 0B46     		mov	r3, r1
 1704 0790 CDF800E0 		str	lr, [sp, #0]
 1705 0794 00B2     		sxth	r0, r0
 1706 0796 12B2     		sxth	r2, r2
 1707 0798 CDF808C0 		str	ip, [sp, #8]
 1708 079c FFF7FEFF 		bl	GLCD_Line
 1709              	.LVL205:
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1710              		.loc 1 873 0
 1711 07a0 0799     		ldr	r1, [sp, #28]
 1712 07a2 DDF808C0 		ldr	ip, [sp, #8]
 1713 07a6 19B9     		cbnz	r1, .L113
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1714              		.loc 1 873 0 is_stmt 0 discriminator 1
 1715 07a8 0898     		ldr	r0, [sp, #32]
 1716 07aa 8044     		add	r8, r8, r0
 1717              	.LVL206:
 1718 07ac 1FFA88F8 		uxth	r8, r8
 1719              	.LVL207:
 1720              	.L113:
 874:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1721              		.loc 1 874 0 is_stmt 1
 1722 07b0 0B9A     		ldr	r2, [sp, #44]
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1723              		.loc 1 875 0
 1724 07b2 0999     		ldr	r1, [sp, #36]
 874:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1725              		.loc 1 874 0
 1726 07b4 08EB0203 		add	r3, r8, r2
 1727 07b8 1FFA83F8 		uxth	r8, r3
 1728              	.LVL208:
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1729              		.loc 1 875 0
 1730 07bc 11B9     		cbnz	r1, .L114
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1731              		.loc 1 875 0 is_stmt 0 discriminator 1
 1732 07be 0A98     		ldr	r0, [sp, #40]
 1733 07c0 2418     		adds	r4, r4, r0
 1734              	.LVL209:
 1735 07c2 A4B2     		uxth	r4, r4
 1736              	.LVL210:
 1737              	.L114:
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1738              		.loc 1 877 0 is_stmt 1
 1739 07c4 059B     		ldr	r3, [sp, #20]
 1740              	.LVL211:
 876:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1741              		.loc 1 876 0
 1742 07c6 0C99     		ldr	r1, [sp, #48]
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1743              		.loc 1 877 0
 1744 07c8 581C     		adds	r0, r3, #1
 876:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1745              		.loc 1 876 0
 1746 07ca 6218     		adds	r2, r4, r1
 1747 07cc 94B2     		uxth	r4, r2
 1748              	.LVL212:
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1749              		.loc 1 877 0
 1750 07ce 82B2     		uxth	r2, r0
 1751              	.LVL213:
 1752 07d0 0592     		str	r2, [sp, #20]
 878:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 1753              		.loc 1 878 0
 1754 07d2 B5F90230 		ldrsh	r3, [r5, #2]
 1755 07d6 059A     		ldr	r2, [sp, #20]
 1756 07d8 9A42     		cmp	r2, r3
 1757 07da 7FF472AF 		bne	.L101
 1758              	.LVL214:
 1759              	.L100:
 1760              	.LBE17:
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1761              		.loc 1 882 0
 1762 07de 3178     		ldrb	r1, [r6, #0]	@ zero_extendqisi2
 1763 07e0 B5F800A0 		ldrh	sl, [r5, #0]
 1764 07e4 CAEB0102 		rsb	r2, sl, r1
 1765 07e8 50B2     		sxtb	r0, r2
 1766 07ea 01B2     		sxth	r1, r0
 1767 07ec 0029     		cmp	r1, #0
 1768 07ee 1FFA80F9 		uxth	r9, r0
 1769              	.LVL215:
 1770 07f2 07DA     		bge	.L144
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1771              		.loc 1 882 0 is_stmt 0 discriminator 1
 1772 07f4 C0F10009 		rsb	r9, r0, #0
 1773 07f8 4FF6FF70 		movw	r0, #65535
 1774              	.LVL216:
 1775 07fc 1FFA89F9 		uxth	r9, r9
 1776              	.LVL217:
 1777 0800 0790     		str	r0, [sp, #28]
 1778 0802 01E0     		b	.L116
 1779              	.LVL218:
 1780              	.L144:
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1781              		.loc 1 882 0
 1782 0804 0122     		movs	r2, #1
 1783 0806 0792     		str	r2, [sp, #28]
 1784              	.LVL219:
 1785              	.L116:
 883:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1786              		.loc 1 883 0 is_stmt 1
 1787 0808 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 1788 080a AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 884:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 1789              		.loc 1 884 0
 1790 080c 1FFA8AF8 		uxth	r8, sl
 883:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1791              		.loc 1 883 0
 1792 0810 CA1A     		subs	r2, r1, r3
 1793 0812 50B2     		sxtb	r0, r2
 1794 0814 81B2     		uxth	r1, r0
 1795 0816 0C91     		str	r1, [sp, #48]
 1796              	.LVL220:
 886:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1797              		.loc 1 886 0
 1798 0818 02B2     		sxth	r2, r0
 1799 081a 0FFA89F1 		sxth	r1, r9
 1800 081e 8A42     		cmp	r2, r1
 1801 0820 0BDD     		ble	.L145
 888:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 1802              		.loc 1 888 0
 1803 0822 89EA0002 		eor	r2, r9, r0
 1804 0826 93B2     		uxth	r3, r2
 1805              	.LVL221:
 1806 0828 83EA0909 		eor	r9, r3, r9
 1807              	.LVL222:
 1808 082c 89EA0300 		eor	r0, r9, r3
 1809 0830 82B2     		uxth	r2, r0
 1810              	.LVL223:
 1811 0832 0C92     		str	r2, [sp, #48]
 1812              	.LVL224:
 889:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1813              		.loc 1 889 0
 1814 0834 0122     		movs	r2, #1
 1815 0836 0392     		str	r2, [sp, #12]
 1816 0838 01E0     		b	.L117
 1817              	.LVL225:
 1818              	.L145:
 890:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 1819              		.loc 1 890 0
 1820 083a 0020     		movs	r0, #0
 1821              	.LVL226:
 1822 083c 0390     		str	r0, [sp, #12]
 1823              	.LVL227:
 1824              	.L117:
 892:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 1825              		.loc 1 892 0
 1826 083e C9F3470B 		ubfx	fp, r9, #1, #8
 1827              	.LVL228:
 1828              	.LBB18:
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1829              		.loc 1 894 0
 1830 0842 4FF0000A 		mov	sl, #0
 1831              	.LVL229:
 1832              	.L118:
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1833              		.loc 1 894 0 is_stmt 0 discriminator 1
 1834 0846 0FFA89F3 		sxth	r3, r9
 1835 084a 9A45     		cmp	sl, r3
 1836 084c 00F38D80 		bgt	.L134
 1837              	.L133:
 1838              	.LVL230:
 897:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1839              		.loc 1 897 0 is_stmt 1
 1840 0850 A045     		cmp	r8, r4
 1841 0852 39BF     		ittee	cc
 1842 0854 2246     		movcc	r2, r4
 1843 0856 4146     		movcc	r1, r8
 1844 0858 4246     		movcs	r2, r8
 1845 085a 2146     		movcs	r1, r4
 1846              	.LVL231:
 1847              	.L158:
 900:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1848              		.loc 1 900 0 discriminator 1
 1849 085c 9A45     		cmp	sl, r3
 1850 085e 12DA     		bge	.L161
 1851              	.L125:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1852              		.loc 1 793 0
 1853 0860 DDF830E0 		ldr	lr, [sp, #48]
 1854 0864 0BEB0E00 		add	r0, fp, lr
 1855 0868 1FFA80FB 		uxth	fp, r0
 1856              	.LVL232:
 903:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1857              		.loc 1 903 0
 1858 086c 9B45     		cmp	fp, r3
 1859 086e 08DB     		blt	.L121
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1860              		.loc 1 906 0
 1861 0870 039B     		ldr	r3, [sp, #12]
 905:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 1862              		.loc 1 905 0
 1863 0872 C9EB0B00 		rsb	r0, r9, fp
 1864              	.LVL233:
 1865 0876 1FFA80FB 		uxth	fp, r0
 1866              	.LVL234:
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1867              		.loc 1 906 0
 1868 087a 3BB1     		cbz	r3, .L147
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1869              		.loc 1 906 0 is_stmt 0 discriminator 1
 1870 087c 079B     		ldr	r3, [sp, #28]
 1871 087e 9BB2     		uxth	r3, r3
 1872 0880 02E0     		b	.L160
 1873              	.L121:
 1874              	.LVL235:
 909:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 1875              		.loc 1 909 0 is_stmt 1
 1876 0882 0398     		ldr	r0, [sp, #12]
 1877 0884 58B1     		cbz	r0, .L123
 1878              	.LVL236:
 1879              	.L161:
 1880 0886 0023     		movs	r3, #0
 1881              	.L160:
 1882 0888 0893     		str	r3, [sp, #32]
 1883 088a 01E0     		b	.L122
 1884              	.LVL237:
 1885              	.L147:
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1886              		.loc 1 906 0
 1887 088c 0398     		ldr	r0, [sp, #12]
 1888              	.LVL238:
 1889 088e 0890     		str	r0, [sp, #32]
 1890              	.LVL239:
 1891              	.L122:
 915:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 1892              		.loc 1 915 0 discriminator 1
 1893 0890 4FF0000E 		mov	lr, #0
 1894 0894 B6F90030 		ldrsh	r3, [r6, #0]
 1895 0898 CDF82CE0 		str	lr, [sp, #44]
 1896 089c 22E0     		b	.L124
 1897              	.LVL240:
 1898              	.L123:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1899              		.loc 1 793 0
 1900 089e 0798     		ldr	r0, [sp, #28]
 911:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 1901              		.loc 1 911 0
 1902 08a0 0AF1010A 		add	sl, sl, #1
 1903              	.LVL241:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1904              		.loc 1 793 0
 1905 08a4 8044     		add	r8, r8, r0
 1906              	.LVL242:
 1907 08a6 1FFA88F8 		uxth	r8, r8
 1908              	.LVL243:
 911:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 1909              		.loc 1 911 0
 1910 08aa 5FFA8AFA 		uxtb	sl, sl
 1911              	.LVL244:
 1912 08ae D5E7     		b	.L158
 1913              	.LVL245:
 1914              	.L128:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1915              		.loc 1 793 0
 1916 08b0 DDF810E0 		ldr	lr, [sp, #16]
 1917 08b4 CEEB0C00 		rsb	r0, lr, ip
 1918 08b8 1FFA80FC 		uxth	ip, r0
 1919              	.LVL246:
 921:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 1920              		.loc 1 921 0
 1921 08bc 0998     		ldr	r0, [sp, #36]
 1922              	.LVL247:
 1923 08be D0B1     		cbz	r0, .L127
 921:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 1924              		.loc 1 921 0 is_stmt 0 discriminator 1
 1925 08c0 DDF828E0 		ldr	lr, [sp, #40]
 1926 08c4 1FFA8EFE 		uxth	lr, lr
 1927 08c8 CDF82CE0 		str	lr, [sp, #44]
 1928              	.LVL248:
 1929              	.L126:
 918:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 1930              		.loc 1 918 0 is_stmt 1 discriminator 1
 1931 08cc DDF810E0 		ldr	lr, [sp, #16]
 1932 08d0 0FFA8EF0 		sxth	r0, lr
 1933 08d4 8445     		cmp	ip, r0
 1934 08d6 EBDA     		bge	.L128
 924:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 1935              		.loc 1 924 0
 1936 08d8 0998     		ldr	r0, [sp, #36]
 1937 08da 60B9     		cbnz	r0, .L127
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1938              		.loc 1 793 0
 1939 08dc DDF828E0 		ldr	lr, [sp, #40]
 1940 08e0 7444     		add	r4, r4, lr
 1941              	.LVL249:
 1942 08e2 A4B2     		uxth	r4, r4
 1943              	.LVL250:
 1944              	.L124:
 915:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 1945              		.loc 1 915 0 discriminator 1
 1946 08e4 9C42     		cmp	r4, r3
 1947 08e6 06D0     		beq	.L127
 1948              	.L129:
 917:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 1949              		.loc 1 917 0
 1950 08e8 DDF834E0 		ldr	lr, [sp, #52]
 1951 08ec 0CEB0E00 		add	r0, ip, lr
 1952 08f0 1FFA80FC 		uxth	ip, r0
 1953              	.LVL251:
 918:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 1954              		.loc 1 918 0
 1955 08f4 EAE7     		b	.L126
 1956              	.LVL252:
 1957              	.L127:
 931:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 1958              		.loc 1 931 0
 1959 08f6 059B     		ldr	r3, [sp, #20]
 1960 08f8 8845     		cmp	r8, r1
 1961 08fa 38BF     		it	cc
 1962 08fc 4146     		movcc	r1, r8
 1963 08fe 88B2     		uxth	r0, r1
 1964              	.LVL253:
 1965 0900 19B2     		sxth	r1, r3
 1966 0902 069B     		ldr	r3, [sp, #24]
 1967 0904 9045     		cmp	r8, r2
 1968 0906 28BF     		it	cs
 1969 0908 4246     		movcs	r2, r8
 1970 090a B3F804E0 		ldrh	lr, [r3, #4]
 1971 090e 92B2     		uxth	r2, r2
 1972              	.LVL254:
 1973 0910 A042     		cmp	r0, r4
 1974 0912 28BF     		it	cs
 1975 0914 2046     		movcs	r0, r4
 1976              	.LVL255:
 1977 0916 A242     		cmp	r2, r4
 1978 0918 38BF     		it	cc
 1979 091a 2246     		movcc	r2, r4
 1980              	.LVL256:
 1981 091c 0B46     		mov	r3, r1
 1982 091e CDF800E0 		str	lr, [sp, #0]
 1983 0922 00B2     		sxth	r0, r0
 1984 0924 12B2     		sxth	r2, r2
 1985 0926 CDF808C0 		str	ip, [sp, #8]
 1986 092a FFF7FEFF 		bl	GLCD_Line
 1987              	.LVL257:
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1988              		.loc 1 933 0
 1989 092e 0399     		ldr	r1, [sp, #12]
 1990 0930 DDF808C0 		ldr	ip, [sp, #8]
 1991 0934 19B9     		cbnz	r1, .L130
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1992              		.loc 1 933 0 is_stmt 0 discriminator 1
 1993 0936 0798     		ldr	r0, [sp, #28]
 1994 0938 8044     		add	r8, r8, r0
 1995              	.LVL258:
 1996 093a 1FFA88F8 		uxth	r8, r8
 1997              	.LVL259:
 1998              	.L130:
 934:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1999              		.loc 1 934 0 is_stmt 1
 2000 093e 089A     		ldr	r2, [sp, #32]
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2001              		.loc 1 935 0
 2002 0940 0999     		ldr	r1, [sp, #36]
 934:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 2003              		.loc 1 934 0
 2004 0942 08EB0203 		add	r3, r8, r2
 2005 0946 1FFA83F8 		uxth	r8, r3
 2006              	.LVL260:
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2007              		.loc 1 935 0
 2008 094a 11B9     		cbnz	r1, .L131
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2009              		.loc 1 935 0 is_stmt 0 discriminator 1
 2010 094c 0A98     		ldr	r0, [sp, #40]
 2011 094e 2418     		adds	r4, r4, r0
 2012              	.LVL261:
 2013 0950 A4B2     		uxth	r4, r4
 2014              	.LVL262:
 2015              	.L131:
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2016              		.loc 1 937 0 is_stmt 1
 2017 0952 059B     		ldr	r3, [sp, #20]
 2018              	.LVL263:
 936:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 2019              		.loc 1 936 0
 2020 0954 0B99     		ldr	r1, [sp, #44]
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2021              		.loc 1 937 0
 2022 0956 581C     		adds	r0, r3, #1
 936:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 2023              		.loc 1 936 0
 2024 0958 6218     		adds	r2, r4, r1
 2025 095a 94B2     		uxth	r4, r2
 2026              	.LVL264:
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2027              		.loc 1 937 0
 2028 095c 82B2     		uxth	r2, r0
 2029              	.LVL265:
 2030 095e 0592     		str	r2, [sp, #20]
 938:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 2031              		.loc 1 938 0
 2032 0960 B6F90230 		ldrsh	r3, [r6, #2]
 2033 0964 059A     		ldr	r2, [sp, #20]
 2034 0966 9A42     		cmp	r2, r3
 2035 0968 03DD     		ble	.L132
 2036              	.LVL266:
 2037              	.L134:
 2038              	.LBE18:
 940:../Source Files/lpc_ssp_glcd.c ****     	cfg->fill = NO;
 2039              		.loc 1 940 0
 2040 096a 069C     		ldr	r4, [sp, #24]
 2041 096c 0021     		movs	r1, #0
 2042 096e 2170     		strb	r1, [r4, #0]
 2043 0970 04E0     		b	.L92
 2044              	.LVL267:
 2045              	.L132:
 2046              	.LBB19:
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 2047              		.loc 1 894 0
 2048 0972 0AF1010A 		add	sl, sl, #1
 2049              	.LVL268:
 2050 0976 5FFA8AFA 		uxtb	sl, sl
 2051              	.LVL269:
 2052 097a 64E7     		b	.L118
 2053              	.LVL270:
 2054              	.L92:
 2055              	.LBE19:
 2056              	.LBE16:
 944:../Source Files/lpc_ssp_glcd.c **** 	if(!cfg->fill && cfg->bndry)
 2057              		.loc 1 944 0
 2058 097c 069C     		ldr	r4, [sp, #24]
 2059 097e 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 2060 0980 40BB     		cbnz	r0, .L91
 944:../Source Files/lpc_ssp_glcd.c **** 	if(!cfg->fill && cfg->bndry)
 2061              		.loc 1 944 0 is_stmt 0 discriminator 1
 2062 0982 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 2063 0984 33B3     		cbz	r3, .L91
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, cfg->bcolor);
 2064              		.loc 1 946 0 is_stmt 1
 2065 0986 B4F802E0 		ldrh	lr, [r4, #2]
 2066 098a B7F90000 		ldrsh	r0, [r7, #0]
 2067 098e B7F90210 		ldrsh	r1, [r7, #2]
 2068 0992 B5F90020 		ldrsh	r2, [r5, #0]
 2069 0996 B5F90230 		ldrsh	r3, [r5, #2]
 2070 099a CDF800E0 		str	lr, [sp, #0]
 2071 099e FFF7FEFF 		bl	GLCD_Line
 2072              	.LVL271:
 947:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, cfg->bcolor);
 2073              		.loc 1 947 0
 2074 09a2 B7F90000 		ldrsh	r0, [r7, #0]
 2075 09a6 B7F90210 		ldrsh	r1, [r7, #2]
 2076 09aa 069F     		ldr	r7, [sp, #24]
 2077              	.LVL272:
 2078 09ac B6F90020 		ldrsh	r2, [r6, #0]
 2079 09b0 7C88     		ldrh	r4, [r7, #2]
 2080 09b2 B6F90230 		ldrsh	r3, [r6, #2]
 2081 09b6 0094     		str	r4, [sp, #0]
 2082 09b8 FFF7FEFF 		bl	GLCD_Line
 2083              	.LVL273:
 948:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, cfg->bcolor);
 2084              		.loc 1 948 0
 2085 09bc 7C88     		ldrh	r4, [r7, #2]
 2086 09be B5F90000 		ldrsh	r0, [r5, #0]
 2087 09c2 B5F90210 		ldrsh	r1, [r5, #2]
 2088 09c6 B6F90020 		ldrsh	r2, [r6, #0]
 2089 09ca B6F90230 		ldrsh	r3, [r6, #2]
 2090 09ce 0094     		str	r4, [sp, #0]
 2091 09d0 FFF7FEFF 		bl	GLCD_Line
 2092              	.LVL274:
 2093              	.L91:
 950:../Source Files/lpc_ssp_glcd.c **** }
 2094              		.loc 1 950 0
 2095 09d4 0FB0     		add	sp, sp, #60
 2096 09d6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2097              		.cfi_endproc
 2098              	.LFE79:
 2100              		.align	1
 2101              		.global	GLCD_Frame
 2102              		.thumb
 2103              		.thumb_func
 2105              	GLCD_Frame:
 2106              	.LFB78:
 748:../Source Files/lpc_ssp_glcd.c **** {
 2107              		.loc 1 748 0
 2108              		.cfi_startproc
 2109              		@ args = 4, pretend = 0, frame = 0
 2110              		@ frame_needed = 0, uses_anonymous_args = 0
 2111              	.LVL275:
 2112 09da 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 2113              	.LCFI18:
 2114              		.cfi_def_cfa_offset 40
 2115              		.cfi_offset 0, -40
 2116              		.cfi_offset 1, -36
 2117              		.cfi_offset 2, -32
 2118              		.cfi_offset 4, -28
 2119              		.cfi_offset 5, -24
 2120              		.cfi_offset 6, -20
 2121              		.cfi_offset 7, -16
 2122              		.cfi_offset 8, -12
 2123              		.cfi_offset 9, -8
 2124              		.cfi_offset 14, -4
 748:../Source Files/lpc_ssp_glcd.c **** {
 2125              		.loc 1 748 0
 2126 09de BDF82880 		ldrh	r8, [sp, #40]
 2127 09e2 0546     		mov	r5, r0
 2128 09e4 0C46     		mov	r4, r1
 2129 09e6 9146     		mov	r9, r2
 2130 09e8 1F46     		mov	r7, r3
 2131 09ea 96B2     		uxth	r6, r2
 2132              	.LVL276:
 2133              	.L163:
 753:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 2134              		.loc 1 753 0 discriminator 1
 2135 09ec 002E     		cmp	r6, #0
 2136 09ee 58D0     		beq	.L168
 2137              	.L166:
 2138 09f0 6988     		ldrh	r1, [r5, #2]
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 2139              		.loc 1 755 0
 2140 09f2 33B2     		sxth	r3, r6
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 2141              		.loc 1 757 0
 2142 09f4 7218     		adds	r2, r6, r1
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 2143              		.loc 1 755 0
 2144 09f6 4B45     		cmp	r3, r9
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 2145              		.loc 1 757 0
 2146 09f8 11B2     		sxth	r1, r2
 2147 09fa B5F90000 		ldrsh	r0, [r5, #0]
 2148 09fe B4F90020 		ldrsh	r2, [r4, #0]
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 2149              		.loc 1 755 0
 2150 0a02 26DA     		bge	.L164
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 2151              		.loc 1 757 0
 2152 0a04 0B46     		mov	r3, r1
 2153 0a06 CDF80080 		str	r8, [sp, #0]
 2154 0a0a FFF7FEFF 		bl	GLCD_Line
 2155              	.LVL277:
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 2156              		.loc 1 758 0
 2157 0a0e 6188     		ldrh	r1, [r4, #2]
 2158 0a10 B5F90000 		ldrsh	r0, [r5, #0]
 2159 0a14 8A1B     		subs	r2, r1, r6
 2160 0a16 11B2     		sxth	r1, r2
 2161 0a18 0B46     		mov	r3, r1
 2162 0a1a B4F90020 		ldrsh	r2, [r4, #0]
 2163 0a1e CDF80080 		str	r8, [sp, #0]
 2164 0a22 FFF7FEFF 		bl	GLCD_Line
 2165              	.LVL278:
 759:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 2166              		.loc 1 759 0
 2167 0a26 2888     		ldrh	r0, [r5, #0]
 2168 0a28 B5F90210 		ldrsh	r1, [r5, #2]
 2169 0a2c 3318     		adds	r3, r6, r0
 2170 0a2e 18B2     		sxth	r0, r3
 2171 0a30 0246     		mov	r2, r0
 2172 0a32 B4F90230 		ldrsh	r3, [r4, #2]
 2173 0a36 CDF80080 		str	r8, [sp, #0]
 2174 0a3a FFF7FEFF 		bl	GLCD_Line
 2175              	.LVL279:
 760:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 2176              		.loc 1 760 0
 2177 0a3e 2188     		ldrh	r1, [r4, #0]
 2178 0a40 B4F90230 		ldrsh	r3, [r4, #2]
 2179 0a44 8A1B     		subs	r2, r1, r6
 2180 0a46 10B2     		sxth	r0, r2
 2181 0a48 B5F90210 		ldrsh	r1, [r5, #2]
 2182 0a4c CDF80080 		str	r8, [sp, #0]
 2183 0a50 21E0     		b	.L167
 2184              	.L164:
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 2185              		.loc 1 765 0
 2186 0a52 0B46     		mov	r3, r1
 2187 0a54 0097     		str	r7, [sp, #0]
 2188 0a56 FFF7FEFF 		bl	GLCD_Line
 2189              	.LVL280:
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 2190              		.loc 1 766 0
 2191 0a5a 6088     		ldrh	r0, [r4, #2]
 2192 0a5c B4F90020 		ldrsh	r2, [r4, #0]
 2193 0a60 831B     		subs	r3, r0, r6
 2194 0a62 19B2     		sxth	r1, r3
 2195 0a64 0B46     		mov	r3, r1
 2196 0a66 B5F90000 		ldrsh	r0, [r5, #0]
 2197 0a6a 0097     		str	r7, [sp, #0]
 2198 0a6c FFF7FEFF 		bl	GLCD_Line
 2199              	.LVL281:
 767:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 2200              		.loc 1 767 0
 2201 0a70 2988     		ldrh	r1, [r5, #0]
 2202 0a72 B4F90230 		ldrsh	r3, [r4, #2]
 2203 0a76 7218     		adds	r2, r6, r1
 2204 0a78 10B2     		sxth	r0, r2
 2205 0a7a B5F90210 		ldrsh	r1, [r5, #2]
 2206 0a7e 0246     		mov	r2, r0
 2207 0a80 0097     		str	r7, [sp, #0]
 2208 0a82 FFF7FEFF 		bl	GLCD_Line
 2209              	.LVL282:
 768:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 2210              		.loc 1 768 0
 2211 0a86 2088     		ldrh	r0, [r4, #0]
 2212 0a88 B5F90210 		ldrsh	r1, [r5, #2]
 2213 0a8c 831B     		subs	r3, r0, r6
 2214 0a8e 18B2     		sxth	r0, r3
 2215 0a90 B4F90230 		ldrsh	r3, [r4, #2]
 2216 0a94 0097     		str	r7, [sp, #0]
 2217              	.L167:
 2218 0a96 0246     		mov	r2, r0
 2219 0a98 013E     		subs	r6, r6, #1
 2220 0a9a FFF7FEFF 		bl	GLCD_Line
 2221              	.LVL283:
 2222 0a9e B6B2     		uxth	r6, r6
 2223 0aa0 A4E7     		b	.L163
 2224              	.L168:
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 2225              		.loc 1 775 0
 2226 0aa2 B5F90210 		ldrsh	r1, [r5, #2]
 2227 0aa6 B5F90000 		ldrsh	r0, [r5, #0]
 2228 0aaa B4F90020 		ldrsh	r2, [r4, #0]
 2229 0aae 0B46     		mov	r3, r1
 2230 0ab0 0097     		str	r7, [sp, #0]
 2231 0ab2 FFF7FEFF 		bl	GLCD_Line
 2232              	.LVL284:
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 2233              		.loc 1 776 0
 2234 0ab6 B4F90210 		ldrsh	r1, [r4, #2]
 2235 0aba B5F90000 		ldrsh	r0, [r5, #0]
 2236 0abe B4F90020 		ldrsh	r2, [r4, #0]
 2237 0ac2 0B46     		mov	r3, r1
 2238 0ac4 0097     		str	r7, [sp, #0]
 2239 0ac6 FFF7FEFF 		bl	GLCD_Line
 2240              	.LVL285:
 777:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 2241              		.loc 1 777 0
 2242 0aca B5F90000 		ldrsh	r0, [r5, #0]
 2243 0ace B5F90210 		ldrsh	r1, [r5, #2]
 2244 0ad2 B4F90230 		ldrsh	r3, [r4, #2]
 2245 0ad6 0246     		mov	r2, r0
 2246 0ad8 0097     		str	r7, [sp, #0]
 2247 0ada FFF7FEFF 		bl	GLCD_Line
 2248              	.LVL286:
 778:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2249              		.loc 1 778 0
 2250 0ade B4F90000 		ldrsh	r0, [r4, #0]
 2251 0ae2 B5F90210 		ldrsh	r1, [r5, #2]
 2252 0ae6 B4F90230 		ldrsh	r3, [r4, #2]
 2253 0aea 0246     		mov	r2, r0
 2254 0aec 0A97     		str	r7, [sp, #40]
 780:../Source Files/lpc_ssp_glcd.c **** }
 2255              		.loc 1 780 0
 2256 0aee 03B0     		add	sp, sp, #12
 2257 0af0 BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 778:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2258              		.loc 1 778 0
 2259 0af4 FFF7FEBF 		b	GLCD_Line
 2260              	.LVL287:
 2261              		.cfi_endproc
 2262              	.LFE78:
 2264              		.align	1
 2265              		.global	GLCD_Circle
 2266              		.thumb
 2267              		.thumb_func
 2269              	GLCD_Circle:
 2270              	.LFB80:
 962:../Source Files/lpc_ssp_glcd.c **** {
 2271              		.loc 1 962 0
 2272              		.cfi_startproc
 2273              		@ args = 0, pretend = 0, frame = 32
 2274              		@ frame_needed = 0, uses_anonymous_args = 0
 2275              	.LVL288:
 2276 0af8 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2277              	.LCFI19:
 2278              		.cfi_def_cfa_offset 36
 2279              		.cfi_offset 4, -36
 2280              		.cfi_offset 5, -32
 2281              		.cfi_offset 6, -28
 2282              		.cfi_offset 7, -24
 2283              		.cfi_offset 8, -20
 2284              		.cfi_offset 9, -16
 2285              		.cfi_offset 10, -12
 2286              		.cfi_offset 11, -8
 2287              		.cfi_offset 14, -4
 2288 0afc 1C46     		mov	r4, r3
 2289 0afe 8BB0     		sub	sp, sp, #44
 2290              	.LCFI20:
 2291              		.cfi_def_cfa_offset 80
 2292              	.LVL289:
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2293              		.loc 1 966 0
 2294 0b00 C2F10103 		rsb	r3, r2, #1
 2295              	.LVL290:
 962:../Source Files/lpc_ssp_glcd.c **** {
 2296              		.loc 1 962 0
 2297 0b04 0890     		str	r0, [sp, #32]
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2298              		.loc 1 966 0
 2299 0b06 98B2     		uxth	r0, r3
 2300              	.LVL291:
 962:../Source Files/lpc_ssp_glcd.c **** {
 2301              		.loc 1 962 0
 2302 0b08 0991     		str	r1, [sp, #36]
 2303 0b0a 0792     		str	r2, [sp, #28]
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2304              		.loc 1 966 0
 2305 0b0c 0690     		str	r0, [sp, #24]
 2306              	.LVL292:
 2307 0b0e 0746     		mov	r7, r0
 965:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 2308              		.loc 1 965 0
 2309 0b10 1646     		mov	r6, r2
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2310              		.loc 1 966 0
 2311 0b12 0025     		movs	r5, #0
 2312              	.LVL293:
 2313              	.L173:
 970:../Source Files/lpc_ssp_glcd.c **** 		if(cfg->fill)
 2314              		.loc 1 970 0
 2315 0b14 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 2316 0b16 0029     		cmp	r1, #0
 2317 0b18 47D0     		beq	.L170
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 2318              		.loc 1 972 0
 2319 0b1a 089A     		ldr	r2, [sp, #32]
 2320 0b1c 0998     		ldr	r0, [sp, #36]
 2321 0b1e 1FFA82F9 		uxth	r9, r2
 2322 0b22 1FFA80F8 		uxth	r8, r0
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2323              		.loc 1 961 0
 2324 0b26 ABB2     		uxth	r3, r5
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 2325              		.loc 1 972 0
 2326 0b28 1FFA86FA 		uxth	sl, r6
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2327              		.loc 1 961 0
 2328 0b2c C3EB090C 		rsb	ip, r3, r9
 2329 0b30 03EB090B 		add	fp, r3, r9
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 2330              		.loc 1 972 0
 2331 0b34 A288     		ldrh	r2, [r4, #4]
 2332 0b36 0AEB0801 		add	r1, sl, r8
 2333 0b3a 0FFA8CFE 		sxth	lr, ip
 2334 0b3e 09B2     		sxth	r1, r1
 2335 0b40 0FFA8BFB 		sxth	fp, fp
 2336 0b44 7046     		mov	r0, lr
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2337              		.loc 1 961 0
 2338 0b46 0593     		str	r3, [sp, #20]
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 2339              		.loc 1 972 0
 2340 0b48 0092     		str	r2, [sp, #0]
 2341 0b4a 0B46     		mov	r3, r1
 2342 0b4c 5A46     		mov	r2, fp
 2343 0b4e CDF80CE0 		str	lr, [sp, #12]
 2344 0b52 FFF7FEFF 		bl	GLCD_Line
 2345              	.LVL294:
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, cfg->fill_color);
 2346              		.loc 1 973 0
 2347 0b56 CAEB0803 		rsb	r3, sl, r8
 2348 0b5a A088     		ldrh	r0, [r4, #4]
 2349 0b5c DDF80CC0 		ldr	ip, [sp, #12]
 2350 0b60 19B2     		sxth	r1, r3
 2351 0b62 5A46     		mov	r2, fp
 2352 0b64 0B46     		mov	r3, r1
 2353 0b66 0090     		str	r0, [sp, #0]
 2354 0b68 6046     		mov	r0, ip
 2355 0b6a FFF7FEFF 		bl	GLCD_Line
 2356              	.LVL295:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2357              		.loc 1 961 0
 2358 0b6e 0599     		ldr	r1, [sp, #20]
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, cfg->fill_color);
 2359              		.loc 1 974 0
 2360 0b70 A388     		ldrh	r3, [r4, #4]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2361              		.loc 1 961 0
 2362 0b72 01EB0802 		add	r2, r1, r8
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, cfg->fill_color);
 2363              		.loc 1 974 0
 2364 0b76 CAEB090B 		rsb	fp, sl, r9
 2365 0b7a D144     		add	r9, sl, r9
 2366 0b7c 11B2     		sxth	r1, r2
 2367 0b7e 0FFA8BFB 		sxth	fp, fp
 2368 0b82 0FFA89F9 		sxth	r9, r9
 2369 0b86 0093     		str	r3, [sp, #0]
 2370 0b88 5846     		mov	r0, fp
 2371 0b8a 0B46     		mov	r3, r1
 2372 0b8c 4A46     		mov	r2, r9
 2373 0b8e FFF7FEFF 		bl	GLCD_Line
 2374              	.LVL296:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2375              		.loc 1 961 0
 2376 0b92 0598     		ldr	r0, [sp, #20]
 975:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, cfg->fill_color);
 2377              		.loc 1 975 0
 2378 0b94 A288     		ldrh	r2, [r4, #4]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2379              		.loc 1 961 0
 2380 0b96 C0EB0808 		rsb	r8, r0, r8
 975:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, cfg->fill_color);
 2381              		.loc 1 975 0
 2382 0b9a 0FFA88F1 		sxth	r1, r8
 2383 0b9e 0092     		str	r2, [sp, #0]
 2384 0ba0 5846     		mov	r0, fp
 2385 0ba2 4A46     		mov	r2, r9
 2386 0ba4 0B46     		mov	r3, r1
 2387 0ba6 FFF7FEFF 		bl	GLCD_Line
 2388              	.LVL297:
 2389              	.L170:
 978:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 2390              		.loc 1 978 0
 2391 0baa 3804     		lsls	r0, r7, #16
 2392 0bac 07D5     		bpl	.L171
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2393              		.loc 1 961 0
 2394 0bae ABB2     		uxth	r3, r5
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2395              		.loc 1 979 0
 2396 0bb0 0337     		adds	r7, r7, #3
 2397              	.LVL298:
 2398 0bb2 07EB4300 		add	r0, r7, r3, lsl #1
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2399              		.loc 1 961 0
 2400 0bb6 5A1C     		adds	r2, r3, #1
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2401              		.loc 1 979 0
 2402 0bb8 87B2     		uxth	r7, r0
 2403              	.LVL299:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2404              		.loc 1 961 0
 2405 0bba 91B2     		uxth	r1, r2
 2406              	.LVL300:
 2407 0bbc 09E0     		b	.L172
 2408              	.LVL301:
 2409              	.L171:
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2410              		.loc 1 981 0
 2411 0bbe 31B2     		sxth	r1, r6
 2412 0bc0 0537     		adds	r7, r7, #5
 2413              	.LVL302:
 2414 0bc2 6B1A     		subs	r3, r5, r1
 2415 0bc4 07EB4300 		add	r0, r7, r3, lsl #1
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2416              		.loc 1 961 0
 2417 0bc8 6A1C     		adds	r2, r5, #1
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2418              		.loc 1 981 0
 2419 0bca 013E     		subs	r6, r6, #1
 2420              	.LVL303:
 2421 0bcc 87B2     		uxth	r7, r0
 2422              	.LVL304:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2423              		.loc 1 961 0
 2424 0bce 91B2     		uxth	r1, r2
 2425              	.LVL305:
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2426              		.loc 1 981 0
 2427 0bd0 B6B2     		uxth	r6, r6
 2428              	.LVL306:
 2429              	.L172:
 982:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 2430              		.loc 1 982 0
 2431 0bd2 09B2     		sxth	r1, r1
 2432              	.LVL307:
 2433 0bd4 33B2     		sxth	r3, r6
 2434 0bd6 0135     		adds	r5, r5, #1
 2435 0bd8 9942     		cmp	r1, r3
 2436 0bda 9BDD     		ble	.L173
 984:../Source Files/lpc_ssp_glcd.c **** 	cfg->fill = NO;
 2437              		.loc 1 984 0
 2438 0bdc 0025     		movs	r5, #0
 986:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 2439              		.loc 1 986 0
 2440 0bde 079E     		ldr	r6, [sp, #28]
 2441              	.LVL308:
 984:../Source Files/lpc_ssp_glcd.c **** 	cfg->fill = NO;
 2442              		.loc 1 984 0
 2443 0be0 2570     		strb	r5, [r4, #0]
 2444              	.LVL309:
 2445              	.L177:
 990:../Source Files/lpc_ssp_glcd.c **** 		if(!cfg->fill && cfg->bndry)
 2446              		.loc 1 990 0
 2447 0be2 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 2448 0be4 0028     		cmp	r0, #0
 2449 0be6 57D1     		bne	.L174
 990:../Source Files/lpc_ssp_glcd.c **** 		if(!cfg->fill && cfg->bndry)
 2450              		.loc 1 990 0 is_stmt 0 discriminator 1
 2451 0be8 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 2452 0bea 002A     		cmp	r2, #0
 2453 0bec 54D0     		beq	.L174
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 2454              		.loc 1 992 0 is_stmt 1
 2455 0bee 089F     		ldr	r7, [sp, #32]
 2456 0bf0 0998     		ldr	r0, [sp, #36]
 2457 0bf2 1FFA87FA 		uxth	sl, r7
 2458 0bf6 1FFA80F8 		uxth	r8, r0
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2459              		.loc 1 961 0
 2460 0bfa 1FFA85F9 		uxth	r9, r5
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 2461              		.loc 1 992 0
 2462 0bfe B7B2     		uxth	r7, r6
 2463 0c00 07EB080E 		add	lr, r7, r8
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2464              		.loc 1 961 0
 2465 0c04 09EB0A01 		add	r1, r9, sl
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 2466              		.loc 1 992 0
 2467 0c08 1FFA8EFC 		uxth	ip, lr
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2468              		.loc 1 961 0
 2469 0c0c 8BB2     		uxth	r3, r1
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 2470              		.loc 1 992 0
 2471 0c0e 1846     		mov	r0, r3
 2472 0c10 6146     		mov	r1, ip
 2473 0c12 6288     		ldrh	r2, [r4, #2]
 2474 0c14 CDF80CC0 		str	ip, [sp, #12]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2475              		.loc 1 961 0
 2476 0c18 0793     		str	r3, [sp, #28]
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 2477              		.loc 1 992 0
 2478 0c1a FFF7FEFF 		bl	GLCD_PutPixel
 2479              	.LVL310:
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 2480              		.loc 1 993 0
 2481 0c1e 07EB0A02 		add	r2, r7, sl
 2482 0c22 91B2     		uxth	r1, r2
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2483              		.loc 1 961 0
 2484 0c24 09EB0803 		add	r3, r9, r8
 2485 0c28 9BB2     		uxth	r3, r3
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 2486              		.loc 1 993 0
 2487 0c2a 0591     		str	r1, [sp, #20]
 2488 0c2c 0598     		ldr	r0, [sp, #20]
 2489 0c2e 1946     		mov	r1, r3
 2490 0c30 6288     		ldrh	r2, [r4, #2]
 2491 0c32 0493     		str	r3, [sp, #16]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2492              		.loc 1 961 0
 2493 0c34 C9EB0A0B 		rsb	fp, r9, sl
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 2494              		.loc 1 993 0
 2495 0c38 FFF7FEFF 		bl	GLCD_PutPixel
 2496              	.LVL311:
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, cfg->bcolor);
 2497              		.loc 1 994 0
 2498 0c3c DDF80CC0 		ldr	ip, [sp, #12]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2499              		.loc 1 961 0
 2500 0c40 1FFA8BFB 		uxth	fp, fp
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, cfg->bcolor);
 2501              		.loc 1 994 0
 2502 0c44 6146     		mov	r1, ip
 2503 0c46 5846     		mov	r0, fp
 2504 0c48 6288     		ldrh	r2, [r4, #2]
 2505 0c4a FFF7FEFF 		bl	GLCD_PutPixel
 2506              	.LVL312:
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 2507              		.loc 1 995 0
 2508 0c4e C7EB0A0A 		rsb	sl, r7, sl
 2509 0c52 049A     		ldr	r2, [sp, #16]
 2510 0c54 1FFA8AFA 		uxth	sl, sl
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2511              		.loc 1 961 0
 2512 0c58 C9EB0809 		rsb	r9, r9, r8
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 2513              		.loc 1 995 0
 2514 0c5c 1146     		mov	r1, r2
 2515 0c5e 5046     		mov	r0, sl
 2516 0c60 6288     		ldrh	r2, [r4, #2]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2517              		.loc 1 961 0
 2518 0c62 1FFA89F9 		uxth	r9, r9
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 2519              		.loc 1 997 0
 2520 0c66 C7EB0807 		rsb	r7, r7, r8
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 2521              		.loc 1 995 0
 2522 0c6a FFF7FEFF 		bl	GLCD_PutPixel
 2523              	.LVL313:
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 2524              		.loc 1 997 0
 2525 0c6e BFB2     		uxth	r7, r7
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, cfg->bcolor);
 2526              		.loc 1 996 0
 2527 0c70 0598     		ldr	r0, [sp, #20]
 2528 0c72 4946     		mov	r1, r9
 2529 0c74 6288     		ldrh	r2, [r4, #2]
 2530 0c76 FFF7FEFF 		bl	GLCD_PutPixel
 2531              	.LVL314:
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 2532              		.loc 1 997 0
 2533 0c7a 0798     		ldr	r0, [sp, #28]
 2534 0c7c 3946     		mov	r1, r7
 2535 0c7e 6288     		ldrh	r2, [r4, #2]
 2536 0c80 FFF7FEFF 		bl	GLCD_PutPixel
 2537              	.LVL315:
 998:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, cfg->bcolor);
 2538              		.loc 1 998 0
 2539 0c84 5846     		mov	r0, fp
 2540 0c86 3946     		mov	r1, r7
 2541 0c88 6288     		ldrh	r2, [r4, #2]
 2542 0c8a FFF7FEFF 		bl	GLCD_PutPixel
 2543              	.LVL316:
 999:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, cfg->bcolor);
 2544              		.loc 1 999 0
 2545 0c8e 5046     		mov	r0, sl
 2546 0c90 4946     		mov	r1, r9
 2547 0c92 6288     		ldrh	r2, [r4, #2]
 2548 0c94 FFF7FEFF 		bl	GLCD_PutPixel
 2549              	.LVL317:
 2550              	.L174:
1002:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 2551              		.loc 1 1002 0
 2552 0c98 0698     		ldr	r0, [sp, #24]
 2553 0c9a 0104     		lsls	r1, r0, #16
 2554 0c9c 09D5     		bpl	.L175
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2555              		.loc 1 1003 0
 2556 0c9e 069A     		ldr	r2, [sp, #24]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2557              		.loc 1 961 0
 2558 0ca0 A9B2     		uxth	r1, r5
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2559              		.loc 1 1003 0
 2560 0ca2 D31C     		adds	r3, r2, #3
 2561 0ca4 03EB4100 		add	r0, r3, r1, lsl #1
 2562 0ca8 82B2     		uxth	r2, r0
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2563              		.loc 1 961 0
 2564 0caa 0131     		adds	r1, r1, #1
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2565              		.loc 1 1003 0
 2566 0cac 0692     		str	r2, [sp, #24]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2567              		.loc 1 961 0
 2568 0cae 88B2     		uxth	r0, r1
 2569              	.LVL318:
 2570 0cb0 0BE0     		b	.L176
 2571              	.LVL319:
 2572              	.L175:
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2573              		.loc 1 1005 0
 2574 0cb2 0699     		ldr	r1, [sp, #24]
 2575 0cb4 33B2     		sxth	r3, r6
 2576 0cb6 E81A     		subs	r0, r5, r3
 2577 0cb8 4A1D     		adds	r2, r1, #5
 2578 0cba 02EB4001 		add	r1, r2, r0, lsl #1
 2579 0cbe 8AB2     		uxth	r2, r1
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2580              		.loc 1 961 0
 2581 0cc0 6B1C     		adds	r3, r5, #1
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2582              		.loc 1 1005 0
 2583 0cc2 013E     		subs	r6, r6, #1
 2584              	.LVL320:
 2585 0cc4 0692     		str	r2, [sp, #24]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2586              		.loc 1 961 0
 2587 0cc6 98B2     		uxth	r0, r3
 2588              	.LVL321:
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2589              		.loc 1 1005 0
 2590 0cc8 B6B2     		uxth	r6, r6
 2591              	.LVL322:
 2592              	.L176:
1006:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 2593              		.loc 1 1006 0
 2594 0cca 03B2     		sxth	r3, r0
 2595 0ccc 30B2     		sxth	r0, r6
 2596              	.LVL323:
 2597 0cce 0135     		adds	r5, r5, #1
 2598 0cd0 8342     		cmp	r3, r0
 2599 0cd2 86DD     		ble	.L177
1007:../Source Files/lpc_ssp_glcd.c **** }
 2600              		.loc 1 1007 0
 2601 0cd4 0BB0     		add	sp, sp, #44
 2602 0cd6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2603              		.cfi_endproc
 2604              	.LFE80:
 2606              		.align	1
 2607              		.global	GLCD_Window
 2608              		.thumb
 2609              		.thumb_func
 2611              	GLCD_Window:
 2612              	.LFB58:
 133:../Source Files/lpc_ssp_glcd.c **** {
 2613              		.loc 1 133 0
 2614              		.cfi_startproc
 2615              		@ args = 0, pretend = 0, frame = 0
 2616              		@ frame_needed = 0, uses_anonymous_args = 0
 2617              	.LVL324:
 2618 0cda F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2619              	.LCFI21:
 2620              		.cfi_def_cfa_offset 24
 2621              		.cfi_offset 3, -24
 2622              		.cfi_offset 4, -20
 2623              		.cfi_offset 5, -16
 2624              		.cfi_offset 6, -12
 2625              		.cfi_offset 7, -8
 2626              		.cfi_offset 14, -4
 133:../Source Files/lpc_ssp_glcd.c **** {
 2627              		.loc 1 133 0
 2628 0cdc 0546     		mov	r5, r0
 134:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 2629              		.loc 1 134 0
 2630 0cde 4520     		movs	r0, #69
 2631              	.LVL325:
 133:../Source Files/lpc_ssp_glcd.c **** {
 2632              		.loc 1 133 0
 2633 0ce0 0C46     		mov	r4, r1
 2634 0ce2 1646     		mov	r6, r2
 2635 0ce4 1F46     		mov	r7, r3
 134:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 2636              		.loc 1 134 0
 2637 0ce6 FFF7FEFF 		bl	Write_Command_Glcd
 2638              	.LVL326:
 135:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 2639              		.loc 1 135 0
 2640 0cea 2846     		mov	r0, r5
 2641 0cec FFF7FEFF 		bl	Write_Data_Glcd
 2642              	.LVL327:
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 2643              		.loc 1 138 0
 2644 0cf0 013D     		subs	r5, r5, #1
 137:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 2645              		.loc 1 137 0
 2646 0cf2 4620     		movs	r0, #70
 2647 0cf4 FFF7FEFF 		bl	Write_Command_Glcd
 2648              	.LVL328:
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 2649              		.loc 1 138 0
 2650 0cf8 7019     		adds	r0, r6, r5
 2651 0cfa 80B2     		uxth	r0, r0
 2652 0cfc FFF7FEFF 		bl	Write_Data_Glcd
 2653              	.LVL329:
 140:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 2654              		.loc 1 140 0
 2655 0d00 4420     		movs	r0, #68
 2656 0d02 FFF7FEFF 		bl	Write_Command_Glcd
 2657              	.LVL330:
 141:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 2658              		.loc 1 141 0
 2659 0d06 2046     		mov	r0, r4
 2660 0d08 FFF7FEFF 		bl	Write_Data_Glcd
 2661              	.LVL331:
 143:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 2662              		.loc 1 143 0
 2663 0d0c 4420     		movs	r0, #68
 2664 0d0e FFF7FEFF 		bl	Write_Command_Glcd
 2665              	.LVL332:
 144:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 2666              		.loc 1 144 0
 2667 0d12 013C     		subs	r4, r4, #1
 2668 0d14 3F19     		adds	r7, r7, r4
 2669 0d16 3902     		lsls	r1, r7, #8
 2670 0d18 01F47F40 		and	r0, r1, #65280
 145:../Source Files/lpc_ssp_glcd.c **** }
 2671              		.loc 1 145 0
 2672 0d1c BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 144:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 2673              		.loc 1 144 0
 2674 0d20 FFF7FEBF 		b	Write_Data_Glcd
 2675              	.LVL333:
 2676              		.cfi_endproc
 2677              	.LFE58:
 2679              		.align	1
 2680              		.global	GLCD_Display_String
 2681              		.thumb
 2682              		.thumb_func
 2684              	GLCD_Display_String:
 2685              	.LFB71:
 473:../Source Files/lpc_ssp_glcd.c **** {
 2686              		.loc 1 473 0
 2687              		.cfi_startproc
 2688              		@ args = 0, pretend = 0, frame = 0
 2689              		@ frame_needed = 0, uses_anonymous_args = 0
 2690              	.LVL334:
 2691 0d24 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2692              	.LCFI22:
 2693              		.cfi_def_cfa_offset 24
 2694              		.cfi_offset 3, -24
 2695              		.cfi_offset 4, -20
 2696              		.cfi_offset 5, -16
 2697              		.cfi_offset 6, -12
 2698              		.cfi_offset 7, -8
 2699              		.cfi_offset 14, -4
 473:../Source Files/lpc_ssp_glcd.c **** {
 2700              		.loc 1 473 0
 2701 0d26 0746     		mov	r7, r0
 474:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2702              		.loc 1 474 0
 2703 0d28 0020     		movs	r0, #0
 2704              	.LVL335:
 473:../Source Files/lpc_ssp_glcd.c **** {
 2705              		.loc 1 473 0
 2706 0d2a 0E46     		mov	r6, r1
 2707 0d2c 1546     		mov	r5, r2
 474:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2708              		.loc 1 474 0
 2709 0d2e 0146     		mov	r1, r0
 2710              	.LVL336:
 2711 0d30 4FF4A072 		mov	r2, #320
 2712              	.LVL337:
 2713 0d34 F023     		movs	r3, #240
 2714 0d36 FFF7FEFF 		bl	GLCD_Window
 2715              	.LVL338:
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2716              		.loc 1 475 0
 2717 0d3a 0024     		movs	r4, #0
 2718              	.LVL339:
 2719              	.L188:
 472:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 2720              		.loc 1 472 0 discriminator 1
 2721 0d3c 3119     		adds	r1, r6, r4
 2722 0d3e 0134     		adds	r4, r4, #1
 2723 0d40 2B19     		adds	r3, r5, r4
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2724              		.loc 1 475 0 discriminator 1
 2725 0d42 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
 472:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 2726              		.loc 1 472 0 discriminator 1
 2727 0d46 89B2     		uxth	r1, r1
 2728              	.LVL340:
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2729              		.loc 1 475 0 discriminator 1
 2730 0d48 1AB1     		cbz	r2, .L190
 2731              	.L189:
 2732              	.LVL341:
 477:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 2733              		.loc 1 477 0
 2734 0d4a 3846     		mov	r0, r7
 2735 0d4c FFF7FEFF 		bl	GLCD_Display_Char
 2736              	.LVL342:
 2737 0d50 F4E7     		b	.L188
 2738              	.LVL343:
 2739              	.L190:
 479:../Source Files/lpc_ssp_glcd.c **** }
 2740              		.loc 1 479 0
 2741 0d52 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2742              		.cfi_endproc
 2743              	.LFE71:
 2745              		.align	1
 2746              		.global	GLCD_ClearLn
 2747              		.thumb
 2748              		.thumb_func
 2750              	GLCD_ClearLn:
 2751              	.LFB72:
 488:../Source Files/lpc_ssp_glcd.c **** {
 2752              		.loc 1 488 0
 2753              		.cfi_startproc
 2754              		@ args = 0, pretend = 0, frame = 0
 2755              		@ frame_needed = 0, uses_anonymous_args = 0
 2756              	.LVL344:
 2757 0d54 10B5     		push	{r4, lr}
 2758              	.LCFI23:
 2759              		.cfi_def_cfa_offset 8
 2760              		.cfi_offset 4, -8
 2761              		.cfi_offset 14, -4
 488:../Source Files/lpc_ssp_glcd.c **** {
 2762              		.loc 1 488 0
 2763 0d56 0446     		mov	r4, r0
 489:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2764              		.loc 1 489 0
 2765 0d58 0020     		movs	r0, #0
 2766              	.LVL345:
 2767 0d5a 0146     		mov	r1, r0
 2768 0d5c 4FF4A072 		mov	r2, #320
 2769 0d60 F023     		movs	r3, #240
 2770 0d62 FFF7FEFF 		bl	GLCD_Window
 2771              	.LVL346:
 490:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 2772              		.loc 1 490 0
 2773 0d66 034A     		ldr	r2, .L192
 2774 0d68 2046     		mov	r0, r4
 2775 0d6a 0021     		movs	r1, #0
 491:../Source Files/lpc_ssp_glcd.c **** }
 2776              		.loc 1 491 0
 2777 0d6c BDE81040 		pop	{r4, lr}
 490:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 2778              		.loc 1 490 0
 2779 0d70 FFF7FEBF 		b	GLCD_Display_String
 2780              	.LVL347:
 2781              	.L193:
 2782              		.align	2
 2783              	.L192:
 2784 0d74 00000000 		.word	.LC2
 2785              		.cfi_endproc
 2786              	.LFE72:
 2788              		.align	1
 2789              		.global	GLCD_Clear
 2790              		.thumb
 2791              		.thumb_func
 2793              	GLCD_Clear:
 2794              	.LFB68:
 379:../Source Files/lpc_ssp_glcd.c **** {
 2795              		.loc 1 379 0
 2796              		.cfi_startproc
 2797              		@ args = 0, pretend = 0, frame = 0
 2798              		@ frame_needed = 0, uses_anonymous_args = 0
 2799              	.LVL348:
 2800 0d78 38B5     		push	{r3, r4, r5, lr}
 2801              	.LCFI24:
 2802              		.cfi_def_cfa_offset 16
 2803              		.cfi_offset 3, -16
 2804              		.cfi_offset 4, -12
 2805              		.cfi_offset 5, -8
 2806              		.cfi_offset 14, -4
 379:../Source Files/lpc_ssp_glcd.c **** {
 2807              		.loc 1 379 0
 2808 0d7a 0546     		mov	r5, r0
 382:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 2809              		.loc 1 382 0
 2810 0d7c 0020     		movs	r0, #0
 2811              	.LVL349:
 2812 0d7e 0146     		mov	r1, r0
 2813 0d80 4FF4A072 		mov	r2, #320
 2814 0d84 F023     		movs	r3, #240
 2815 0d86 FFF7FEFF 		bl	GLCD_Window
 2816              	.LVL350:
 384:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 2817              		.loc 1 384 0
 2818 0d8a 4E20     		movs	r0, #78
 2819 0d8c FFF7FEFF 		bl	Write_Command_Glcd
 2820              	.LVL351:
 385:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 2821              		.loc 1 385 0
 2822 0d90 0020     		movs	r0, #0
 2823 0d92 FFF7FEFF 		bl	Write_Data_Glcd
 2824              	.LVL352:
 387:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 2825              		.loc 1 387 0
 2826 0d96 4F20     		movs	r0, #79
 2827 0d98 FFF7FEFF 		bl	Write_Command_Glcd
 2828              	.LVL353:
 388:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 2829              		.loc 1 388 0
 2830 0d9c 0020     		movs	r0, #0
 2831 0d9e FFF7FEFF 		bl	Write_Data_Glcd
 2832              	.LVL354:
 390:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 2833              		.loc 1 390 0
 2834 0da2 2220     		movs	r0, #34
 2835 0da4 FFF7FEFF 		bl	Write_Command_Glcd
 2836              	.LVL355:
 391:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 2837              		.loc 1 391 0
 2838 0da8 FFF72AF9 		bl	wr_dat_start
 2839              	.LVL356:
 2840 0dac 4FF49634 		mov	r4, #76800
 2841              	.LVL357:
 2842              	.L195:
 393:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 2843              		.loc 1 393 0 discriminator 2
 2844 0db0 2846     		mov	r0, r5
 2845 0db2 FFF739F9 		bl	wr_dat_only
 2846              	.LVL358:
 392:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 2847              		.loc 1 392 0 discriminator 2
 2848 0db6 013C     		subs	r4, r4, #1
 2849 0db8 FAD1     		bne	.L195
 395:../Source Files/lpc_ssp_glcd.c **** }
 2850              		.loc 1 395 0
 2851 0dba BDE83840 		pop	{r3, r4, r5, lr}
 394:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 2852              		.loc 1 394 0
 2853 0dbe FFF72DB9 		b	wr_dat_stop
 2854              	.LVL359:
 2855              		.cfi_endproc
 2856              	.LFE68:
 2858              		.align	1
 2859              		.global	GLCD_Set_Loc
 2860              		.thumb
 2861              		.thumb_func
 2863              	GLCD_Set_Loc:
 2864              	.LFB59:
 157:../Source Files/lpc_ssp_glcd.c **** {
 2865              		.loc 1 157 0
 2866              		.cfi_startproc
 2867              		@ args = 0, pretend = 0, frame = 0
 2868              		@ frame_needed = 0, uses_anonymous_args = 0
 2869              	.LVL360:
 2870 0dc2 38B5     		push	{r3, r4, r5, lr}
 2871              	.LCFI25:
 2872              		.cfi_def_cfa_offset 16
 2873              		.cfi_offset 3, -16
 2874              		.cfi_offset 4, -12
 2875              		.cfi_offset 5, -8
 2876              		.cfi_offset 14, -4
 157:../Source Files/lpc_ssp_glcd.c **** {
 2877              		.loc 1 157 0
 2878 0dc4 0C46     		mov	r4, r1
 2879 0dc6 0546     		mov	r5, r0
 158:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 2880              		.loc 1 158 0
 2881 0dc8 FFF7FEFF 		bl	GLCD_Window
 2882              	.LVL361:
 160:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 2883              		.loc 1 160 0
 2884 0dcc 4E20     		movs	r0, #78
 2885 0dce FFF7FEFF 		bl	Write_Command_Glcd
 2886              	.LVL362:
 161:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 2887              		.loc 1 161 0
 2888 0dd2 2846     		mov	r0, r5
 2889 0dd4 FFF7FEFF 		bl	Write_Data_Glcd
 2890              	.LVL363:
 163:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 2891              		.loc 1 163 0
 2892 0dd8 4F20     		movs	r0, #79
 2893 0dda FFF7FEFF 		bl	Write_Command_Glcd
 2894              	.LVL364:
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 2895              		.loc 1 164 0
 2896 0dde 2046     		mov	r0, r4
 2897 0de0 FFF7FEFF 		bl	Write_Data_Glcd
 2898              	.LVL365:
 166:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 2899              		.loc 1 166 0
 2900 0de4 2220     		movs	r0, #34
 167:../Source Files/lpc_ssp_glcd.c **** }
 2901              		.loc 1 167 0
 2902 0de6 BDE83840 		pop	{r3, r4, r5, lr}
 166:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 2903              		.loc 1 166 0
 2904 0dea FFF7FEBF 		b	Write_Command_Glcd
 2905              	.LVL366:
 2906              		.cfi_endproc
 2907              	.LFE59:
 2909              		.align	1
 2910              		.global	GLCD_Window_Fill
 2911              		.thumb
 2912              		.thumb_func
 2914              	GLCD_Window_Fill:
 2915              	.LFB75:
 591:../Source Files/lpc_ssp_glcd.c **** {
 2916              		.loc 1 591 0
 2917              		.cfi_startproc
 2918              		@ args = 4, pretend = 0, frame = 0
 2919              		@ frame_needed = 0, uses_anonymous_args = 0
 2920              	.LVL367:
 2921 0dee 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2922              	.LCFI26:
 2923              		.cfi_def_cfa_offset 24
 2924              		.cfi_offset 4, -24
 2925              		.cfi_offset 5, -20
 2926              		.cfi_offset 6, -16
 2927              		.cfi_offset 7, -12
 2928              		.cfi_offset 8, -8
 2929              		.cfi_offset 14, -4
 591:../Source Files/lpc_ssp_glcd.c **** {
 2930              		.loc 1 591 0
 2931 0df2 1746     		mov	r7, r2
 2932 0df4 1E46     		mov	r6, r3
 2933 0df6 BDF81880 		ldrh	r8, [sp, #24]
 594:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 2934              		.loc 1 594 0
 2935 0dfa FFF7FEFF 		bl	GLCD_Set_Loc
 2936              	.LVL368:
 596:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 2937              		.loc 1 596 0
 2938 0dfe FFF7FFF8 		bl	wr_dat_start
 2939              	.LVL369:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2940              		.loc 1 597 0
 2941 0e02 0024     		movs	r4, #0
 2942              	.LVL370:
 2943              	.L199:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2944              		.loc 1 597 0 is_stmt 0 discriminator 1
 2945 0e04 B442     		cmp	r4, r6
 2946 0e06 09D2     		bcs	.L203
 2947              	.L202:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2948              		.loc 1 597 0
 2949 0e08 0025     		movs	r5, #0
 2950              	.L201:
 2951              	.LVL371:
 599:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2952              		.loc 1 599 0 is_stmt 1 discriminator 1
 2953 0e0a BD42     		cmp	r5, r7
 2954 0e0c 04D2     		bcs	.L204
 2955              	.L200:
 601:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 2956              		.loc 1 601 0 discriminator 2
 2957 0e0e 4046     		mov	r0, r8
 2958 0e10 FFF70AF9 		bl	wr_dat_only
 2959              	.LVL372:
 599:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2960              		.loc 1 599 0 discriminator 2
 2961 0e14 0135     		adds	r5, r5, #1
 2962              	.LVL373:
 2963 0e16 F8E7     		b	.L201
 2964              	.L204:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2965              		.loc 1 597 0
 2966 0e18 0134     		adds	r4, r4, #1
 2967              	.LVL374:
 2968 0e1a F3E7     		b	.L199
 2969              	.LVL375:
 2970              	.L203:
 605:../Source Files/lpc_ssp_glcd.c **** }
 2971              		.loc 1 605 0
 2972 0e1c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 604:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 2973              		.loc 1 604 0
 2974 0e20 FFF7FCB8 		b	wr_dat_stop
 2975              	.LVL376:
 2976              		.cfi_endproc
 2977              	.LFE75:
 2979              		.align	1
 2980              		.global	GLCD_Bar
 2981              		.thumb
 2982              		.thumb_func
 2984              	GLCD_Bar:
 2985              	.LFB82:
1064:../Source Files/lpc_ssp_glcd.c **** {
 2986              		.loc 1 1064 0
 2987              		.cfi_startproc
 2988              		@ args = 0, pretend = 0, frame = 0
 2989              		@ frame_needed = 0, uses_anonymous_args = 0
 2990              	.LVL377:
1073:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
 2991              		.loc 1 1073 0
 2992 0e24 642A     		cmp	r2, #100
1064:../Source Files/lpc_ssp_glcd.c **** {
 2993              		.loc 1 1064 0
 2994 0e26 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2995              	.LCFI27:
 2996              		.cfi_def_cfa_offset 24
 2997              		.cfi_offset 0, -24
 2998              		.cfi_offset 1, -20
 2999              		.cfi_offset 2, -16
 3000              		.cfi_offset 4, -12
 3001              		.cfi_offset 5, -8
 3002              		.cfi_offset 14, -4
1064:../Source Files/lpc_ssp_glcd.c **** {
 3003              		.loc 1 1064 0
 3004 0e28 0C46     		mov	r4, r1
 3005 0e2a 1D46     		mov	r5, r3
1073:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
 3006              		.loc 1 1073 0
 3007 0e2c 12DC     		bgt	.L205
1073:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
 3008              		.loc 1 1073 0 is_stmt 0 discriminator 1
 3009 0e2e 0A28     		cmp	r0, #10
 3010 0e30 10DC     		bgt	.L205
1075:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Window_Fill(30+(index*26)-(width-(width/2)),220-(per*2),width,per*2,color);
 3011              		.loc 1 1075 0 is_stmt 1
 3012 0e32 1A23     		movs	r3, #26
 3013              	.LVL378:
 3014 0e34 5843     		muls	r0, r3, r0
 3015              	.LVL379:
 3016 0e36 1E30     		adds	r0, r0, #30
 3017 0e38 00EB5100 		add	r0, r0, r1, lsr #1
 3018 0e3c 401A     		subs	r0, r0, r1
 3019 0e3e C2F16E01 		rsb	r1, r2, #110
 3020              	.LVL380:
 3021 0e42 4B00     		lsls	r3, r1, #1
 3022 0e44 5200     		lsls	r2, r2, #1
 3023              	.LVL381:
 3024 0e46 99B2     		uxth	r1, r3
 3025 0e48 0095     		str	r5, [sp, #0]
 3026 0e4a 93B2     		uxth	r3, r2
 3027 0e4c 80B2     		uxth	r0, r0
 3028 0e4e 2246     		mov	r2, r4
 3029 0e50 FFF7FEFF 		bl	GLCD_Window_Fill
 3030              	.LVL382:
 3031              	.L205:
1077:../Source Files/lpc_ssp_glcd.c **** }
 3032              		.loc 1 1077 0
 3033 0e54 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 3034              		.cfi_endproc
 3035              	.LFE82:
 3037              		.align	1
 3038              		.global	BarGraph_Test
 3039              		.thumb
 3040              		.thumb_func
 3042              	BarGraph_Test:
 3043              	.LFB83:
1086:../Source Files/lpc_ssp_glcd.c **** {
 3044              		.loc 1 1086 0
 3045              		.cfi_startproc
 3046              		@ args = 0, pretend = 0, frame = 104
 3047              		@ frame_needed = 0, uses_anonymous_args = 0
 3048 0e56 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 3049              	.LCFI28:
 3050              		.cfi_def_cfa_offset 36
 3051              		.cfi_offset 4, -36
 3052              		.cfi_offset 5, -32
 3053              		.cfi_offset 6, -28
 3054              		.cfi_offset 7, -24
 3055              		.cfi_offset 8, -20
 3056              		.cfi_offset 9, -16
 3057              		.cfi_offset 10, -12
 3058              		.cfi_offset 11, -8
 3059              		.cfi_offset 14, -4
1089:../Source Files/lpc_ssp_glcd.c ****     uint8_t x_name[10][3]={"1","2","3","4","5","6","7","8","9","10"};
 3060              		.loc 1 1089 0
 3061 0e5a 934B     		ldr	r3, .L221
1086:../Source Files/lpc_ssp_glcd.c **** {
 3062              		.loc 1 1086 0
 3063 0e5c 9FB0     		sub	sp, sp, #124
 3064              	.LCFI29:
 3065              		.cfi_def_cfa_offset 160
1089:../Source Files/lpc_ssp_glcd.c ****     uint8_t x_name[10][3]={"1","2","3","4","5","6","7","8","9","10"};
 3066              		.loc 1 1089 0
 3067 0e5e 0CAA     		add	r2, sp, #48
 3068 0e60 03F11805 		add	r5, r3, #24
 3069              	.L208:
 3070 0e64 1868     		ldr	r0, [r3, #0]	@ unaligned
 3071 0e66 5968     		ldr	r1, [r3, #4]	@ unaligned
 3072 0e68 1446     		mov	r4, r2
 3073 0e6a 03C4     		stmia	r4!, {r0, r1}
 3074 0e6c 0833     		adds	r3, r3, #8
 3075 0e6e AB42     		cmp	r3, r5
 3076 0e70 2246     		mov	r2, r4
 3077 0e72 F7D1     		bne	.L208
 3078 0e74 1868     		ldr	r0, [r3, #0]	@ unaligned
 3079 0e76 9988     		ldrh	r1, [r3, #4]	@ unaligned
1090:../Source Files/lpc_ssp_glcd.c ****     uint8_t y_name[10][4]={"10","20","30","40","50","60","70","80","90","100"};
 3080              		.loc 1 1090 0
 3081 0e78 8C4E     		ldr	r6, .L221+4
1089:../Source Files/lpc_ssp_glcd.c ****     uint8_t x_name[10][3]={"1","2","3","4","5","6","7","8","9","10"};
 3082              		.loc 1 1089 0
 3083 0e7a 2060     		str	r0, [r4, #0]	@ unaligned
 3084 0e7c A180     		strh	r1, [r4, #4]	@ unaligned
1090:../Source Files/lpc_ssp_glcd.c ****     uint8_t y_name[10][4]={"10","20","30","40","50","60","70","80","90","100"};
 3085              		.loc 1 1090 0
 3086 0e7e 14AD     		add	r5, sp, #80
 3087 0e80 06F12807 		add	r7, r6, #40
 3088              	.L209:
 3089 0e84 3068     		ldr	r0, [r6, #0]	@ unaligned
 3090 0e86 7168     		ldr	r1, [r6, #4]	@ unaligned
 3091 0e88 2B46     		mov	r3, r5
 3092 0e8a 03C3     		stmia	r3!, {r0, r1}
 3093 0e8c 0836     		adds	r6, r6, #8
 3094 0e8e BE42     		cmp	r6, r7
 3095 0e90 1D46     		mov	r5, r3
 3096 0e92 F7D1     		bne	.L209
1094:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(30,5,30,238,Black);
 3097              		.loc 1 1094 0
 3098 0e94 0024     		movs	r4, #0
 3099 0e96 1E20     		movs	r0, #30
 3100 0e98 0246     		mov	r2, r0
 3101 0e9a 0521     		movs	r1, #5
 3102 0e9c EE23     		movs	r3, #238
 3103 0e9e 0094     		str	r4, [sp, #0]
 3104 0ea0 FFF7FEFF 		bl	GLCD_Line
 3105              	.LVL383:
1095:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(1,220,315,220,Black);
 3106              		.loc 1 1095 0
 3107 0ea4 DC21     		movs	r1, #220
1097:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(22,5,"Y",5,7,default5x7,1,Black);
 3108              		.loc 1 1097 0
 3109 0ea6 824E     		ldr	r6, .L221+8
1095:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(1,220,315,220,Black);
 3110              		.loc 1 1095 0
 3111 0ea8 0B46     		mov	r3, r1
 3112 0eaa 0120     		movs	r0, #1
 3113 0eac 40F23B12 		movw	r2, #315
 3114 0eb0 0094     		str	r4, [sp, #0]
 3115 0eb2 FFF7FEFF 		bl	GLCD_Line
 3116              	.LVL384:
1097:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(22,5,"Y",5,7,default5x7,1,Black);
 3117              		.loc 1 1097 0
 3118 0eb6 0125     		movs	r5, #1
 3119 0eb8 0727     		movs	r7, #7
 3120 0eba 0521     		movs	r1, #5
 3121 0ebc 0B46     		mov	r3, r1
 3122 0ebe 0295     		str	r5, [sp, #8]
 3123 0ec0 1620     		movs	r0, #22
 3124 0ec2 7C4A     		ldr	r2, .L221+12
 3125 0ec4 0097     		str	r7, [sp, #0]
 3126 0ec6 0196     		str	r6, [sp, #4]
 3127 0ec8 0394     		str	r4, [sp, #12]
 3128 0eca FFF7FEFF 		bl	GLCD_Text
 3129              	.LVL385:
1098:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(310,225,"X",5,7,default5x7,1,Black);
 3130              		.loc 1 1098 0
 3131 0ece 0295     		str	r5, [sp, #8]
 3132 0ed0 4FF49B70 		mov	r0, #310
 3133 0ed4 E121     		movs	r1, #225
 3134 0ed6 784A     		ldr	r2, .L221+16
 3135 0ed8 0523     		movs	r3, #5
 3136 0eda 0097     		str	r7, [sp, #0]
 3137 0edc 0196     		str	r6, [sp, #4]
 3138 0ede 0394     		str	r4, [sp, #12]
 3139 0ee0 FFF7FEFF 		bl	GLCD_Text
 3140              	.LVL386:
1099:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(50,5,"X=ADC-CH  Y=VAL  Y-MAX=4096  Y-UNIT=41",5,7,default5x7,1,Black);
 3141              		.loc 1 1099 0
 3142 0ee4 0521     		movs	r1, #5
 3143 0ee6 0B46     		mov	r3, r1
 3144 0ee8 0295     		str	r5, [sp, #8]
 3145 0eea 3220     		movs	r0, #50
 3146 0eec 734A     		ldr	r2, .L221+20
 3147 0eee 0097     		str	r7, [sp, #0]
 3148 0ef0 0196     		str	r6, [sp, #4]
 3149 0ef2 0394     		str	r4, [sp, #12]
 3150 0ef4 FFF7FEFF 		bl	GLCD_Text
 3151              	.LVL387:
1105:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
 3152              		.loc 1 1105 0
 3153 0ef8 4FF01C0B 		mov	fp, #28
1107:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
 3154              		.loc 1 1107 0
 3155 0efc 4FF0200A 		mov	sl, #32
1106:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 10;
 3156              		.loc 1 1106 0
 3157 0f00 0A22     		movs	r2, #10
1103:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
 3158              		.loc 1 1103 0
 3159 0f02 4FF01E0C 		mov	ip, #30
1112:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3160              		.loc 1 1112 0
 3161 0f06 0DEB0B00 		add	r0, sp, fp
 3162 0f0a 0DEB0A01 		add	r1, sp, sl
1104:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 5;
 3163              		.loc 1 1104 0
 3164 0f0e 4FF00509 		mov	r9, #5
1106:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 10;
 3165              		.loc 1 1106 0
 3166 0f12 ADF82220 		strh	r2, [sp, #34]	@ movhi
1108:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 10;
 3167              		.loc 1 1108 0
 3168 0f16 ADF82620 		strh	r2, [sp, #38]	@ movhi
1112:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3169              		.loc 1 1112 0
 3170 0f1a 0AAB     		add	r3, sp, #40
 3171 0f1c 09AA     		add	r2, sp, #36
1103:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
 3172              		.loc 1 1103 0
 3173 0f1e ADF81CC0 		strh	ip, [sp, #28]	@ movhi
1105:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
 3174              		.loc 1 1105 0
 3175 0f22 ADF820B0 		strh	fp, [sp, #32]	@ movhi
1107:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
 3176              		.loc 1 1107 0
 3177 0f26 ADF824A0 		strh	sl, [sp, #36]	@ movhi
1109:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 3178              		.loc 1 1109 0
 3179 0f2a 8DF82850 		strb	r5, [sp, #40]
1112:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3180              		.loc 1 1112 0
 3181 0f2e CDF814C0 		str	ip, [sp, #20]
1104:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 5;
 3182              		.loc 1 1104 0
 3183 0f32 ADF81E90 		strh	r9, [sp, #30]	@ movhi
1110:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 3184              		.loc 1 1110 0
 3185 0f36 8DF82940 		strb	r4, [sp, #41]
1111:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 3186              		.loc 1 1111 0
 3187 0f3a ADF82C40 		strh	r4, [sp, #44]	@ movhi
1112:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3188              		.loc 1 1112 0
 3189 0f3e FFF7FEFF 		bl	GLCD_Triangle
 3190              	.LVL388:
1115:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
 3191              		.loc 1 1115 0
 3192 0f42 DDF814C0 		ldr	ip, [sp, #20]
1118:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 233;
 3193              		.loc 1 1118 0
 3194 0f46 E921     		movs	r1, #233
1116:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 238;
 3195              		.loc 1 1116 0
 3196 0f48 EE20     		movs	r0, #238
 3197 0f4a ADF81E00 		strh	r0, [sp, #30]	@ movhi
1118:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 233;
 3198              		.loc 1 1118 0
 3199 0f4e ADF82210 		strh	r1, [sp, #34]	@ movhi
1124:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3200              		.loc 1 1124 0
 3201 0f52 0DEB0B00 		add	r0, sp, fp
1120:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 233;
 3202              		.loc 1 1120 0
 3203 0f56 ADF82610 		strh	r1, [sp, #38]	@ movhi
1124:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3204              		.loc 1 1124 0
 3205 0f5a 09AA     		add	r2, sp, #36
 3206 0f5c 0DEB0A01 		add	r1, sp, sl
 3207 0f60 0AAB     		add	r3, sp, #40
1115:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
 3208              		.loc 1 1115 0
 3209 0f62 ADF81CC0 		strh	ip, [sp, #28]	@ movhi
1117:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
 3210              		.loc 1 1117 0
 3211 0f66 ADF820B0 		strh	fp, [sp, #32]	@ movhi
1119:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
 3212              		.loc 1 1119 0
 3213 0f6a ADF824A0 		strh	sl, [sp, #36]	@ movhi
1121:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 3214              		.loc 1 1121 0
 3215 0f6e 8DF82850 		strb	r5, [sp, #40]
1122:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 3216              		.loc 1 1122 0
 3217 0f72 8DF82940 		strb	r4, [sp, #41]
1123:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 3218              		.loc 1 1123 0
 3219 0f76 ADF82C40 		strh	r4, [sp, #44]	@ movhi
1124:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3220              		.loc 1 1124 0
 3221 0f7a FFF7FEFF 		bl	GLCD_Triangle
 3222              	.LVL389:
1130:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 6;
 3223              		.loc 1 1130 0
 3224 0f7e 0623     		movs	r3, #6
1129:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
 3225              		.loc 1 1129 0
 3226 0f80 4FF0DC0C 		mov	ip, #220
1130:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 6;
 3227              		.loc 1 1130 0
 3228 0f84 ADF82030 		strh	r3, [sp, #32]	@ movhi
1131:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
 3229              		.loc 1 1131 0
 3230 0f88 4FF0DA0B 		mov	fp, #218
1132:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 6;
 3231              		.loc 1 1132 0
 3232 0f8c ADF82430 		strh	r3, [sp, #36]	@ movhi
1133:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
 3233              		.loc 1 1133 0
 3234 0f90 4FF0DE0A 		mov	sl, #222
1137:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3235              		.loc 1 1137 0
 3236 0f94 07A8     		add	r0, sp, #28
 3237 0f96 08A9     		add	r1, sp, #32
 3238 0f98 09AA     		add	r2, sp, #36
 3239 0f9a 0AAB     		add	r3, sp, #40
1128:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 1;
 3240              		.loc 1 1128 0
 3241 0f9c ADF81C50 		strh	r5, [sp, #28]	@ movhi
1129:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
 3242              		.loc 1 1129 0
 3243 0fa0 ADF81EC0 		strh	ip, [sp, #30]	@ movhi
1134:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 3244              		.loc 1 1134 0
 3245 0fa4 8DF82850 		strb	r5, [sp, #40]
1137:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3246              		.loc 1 1137 0
 3247 0fa8 CDF814C0 		str	ip, [sp, #20]
1131:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
 3248              		.loc 1 1131 0
 3249 0fac ADF822B0 		strh	fp, [sp, #34]	@ movhi
1133:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
 3250              		.loc 1 1133 0
 3251 0fb0 ADF826A0 		strh	sl, [sp, #38]	@ movhi
1135:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 3252              		.loc 1 1135 0
 3253 0fb4 8DF82940 		strb	r4, [sp, #41]
1136:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 3254              		.loc 1 1136 0
 3255 0fb8 ADF82C40 		strh	r4, [sp, #44]	@ movhi
1137:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3256              		.loc 1 1137 0
 3257 0fbc FFF7FEFF 		bl	GLCD_Triangle
 3258              	.LVL390:
1141:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
 3259              		.loc 1 1141 0
 3260 0fc0 DDF814C0 		ldr	ip, [sp, #20]
1142:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 310;
 3261              		.loc 1 1142 0
 3262 0fc4 4FF49B70 		mov	r0, #310
1140:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 315;
 3263              		.loc 1 1140 0
 3264 0fc8 40F23B12 		movw	r2, 315	@ movhi
 3265 0fcc ADF81C20 		strh	r2, [sp, #28]	@ movhi
1142:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 310;
 3266              		.loc 1 1142 0
 3267 0fd0 ADF82000 		strh	r0, [sp, #32]	@ movhi
1144:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 310;
 3268              		.loc 1 1144 0
 3269 0fd4 ADF82400 		strh	r0, [sp, #36]	@ movhi
1149:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3270              		.loc 1 1149 0
 3271 0fd8 08A9     		add	r1, sp, #32
 3272 0fda 07A8     		add	r0, sp, #28
 3273 0fdc 09AA     		add	r2, sp, #36
 3274 0fde 0AAB     		add	r3, sp, #40
1141:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
 3275              		.loc 1 1141 0
 3276 0fe0 ADF81EC0 		strh	ip, [sp, #30]	@ movhi
1146:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 3277              		.loc 1 1146 0
 3278 0fe4 8DF82850 		strb	r5, [sp, #40]
1143:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
 3279              		.loc 1 1143 0
 3280 0fe8 ADF822B0 		strh	fp, [sp, #34]	@ movhi
1145:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
 3281              		.loc 1 1145 0
 3282 0fec ADF826A0 		strh	sl, [sp, #38]	@ movhi
1147:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 3283              		.loc 1 1147 0
 3284 0ff0 8DF82940 		strb	r4, [sp, #41]
1148:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 3285              		.loc 1 1148 0
 3286 0ff4 ADF82C40 		strh	r4, [sp, #44]	@ movhi
1149:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3287              		.loc 1 1149 0
 3288 0ff8 FFF7FEFF 		bl	GLCD_Triangle
 3289              	.LVL391:
1152:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(0,225,"(0,0)",5,7,default5x7,1,Black);
 3290              		.loc 1 1152 0
 3291 0ffc 0295     		str	r5, [sp, #8]
 3292 0ffe 0097     		str	r7, [sp, #0]
 3293 1000 0196     		str	r6, [sp, #4]
 3294 1002 0394     		str	r4, [sp, #12]
 3295 1004 2046     		mov	r0, r4
 3296 1006 E121     		movs	r1, #225
 3297 1008 2D4A     		ldr	r2, .L221+24
 3298 100a 4B46     		mov	r3, r9
 3299 100c FFF7FEFF 		bl	GLCD_Text
 3300              	.LVL392:
1111:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 3301              		.loc 1 1111 0
 3302 1010 A046     		mov	r8, r4	@ movhi
1153:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=0; y_scale>=20; y_scale=y_scale-20,i++)
 3303              		.loc 1 1153 0
 3304 1012 C825     		movs	r5, #200
 3305              	.LVL393:
 3306              	.L212:
 3307 1014 2649     		ldr	r1, .L221+8
1157:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(14,y_scale,y_name[i],5,7,default5x7,1,Black);
 3308              		.loc 1 1157 0
 3309 1016 0726     		movs	r6, #7
 3310 1018 4FF00103 		mov	r3, #1
 3311 101c 4FF00000 		mov	r0, #0
1155:../Source Files/lpc_ssp_glcd.c **** 		if(y_scale!=20)
 3312              		.loc 1 1155 0
 3313 1020 142D     		cmp	r5, #20
1157:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(14,y_scale,y_name[i],5,7,default5x7,1,Black);
 3314              		.loc 1 1157 0
 3315 1022 0096     		str	r6, [sp, #0]
 3316 1024 4FEA8402 		lsl	r2, r4, #2
 3317 1028 0191     		str	r1, [sp, #4]
 3318 102a 0293     		str	r3, [sp, #8]
 3319 102c 0390     		str	r0, [sp, #12]
1155:../Source Files/lpc_ssp_glcd.c **** 		if(y_scale!=20)
 3320              		.loc 1 1155 0
 3321 102e 02D0     		beq	.L210
1157:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(14,y_scale,y_name[i],5,7,default5x7,1,Black);
 3322              		.loc 1 1157 0
 3323 1030 0E20     		movs	r0, #14
 3324 1032 29B2     		sxth	r1, r5
 3325 1034 01E0     		b	.L220
 3326              	.L210:
1161:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(10,y_scale,y_name[i],5,7,default5x7,1,Black);
 3327              		.loc 1 1161 0
 3328 1036 0A20     		movs	r0, #10
 3329 1038 2946     		mov	r1, r5
 3330              	.L220:
 3331 103a 14AE     		add	r6, sp, #80
1153:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=0; y_scale>=20; y_scale=y_scale-20,i++)
 3332              		.loc 1 1153 0
 3333 103c 143D     		subs	r5, r5, #20
1161:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(10,y_scale,y_name[i],5,7,default5x7,1,Black);
 3334              		.loc 1 1161 0
 3335 103e B218     		adds	r2, r6, r2
 3336 1040 0523     		movs	r3, #5
1153:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=0; y_scale>=20; y_scale=y_scale-20,i++)
 3337              		.loc 1 1153 0
 3338 1042 ADB2     		uxth	r5, r5
1161:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(10,y_scale,y_name[i],5,7,default5x7,1,Black);
 3339              		.loc 1 1161 0
 3340 1044 FFF7FEFF 		bl	GLCD_Text
 3341              	.LVL394:
 3342 1048 0134     		adds	r4, r4, #1
1153:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=0; y_scale>=20; y_scale=y_scale-20,i++)
 3343              		.loc 1 1153 0
 3344 104a 002D     		cmp	r5, #0
 3345 104c E2D1     		bne	.L212
 3346 104e 3826     		movs	r6, #56
 3347              	.LVL395:
 3348              	.L213:
1167:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Text(x_scale,225,x_name[i],5,7,default5x7,1,Black);
 3349              		.loc 1 1167 0 discriminator 2
 3350 1050 174A     		ldr	r2, .L221+8
 3351 1052 0023     		movs	r3, #0
 3352 1054 0721     		movs	r1, #7
 3353 1056 0124     		movs	r4, #1
 3354 1058 0192     		str	r2, [sp, #4]
 3355 105a 0393     		str	r3, [sp, #12]
 3356 105c 30B2     		sxth	r0, r6
 3357 105e 0322     		movs	r2, #3
 3358 1060 0CAB     		add	r3, sp, #48
1165:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=0; x_scale<=300; x_scale=x_scale+26,i++)
 3359              		.loc 1 1165 0 discriminator 2
 3360 1062 1A36     		adds	r6, r6, #26
1167:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Text(x_scale,225,x_name[i],5,7,default5x7,1,Black);
 3361              		.loc 1 1167 0 discriminator 2
 3362 1064 02FB0532 		mla	r2, r2, r5, r3
 3363 1068 0091     		str	r1, [sp, #0]
 3364 106a 0523     		movs	r3, #5
 3365 106c E121     		movs	r1, #225
 3366 106e 0294     		str	r4, [sp, #8]
1165:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=0; x_scale<=300; x_scale=x_scale+26,i++)
 3367              		.loc 1 1165 0 discriminator 2
 3368 1070 B6B2     		uxth	r6, r6
1167:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Text(x_scale,225,x_name[i],5,7,default5x7,1,Black);
 3369              		.loc 1 1167 0 discriminator 2
 3370 1072 FFF7FEFF 		bl	GLCD_Text
 3371              	.LVL396:
1165:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=0; x_scale<=300; x_scale=x_scale+26,i++)
 3372              		.loc 1 1165 0 discriminator 2
 3373 1076 B6F59E7F 		cmp	r6, #316
 3374 107a 2544     		add	r5, r5, r4
 3375 107c E8D1     		bne	.L213
 3376              	.L214:
1085:../Source Files/lpc_ssp_glcd.c **** void BarGraph_Test(void)
 3377              		.loc 1 1085 0 discriminator 2
 3378 107e 0A22     		movs	r2, #10
 3379 1080 6243     		muls	r2, r4, r2
1173:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Bar(i,24,i*10,Green);
 3380              		.loc 1 1173 0 discriminator 2
 3381 1082 20B2     		sxth	r0, r4
 3382 1084 1821     		movs	r1, #24
 3383 1086 12B2     		sxth	r2, r2
 3384 1088 4FF4FC63 		mov	r3, #2016
 3385 108c FFF7FEFF 		bl	GLCD_Bar
 3386              	.LVL397:
1174:../Source Files/lpc_ssp_glcd.c **** 		delay_ms(500);
 3387              		.loc 1 1174 0 discriminator 2
 3388 1090 4FF4FA70 		mov	r0, #500
 3389 1094 FFF7FEFF 		bl	delay_ms
 3390              	.LVL398:
1171:../Source Files/lpc_ssp_glcd.c **** 	for(i=1;i<=10;i=i++)
 3391              		.loc 1 1171 0 discriminator 2
 3392 1098 601C     		adds	r0, r4, #1
 3393 109a 84B2     		uxth	r4, r0
 3394              	.LVL399:
 3395 109c 0B2C     		cmp	r4, #11
 3396 109e EED1     		bne	.L214
1183:../Source Files/lpc_ssp_glcd.c **** }
 3397              		.loc 1 1183 0
 3398 10a0 1FB0     		add	sp, sp, #124
 3399 10a2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 3400              	.L222:
 3401 10a6 00BF     		.align	2
 3402              	.L221:
 3403 10a8 00150000 		.word	.LANCHOR3+1032
 3404 10ac 1E150000 		.word	.LANCHOR3+1062
 3405 10b0 46150000 		.word	.LANCHOR3+1102
 3406 10b4 15000000 		.word	.LC3
 3407 10b8 17000000 		.word	.LC4
 3408 10bc 19000000 		.word	.LC5
 3409 10c0 40000000 		.word	.LC6
 3410              		.cfi_endproc
 3411              	.LFE83:
 3413              		.align	1
 3414              		.global	GLCD_Rect
 3415              		.thumb
 3416              		.thumb_func
 3418              	GLCD_Rect:
 3419              	.LFB77:
 691:../Source Files/lpc_ssp_glcd.c **** {
 3420              		.loc 1 691 0
 3421              		.cfi_startproc
 3422              		@ args = 4, pretend = 0, frame = 0
 3423              		@ frame_needed = 0, uses_anonymous_args = 0
 3424              	.LVL400:
 3425 10c4 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3426              	.LCFI30:
 3427              		.cfi_def_cfa_offset 32
 3428              		.cfi_offset 0, -32
 3429              		.cfi_offset 1, -28
 3430              		.cfi_offset 4, -24
 3431              		.cfi_offset 5, -20
 3432              		.cfi_offset 6, -16
 3433              		.cfi_offset 7, -12
 3434              		.cfi_offset 8, -8
 3435              		.cfi_offset 14, -4
 691:../Source Files/lpc_ssp_glcd.c **** {
 3436              		.loc 1 691 0
 3437 10c8 0C46     		mov	r4, r1
 3438 10ca 0546     		mov	r5, r0
 3439 10cc 9846     		mov	r8, r3
 3440 10ce BDF82010 		ldrh	r1, [sp, #32]
 3441              	.LVL401:
 694:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 3442              		.loc 1 694 0
 3443 10d2 002A     		cmp	r2, #0
 3444 10d4 41D0     		beq	.L224
 696:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 3445              		.loc 1 696 0
 3446 10d6 B0F800E0 		ldrh	lr, [r0, #0]
 3447 10da 2288     		ldrh	r2, [r4, #0]
 3448              	.LVL402:
 3449 10dc 0FFA8EF3 		sxth	r3, lr
 3450              	.LVL403:
 3451 10e0 10B2     		sxth	r0, r2
 3452              	.LVL404:
 3453 10e2 6788     		ldrh	r7, [r4, #2]
 3454 10e4 6E88     		ldrh	r6, [r5, #2]
 3455 10e6 9842     		cmp	r0, r3
 698:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 3456              		.loc 1 698 0
 3457 10e8 38B2     		sxth	r0, r7
 3458 10ea 33B2     		sxth	r3, r6
 696:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 3459              		.loc 1 696 0
 3460 10ec 13DD     		ble	.L225
 698:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 3461              		.loc 1 698 0
 3462 10ee 9842     		cmp	r0, r3
 3463 10f0 1FFA8EFC 		uxth	ip, lr
 3464 10f4 07DD     		ble	.L226
 3465              	.LVL405:
 701:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 3466              		.loc 1 701 0
 3467 10f6 B6B2     		uxth	r6, r6
 3468              	.LVL406:
 700:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 3469              		.loc 1 700 0
 3470 10f8 013A     		subs	r2, r2, #1
 3471              	.LVL407:
 702:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 3472              		.loc 1 702 0
 3473 10fa 0CF10100 		add	r0, ip, #1
 3474 10fe 731C     		adds	r3, r6, #1
 3475 1100 CCEB0202 		rsb	r2, ip, r2
 3476              	.LVL408:
 3477 1104 11E0     		b	.L233
 3478              	.LVL409:
 3479              	.L226:
 707:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 3480              		.loc 1 707 0
 3481 1106 BFB2     		uxth	r7, r7
 3482              	.LVL410:
 706:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 3483              		.loc 1 706 0
 3484 1108 013A     		subs	r2, r2, #1
 3485              	.LVL411:
 708:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 3486              		.loc 1 708 0
 3487 110a 0CF10100 		add	r0, ip, #1
 3488 110e 7B1C     		adds	r3, r7, #1
 3489 1110 CCEB0202 		rsb	r2, ip, r2
 3490 1114 18E0     		b	.L231
 3491              	.LVL412:
 3492              	.L225:
 713:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 3493              		.loc 1 713 0
 3494 1116 9842     		cmp	r0, r3
 3495 1118 92B2     		uxth	r2, r2
 3496 111a 0EDD     		ble	.L227
 3497              	.LVL413:
 716:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 3498              		.loc 1 716 0
 3499 111c B6B2     		uxth	r6, r6
 3500              	.LVL414:
 715:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 3501              		.loc 1 715 0
 3502 111e 0EF1FF3E 		add	lr, lr, #-1
 3503              	.LVL415:
 717:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 3504              		.loc 1 717 0
 3505 1122 501C     		adds	r0, r2, #1
 3506 1124 731C     		adds	r3, r6, #1
 3507 1126 C2EB0E02 		rsb	r2, r2, lr
 3508              	.LVL416:
 3509              	.L233:
 716:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 3510              		.loc 1 716 0
 3511 112a 013F     		subs	r7, r7, #1
 717:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 3512              		.loc 1 717 0
 3513 112c BE1B     		subs	r6, r7, r6
 3514 112e 0091     		str	r1, [sp, #0]
 3515 1130 80B2     		uxth	r0, r0
 3516 1132 99B2     		uxth	r1, r3
 3517 1134 92B2     		uxth	r2, r2
 3518 1136 B3B2     		uxth	r3, r6
 3519 1138 0DE0     		b	.L232
 3520              	.L227:
 3521              	.LVL417:
 722:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 3522              		.loc 1 722 0
 3523 113a BFB2     		uxth	r7, r7
 3524              	.LVL418:
 721:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 3525              		.loc 1 721 0
 3526 113c 0EF1FF3C 		add	ip, lr, #-1
 723:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 3527              		.loc 1 723 0
 3528 1140 501C     		adds	r0, r2, #1
 3529 1142 7B1C     		adds	r3, r7, #1
 3530 1144 C2EB0C02 		rsb	r2, r2, ip
 3531              	.LVL419:
 3532              	.L231:
 722:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 3533              		.loc 1 722 0
 3534 1148 013E     		subs	r6, r6, #1
 723:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 3535              		.loc 1 723 0
 3536 114a F71B     		subs	r7, r6, r7
 3537 114c 0091     		str	r1, [sp, #0]
 3538 114e 80B2     		uxth	r0, r0
 3539 1150 99B2     		uxth	r1, r3
 3540 1152 92B2     		uxth	r2, r2
 3541 1154 BBB2     		uxth	r3, r7
 3542              	.L232:
 3543 1156 FFF7FEFF 		bl	GLCD_Window_Fill
 3544              	.LVL420:
 3545              	.L224:
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 3546              		.loc 1 730 0
 3547 115a B5F90210 		ldrsh	r1, [r5, #2]
 3548 115e B5F90000 		ldrsh	r0, [r5, #0]
 3549 1162 B4F90020 		ldrsh	r2, [r4, #0]
 3550 1166 0B46     		mov	r3, r1
 3551 1168 CDF80080 		str	r8, [sp, #0]
 3552 116c FFF7FEFF 		bl	GLCD_Line
 3553              	.LVL421:
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 3554              		.loc 1 731 0
 3555 1170 B4F90210 		ldrsh	r1, [r4, #2]
 3556 1174 B5F90000 		ldrsh	r0, [r5, #0]
 3557 1178 B4F90020 		ldrsh	r2, [r4, #0]
 3558 117c 0B46     		mov	r3, r1
 3559 117e CDF80080 		str	r8, [sp, #0]
 3560 1182 FFF7FEFF 		bl	GLCD_Line
 3561              	.LVL422:
 732:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 3562              		.loc 1 732 0
 3563 1186 B5F90000 		ldrsh	r0, [r5, #0]
 3564 118a B5F90210 		ldrsh	r1, [r5, #2]
 3565 118e B4F90230 		ldrsh	r3, [r4, #2]
 3566 1192 0246     		mov	r2, r0
 3567 1194 CDF80080 		str	r8, [sp, #0]
 3568 1198 FFF7FEFF 		bl	GLCD_Line
 3569              	.LVL423:
 733:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 3570              		.loc 1 733 0
 3571 119c B4F90000 		ldrsh	r0, [r4, #0]
 3572 11a0 B5F90210 		ldrsh	r1, [r5, #2]
 3573 11a4 B4F90230 		ldrsh	r3, [r4, #2]
 3574 11a8 0246     		mov	r2, r0
 3575 11aa CDF82080 		str	r8, [sp, #32]
 735:../Source Files/lpc_ssp_glcd.c **** }
 3576              		.loc 1 735 0
 3577 11ae 02B0     		add	sp, sp, #8
 3578 11b0 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 733:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 3579              		.loc 1 733 0
 3580 11b4 FFF7FEBF 		b	GLCD_Line
 3581              	.LVL424:
 3582              		.cfi_endproc
 3583              	.LFE77:
 3585              		.align	1
 3586              		.global	GLCD_Bitmap
 3587              		.thumb
 3588              		.thumb_func
 3590              	GLCD_Bitmap:
 3591              	.LFB74:
 560:../Source Files/lpc_ssp_glcd.c **** {
 3592              		.loc 1 560 0
 3593              		.cfi_startproc
 3594              		@ args = 4, pretend = 0, frame = 0
 3595              		@ frame_needed = 0, uses_anonymous_args = 0
 3596              	.LVL425:
 3597 11b8 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 3598              	.LCFI31:
 3599              		.cfi_def_cfa_offset 32
 3600              		.cfi_offset 4, -32
 3601              		.cfi_offset 5, -28
 3602              		.cfi_offset 6, -24
 3603              		.cfi_offset 7, -20
 3604              		.cfi_offset 8, -16
 3605              		.cfi_offset 9, -12
 3606              		.cfi_offset 10, -8
 3607              		.cfi_offset 14, -4
 560:../Source Files/lpc_ssp_glcd.c **** {
 3608              		.loc 1 560 0
 3609 11bc DDF82080 		ldr	r8, [sp, #32]
 3610 11c0 1746     		mov	r7, r2
 3611 11c2 9946     		mov	r9, r3
 563:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 3612              		.loc 1 563 0
 3613 11c4 FFF7FEFF 		bl	GLCD_Set_Loc
 3614              	.LVL426:
 565:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 3615              		.loc 1 565 0
 3616 11c8 FEF71AFF 		bl	wr_dat_start
 3617              	.LVL427:
 566:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 3618              		.loc 1 566 0
 3619 11cc 1025     		movs	r5, #16
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3620              		.loc 1 567 0
 3621 11ce 0026     		movs	r6, #0
 3622              	.LVL428:
 3623              	.L235:
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3624              		.loc 1 567 0 is_stmt 0 discriminator 1
 3625 11d0 4E45     		cmp	r6, r9
 3626 11d2 0DD2     		bcs	.L237
 559:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 3627              		.loc 1 559 0 is_stmt 1
 3628 11d4 08EB450A 		add	sl, r8, r5, lsl #1
 3629 11d8 0024     		movs	r4, #0
 3630              	.LVL429:
 3631              	.L238:
 569:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 3632              		.loc 1 569 0 discriminator 1
 3633 11da BC42     		cmp	r4, r7
 3634 11dc 05D2     		bcs	.L239
 3635              	.L236:
 571:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 3636              		.loc 1 571 0 discriminator 2
 3637 11de 3AF81400 		ldrh	r0, [sl, r4, lsl #1]
 3638 11e2 FEF721FF 		bl	wr_dat_only
 3639              	.LVL430:
 569:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 3640              		.loc 1 569 0 discriminator 2
 3641 11e6 0134     		adds	r4, r4, #1
 3642              	.LVL431:
 3643 11e8 F7E7     		b	.L238
 3644              	.L239:
 559:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 3645              		.loc 1 559 0
 3646 11ea ED19     		adds	r5, r5, r7
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3647              		.loc 1 567 0
 3648 11ec 0136     		adds	r6, r6, #1
 3649              	.LVL432:
 3650 11ee EFE7     		b	.L235
 3651              	.LVL433:
 3652              	.L237:
 575:../Source Files/lpc_ssp_glcd.c **** }
 3653              		.loc 1 575 0
 3654 11f0 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 574:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 3655              		.loc 1 574 0
 3656 11f4 FEF712BF 		b	wr_dat_stop
 3657              	.LVL434:
 3658              		.cfi_endproc
 3659              	.LFE74:
 3661              		.align	1
 3662              		.global	GLCD_Display_Home
 3663              		.thumb
 3664              		.thumb_func
 3666              	GLCD_Display_Home:
 3667              	.LFB60:
 176:../Source Files/lpc_ssp_glcd.c **** {
 3668              		.loc 1 176 0
 3669              		.cfi_startproc
 3670              		@ args = 0, pretend = 0, frame = 0
 3671              		@ frame_needed = 0, uses_anonymous_args = 0
 3672              		@ link register save eliminated.
 177:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 3673              		.loc 1 177 0
 3674 11f8 0020     		movs	r0, #0
 3675 11fa 0146     		mov	r1, r0
 3676 11fc 4FF4A072 		mov	r2, #320
 3677 1200 F023     		movs	r3, #240
 178:../Source Files/lpc_ssp_glcd.c **** }
 3678              		.loc 1 178 0
 177:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 3679              		.loc 1 177 0
 3680 1202 FFF7FEBF 		b	GLCD_Set_Loc
 3681              	.LVL435:
 3682              		.cfi_endproc
 3683              	.LFE60:
 3685              		.align	1
 3686              		.global	GLCD_Driver_OutCtrl
 3687              		.thumb
 3688              		.thumb_func
 3690              	GLCD_Driver_OutCtrl:
 3691              	.LFB57:
  96:../Source Files/lpc_ssp_glcd.c **** {
 3692              		.loc 1 96 0
 3693              		.cfi_startproc
 3694              		@ args = 0, pretend = 0, frame = 0
 3695              		@ frame_needed = 0, uses_anonymous_args = 0
 3696              	.LVL436:
 3697 1206 10B5     		push	{r4, lr}
 3698              	.LCFI32:
 3699              		.cfi_def_cfa_offset 8
 3700              		.cfi_offset 4, -8
 3701              		.cfi_offset 14, -4
  96:../Source Files/lpc_ssp_glcd.c **** {
 3702              		.loc 1 96 0
 3703 1208 0446     		mov	r4, r0
  97:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
 3704              		.loc 1 97 0
 3705 120a 0120     		movs	r0, #1
 3706              	.LVL437:
 3707 120c FFF7FEFF 		bl	Write_Command_Glcd
 3708              	.LVL438:
  99:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
 3709              		.loc 1 99 0
 3710 1210 032C     		cmp	r4, #3
 3711 1212 12D8     		bhi	.L241
 3712 1214 DFE804F0 		tbb	[pc, r4]
 3713              	.L247:
 3714 1218 02       		.byte	(.L243-.L247)/2
 3715 1219 05       		.byte	(.L244-.L247)/2
 3716 121a 08       		.byte	(.L245-.L247)/2
 3717 121b 0B       		.byte	(.L246-.L247)/2
 3718              		.align	1
 3719              	.L243:
 102:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 3720              		.loc 1 102 0
 3721 121c 47F2EF20 		movw	r0, #29423
 3722 1220 07E0     		b	.L248
 3723              	.L244:
 106:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 3724              		.loc 1 106 0
 3725 1222 47F2EF00 		movw	r0, #28911
 3726 1226 04E0     		b	.L248
 3727              	.L245:
 110:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 3728              		.loc 1 110 0
 3729 1228 43F2EF20 		movw	r0, #13039
 3730 122c 01E0     		b	.L248
 3731              	.L246:
 114:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 3732              		.loc 1 114 0
 3733 122e 43F2EF00 		movw	r0, #12527
 3734              	.L248:
 120:../Source Files/lpc_ssp_glcd.c **** }
 3735              		.loc 1 120 0
 3736 1232 BDE81040 		pop	{r4, lr}
 114:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 3737              		.loc 1 114 0
 3738 1236 FFF7FEBF 		b	Write_Data_Glcd
 3739              	.LVL439:
 3740              	.L241:
 3741 123a 10BD     		pop	{r4, pc}
 3742              		.cfi_endproc
 3743              	.LFE57:
 3745              		.align	1
 3746              		.global	GLCD_Init
 3747              		.thumb
 3748              		.thumb_func
 3750              	GLCD_Init:
 3751              	.LFB61:
 187:../Source Files/lpc_ssp_glcd.c **** {
 3752              		.loc 1 187 0
 3753              		.cfi_startproc
 3754              		@ args = 0, pretend = 0, frame = 0
 3755              		@ frame_needed = 0, uses_anonymous_args = 0
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 3756              		.loc 1 188 0
 3757 123c 0121     		movs	r1, #1
 187:../Source Files/lpc_ssp_glcd.c **** {
 3758              		.loc 1 187 0
 3759 123e 10B5     		push	{r4, lr}
 3760              	.LCFI33:
 3761              		.cfi_def_cfa_offset 8
 3762              		.cfi_offset 4, -8
 3763              		.cfi_offset 14, -4
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 3764              		.loc 1 188 0
 3765 1240 0220     		movs	r0, #2
 3766 1242 0A46     		mov	r2, r1
 3767 1244 FFF7FEFF 		bl	GPIO_SetDir
 3768              	.LVL440:
 189:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 3769              		.loc 1 189 0
 3770 1248 0020     		movs	r0, #0
 3771 124a 2021     		movs	r1, #32
 3772 124c 0122     		movs	r2, #1
 3773 124e FFF7FEFF 		bl	GPIO_SetDir
 3774              	.LVL441:
 190:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 3775              		.loc 1 190 0
 3776 1252 4FF48071 		mov	r1, #256
 3777 1256 0122     		movs	r2, #1
 3778 1258 0220     		movs	r0, #2
 3779 125a FFF7FEFF 		bl	GPIO_SetDir
 3780              	.LVL442:
 192:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 3781              		.loc 1 192 0
 3782 125e 0220     		movs	r0, #2
 3783 1260 FFF7FEFF 		bl	delay_ms
 3784              	.LVL443:
 193:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 3785              		.loc 1 193 0
 3786 1264 FFF7FEFF 		bl	GLCD_Reset
 3787              	.LVL444:
 194:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 3788              		.loc 1 194 0
 3789 1268 0120     		movs	r0, #1
 3790 126a FFF7FEFF 		bl	GLCD_Backlight
 3791              	.LVL445:
 195:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 3792              		.loc 1 195 0
 3793 126e 0220     		movs	r0, #2
 3794 1270 FFF7FEFF 		bl	delay_ms
 3795              	.LVL446:
 197:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 3796              		.loc 1 197 0
 3797 1274 2820     		movs	r0, #40
 3798 1276 FFF7FEFF 		bl	Write_Command_Glcd
 3799              	.LVL447:
 198:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 3800              		.loc 1 198 0
 3801 127a 0620     		movs	r0, #6
 3802 127c FFF7FEFF 		bl	Write_Data_Glcd
 3803              	.LVL448:
 200:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 3804              		.loc 1 200 0
 3805 1280 0020     		movs	r0, #0
 3806 1282 FFF7FEFF 		bl	Write_Command_Glcd
 3807              	.LVL449:
 201:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 3808              		.loc 1 201 0
 3809 1286 0120     		movs	r0, #1
 3810 1288 FFF7FEFF 		bl	Write_Data_Glcd
 3811              	.LVL450:
 203:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 3812              		.loc 1 203 0
 3813 128c 1020     		movs	r0, #16
 3814 128e FFF7FEFF 		bl	Write_Command_Glcd
 3815              	.LVL451:
 204:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 3816              		.loc 1 204 0
 3817 1292 0020     		movs	r0, #0
 3818 1294 FFF7FEFF 		bl	Write_Data_Glcd
 3819              	.LVL452:
 206:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 3820              		.loc 1 206 0
 3821 1298 0020     		movs	r0, #0
 3822 129a FFF7FEFF 		bl	GLCD_Driver_OutCtrl
 3823              	.LVL453:
 208:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 3824              		.loc 1 208 0
 3825 129e 0220     		movs	r0, #2
 3826 12a0 FFF7FEFF 		bl	Write_Command_Glcd
 3827              	.LVL454:
 209:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 3828              		.loc 1 209 0
 3829 12a4 4FF4C060 		mov	r0, #1536
 3830 12a8 FFF7FEFF 		bl	Write_Data_Glcd
 3831              	.LVL455:
 211:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 3832              		.loc 1 211 0
 3833 12ac 0320     		movs	r0, #3
 3834 12ae FFF7FEFF 		bl	Write_Command_Glcd
 3835              	.LVL456:
 212:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 3836              		.loc 1 212 0
 3837 12b2 46F63820 		movw	r0, #27192
 3838 12b6 FFF7FEFF 		bl	Write_Data_Glcd
 3839              	.LVL457:
 214:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 3840              		.loc 1 214 0
 3841 12ba 1120     		movs	r0, #17
 3842 12bc FFF7FEFF 		bl	Write_Command_Glcd
 3843              	.LVL458:
 215:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 3844              		.loc 1 215 0
 3845 12c0 46F67000 		movw	r0, #26736
 3846 12c4 FFF7FEFF 		bl	Write_Data_Glcd
 3847              	.LVL459:
 217:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 3848              		.loc 1 217 0
 3849 12c8 0F20     		movs	r0, #15
 3850 12ca FFF7FEFF 		bl	Write_Command_Glcd
 3851              	.LVL460:
 218:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 3852              		.loc 1 218 0
 3853 12ce 0020     		movs	r0, #0
 3854 12d0 FFF7FEFF 		bl	Write_Data_Glcd
 3855              	.LVL461:
 220:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 3856              		.loc 1 220 0
 3857 12d4 0B20     		movs	r0, #11
 3858 12d6 FFF7FEFF 		bl	Write_Command_Glcd
 3859              	.LVL462:
 221:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 3860              		.loc 1 221 0
 3861 12da 45F20830 		movw	r0, #21256
 3862 12de FFF7FEFF 		bl	Write_Data_Glcd
 3863              	.LVL463:
 223:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 3864              		.loc 1 223 0
 3865 12e2 0C20     		movs	r0, #12
 3866 12e4 FFF7FEFF 		bl	Write_Command_Glcd
 3867              	.LVL464:
 224:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 3868              		.loc 1 224 0
 3869 12e8 0320     		movs	r0, #3
 3870 12ea FFF7FEFF 		bl	Write_Data_Glcd
 3871              	.LVL465:
 226:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 3872              		.loc 1 226 0
 3873 12ee 0D20     		movs	r0, #13
 3874 12f0 FFF7FEFF 		bl	Write_Command_Glcd
 3875              	.LVL466:
 227:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 3876              		.loc 1 227 0
 3877 12f4 0A20     		movs	r0, #10
 3878 12f6 FFF7FEFF 		bl	Write_Data_Glcd
 3879              	.LVL467:
 229:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 3880              		.loc 1 229 0
 3881 12fa 0E20     		movs	r0, #14
 3882 12fc FFF7FEFF 		bl	Write_Command_Glcd
 3883              	.LVL468:
 230:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 3884              		.loc 1 230 0
 3885 1300 4FF43850 		mov	r0, #11776
 3886 1304 FFF7FEFF 		bl	Write_Data_Glcd
 3887              	.LVL469:
 232:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 3888              		.loc 1 232 0
 3889 1308 1E20     		movs	r0, #30
 3890 130a FFF7FEFF 		bl	Write_Command_Glcd
 3891              	.LVL470:
 233:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 3892              		.loc 1 233 0
 3893 130e BE20     		movs	r0, #190
 3894 1310 FFF7FEFF 		bl	Write_Data_Glcd
 3895              	.LVL471:
 235:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 3896              		.loc 1 235 0
 3897 1314 2520     		movs	r0, #37
 3898 1316 FFF7FEFF 		bl	Write_Command_Glcd
 3899              	.LVL472:
 236:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 3900              		.loc 1 236 0
 3901 131a 4FF40040 		mov	r0, #32768
 3902 131e FFF7FEFF 		bl	Write_Data_Glcd
 3903              	.LVL473:
 238:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 3904              		.loc 1 238 0
 3905 1322 2620     		movs	r0, #38
 3906 1324 FFF7FEFF 		bl	Write_Command_Glcd
 3907              	.LVL474:
 239:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 3908              		.loc 1 239 0
 3909 1328 4FF4F040 		mov	r0, #30720
 3910 132c FFF7FEFF 		bl	Write_Data_Glcd
 3911              	.LVL475:
 241:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 3912              		.loc 1 241 0
 3913 1330 4E20     		movs	r0, #78
 3914 1332 FFF7FEFF 		bl	Write_Command_Glcd
 3915              	.LVL476:
 242:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 3916              		.loc 1 242 0
 3917 1336 0020     		movs	r0, #0
 3918 1338 FFF7FEFF 		bl	Write_Data_Glcd
 3919              	.LVL477:
 244:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 3920              		.loc 1 244 0
 3921 133c 4F20     		movs	r0, #79
 3922 133e FFF7FEFF 		bl	Write_Command_Glcd
 3923              	.LVL478:
 245:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 3924              		.loc 1 245 0
 3925 1342 0020     		movs	r0, #0
 3926 1344 FFF7FEFF 		bl	Write_Data_Glcd
 3927              	.LVL479:
 247:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 3928              		.loc 1 247 0
 3929 1348 1220     		movs	r0, #18
 3930 134a FFF7FEFF 		bl	Write_Command_Glcd
 3931              	.LVL480:
 248:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 3932              		.loc 1 248 0
 3933 134e 40F6D900 		movw	r0, #2265
 3934 1352 FFF7FEFF 		bl	Write_Data_Glcd
 3935              	.LVL481:
 251:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 3936              		.loc 1 251 0
 3937 1356 3020     		movs	r0, #48
 3938 1358 FFF7FEFF 		bl	Write_Command_Glcd
 3939              	.LVL482:
 252:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 3940              		.loc 1 252 0
 3941 135c 0020     		movs	r0, #0
 3942 135e FFF7FEFF 		bl	Write_Data_Glcd
 3943              	.LVL483:
 254:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 3944              		.loc 1 254 0
 3945 1362 3120     		movs	r0, #49
 3946 1364 FFF7FEFF 		bl	Write_Command_Glcd
 3947              	.LVL484:
 255:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 3948              		.loc 1 255 0
 3949 1368 4FF48270 		mov	r0, #260
 3950 136c FFF7FEFF 		bl	Write_Data_Glcd
 3951              	.LVL485:
 257:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 3952              		.loc 1 257 0
 3953 1370 3220     		movs	r0, #50
 3954 1372 FFF7FEFF 		bl	Write_Command_Glcd
 3955              	.LVL486:
 258:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 3956              		.loc 1 258 0
 3957 1376 4FF48070 		mov	r0, #256
 3958 137a FFF7FEFF 		bl	Write_Data_Glcd
 3959              	.LVL487:
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3960              		.loc 1 261 0
 3961 137e 40F20534 		movw	r4, #773
 260:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 3962              		.loc 1 260 0
 3963 1382 3320     		movs	r0, #51
 3964 1384 FFF7FEFF 		bl	Write_Command_Glcd
 3965              	.LVL488:
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3966              		.loc 1 261 0
 3967 1388 2046     		mov	r0, r4
 3968 138a FFF7FEFF 		bl	Write_Data_Glcd
 3969              	.LVL489:
 263:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 3970              		.loc 1 263 0
 3971 138e 3420     		movs	r0, #52
 3972 1390 FFF7FEFF 		bl	Write_Command_Glcd
 3973              	.LVL490:
 264:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 3974              		.loc 1 264 0
 3975 1394 40F20550 		movw	r0, #1285
 3976 1398 FFF7FEFF 		bl	Write_Data_Glcd
 3977              	.LVL491:
 266:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 3978              		.loc 1 266 0
 3979 139c 3520     		movs	r0, #53
 3980 139e FFF7FEFF 		bl	Write_Command_Glcd
 3981              	.LVL492:
 267:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3982              		.loc 1 267 0
 3983 13a2 2046     		mov	r0, r4
 3984 13a4 FFF7FEFF 		bl	Write_Data_Glcd
 3985              	.LVL493:
 269:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 3986              		.loc 1 269 0
 3987 13a8 3620     		movs	r0, #54
 3988 13aa FFF7FEFF 		bl	Write_Command_Glcd
 3989              	.LVL494:
 270:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 3990              		.loc 1 270 0
 3991 13ae 40F20770 		movw	r0, #1799
 3992 13b2 FFF7FEFF 		bl	Write_Data_Glcd
 3993              	.LVL495:
 272:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 3994              		.loc 1 272 0
 3995 13b6 3720     		movs	r0, #55
 3996 13b8 FFF7FEFF 		bl	Write_Command_Glcd
 3997              	.LVL496:
 273:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 3998              		.loc 1 273 0
 3999 13bc 4FF44070 		mov	r0, #768
 4000 13c0 FFF7FEFF 		bl	Write_Data_Glcd
 4001              	.LVL497:
 275:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 4002              		.loc 1 275 0
 4003 13c4 3A20     		movs	r0, #58
 4004 13c6 FFF7FEFF 		bl	Write_Command_Glcd
 4005              	.LVL498:
 276:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 4006              		.loc 1 276 0
 4007 13ca 4FF49050 		mov	r0, #4608
 4008 13ce FFF7FEFF 		bl	Write_Data_Glcd
 4009              	.LVL499:
 278:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 4010              		.loc 1 278 0
 4011 13d2 3B20     		movs	r0, #59
 4012 13d4 FFF7FEFF 		bl	Write_Command_Glcd
 4013              	.LVL500:
 279:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 4014              		.loc 1 279 0
 4015 13d8 4FF40060 		mov	r0, #2048
 4016 13dc FFF7FEFF 		bl	Write_Data_Glcd
 4017              	.LVL501:
 281:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 4018              		.loc 1 281 0
 4019 13e0 0720     		movs	r0, #7
 4020 13e2 FFF7FEFF 		bl	Write_Command_Glcd
 4021              	.LVL502:
 282:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 4022              		.loc 1 282 0
 4023 13e6 3320     		movs	r0, #51
 4024 13e8 FFF7FEFF 		bl	Write_Data_Glcd
 4025              	.LVL503:
 284:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 4026              		.loc 1 284 0
 4027 13ec 0520     		movs	r0, #5
 4028 13ee FFF7FEFF 		bl	delay_ms
 4029              	.LVL504:
 286:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 4030              		.loc 1 286 0
 4031 13f2 2220     		movs	r0, #34
 287:../Source Files/lpc_ssp_glcd.c **** }
 4032              		.loc 1 287 0
 4033 13f4 BDE81040 		pop	{r4, lr}
 286:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 4034              		.loc 1 286 0
 4035 13f8 FFF7FEBF 		b	Write_Command_Glcd
 4036              	.LVL505:
 4037              		.cfi_endproc
 4038              	.LFE61:
 4040              		.global	default5x7
 4041              		.global	Font_24x16
 4042              		.comm	I2C_Rx_Buf,64,1
 4043              		.comm	I2C_Tx_Buf,64,1
 4044              		.comm	Rx_Buf1,64,1
 4045              		.comm	Tx_Buf1,64,1
 4046              		.comm	TxIntStat,1,1
 4047              		.comm	rb,528,4
 4048              		.comm	EscFlag,2,2
 4049              		.section	.rodata
 4050              		.align	1
 4051              		.set	.LANCHOR2,. + 0
 4052              		.set	.LANCHOR3,. + 4344
 4055              	Font_24x16:
 4056 0000 0000     		.short	0
 4057 0002 0000     		.short	0
 4058 0004 0000     		.short	0
 4059 0006 0000     		.short	0
 4060 0008 0000     		.short	0
 4061 000a 0000     		.short	0
 4062 000c 0000     		.short	0
 4063 000e 0000     		.short	0
 4064 0010 0000     		.short	0
 4065 0012 0000     		.short	0
 4066 0014 0000     		.short	0
 4067 0016 0000     		.short	0
 4068 0018 0000     		.short	0
 4069 001a 0000     		.short	0
 4070 001c 0000     		.short	0
 4071 001e 0000     		.short	0
 4072 0020 0000     		.short	0
 4073 0022 0000     		.short	0
 4074 0024 0000     		.short	0
 4075 0026 0000     		.short	0
 4076 0028 0000     		.short	0
 4077 002a 0000     		.short	0
 4078 002c 0000     		.short	0
 4079 002e 0000     		.short	0
 4080 0030 0000     		.short	0
 4081 0032 8001     		.short	384
 4082 0034 8001     		.short	384
 4083 0036 8001     		.short	384
 4084 0038 8001     		.short	384
 4085 003a 8001     		.short	384
 4086 003c 8001     		.short	384
 4087 003e 8001     		.short	384
 4088 0040 8001     		.short	384
 4089 0042 8001     		.short	384
 4090 0044 8001     		.short	384
 4091 0046 8001     		.short	384
 4092 0048 8001     		.short	384
 4093 004a 8001     		.short	384
 4094 004c 0000     		.short	0
 4095 004e 0000     		.short	0
 4096 0050 8001     		.short	384
 4097 0052 8001     		.short	384
 4098 0054 0000     		.short	0
 4099 0056 0000     		.short	0
 4100 0058 0000     		.short	0
 4101 005a 0000     		.short	0
 4102 005c 0000     		.short	0
 4103 005e 0000     		.short	0
 4104 0060 0000     		.short	0
 4105 0062 0000     		.short	0
 4106 0064 CC00     		.short	204
 4107 0066 CC00     		.short	204
 4108 0068 CC00     		.short	204
 4109 006a CC00     		.short	204
 4110 006c CC00     		.short	204
 4111 006e CC00     		.short	204
 4112 0070 0000     		.short	0
 4113 0072 0000     		.short	0
 4114 0074 0000     		.short	0
 4115 0076 0000     		.short	0
 4116 0078 0000     		.short	0
 4117 007a 0000     		.short	0
 4118 007c 0000     		.short	0
 4119 007e 0000     		.short	0
 4120 0080 0000     		.short	0
 4121 0082 0000     		.short	0
 4122 0084 0000     		.short	0
 4123 0086 0000     		.short	0
 4124 0088 0000     		.short	0
 4125 008a 0000     		.short	0
 4126 008c 0000     		.short	0
 4127 008e 0000     		.short	0
 4128 0090 0000     		.short	0
 4129 0092 0000     		.short	0
 4130 0094 0000     		.short	0
 4131 0096 0000     		.short	0
 4132 0098 0000     		.short	0
 4133 009a 0000     		.short	0
 4134 009c 600C     		.short	3168
 4135 009e 600C     		.short	3168
 4136 00a0 600C     		.short	3168
 4137 00a2 3006     		.short	1584
 4138 00a4 3006     		.short	1584
 4139 00a6 FE1F     		.short	8190
 4140 00a8 FE1F     		.short	8190
 4141 00aa 3006     		.short	1584
 4142 00ac 3807     		.short	1848
 4143 00ae 1803     		.short	792
 4144 00b0 FE1F     		.short	8190
 4145 00b2 FE1F     		.short	8190
 4146 00b4 1803     		.short	792
 4147 00b6 1803     		.short	792
 4148 00b8 8C01     		.short	396
 4149 00ba 8C01     		.short	396
 4150 00bc 8C01     		.short	396
 4151 00be 0000     		.short	0
 4152 00c0 0000     		.short	0
 4153 00c2 8000     		.short	128
 4154 00c4 E003     		.short	992
 4155 00c6 F80F     		.short	4088
 4156 00c8 9C0E     		.short	3740
 4157 00ca 8C1C     		.short	7308
 4158 00cc 8C18     		.short	6284
 4159 00ce 8C00     		.short	140
 4160 00d0 9800     		.short	152
 4161 00d2 F801     		.short	504
 4162 00d4 E007     		.short	2016
 4163 00d6 800E     		.short	3712
 4164 00d8 801C     		.short	7296
 4165 00da 8C18     		.short	6284
 4166 00dc 8C18     		.short	6284
 4167 00de 9C18     		.short	6300
 4168 00e0 B80C     		.short	3256
 4169 00e2 F00F     		.short	4080
 4170 00e4 E003     		.short	992
 4171 00e6 8000     		.short	128
 4172 00e8 8000     		.short	128
 4173 00ea 0000     		.short	0
 4174 00ec 0000     		.short	0
 4175 00ee 0000     		.short	0
 4176 00f0 0000     		.short	0
 4177 00f2 0000     		.short	0
 4178 00f4 0000     		.short	0
 4179 00f6 0E18     		.short	6158
 4180 00f8 1B0C     		.short	3099
 4181 00fa 110C     		.short	3089
 4182 00fc 1106     		.short	1553
 4183 00fe 1106     		.short	1553
 4184 0100 1103     		.short	785
 4185 0102 1103     		.short	785
 4186 0104 9B01     		.short	411
 4187 0106 8E01     		.short	398
 4188 0108 C038     		.short	14528
 4189 010a C06C     		.short	27840
 4190 010c 6044     		.short	17504
 4191 010e 6044     		.short	17504
 4192 0110 3044     		.short	17456
 4193 0112 3044     		.short	17456
 4194 0114 1844     		.short	17432
 4195 0116 186C     		.short	27672
 4196 0118 0C38     		.short	14348
 4197 011a 0000     		.short	0
 4198 011c 0000     		.short	0
 4199 011e 0000     		.short	0
 4200 0120 0000     		.short	0
 4201 0122 E001     		.short	480
 4202 0124 F003     		.short	1008
 4203 0126 3807     		.short	1848
 4204 0128 1806     		.short	1560
 4205 012a 1806     		.short	1560
 4206 012c 3003     		.short	816
 4207 012e F001     		.short	496
 4208 0130 F000     		.short	240
 4209 0132 F800     		.short	248
 4210 0134 9C31     		.short	12700
 4211 0136 0E33     		.short	13070
 4212 0138 061E     		.short	7686
 4213 013a 061C     		.short	7174
 4214 013c 061C     		.short	7174
 4215 013e 063F     		.short	16134
 4216 0140 FC73     		.short	29692
 4217 0142 F021     		.short	8688
 4218 0144 0000     		.short	0
 4219 0146 0000     		.short	0
 4220 0148 0000     		.short	0
 4221 014a 0000     		.short	0
 4222 014c 0000     		.short	0
 4223 014e 0000     		.short	0
 4224 0150 0000     		.short	0
 4225 0152 0000     		.short	0
 4226 0154 0C00     		.short	12
 4227 0156 0C00     		.short	12
 4228 0158 0C00     		.short	12
 4229 015a 0C00     		.short	12
 4230 015c 0C00     		.short	12
 4231 015e 0C00     		.short	12
 4232 0160 0000     		.short	0
 4233 0162 0000     		.short	0
 4234 0164 0000     		.short	0
 4235 0166 0000     		.short	0
 4236 0168 0000     		.short	0
 4237 016a 0000     		.short	0
 4238 016c 0000     		.short	0
 4239 016e 0000     		.short	0
 4240 0170 0000     		.short	0
 4241 0172 0000     		.short	0
 4242 0174 0000     		.short	0
 4243 0176 0000     		.short	0
 4244 0178 0000     		.short	0
 4245 017a 0000     		.short	0
 4246 017c 0000     		.short	0
 4247 017e 0000     		.short	0
 4248 0180 0000     		.short	0
 4249 0182 0002     		.short	512
 4250 0184 0003     		.short	768
 4251 0186 8001     		.short	384
 4252 0188 C000     		.short	192
 4253 018a C000     		.short	192
 4254 018c 6000     		.short	96
 4255 018e 6000     		.short	96
 4256 0190 3000     		.short	48
 4257 0192 3000     		.short	48
 4258 0194 3000     		.short	48
 4259 0196 3000     		.short	48
 4260 0198 3000     		.short	48
 4261 019a 3000     		.short	48
 4262 019c 3000     		.short	48
 4263 019e 3000     		.short	48
 4264 01a0 6000     		.short	96
 4265 01a2 6000     		.short	96
 4266 01a4 C000     		.short	192
 4267 01a6 C000     		.short	192
 4268 01a8 8001     		.short	384
 4269 01aa 0003     		.short	768
 4270 01ac 0002     		.short	512
 4271 01ae 0000     		.short	0
 4272 01b0 0000     		.short	0
 4273 01b2 2000     		.short	32
 4274 01b4 6000     		.short	96
 4275 01b6 C000     		.short	192
 4276 01b8 8001     		.short	384
 4277 01ba 8001     		.short	384
 4278 01bc 0003     		.short	768
 4279 01be 0003     		.short	768
 4280 01c0 0006     		.short	1536
 4281 01c2 0006     		.short	1536
 4282 01c4 0006     		.short	1536
 4283 01c6 0006     		.short	1536
 4284 01c8 0006     		.short	1536
 4285 01ca 0006     		.short	1536
 4286 01cc 0006     		.short	1536
 4287 01ce 0006     		.short	1536
 4288 01d0 0003     		.short	768
 4289 01d2 0003     		.short	768
 4290 01d4 8001     		.short	384
 4291 01d6 8001     		.short	384
 4292 01d8 C000     		.short	192
 4293 01da 6000     		.short	96
 4294 01dc 2000     		.short	32
 4295 01de 0000     		.short	0
 4296 01e0 0000     		.short	0
 4297 01e2 0000     		.short	0
 4298 01e4 0000     		.short	0
 4299 01e6 0000     		.short	0
 4300 01e8 0000     		.short	0
 4301 01ea 0000     		.short	0
 4302 01ec C000     		.short	192
 4303 01ee C000     		.short	192
 4304 01f0 D806     		.short	1752
 4305 01f2 F807     		.short	2040
 4306 01f4 E001     		.short	480
 4307 01f6 3003     		.short	816
 4308 01f8 3807     		.short	1848
 4309 01fa 0000     		.short	0
 4310 01fc 0000     		.short	0
 4311 01fe 0000     		.short	0
 4312 0200 0000     		.short	0
 4313 0202 0000     		.short	0
 4314 0204 0000     		.short	0
 4315 0206 0000     		.short	0
 4316 0208 0000     		.short	0
 4317 020a 0000     		.short	0
 4318 020c 0000     		.short	0
 4319 020e 0000     		.short	0
 4320 0210 0000     		.short	0
 4321 0212 0000     		.short	0
 4322 0214 0000     		.short	0
 4323 0216 0000     		.short	0
 4324 0218 0000     		.short	0
 4325 021a 0000     		.short	0
 4326 021c 8001     		.short	384
 4327 021e 8001     		.short	384
 4328 0220 8001     		.short	384
 4329 0222 8001     		.short	384
 4330 0224 8001     		.short	384
 4331 0226 FC3F     		.short	16380
 4332 0228 FC3F     		.short	16380
 4333 022a 8001     		.short	384
 4334 022c 8001     		.short	384
 4335 022e 8001     		.short	384
 4336 0230 8001     		.short	384
 4337 0232 8001     		.short	384
 4338 0234 0000     		.short	0
 4339 0236 0000     		.short	0
 4340 0238 0000     		.short	0
 4341 023a 0000     		.short	0
 4342 023c 0000     		.short	0
 4343 023e 0000     		.short	0
 4344 0240 0000     		.short	0
 4345 0242 0000     		.short	0
 4346 0244 0000     		.short	0
 4347 0246 0000     		.short	0
 4348 0248 0000     		.short	0
 4349 024a 0000     		.short	0
 4350 024c 0000     		.short	0
 4351 024e 0000     		.short	0
 4352 0250 0000     		.short	0
 4353 0252 0000     		.short	0
 4354 0254 0000     		.short	0
 4355 0256 0000     		.short	0
 4356 0258 0000     		.short	0
 4357 025a 0000     		.short	0
 4358 025c 0000     		.short	0
 4359 025e 0000     		.short	0
 4360 0260 0000     		.short	0
 4361 0262 8001     		.short	384
 4362 0264 8001     		.short	384
 4363 0266 0001     		.short	256
 4364 0268 0001     		.short	256
 4365 026a 8000     		.short	128
 4366 026c 0000     		.short	0
 4367 026e 0000     		.short	0
 4368 0270 0000     		.short	0
 4369 0272 0000     		.short	0
 4370 0274 0000     		.short	0
 4371 0276 0000     		.short	0
 4372 0278 0000     		.short	0
 4373 027a 0000     		.short	0
 4374 027c 0000     		.short	0
 4375 027e 0000     		.short	0
 4376 0280 0000     		.short	0
 4377 0282 0000     		.short	0
 4378 0284 0000     		.short	0
 4379 0286 0000     		.short	0
 4380 0288 E007     		.short	2016
 4381 028a E007     		.short	2016
 4382 028c 0000     		.short	0
 4383 028e 0000     		.short	0
 4384 0290 0000     		.short	0
 4385 0292 0000     		.short	0
 4386 0294 0000     		.short	0
 4387 0296 0000     		.short	0
 4388 0298 0000     		.short	0
 4389 029a 0000     		.short	0
 4390 029c 0000     		.short	0
 4391 029e 0000     		.short	0
 4392 02a0 0000     		.short	0
 4393 02a2 0000     		.short	0
 4394 02a4 0000     		.short	0
 4395 02a6 0000     		.short	0
 4396 02a8 0000     		.short	0
 4397 02aa 0000     		.short	0
 4398 02ac 0000     		.short	0
 4399 02ae 0000     		.short	0
 4400 02b0 0000     		.short	0
 4401 02b2 0000     		.short	0
 4402 02b4 0000     		.short	0
 4403 02b6 0000     		.short	0
 4404 02b8 0000     		.short	0
 4405 02ba 0000     		.short	0
 4406 02bc 0000     		.short	0
 4407 02be 0000     		.short	0
 4408 02c0 0000     		.short	0
 4409 02c2 C000     		.short	192
 4410 02c4 C000     		.short	192
 4411 02c6 0000     		.short	0
 4412 02c8 0000     		.short	0
 4413 02ca 0000     		.short	0
 4414 02cc 0000     		.short	0
 4415 02ce 0000     		.short	0
 4416 02d0 0000     		.short	0
 4417 02d2 000C     		.short	3072
 4418 02d4 000C     		.short	3072
 4419 02d6 0006     		.short	1536
 4420 02d8 0006     		.short	1536
 4421 02da 0006     		.short	1536
 4422 02dc 0003     		.short	768
 4423 02de 0003     		.short	768
 4424 02e0 0003     		.short	768
 4425 02e2 8003     		.short	896
 4426 02e4 8001     		.short	384
 4427 02e6 8001     		.short	384
 4428 02e8 8001     		.short	384
 4429 02ea C000     		.short	192
 4430 02ec C000     		.short	192
 4431 02ee C000     		.short	192
 4432 02f0 6000     		.short	96
 4433 02f2 6000     		.short	96
 4434 02f4 0000     		.short	0
 4435 02f6 0000     		.short	0
 4436 02f8 0000     		.short	0
 4437 02fa 0000     		.short	0
 4438 02fc 0000     		.short	0
 4439 02fe 0000     		.short	0
 4440 0300 0000     		.short	0
 4441 0302 E003     		.short	992
 4442 0304 F007     		.short	2032
 4443 0306 380E     		.short	3640
 4444 0308 180C     		.short	3096
 4445 030a 0C18     		.short	6156
 4446 030c 0C18     		.short	6156
 4447 030e 0C18     		.short	6156
 4448 0310 0C18     		.short	6156
 4449 0312 0C18     		.short	6156
 4450 0314 0C18     		.short	6156
 4451 0316 0C18     		.short	6156
 4452 0318 0C18     		.short	6156
 4453 031a 0C18     		.short	6156
 4454 031c 180C     		.short	3096
 4455 031e 380E     		.short	3640
 4456 0320 F007     		.short	2032
 4457 0322 E003     		.short	992
 4458 0324 0000     		.short	0
 4459 0326 0000     		.short	0
 4460 0328 0000     		.short	0
 4461 032a 0000     		.short	0
 4462 032c 0000     		.short	0
 4463 032e 0000     		.short	0
 4464 0330 0000     		.short	0
 4465 0332 0001     		.short	256
 4466 0334 8001     		.short	384
 4467 0336 C001     		.short	448
 4468 0338 F001     		.short	496
 4469 033a 9801     		.short	408
 4470 033c 8801     		.short	392
 4471 033e 8001     		.short	384
 4472 0340 8001     		.short	384
 4473 0342 8001     		.short	384
 4474 0344 8001     		.short	384
 4475 0346 8001     		.short	384
 4476 0348 8001     		.short	384
 4477 034a 8001     		.short	384
 4478 034c 8001     		.short	384
 4479 034e 8001     		.short	384
 4480 0350 8001     		.short	384
 4481 0352 8001     		.short	384
 4482 0354 0000     		.short	0
 4483 0356 0000     		.short	0
 4484 0358 0000     		.short	0
 4485 035a 0000     		.short	0
 4486 035c 0000     		.short	0
 4487 035e 0000     		.short	0
 4488 0360 0000     		.short	0
 4489 0362 E003     		.short	992
 4490 0364 F80F     		.short	4088
 4491 0366 180C     		.short	3096
 4492 0368 0C18     		.short	6156
 4493 036a 0C18     		.short	6156
 4494 036c 0018     		.short	6144
 4495 036e 0018     		.short	6144
 4496 0370 000C     		.short	3072
 4497 0372 0006     		.short	1536
 4498 0374 0003     		.short	768
 4499 0376 8001     		.short	384
 4500 0378 C000     		.short	192
 4501 037a 6000     		.short	96
 4502 037c 3000     		.short	48
 4503 037e 1800     		.short	24
 4504 0380 FC1F     		.short	8188
 4505 0382 FC1F     		.short	8188
 4506 0384 0000     		.short	0
 4507 0386 0000     		.short	0
 4508 0388 0000     		.short	0
 4509 038a 0000     		.short	0
 4510 038c 0000     		.short	0
 4511 038e 0000     		.short	0
 4512 0390 0000     		.short	0
 4513 0392 E001     		.short	480
 4514 0394 F807     		.short	2040
 4515 0396 180E     		.short	3608
 4516 0398 0C0C     		.short	3084
 4517 039a 0C0C     		.short	3084
 4518 039c 000C     		.short	3072
 4519 039e 0006     		.short	1536
 4520 03a0 C003     		.short	960
 4521 03a2 C007     		.short	1984
 4522 03a4 000C     		.short	3072
 4523 03a6 0018     		.short	6144
 4524 03a8 0018     		.short	6144
 4525 03aa 0C18     		.short	6156
 4526 03ac 0C18     		.short	6156
 4527 03ae 180C     		.short	3096
 4528 03b0 F807     		.short	2040
 4529 03b2 E003     		.short	992
 4530 03b4 0000     		.short	0
 4531 03b6 0000     		.short	0
 4532 03b8 0000     		.short	0
 4533 03ba 0000     		.short	0
 4534 03bc 0000     		.short	0
 4535 03be 0000     		.short	0
 4536 03c0 0000     		.short	0
 4537 03c2 000C     		.short	3072
 4538 03c4 000E     		.short	3584
 4539 03c6 000F     		.short	3840
 4540 03c8 000F     		.short	3840
 4541 03ca 800D     		.short	3456
 4542 03cc C00C     		.short	3264
 4543 03ce 600C     		.short	3168
 4544 03d0 600C     		.short	3168
 4545 03d2 300C     		.short	3120
 4546 03d4 180C     		.short	3096
 4547 03d6 0C0C     		.short	3084
 4548 03d8 FC3F     		.short	16380
 4549 03da FC3F     		.short	16380
 4550 03dc 000C     		.short	3072
 4551 03de 000C     		.short	3072
 4552 03e0 000C     		.short	3072
 4553 03e2 000C     		.short	3072
 4554 03e4 0000     		.short	0
 4555 03e6 0000     		.short	0
 4556 03e8 0000     		.short	0
 4557 03ea 0000     		.short	0
 4558 03ec 0000     		.short	0
 4559 03ee 0000     		.short	0
 4560 03f0 0000     		.short	0
 4561 03f2 F80F     		.short	4088
 4562 03f4 F80F     		.short	4088
 4563 03f6 1800     		.short	24
 4564 03f8 1800     		.short	24
 4565 03fa 0C00     		.short	12
 4566 03fc EC03     		.short	1004
 4567 03fe FC07     		.short	2044
 4568 0400 1C0E     		.short	3612
 4569 0402 001C     		.short	7168
 4570 0404 0018     		.short	6144
 4571 0406 0018     		.short	6144
 4572 0408 0018     		.short	6144
 4573 040a 0C18     		.short	6156
 4574 040c 1C0C     		.short	3100
 4575 040e 180E     		.short	3608
 4576 0410 F807     		.short	2040
 4577 0412 E003     		.short	992
 4578 0414 0000     		.short	0
 4579 0416 0000     		.short	0
 4580 0418 0000     		.short	0
 4581 041a 0000     		.short	0
 4582 041c 0000     		.short	0
 4583 041e 0000     		.short	0
 4584 0420 0000     		.short	0
 4585 0422 C007     		.short	1984
 4586 0424 F00F     		.short	4080
 4587 0426 381C     		.short	7224
 4588 0428 1818     		.short	6168
 4589 042a 1800     		.short	24
 4590 042c 0C00     		.short	12
 4591 042e CC03     		.short	972
 4592 0430 EC0F     		.short	4076
 4593 0432 3C0E     		.short	3644
 4594 0434 1C1C     		.short	7196
 4595 0436 0C18     		.short	6156
 4596 0438 0C18     		.short	6156
 4597 043a 0C18     		.short	6156
 4598 043c 181C     		.short	7192
 4599 043e 380E     		.short	3640
 4600 0440 F007     		.short	2032
 4601 0442 E003     		.short	992
 4602 0444 0000     		.short	0
 4603 0446 0000     		.short	0
 4604 0448 0000     		.short	0
 4605 044a 0000     		.short	0
 4606 044c 0000     		.short	0
 4607 044e 0000     		.short	0
 4608 0450 0000     		.short	0
 4609 0452 FC1F     		.short	8188
 4610 0454 FC1F     		.short	8188
 4611 0456 000C     		.short	3072
 4612 0458 0006     		.short	1536
 4613 045a 0006     		.short	1536
 4614 045c 0003     		.short	768
 4615 045e 8003     		.short	896
 4616 0460 8001     		.short	384
 4617 0462 C001     		.short	448
 4618 0464 C000     		.short	192
 4619 0466 E000     		.short	224
 4620 0468 6000     		.short	96
 4621 046a 6000     		.short	96
 4622 046c 7000     		.short	112
 4623 046e 3000     		.short	48
 4624 0470 3000     		.short	48
 4625 0472 3000     		.short	48
 4626 0474 0000     		.short	0
 4627 0476 0000     		.short	0
 4628 0478 0000     		.short	0
 4629 047a 0000     		.short	0
 4630 047c 0000     		.short	0
 4631 047e 0000     		.short	0
 4632 0480 0000     		.short	0
 4633 0482 E003     		.short	992
 4634 0484 F007     		.short	2032
 4635 0486 380E     		.short	3640
 4636 0488 180C     		.short	3096
 4637 048a 180C     		.short	3096
 4638 048c 180C     		.short	3096
 4639 048e 3806     		.short	1592
 4640 0490 F007     		.short	2032
 4641 0492 F007     		.short	2032
 4642 0494 180C     		.short	3096
 4643 0496 0C18     		.short	6156
 4644 0498 0C18     		.short	6156
 4645 049a 0C18     		.short	6156
 4646 049c 0C18     		.short	6156
 4647 049e 380C     		.short	3128
 4648 04a0 F80F     		.short	4088
 4649 04a2 E003     		.short	992
 4650 04a4 0000     		.short	0
 4651 04a6 0000     		.short	0
 4652 04a8 0000     		.short	0
 4653 04aa 0000     		.short	0
 4654 04ac 0000     		.short	0
 4655 04ae 0000     		.short	0
 4656 04b0 0000     		.short	0
 4657 04b2 E003     		.short	992
 4658 04b4 F007     		.short	2032
 4659 04b6 380E     		.short	3640
 4660 04b8 1C0C     		.short	3100
 4661 04ba 0C18     		.short	6156
 4662 04bc 0C18     		.short	6156
 4663 04be 0C18     		.short	6156
 4664 04c0 1C1C     		.short	7196
 4665 04c2 381E     		.short	7736
 4666 04c4 F81B     		.short	7160
 4667 04c6 E019     		.short	6624
 4668 04c8 0018     		.short	6144
 4669 04ca 000C     		.short	3072
 4670 04cc 000C     		.short	3072
 4671 04ce 1C0E     		.short	3612
 4672 04d0 F807     		.short	2040
 4673 04d2 F001     		.short	496
 4674 04d4 0000     		.short	0
 4675 04d6 0000     		.short	0
 4676 04d8 0000     		.short	0
 4677 04da 0000     		.short	0
 4678 04dc 0000     		.short	0
 4679 04de 0000     		.short	0
 4680 04e0 0000     		.short	0
 4681 04e2 0000     		.short	0
 4682 04e4 0000     		.short	0
 4683 04e6 0000     		.short	0
 4684 04e8 0000     		.short	0
 4685 04ea 0000     		.short	0
 4686 04ec 8001     		.short	384
 4687 04ee 8001     		.short	384
 4688 04f0 0000     		.short	0
 4689 04f2 0000     		.short	0
 4690 04f4 0000     		.short	0
 4691 04f6 0000     		.short	0
 4692 04f8 0000     		.short	0
 4693 04fa 0000     		.short	0
 4694 04fc 0000     		.short	0
 4695 04fe 0000     		.short	0
 4696 0500 8001     		.short	384
 4697 0502 8001     		.short	384
 4698 0504 0000     		.short	0
 4699 0506 0000     		.short	0
 4700 0508 0000     		.short	0
 4701 050a 0000     		.short	0
 4702 050c 0000     		.short	0
 4703 050e 0000     		.short	0
 4704 0510 0000     		.short	0
 4705 0512 0000     		.short	0
 4706 0514 0000     		.short	0
 4707 0516 0000     		.short	0
 4708 0518 0000     		.short	0
 4709 051a 0000     		.short	0
 4710 051c 8001     		.short	384
 4711 051e 8001     		.short	384
 4712 0520 0000     		.short	0
 4713 0522 0000     		.short	0
 4714 0524 0000     		.short	0
 4715 0526 0000     		.short	0
 4716 0528 0000     		.short	0
 4717 052a 0000     		.short	0
 4718 052c 0000     		.short	0
 4719 052e 0000     		.short	0
 4720 0530 8001     		.short	384
 4721 0532 8001     		.short	384
 4722 0534 0001     		.short	256
 4723 0536 0001     		.short	256
 4724 0538 8000     		.short	128
 4725 053a 0000     		.short	0
 4726 053c 0000     		.short	0
 4727 053e 0000     		.short	0
 4728 0540 0000     		.short	0
 4729 0542 0000     		.short	0
 4730 0544 0000     		.short	0
 4731 0546 0000     		.short	0
 4732 0548 0000     		.short	0
 4733 054a 0000     		.short	0
 4734 054c 0000     		.short	0
 4735 054e 0000     		.short	0
 4736 0550 0010     		.short	4096
 4737 0552 001C     		.short	7168
 4738 0554 800F     		.short	3968
 4739 0556 E003     		.short	992
 4740 0558 F800     		.short	248
 4741 055a 1800     		.short	24
 4742 055c F800     		.short	248
 4743 055e E003     		.short	992
 4744 0560 800F     		.short	3968
 4745 0562 001C     		.short	7168
 4746 0564 0010     		.short	4096
 4747 0566 0000     		.short	0
 4748 0568 0000     		.short	0
 4749 056a 0000     		.short	0
 4750 056c 0000     		.short	0
 4751 056e 0000     		.short	0
 4752 0570 0000     		.short	0
 4753 0572 0000     		.short	0
 4754 0574 0000     		.short	0
 4755 0576 0000     		.short	0
 4756 0578 0000     		.short	0
 4757 057a 0000     		.short	0
 4758 057c 0000     		.short	0
 4759 057e 0000     		.short	0
 4760 0580 F81F     		.short	8184
 4761 0582 0000     		.short	0
 4762 0584 0000     		.short	0
 4763 0586 0000     		.short	0
 4764 0588 F81F     		.short	8184
 4765 058a 0000     		.short	0
 4766 058c 0000     		.short	0
 4767 058e 0000     		.short	0
 4768 0590 0000     		.short	0
 4769 0592 0000     		.short	0
 4770 0594 0000     		.short	0
 4771 0596 0000     		.short	0
 4772 0598 0000     		.short	0
 4773 059a 0000     		.short	0
 4774 059c 0000     		.short	0
 4775 059e 0000     		.short	0
 4776 05a0 0000     		.short	0
 4777 05a2 0000     		.short	0
 4778 05a4 0000     		.short	0
 4779 05a6 0000     		.short	0
 4780 05a8 0000     		.short	0
 4781 05aa 0000     		.short	0
 4782 05ac 0000     		.short	0
 4783 05ae 0000     		.short	0
 4784 05b0 0800     		.short	8
 4785 05b2 3800     		.short	56
 4786 05b4 F001     		.short	496
 4787 05b6 C007     		.short	1984
 4788 05b8 001F     		.short	7936
 4789 05ba 0018     		.short	6144
 4790 05bc 001F     		.short	7936
 4791 05be C007     		.short	1984
 4792 05c0 F001     		.short	496
 4793 05c2 3800     		.short	56
 4794 05c4 0800     		.short	8
 4795 05c6 0000     		.short	0
 4796 05c8 0000     		.short	0
 4797 05ca 0000     		.short	0
 4798 05cc 0000     		.short	0
 4799 05ce 0000     		.short	0
 4800 05d0 0000     		.short	0
 4801 05d2 E003     		.short	992
 4802 05d4 F80F     		.short	4088
 4803 05d6 180C     		.short	3096
 4804 05d8 0C18     		.short	6156
 4805 05da 0C18     		.short	6156
 4806 05dc 0018     		.short	6144
 4807 05de 000C     		.short	3072
 4808 05e0 0006     		.short	1536
 4809 05e2 0003     		.short	768
 4810 05e4 8001     		.short	384
 4811 05e6 C000     		.short	192
 4812 05e8 C000     		.short	192
 4813 05ea C000     		.short	192
 4814 05ec 0000     		.short	0
 4815 05ee 0000     		.short	0
 4816 05f0 C000     		.short	192
 4817 05f2 C000     		.short	192
 4818 05f4 0000     		.short	0
 4819 05f6 0000     		.short	0
 4820 05f8 0000     		.short	0
 4821 05fa 0000     		.short	0
 4822 05fc 0000     		.short	0
 4823 05fe 0000     		.short	0
 4824 0600 0000     		.short	0
 4825 0602 0000     		.short	0
 4826 0604 E007     		.short	2016
 4827 0606 1818     		.short	6168
 4828 0608 0420     		.short	8196
 4829 060a C229     		.short	10690
 4830 060c 224A     		.short	18978
 4831 060e 1144     		.short	17425
 4832 0610 0944     		.short	17417
 4833 0612 0944     		.short	17417
 4834 0614 0944     		.short	17417
 4835 0616 0922     		.short	8713
 4836 0618 1113     		.short	4881
 4837 061a E20C     		.short	3298
 4838 061c 0240     		.short	16386
 4839 061e 0420     		.short	8196
 4840 0620 1818     		.short	6168
 4841 0622 E007     		.short	2016
 4842 0624 0000     		.short	0
 4843 0626 0000     		.short	0
 4844 0628 0000     		.short	0
 4845 062a 0000     		.short	0
 4846 062c 0000     		.short	0
 4847 062e 0000     		.short	0
 4848 0630 0000     		.short	0
 4849 0632 8003     		.short	896
 4850 0634 8003     		.short	896
 4851 0636 C006     		.short	1728
 4852 0638 C006     		.short	1728
 4853 063a C006     		.short	1728
 4854 063c 600C     		.short	3168
 4855 063e 600C     		.short	3168
 4856 0640 3018     		.short	6192
 4857 0642 3018     		.short	6192
 4858 0644 3018     		.short	6192
 4859 0646 F83F     		.short	16376
 4860 0648 F83F     		.short	16376
 4861 064a 1C70     		.short	28700
 4862 064c 0C60     		.short	24588
 4863 064e 0C60     		.short	24588
 4864 0650 06C0     		.short	-16378
 4865 0652 06C0     		.short	-16378
 4866 0654 0000     		.short	0
 4867 0656 0000     		.short	0
 4868 0658 0000     		.short	0
 4869 065a 0000     		.short	0
 4870 065c 0000     		.short	0
 4871 065e 0000     		.short	0
 4872 0660 0000     		.short	0
 4873 0662 FC03     		.short	1020
 4874 0664 FC0F     		.short	4092
 4875 0666 0C0C     		.short	3084
 4876 0668 0C18     		.short	6156
 4877 066a 0C18     		.short	6156
 4878 066c 0C18     		.short	6156
 4879 066e 0C0C     		.short	3084
 4880 0670 FC07     		.short	2044
 4881 0672 FC0F     		.short	4092
 4882 0674 0C18     		.short	6156
 4883 0676 0C30     		.short	12300
 4884 0678 0C30     		.short	12300
 4885 067a 0C30     		.short	12300
 4886 067c 0C30     		.short	12300
 4887 067e 0C18     		.short	6156
 4888 0680 FC1F     		.short	8188
 4889 0682 FC07     		.short	2044
 4890 0684 0000     		.short	0
 4891 0686 0000     		.short	0
 4892 0688 0000     		.short	0
 4893 068a 0000     		.short	0
 4894 068c 0000     		.short	0
 4895 068e 0000     		.short	0
 4896 0690 0000     		.short	0
 4897 0692 C007     		.short	1984
 4898 0694 F01F     		.short	8176
 4899 0696 3838     		.short	14392
 4900 0698 1C30     		.short	12316
 4901 069a 0C70     		.short	28684
 4902 069c 0660     		.short	24582
 4903 069e 0600     		.short	6
 4904 06a0 0600     		.short	6
 4905 06a2 0600     		.short	6
 4906 06a4 0600     		.short	6
 4907 06a6 0600     		.short	6
 4908 06a8 0600     		.short	6
 4909 06aa 0660     		.short	24582
 4910 06ac 0C70     		.short	28684
 4911 06ae 1C30     		.short	12316
 4912 06b0 F01F     		.short	8176
 4913 06b2 E007     		.short	2016
 4914 06b4 0000     		.short	0
 4915 06b6 0000     		.short	0
 4916 06b8 0000     		.short	0
 4917 06ba 0000     		.short	0
 4918 06bc 0000     		.short	0
 4919 06be 0000     		.short	0
 4920 06c0 0000     		.short	0
 4921 06c2 FE03     		.short	1022
 4922 06c4 FE0F     		.short	4094
 4923 06c6 060E     		.short	3590
 4924 06c8 0618     		.short	6150
 4925 06ca 0618     		.short	6150
 4926 06cc 0630     		.short	12294
 4927 06ce 0630     		.short	12294
 4928 06d0 0630     		.short	12294
 4929 06d2 0630     		.short	12294
 4930 06d4 0630     		.short	12294
 4931 06d6 0630     		.short	12294
 4932 06d8 0630     		.short	12294
 4933 06da 0618     		.short	6150
 4934 06dc 0618     		.short	6150
 4935 06de 060E     		.short	3590
 4936 06e0 FE0F     		.short	4094
 4937 06e2 FE03     		.short	1022
 4938 06e4 0000     		.short	0
 4939 06e6 0000     		.short	0
 4940 06e8 0000     		.short	0
 4941 06ea 0000     		.short	0
 4942 06ec 0000     		.short	0
 4943 06ee 0000     		.short	0
 4944 06f0 0000     		.short	0
 4945 06f2 FC3F     		.short	16380
 4946 06f4 FC3F     		.short	16380
 4947 06f6 0C00     		.short	12
 4948 06f8 0C00     		.short	12
 4949 06fa 0C00     		.short	12
 4950 06fc 0C00     		.short	12
 4951 06fe 0C00     		.short	12
 4952 0700 FC1F     		.short	8188
 4953 0702 FC1F     		.short	8188
 4954 0704 0C00     		.short	12
 4955 0706 0C00     		.short	12
 4956 0708 0C00     		.short	12
 4957 070a 0C00     		.short	12
 4958 070c 0C00     		.short	12
 4959 070e 0C00     		.short	12
 4960 0710 FC3F     		.short	16380
 4961 0712 FC3F     		.short	16380
 4962 0714 0000     		.short	0
 4963 0716 0000     		.short	0
 4964 0718 0000     		.short	0
 4965 071a 0000     		.short	0
 4966 071c 0000     		.short	0
 4967 071e 0000     		.short	0
 4968 0720 0000     		.short	0
 4969 0722 F83F     		.short	16376
 4970 0724 F83F     		.short	16376
 4971 0726 1800     		.short	24
 4972 0728 1800     		.short	24
 4973 072a 1800     		.short	24
 4974 072c 1800     		.short	24
 4975 072e 1800     		.short	24
 4976 0730 F81F     		.short	8184
 4977 0732 F81F     		.short	8184
 4978 0734 1800     		.short	24
 4979 0736 1800     		.short	24
 4980 0738 1800     		.short	24
 4981 073a 1800     		.short	24
 4982 073c 1800     		.short	24
 4983 073e 1800     		.short	24
 4984 0740 1800     		.short	24
 4985 0742 1800     		.short	24
 4986 0744 0000     		.short	0
 4987 0746 0000     		.short	0
 4988 0748 0000     		.short	0
 4989 074a 0000     		.short	0
 4990 074c 0000     		.short	0
 4991 074e 0000     		.short	0
 4992 0750 0000     		.short	0
 4993 0752 E00F     		.short	4064
 4994 0754 F83F     		.short	16376
 4995 0756 3C78     		.short	30780
 4996 0758 0E60     		.short	24590
 4997 075a 06E0     		.short	-8186
 4998 075c 07C0     		.short	-16377
 4999 075e 0300     		.short	3
 5000 0760 0300     		.short	3
 5001 0762 03FE     		.short	-509
 5002 0764 03FE     		.short	-509
 5003 0766 03C0     		.short	-16381
 5004 0768 07C0     		.short	-16377
 5005 076a 06C0     		.short	-16378
 5006 076c 0EC0     		.short	-16370
 5007 076e 3CF0     		.short	-4036
 5008 0770 F83F     		.short	16376
 5009 0772 E00F     		.short	4064
 5010 0774 0000     		.short	0
 5011 0776 0000     		.short	0
 5012 0778 0000     		.short	0
 5013 077a 0000     		.short	0
 5014 077c 0000     		.short	0
 5015 077e 0000     		.short	0
 5016 0780 0000     		.short	0
 5017 0782 0C30     		.short	12300
 5018 0784 0C30     		.short	12300
 5019 0786 0C30     		.short	12300
 5020 0788 0C30     		.short	12300
 5021 078a 0C30     		.short	12300
 5022 078c 0C30     		.short	12300
 5023 078e 0C30     		.short	12300
 5024 0790 FC3F     		.short	16380
 5025 0792 FC3F     		.short	16380
 5026 0794 0C30     		.short	12300
 5027 0796 0C30     		.short	12300
 5028 0798 0C30     		.short	12300
 5029 079a 0C30     		.short	12300
 5030 079c 0C30     		.short	12300
 5031 079e 0C30     		.short	12300
 5032 07a0 0C30     		.short	12300
 5033 07a2 0C30     		.short	12300
 5034 07a4 0000     		.short	0
 5035 07a6 0000     		.short	0
 5036 07a8 0000     		.short	0
 5037 07aa 0000     		.short	0
 5038 07ac 0000     		.short	0
 5039 07ae 0000     		.short	0
 5040 07b0 0000     		.short	0
 5041 07b2 8001     		.short	384
 5042 07b4 8001     		.short	384
 5043 07b6 8001     		.short	384
 5044 07b8 8001     		.short	384
 5045 07ba 8001     		.short	384
 5046 07bc 8001     		.short	384
 5047 07be 8001     		.short	384
 5048 07c0 8001     		.short	384
 5049 07c2 8001     		.short	384
 5050 07c4 8001     		.short	384
 5051 07c6 8001     		.short	384
 5052 07c8 8001     		.short	384
 5053 07ca 8001     		.short	384
 5054 07cc 8001     		.short	384
 5055 07ce 8001     		.short	384
 5056 07d0 8001     		.short	384
 5057 07d2 8001     		.short	384
 5058 07d4 0000     		.short	0
 5059 07d6 0000     		.short	0
 5060 07d8 0000     		.short	0
 5061 07da 0000     		.short	0
 5062 07dc 0000     		.short	0
 5063 07de 0000     		.short	0
 5064 07e0 0000     		.short	0
 5065 07e2 0006     		.short	1536
 5066 07e4 0006     		.short	1536
 5067 07e6 0006     		.short	1536
 5068 07e8 0006     		.short	1536
 5069 07ea 0006     		.short	1536
 5070 07ec 0006     		.short	1536
 5071 07ee 0006     		.short	1536
 5072 07f0 0006     		.short	1536
 5073 07f2 0006     		.short	1536
 5074 07f4 0006     		.short	1536
 5075 07f6 0006     		.short	1536
 5076 07f8 0006     		.short	1536
 5077 07fa 1806     		.short	1560
 5078 07fc 1806     		.short	1560
 5079 07fe 3807     		.short	1848
 5080 0800 F003     		.short	1008
 5081 0802 E001     		.short	480
 5082 0804 0000     		.short	0
 5083 0806 0000     		.short	0
 5084 0808 0000     		.short	0
 5085 080a 0000     		.short	0
 5086 080c 0000     		.short	0
 5087 080e 0000     		.short	0
 5088 0810 0000     		.short	0
 5089 0812 0630     		.short	12294
 5090 0814 0618     		.short	6150
 5091 0816 060C     		.short	3078
 5092 0818 0606     		.short	1542
 5093 081a 0603     		.short	774
 5094 081c 8601     		.short	390
 5095 081e C600     		.short	198
 5096 0820 6600     		.short	102
 5097 0822 7600     		.short	118
 5098 0824 DE00     		.short	222
 5099 0826 8E01     		.short	398
 5100 0828 0603     		.short	774
 5101 082a 0606     		.short	1542
 5102 082c 060C     		.short	3078
 5103 082e 0618     		.short	6150
 5104 0830 0630     		.short	12294
 5105 0832 0660     		.short	24582
 5106 0834 0000     		.short	0
 5107 0836 0000     		.short	0
 5108 0838 0000     		.short	0
 5109 083a 0000     		.short	0
 5110 083c 0000     		.short	0
 5111 083e 0000     		.short	0
 5112 0840 0000     		.short	0
 5113 0842 1800     		.short	24
 5114 0844 1800     		.short	24
 5115 0846 1800     		.short	24
 5116 0848 1800     		.short	24
 5117 084a 1800     		.short	24
 5118 084c 1800     		.short	24
 5119 084e 1800     		.short	24
 5120 0850 1800     		.short	24
 5121 0852 1800     		.short	24
 5122 0854 1800     		.short	24
 5123 0856 1800     		.short	24
 5124 0858 1800     		.short	24
 5125 085a 1800     		.short	24
 5126 085c 1800     		.short	24
 5127 085e 1800     		.short	24
 5128 0860 F81F     		.short	8184
 5129 0862 F81F     		.short	8184
 5130 0864 0000     		.short	0
 5131 0866 0000     		.short	0
 5132 0868 0000     		.short	0
 5133 086a 0000     		.short	0
 5134 086c 0000     		.short	0
 5135 086e 0000     		.short	0
 5136 0870 0000     		.short	0
 5137 0872 0EE0     		.short	-8178
 5138 0874 1EF0     		.short	-4066
 5139 0876 1EF0     		.short	-4066
 5140 0878 1EF0     		.short	-4066
 5141 087a 36D8     		.short	-10186
 5142 087c 36D8     		.short	-10186
 5143 087e 36D8     		.short	-10186
 5144 0880 36D8     		.short	-10186
 5145 0882 66CC     		.short	-13210
 5146 0884 66CC     		.short	-13210
 5147 0886 66CC     		.short	-13210
 5148 0888 C6C6     		.short	-14650
 5149 088a C6C6     		.short	-14650
 5150 088c C6C6     		.short	-14650
 5151 088e C6C6     		.short	-14650
 5152 0890 86C3     		.short	-15482
 5153 0892 86C3     		.short	-15482
 5154 0894 0000     		.short	0
 5155 0896 0000     		.short	0
 5156 0898 0000     		.short	0
 5157 089a 0000     		.short	0
 5158 089c 0000     		.short	0
 5159 089e 0000     		.short	0
 5160 08a0 0000     		.short	0
 5161 08a2 0C30     		.short	12300
 5162 08a4 1C30     		.short	12316
 5163 08a6 3C30     		.short	12348
 5164 08a8 3C30     		.short	12348
 5165 08aa 6C30     		.short	12396
 5166 08ac 6C30     		.short	12396
 5167 08ae CC30     		.short	12492
 5168 08b0 CC30     		.short	12492
 5169 08b2 8C31     		.short	12684
 5170 08b4 0C33     		.short	13068
 5171 08b6 0C33     		.short	13068
 5172 08b8 0C36     		.short	13836
 5173 08ba 0C36     		.short	13836
 5174 08bc 0C3C     		.short	15372
 5175 08be 0C3C     		.short	15372
 5176 08c0 0C38     		.short	14348
 5177 08c2 0C30     		.short	12300
 5178 08c4 0000     		.short	0
 5179 08c6 0000     		.short	0
 5180 08c8 0000     		.short	0
 5181 08ca 0000     		.short	0
 5182 08cc 0000     		.short	0
 5183 08ce 0000     		.short	0
 5184 08d0 0000     		.short	0
 5185 08d2 E007     		.short	2016
 5186 08d4 F81F     		.short	8184
 5187 08d6 1C38     		.short	14364
 5188 08d8 0E70     		.short	28686
 5189 08da 0660     		.short	24582
 5190 08dc 03C0     		.short	-16381
 5191 08de 03C0     		.short	-16381
 5192 08e0 03C0     		.short	-16381
 5193 08e2 03C0     		.short	-16381
 5194 08e4 03C0     		.short	-16381
 5195 08e6 03C0     		.short	-16381
 5196 08e8 03C0     		.short	-16381
 5197 08ea 0660     		.short	24582
 5198 08ec 0E70     		.short	28686
 5199 08ee 1C38     		.short	14364
 5200 08f0 F81F     		.short	8184
 5201 08f2 E007     		.short	2016
 5202 08f4 0000     		.short	0
 5203 08f6 0000     		.short	0
 5204 08f8 0000     		.short	0
 5205 08fa 0000     		.short	0
 5206 08fc 0000     		.short	0
 5207 08fe 0000     		.short	0
 5208 0900 0000     		.short	0
 5209 0902 FC0F     		.short	4092
 5210 0904 FC1F     		.short	8188
 5211 0906 0C38     		.short	14348
 5212 0908 0C30     		.short	12300
 5213 090a 0C30     		.short	12300
 5214 090c 0C30     		.short	12300
 5215 090e 0C30     		.short	12300
 5216 0910 0C18     		.short	6156
 5217 0912 FC1F     		.short	8188
 5218 0914 FC07     		.short	2044
 5219 0916 0C00     		.short	12
 5220 0918 0C00     		.short	12
 5221 091a 0C00     		.short	12
 5222 091c 0C00     		.short	12
 5223 091e 0C00     		.short	12
 5224 0920 0C00     		.short	12
 5225 0922 0C00     		.short	12
 5226 0924 0000     		.short	0
 5227 0926 0000     		.short	0
 5228 0928 0000     		.short	0
 5229 092a 0000     		.short	0
 5230 092c 0000     		.short	0
 5231 092e 0000     		.short	0
 5232 0930 0000     		.short	0
 5233 0932 E007     		.short	2016
 5234 0934 F81F     		.short	8184
 5235 0936 1C38     		.short	14364
 5236 0938 0E70     		.short	28686
 5237 093a 0660     		.short	24582
 5238 093c 03E0     		.short	-8189
 5239 093e 03C0     		.short	-16381
 5240 0940 03C0     		.short	-16381
 5241 0942 03C0     		.short	-16381
 5242 0944 03C0     		.short	-16381
 5243 0946 03C0     		.short	-16381
 5244 0948 07E0     		.short	-8185
 5245 094a 0663     		.short	25350
 5246 094c 0E3F     		.short	16142
 5247 094e 1C3C     		.short	15388
 5248 0950 F83F     		.short	16376
 5249 0952 E0F7     		.short	-2080
 5250 0954 00C0     		.short	-16384
 5251 0956 0000     		.short	0
 5252 0958 0000     		.short	0
 5253 095a 0000     		.short	0
 5254 095c 0000     		.short	0
 5255 095e 0000     		.short	0
 5256 0960 0000     		.short	0
 5257 0962 FE0F     		.short	4094
 5258 0964 FE1F     		.short	8190
 5259 0966 0638     		.short	14342
 5260 0968 0630     		.short	12294
 5261 096a 0630     		.short	12294
 5262 096c 0630     		.short	12294
 5263 096e 0638     		.short	14342
 5264 0970 FE1F     		.short	8190
 5265 0972 FE07     		.short	2046
 5266 0974 0603     		.short	774
 5267 0976 0606     		.short	1542
 5268 0978 060C     		.short	3078
 5269 097a 0618     		.short	6150
 5270 097c 0618     		.short	6150
 5271 097e 0630     		.short	12294
 5272 0980 0630     		.short	12294
 5273 0982 0660     		.short	24582
 5274 0984 0000     		.short	0
 5275 0986 0000     		.short	0
 5276 0988 0000     		.short	0
 5277 098a 0000     		.short	0
 5278 098c 0000     		.short	0
 5279 098e 0000     		.short	0
 5280 0990 0000     		.short	0
 5281 0992 E003     		.short	992
 5282 0994 F80F     		.short	4088
 5283 0996 1C0C     		.short	3100
 5284 0998 0C18     		.short	6156
 5285 099a 0C18     		.short	6156
 5286 099c 0C00     		.short	12
 5287 099e 1C00     		.short	28
 5288 09a0 F803     		.short	1016
 5289 09a2 E00F     		.short	4064
 5290 09a4 001E     		.short	7680
 5291 09a6 0038     		.short	14336
 5292 09a8 0630     		.short	12294
 5293 09aa 0630     		.short	12294
 5294 09ac 0E30     		.short	12302
 5295 09ae 1C1C     		.short	7196
 5296 09b0 F80F     		.short	4088
 5297 09b2 E007     		.short	2016
 5298 09b4 0000     		.short	0
 5299 09b6 0000     		.short	0
 5300 09b8 0000     		.short	0
 5301 09ba 0000     		.short	0
 5302 09bc 0000     		.short	0
 5303 09be 0000     		.short	0
 5304 09c0 0000     		.short	0
 5305 09c2 FE7F     		.short	32766
 5306 09c4 FE7F     		.short	32766
 5307 09c6 8001     		.short	384
 5308 09c8 8001     		.short	384
 5309 09ca 8001     		.short	384
 5310 09cc 8001     		.short	384
 5311 09ce 8001     		.short	384
 5312 09d0 8001     		.short	384
 5313 09d2 8001     		.short	384
 5314 09d4 8001     		.short	384
 5315 09d6 8001     		.short	384
 5316 09d8 8001     		.short	384
 5317 09da 8001     		.short	384
 5318 09dc 8001     		.short	384
 5319 09de 8001     		.short	384
 5320 09e0 8001     		.short	384
 5321 09e2 8001     		.short	384
 5322 09e4 0000     		.short	0
 5323 09e6 0000     		.short	0
 5324 09e8 0000     		.short	0
 5325 09ea 0000     		.short	0
 5326 09ec 0000     		.short	0
 5327 09ee 0000     		.short	0
 5328 09f0 0000     		.short	0
 5329 09f2 0C30     		.short	12300
 5330 09f4 0C30     		.short	12300
 5331 09f6 0C30     		.short	12300
 5332 09f8 0C30     		.short	12300
 5333 09fa 0C30     		.short	12300
 5334 09fc 0C30     		.short	12300
 5335 09fe 0C30     		.short	12300
 5336 0a00 0C30     		.short	12300
 5337 0a02 0C30     		.short	12300
 5338 0a04 0C30     		.short	12300
 5339 0a06 0C30     		.short	12300
 5340 0a08 0C30     		.short	12300
 5341 0a0a 0C30     		.short	12300
 5342 0a0c 0C30     		.short	12300
 5343 0a0e 1818     		.short	6168
 5344 0a10 F81F     		.short	8184
 5345 0a12 E007     		.short	2016
 5346 0a14 0000     		.short	0
 5347 0a16 0000     		.short	0
 5348 0a18 0000     		.short	0
 5349 0a1a 0000     		.short	0
 5350 0a1c 0000     		.short	0
 5351 0a1e 0000     		.short	0
 5352 0a20 0000     		.short	0
 5353 0a22 0360     		.short	24579
 5354 0a24 0630     		.short	12294
 5355 0a26 0630     		.short	12294
 5356 0a28 0630     		.short	12294
 5357 0a2a 0C18     		.short	6156
 5358 0a2c 0C18     		.short	6156
 5359 0a2e 0C18     		.short	6156
 5360 0a30 180C     		.short	3096
 5361 0a32 180C     		.short	3096
 5362 0a34 380E     		.short	3640
 5363 0a36 3006     		.short	1584
 5364 0a38 3006     		.short	1584
 5365 0a3a 7007     		.short	1904
 5366 0a3c 6003     		.short	864
 5367 0a3e 6003     		.short	864
 5368 0a40 C001     		.short	448
 5369 0a42 C001     		.short	448
 5370 0a44 0000     		.short	0
 5371 0a46 0000     		.short	0
 5372 0a48 0000     		.short	0
 5373 0a4a 0000     		.short	0
 5374 0a4c 0000     		.short	0
 5375 0a4e 0000     		.short	0
 5376 0a50 0000     		.short	0
 5377 0a52 0360     		.short	24579
 5378 0a54 C361     		.short	25027
 5379 0a56 C361     		.short	25027
 5380 0a58 C361     		.short	25027
 5381 0a5a 6633     		.short	13158
 5382 0a5c 6633     		.short	13158
 5383 0a5e 6633     		.short	13158
 5384 0a60 6633     		.short	13158
 5385 0a62 6633     		.short	13158
 5386 0a64 6633     		.short	13158
 5387 0a66 6C1B     		.short	7020
 5388 0a68 6C1B     		.short	7020
 5389 0a6a 6C1B     		.short	7020
 5390 0a6c 2C1A     		.short	6700
 5391 0a6e 3C1E     		.short	7740
 5392 0a70 380E     		.short	3640
 5393 0a72 380E     		.short	3640
 5394 0a74 0000     		.short	0
 5395 0a76 0000     		.short	0
 5396 0a78 0000     		.short	0
 5397 0a7a 0000     		.short	0
 5398 0a7c 0000     		.short	0
 5399 0a7e 0000     		.short	0
 5400 0a80 0000     		.short	0
 5401 0a82 0FE0     		.short	-8177
 5402 0a84 0C70     		.short	28684
 5403 0a86 1830     		.short	12312
 5404 0a88 3018     		.short	6192
 5405 0a8a 700C     		.short	3184
 5406 0a8c 600E     		.short	3680
 5407 0a8e C007     		.short	1984
 5408 0a90 8003     		.short	896
 5409 0a92 8003     		.short	896
 5410 0a94 C003     		.short	960
 5411 0a96 E006     		.short	1760
 5412 0a98 700C     		.short	3184
 5413 0a9a 301C     		.short	7216
 5414 0a9c 1818     		.short	6168
 5415 0a9e 0C30     		.short	12300
 5416 0aa0 0E60     		.short	24590
 5417 0aa2 07E0     		.short	-8185
 5418 0aa4 0000     		.short	0
 5419 0aa6 0000     		.short	0
 5420 0aa8 0000     		.short	0
 5421 0aaa 0000     		.short	0
 5422 0aac 0000     		.short	0
 5423 0aae 0000     		.short	0
 5424 0ab0 0000     		.short	0
 5425 0ab2 03C0     		.short	-16381
 5426 0ab4 0660     		.short	24582
 5427 0ab6 0C30     		.short	12300
 5428 0ab8 1C38     		.short	14364
 5429 0aba 3818     		.short	6200
 5430 0abc 300C     		.short	3120
 5431 0abe 6006     		.short	1632
 5432 0ac0 E007     		.short	2016
 5433 0ac2 C003     		.short	960
 5434 0ac4 8001     		.short	384
 5435 0ac6 8001     		.short	384
 5436 0ac8 8001     		.short	384
 5437 0aca 8001     		.short	384
 5438 0acc 8001     		.short	384
 5439 0ace 8001     		.short	384
 5440 0ad0 8001     		.short	384
 5441 0ad2 8001     		.short	384
 5442 0ad4 0000     		.short	0
 5443 0ad6 0000     		.short	0
 5444 0ad8 0000     		.short	0
 5445 0ada 0000     		.short	0
 5446 0adc 0000     		.short	0
 5447 0ade 0000     		.short	0
 5448 0ae0 0000     		.short	0
 5449 0ae2 FC7F     		.short	32764
 5450 0ae4 FC7F     		.short	32764
 5451 0ae6 0060     		.short	24576
 5452 0ae8 0030     		.short	12288
 5453 0aea 0018     		.short	6144
 5454 0aec 000C     		.short	3072
 5455 0aee 0006     		.short	1536
 5456 0af0 0003     		.short	768
 5457 0af2 8001     		.short	384
 5458 0af4 C000     		.short	192
 5459 0af6 6000     		.short	96
 5460 0af8 3000     		.short	48
 5461 0afa 1800     		.short	24
 5462 0afc 0C00     		.short	12
 5463 0afe 0600     		.short	6
 5464 0b00 FE7F     		.short	32766
 5465 0b02 FE7F     		.short	32766
 5466 0b04 0000     		.short	0
 5467 0b06 0000     		.short	0
 5468 0b08 0000     		.short	0
 5469 0b0a 0000     		.short	0
 5470 0b0c 0000     		.short	0
 5471 0b0e 0000     		.short	0
 5472 0b10 0000     		.short	0
 5473 0b12 E003     		.short	992
 5474 0b14 E003     		.short	992
 5475 0b16 6000     		.short	96
 5476 0b18 6000     		.short	96
 5477 0b1a 6000     		.short	96
 5478 0b1c 6000     		.short	96
 5479 0b1e 6000     		.short	96
 5480 0b20 6000     		.short	96
 5481 0b22 6000     		.short	96
 5482 0b24 6000     		.short	96
 5483 0b26 6000     		.short	96
 5484 0b28 6000     		.short	96
 5485 0b2a 6000     		.short	96
 5486 0b2c 6000     		.short	96
 5487 0b2e 6000     		.short	96
 5488 0b30 6000     		.short	96
 5489 0b32 6000     		.short	96
 5490 0b34 6000     		.short	96
 5491 0b36 6000     		.short	96
 5492 0b38 6000     		.short	96
 5493 0b3a E003     		.short	992
 5494 0b3c E003     		.short	992
 5495 0b3e 0000     		.short	0
 5496 0b40 0000     		.short	0
 5497 0b42 3000     		.short	48
 5498 0b44 3000     		.short	48
 5499 0b46 6000     		.short	96
 5500 0b48 6000     		.short	96
 5501 0b4a 6000     		.short	96
 5502 0b4c C000     		.short	192
 5503 0b4e C000     		.short	192
 5504 0b50 C000     		.short	192
 5505 0b52 C001     		.short	448
 5506 0b54 8001     		.short	384
 5507 0b56 8001     		.short	384
 5508 0b58 8001     		.short	384
 5509 0b5a 0003     		.short	768
 5510 0b5c 0003     		.short	768
 5511 0b5e 0003     		.short	768
 5512 0b60 0006     		.short	1536
 5513 0b62 0006     		.short	1536
 5514 0b64 0000     		.short	0
 5515 0b66 0000     		.short	0
 5516 0b68 0000     		.short	0
 5517 0b6a 0000     		.short	0
 5518 0b6c 0000     		.short	0
 5519 0b6e 0000     		.short	0
 5520 0b70 0000     		.short	0
 5521 0b72 E003     		.short	992
 5522 0b74 E003     		.short	992
 5523 0b76 0003     		.short	768
 5524 0b78 0003     		.short	768
 5525 0b7a 0003     		.short	768
 5526 0b7c 0003     		.short	768
 5527 0b7e 0003     		.short	768
 5528 0b80 0003     		.short	768
 5529 0b82 0003     		.short	768
 5530 0b84 0003     		.short	768
 5531 0b86 0003     		.short	768
 5532 0b88 0003     		.short	768
 5533 0b8a 0003     		.short	768
 5534 0b8c 0003     		.short	768
 5535 0b8e 0003     		.short	768
 5536 0b90 0003     		.short	768
 5537 0b92 0003     		.short	768
 5538 0b94 0003     		.short	768
 5539 0b96 0003     		.short	768
 5540 0b98 0003     		.short	768
 5541 0b9a E003     		.short	992
 5542 0b9c E003     		.short	992
 5543 0b9e 0000     		.short	0
 5544 0ba0 0000     		.short	0
 5545 0ba2 0000     		.short	0
 5546 0ba4 C001     		.short	448
 5547 0ba6 C001     		.short	448
 5548 0ba8 6003     		.short	864
 5549 0baa 6003     		.short	864
 5550 0bac 6003     		.short	864
 5551 0bae 3006     		.short	1584
 5552 0bb0 3006     		.short	1584
 5553 0bb2 180C     		.short	3096
 5554 0bb4 180C     		.short	3096
 5555 0bb6 0000     		.short	0
 5556 0bb8 0000     		.short	0
 5557 0bba 0000     		.short	0
 5558 0bbc 0000     		.short	0
 5559 0bbe 0000     		.short	0
 5560 0bc0 0000     		.short	0
 5561 0bc2 0000     		.short	0
 5562 0bc4 0000     		.short	0
 5563 0bc6 0000     		.short	0
 5564 0bc8 0000     		.short	0
 5565 0bca 0000     		.short	0
 5566 0bcc 0000     		.short	0
 5567 0bce 0000     		.short	0
 5568 0bd0 0000     		.short	0
 5569 0bd2 0000     		.short	0
 5570 0bd4 0000     		.short	0
 5571 0bd6 0000     		.short	0
 5572 0bd8 0000     		.short	0
 5573 0bda 0000     		.short	0
 5574 0bdc 0000     		.short	0
 5575 0bde 0000     		.short	0
 5576 0be0 0000     		.short	0
 5577 0be2 0000     		.short	0
 5578 0be4 0000     		.short	0
 5579 0be6 0000     		.short	0
 5580 0be8 0000     		.short	0
 5581 0bea 0000     		.short	0
 5582 0bec 0000     		.short	0
 5583 0bee 0000     		.short	0
 5584 0bf0 0000     		.short	0
 5585 0bf2 FFFF     		.short	-1
 5586 0bf4 FFFF     		.short	-1
 5587 0bf6 0000     		.short	0
 5588 0bf8 0000     		.short	0
 5589 0bfa 0000     		.short	0
 5590 0bfc 0000     		.short	0
 5591 0bfe 0000     		.short	0
 5592 0c00 0000     		.short	0
 5593 0c02 0C00     		.short	12
 5594 0c04 0C00     		.short	12
 5595 0c06 0C00     		.short	12
 5596 0c08 0C00     		.short	12
 5597 0c0a 0C00     		.short	12
 5598 0c0c 0C00     		.short	12
 5599 0c0e 0000     		.short	0
 5600 0c10 0000     		.short	0
 5601 0c12 0000     		.short	0
 5602 0c14 0000     		.short	0
 5603 0c16 0000     		.short	0
 5604 0c18 0000     		.short	0
 5605 0c1a 0000     		.short	0
 5606 0c1c 0000     		.short	0
 5607 0c1e 0000     		.short	0
 5608 0c20 0000     		.short	0
 5609 0c22 0000     		.short	0
 5610 0c24 0000     		.short	0
 5611 0c26 0000     		.short	0
 5612 0c28 0000     		.short	0
 5613 0c2a 0000     		.short	0
 5614 0c2c 0000     		.short	0
 5615 0c2e 0000     		.short	0
 5616 0c30 0000     		.short	0
 5617 0c32 0000     		.short	0
 5618 0c34 0000     		.short	0
 5619 0c36 0000     		.short	0
 5620 0c38 0000     		.short	0
 5621 0c3a 0000     		.short	0
 5622 0c3c F003     		.short	1008
 5623 0c3e F807     		.short	2040
 5624 0c40 1C0C     		.short	3100
 5625 0c42 0C0C     		.short	3084
 5626 0c44 000F     		.short	3840
 5627 0c46 F00F     		.short	4080
 5628 0c48 F80C     		.short	3320
 5629 0c4a 0C0C     		.short	3084
 5630 0c4c 0C0C     		.short	3084
 5631 0c4e 1C0F     		.short	3868
 5632 0c50 F80F     		.short	4088
 5633 0c52 F018     		.short	6384
 5634 0c54 0000     		.short	0
 5635 0c56 0000     		.short	0
 5636 0c58 0000     		.short	0
 5637 0c5a 0000     		.short	0
 5638 0c5c 0000     		.short	0
 5639 0c5e 0000     		.short	0
 5640 0c60 0000     		.short	0
 5641 0c62 1800     		.short	24
 5642 0c64 1800     		.short	24
 5643 0c66 1800     		.short	24
 5644 0c68 1800     		.short	24
 5645 0c6a 1800     		.short	24
 5646 0c6c D803     		.short	984
 5647 0c6e F80F     		.short	4088
 5648 0c70 380C     		.short	3128
 5649 0c72 1818     		.short	6168
 5650 0c74 1818     		.short	6168
 5651 0c76 1818     		.short	6168
 5652 0c78 1818     		.short	6168
 5653 0c7a 1818     		.short	6168
 5654 0c7c 1818     		.short	6168
 5655 0c7e 380C     		.short	3128
 5656 0c80 F80F     		.short	4088
 5657 0c82 D803     		.short	984
 5658 0c84 0000     		.short	0
 5659 0c86 0000     		.short	0
 5660 0c88 0000     		.short	0
 5661 0c8a 0000     		.short	0
 5662 0c8c 0000     		.short	0
 5663 0c8e 0000     		.short	0
 5664 0c90 0000     		.short	0
 5665 0c92 0000     		.short	0
 5666 0c94 0000     		.short	0
 5667 0c96 0000     		.short	0
 5668 0c98 0000     		.short	0
 5669 0c9a 0000     		.short	0
 5670 0c9c C003     		.short	960
 5671 0c9e F007     		.short	2032
 5672 0ca0 300E     		.short	3632
 5673 0ca2 180C     		.short	3096
 5674 0ca4 1800     		.short	24
 5675 0ca6 1800     		.short	24
 5676 0ca8 1800     		.short	24
 5677 0caa 1800     		.short	24
 5678 0cac 180C     		.short	3096
 5679 0cae 300E     		.short	3632
 5680 0cb0 F007     		.short	2032
 5681 0cb2 C003     		.short	960
 5682 0cb4 0000     		.short	0
 5683 0cb6 0000     		.short	0
 5684 0cb8 0000     		.short	0
 5685 0cba 0000     		.short	0
 5686 0cbc 0000     		.short	0
 5687 0cbe 0000     		.short	0
 5688 0cc0 0000     		.short	0
 5689 0cc2 0018     		.short	6144
 5690 0cc4 0018     		.short	6144
 5691 0cc6 0018     		.short	6144
 5692 0cc8 0018     		.short	6144
 5693 0cca 0018     		.short	6144
 5694 0ccc C01B     		.short	7104
 5695 0cce F01F     		.short	8176
 5696 0cd0 301C     		.short	7216
 5697 0cd2 1818     		.short	6168
 5698 0cd4 1818     		.short	6168
 5699 0cd6 1818     		.short	6168
 5700 0cd8 1818     		.short	6168
 5701 0cda 1818     		.short	6168
 5702 0cdc 1818     		.short	6168
 5703 0cde 301C     		.short	7216
 5704 0ce0 F01F     		.short	8176
 5705 0ce2 C01B     		.short	7104
 5706 0ce4 0000     		.short	0
 5707 0ce6 0000     		.short	0
 5708 0ce8 0000     		.short	0
 5709 0cea 0000     		.short	0
 5710 0cec 0000     		.short	0
 5711 0cee 0000     		.short	0
 5712 0cf0 0000     		.short	0
 5713 0cf2 0000     		.short	0
 5714 0cf4 0000     		.short	0
 5715 0cf6 0000     		.short	0
 5716 0cf8 0000     		.short	0
 5717 0cfa 0000     		.short	0
 5718 0cfc C003     		.short	960
 5719 0cfe F00F     		.short	4080
 5720 0d00 300C     		.short	3120
 5721 0d02 1818     		.short	6168
 5722 0d04 F81F     		.short	8184
 5723 0d06 F81F     		.short	8184
 5724 0d08 1800     		.short	24
 5725 0d0a 1800     		.short	24
 5726 0d0c 3818     		.short	6200
 5727 0d0e 301C     		.short	7216
 5728 0d10 F00F     		.short	4080
 5729 0d12 C007     		.short	1984
 5730 0d14 0000     		.short	0
 5731 0d16 0000     		.short	0
 5732 0d18 0000     		.short	0
 5733 0d1a 0000     		.short	0
 5734 0d1c 0000     		.short	0
 5735 0d1e 0000     		.short	0
 5736 0d20 0000     		.short	0
 5737 0d22 800F     		.short	3968
 5738 0d24 C00F     		.short	4032
 5739 0d26 C000     		.short	192
 5740 0d28 C000     		.short	192
 5741 0d2a C000     		.short	192
 5742 0d2c F007     		.short	2032
 5743 0d2e F007     		.short	2032
 5744 0d30 C000     		.short	192
 5745 0d32 C000     		.short	192
 5746 0d34 C000     		.short	192
 5747 0d36 C000     		.short	192
 5748 0d38 C000     		.short	192
 5749 0d3a C000     		.short	192
 5750 0d3c C000     		.short	192
 5751 0d3e C000     		.short	192
 5752 0d40 C000     		.short	192
 5753 0d42 C000     		.short	192
 5754 0d44 0000     		.short	0
 5755 0d46 0000     		.short	0
 5756 0d48 0000     		.short	0
 5757 0d4a 0000     		.short	0
 5758 0d4c 0000     		.short	0
 5759 0d4e 0000     		.short	0
 5760 0d50 0000     		.short	0
 5761 0d52 0000     		.short	0
 5762 0d54 0000     		.short	0
 5763 0d56 0000     		.short	0
 5764 0d58 0000     		.short	0
 5765 0d5a 0000     		.short	0
 5766 0d5c E00D     		.short	3552
 5767 0d5e F80F     		.short	4088
 5768 0d60 180E     		.short	3608
 5769 0d62 0C0C     		.short	3084
 5770 0d64 0C0C     		.short	3084
 5771 0d66 0C0C     		.short	3084
 5772 0d68 0C0C     		.short	3084
 5773 0d6a 0C0C     		.short	3084
 5774 0d6c 0C0C     		.short	3084
 5775 0d6e 180E     		.short	3608
 5776 0d70 F80F     		.short	4088
 5777 0d72 E00D     		.short	3552
 5778 0d74 000C     		.short	3072
 5779 0d76 0C0C     		.short	3084
 5780 0d78 1C06     		.short	1564
 5781 0d7a F807     		.short	2040
 5782 0d7c F001     		.short	496
 5783 0d7e 0000     		.short	0
 5784 0d80 0000     		.short	0
 5785 0d82 1800     		.short	24
 5786 0d84 1800     		.short	24
 5787 0d86 1800     		.short	24
 5788 0d88 1800     		.short	24
 5789 0d8a 1800     		.short	24
 5790 0d8c D807     		.short	2008
 5791 0d8e F80F     		.short	4088
 5792 0d90 381C     		.short	7224
 5793 0d92 1818     		.short	6168
 5794 0d94 1818     		.short	6168
 5795 0d96 1818     		.short	6168
 5796 0d98 1818     		.short	6168
 5797 0d9a 1818     		.short	6168
 5798 0d9c 1818     		.short	6168
 5799 0d9e 1818     		.short	6168
 5800 0da0 1818     		.short	6168
 5801 0da2 1818     		.short	6168
 5802 0da4 0000     		.short	0
 5803 0da6 0000     		.short	0
 5804 0da8 0000     		.short	0
 5805 0daa 0000     		.short	0
 5806 0dac 0000     		.short	0
 5807 0dae 0000     		.short	0
 5808 0db0 0000     		.short	0
 5809 0db2 C000     		.short	192
 5810 0db4 C000     		.short	192
 5811 0db6 0000     		.short	0
 5812 0db8 0000     		.short	0
 5813 0dba 0000     		.short	0
 5814 0dbc C000     		.short	192
 5815 0dbe C000     		.short	192
 5816 0dc0 C000     		.short	192
 5817 0dc2 C000     		.short	192
 5818 0dc4 C000     		.short	192
 5819 0dc6 C000     		.short	192
 5820 0dc8 C000     		.short	192
 5821 0dca C000     		.short	192
 5822 0dcc C000     		.short	192
 5823 0dce C000     		.short	192
 5824 0dd0 C000     		.short	192
 5825 0dd2 C000     		.short	192
 5826 0dd4 0000     		.short	0
 5827 0dd6 0000     		.short	0
 5828 0dd8 0000     		.short	0
 5829 0dda 0000     		.short	0
 5830 0ddc 0000     		.short	0
 5831 0dde 0000     		.short	0
 5832 0de0 0000     		.short	0
 5833 0de2 C000     		.short	192
 5834 0de4 C000     		.short	192
 5835 0de6 0000     		.short	0
 5836 0de8 0000     		.short	0
 5837 0dea 0000     		.short	0
 5838 0dec C000     		.short	192
 5839 0dee C000     		.short	192
 5840 0df0 C000     		.short	192
 5841 0df2 C000     		.short	192
 5842 0df4 C000     		.short	192
 5843 0df6 C000     		.short	192
 5844 0df8 C000     		.short	192
 5845 0dfa C000     		.short	192
 5846 0dfc C000     		.short	192
 5847 0dfe C000     		.short	192
 5848 0e00 C000     		.short	192
 5849 0e02 C000     		.short	192
 5850 0e04 C000     		.short	192
 5851 0e06 C000     		.short	192
 5852 0e08 C000     		.short	192
 5853 0e0a F800     		.short	248
 5854 0e0c 7800     		.short	120
 5855 0e0e 0000     		.short	0
 5856 0e10 0000     		.short	0
 5857 0e12 0C00     		.short	12
 5858 0e14 0C00     		.short	12
 5859 0e16 0C00     		.short	12
 5860 0e18 0C00     		.short	12
 5861 0e1a 0C00     		.short	12
 5862 0e1c 0C0C     		.short	3084
 5863 0e1e 0C06     		.short	1548
 5864 0e20 0C03     		.short	780
 5865 0e22 8C01     		.short	396
 5866 0e24 CC00     		.short	204
 5867 0e26 6C00     		.short	108
 5868 0e28 FC00     		.short	252
 5869 0e2a 9C01     		.short	412
 5870 0e2c 8C03     		.short	908
 5871 0e2e 0C03     		.short	780
 5872 0e30 0C06     		.short	1548
 5873 0e32 0C0C     		.short	3084
 5874 0e34 0000     		.short	0
 5875 0e36 0000     		.short	0
 5876 0e38 0000     		.short	0
 5877 0e3a 0000     		.short	0
 5878 0e3c 0000     		.short	0
 5879 0e3e 0000     		.short	0
 5880 0e40 0000     		.short	0
 5881 0e42 C000     		.short	192
 5882 0e44 C000     		.short	192
 5883 0e46 C000     		.short	192
 5884 0e48 C000     		.short	192
 5885 0e4a C000     		.short	192
 5886 0e4c C000     		.short	192
 5887 0e4e C000     		.short	192
 5888 0e50 C000     		.short	192
 5889 0e52 C000     		.short	192
 5890 0e54 C000     		.short	192
 5891 0e56 C000     		.short	192
 5892 0e58 C000     		.short	192
 5893 0e5a C000     		.short	192
 5894 0e5c C000     		.short	192
 5895 0e5e C000     		.short	192
 5896 0e60 C000     		.short	192
 5897 0e62 C000     		.short	192
 5898 0e64 0000     		.short	0
 5899 0e66 0000     		.short	0
 5900 0e68 0000     		.short	0
 5901 0e6a 0000     		.short	0
 5902 0e6c 0000     		.short	0
 5903 0e6e 0000     		.short	0
 5904 0e70 0000     		.short	0
 5905 0e72 0000     		.short	0
 5906 0e74 0000     		.short	0
 5907 0e76 0000     		.short	0
 5908 0e78 0000     		.short	0
 5909 0e7a 0000     		.short	0
 5910 0e7c 7C3C     		.short	15484
 5911 0e7e FF7E     		.short	32511
 5912 0e80 C7E3     		.short	-7225
 5913 0e82 83C1     		.short	-15997
 5914 0e84 83C1     		.short	-15997
 5915 0e86 83C1     		.short	-15997
 5916 0e88 83C1     		.short	-15997
 5917 0e8a 83C1     		.short	-15997
 5918 0e8c 83C1     		.short	-15997
 5919 0e8e 83C1     		.short	-15997
 5920 0e90 83C1     		.short	-15997
 5921 0e92 83C1     		.short	-15997
 5922 0e94 0000     		.short	0
 5923 0e96 0000     		.short	0
 5924 0e98 0000     		.short	0
 5925 0e9a 0000     		.short	0
 5926 0e9c 0000     		.short	0
 5927 0e9e 0000     		.short	0
 5928 0ea0 0000     		.short	0
 5929 0ea2 0000     		.short	0
 5930 0ea4 0000     		.short	0
 5931 0ea6 0000     		.short	0
 5932 0ea8 0000     		.short	0
 5933 0eaa 0000     		.short	0
 5934 0eac 9807     		.short	1944
 5935 0eae F80F     		.short	4088
 5936 0eb0 381C     		.short	7224
 5937 0eb2 1818     		.short	6168
 5938 0eb4 1818     		.short	6168
 5939 0eb6 1818     		.short	6168
 5940 0eb8 1818     		.short	6168
 5941 0eba 1818     		.short	6168
 5942 0ebc 1818     		.short	6168
 5943 0ebe 1818     		.short	6168
 5944 0ec0 1818     		.short	6168
 5945 0ec2 1818     		.short	6168
 5946 0ec4 0000     		.short	0
 5947 0ec6 0000     		.short	0
 5948 0ec8 0000     		.short	0
 5949 0eca 0000     		.short	0
 5950 0ecc 0000     		.short	0
 5951 0ece 0000     		.short	0
 5952 0ed0 0000     		.short	0
 5953 0ed2 0000     		.short	0
 5954 0ed4 0000     		.short	0
 5955 0ed6 0000     		.short	0
 5956 0ed8 0000     		.short	0
 5957 0eda 0000     		.short	0
 5958 0edc C003     		.short	960
 5959 0ede F00F     		.short	4080
 5960 0ee0 300C     		.short	3120
 5961 0ee2 1818     		.short	6168
 5962 0ee4 1818     		.short	6168
 5963 0ee6 1818     		.short	6168
 5964 0ee8 1818     		.short	6168
 5965 0eea 1818     		.short	6168
 5966 0eec 1818     		.short	6168
 5967 0eee 300C     		.short	3120
 5968 0ef0 F00F     		.short	4080
 5969 0ef2 C003     		.short	960
 5970 0ef4 0000     		.short	0
 5971 0ef6 0000     		.short	0
 5972 0ef8 0000     		.short	0
 5973 0efa 0000     		.short	0
 5974 0efc 0000     		.short	0
 5975 0efe 0000     		.short	0
 5976 0f00 0000     		.short	0
 5977 0f02 0000     		.short	0
 5978 0f04 0000     		.short	0
 5979 0f06 0000     		.short	0
 5980 0f08 0000     		.short	0
 5981 0f0a 0000     		.short	0
 5982 0f0c D803     		.short	984
 5983 0f0e F80F     		.short	4088
 5984 0f10 380C     		.short	3128
 5985 0f12 1818     		.short	6168
 5986 0f14 1818     		.short	6168
 5987 0f16 1818     		.short	6168
 5988 0f18 1818     		.short	6168
 5989 0f1a 1818     		.short	6168
 5990 0f1c 1818     		.short	6168
 5991 0f1e 380C     		.short	3128
 5992 0f20 F80F     		.short	4088
 5993 0f22 D803     		.short	984
 5994 0f24 1800     		.short	24
 5995 0f26 1800     		.short	24
 5996 0f28 1800     		.short	24
 5997 0f2a 1800     		.short	24
 5998 0f2c 1800     		.short	24
 5999 0f2e 0000     		.short	0
 6000 0f30 0000     		.short	0
 6001 0f32 0000     		.short	0
 6002 0f34 0000     		.short	0
 6003 0f36 0000     		.short	0
 6004 0f38 0000     		.short	0
 6005 0f3a 0000     		.short	0
 6006 0f3c C01B     		.short	7104
 6007 0f3e F01F     		.short	8176
 6008 0f40 301C     		.short	7216
 6009 0f42 1818     		.short	6168
 6010 0f44 1818     		.short	6168
 6011 0f46 1818     		.short	6168
 6012 0f48 1818     		.short	6168
 6013 0f4a 1818     		.short	6168
 6014 0f4c 1818     		.short	6168
 6015 0f4e 301C     		.short	7216
 6016 0f50 F01F     		.short	8176
 6017 0f52 C01B     		.short	7104
 6018 0f54 0018     		.short	6144
 6019 0f56 0018     		.short	6144
 6020 0f58 0018     		.short	6144
 6021 0f5a 0018     		.short	6144
 6022 0f5c 0018     		.short	6144
 6023 0f5e 0000     		.short	0
 6024 0f60 0000     		.short	0
 6025 0f62 0000     		.short	0
 6026 0f64 0000     		.short	0
 6027 0f66 0000     		.short	0
 6028 0f68 0000     		.short	0
 6029 0f6a 0000     		.short	0
 6030 0f6c B007     		.short	1968
 6031 0f6e F003     		.short	1008
 6032 0f70 7000     		.short	112
 6033 0f72 3000     		.short	48
 6034 0f74 3000     		.short	48
 6035 0f76 3000     		.short	48
 6036 0f78 3000     		.short	48
 6037 0f7a 3000     		.short	48
 6038 0f7c 3000     		.short	48
 6039 0f7e 3000     		.short	48
 6040 0f80 3000     		.short	48
 6041 0f82 3000     		.short	48
 6042 0f84 0000     		.short	0
 6043 0f86 0000     		.short	0
 6044 0f88 0000     		.short	0
 6045 0f8a 0000     		.short	0
 6046 0f8c 0000     		.short	0
 6047 0f8e 0000     		.short	0
 6048 0f90 0000     		.short	0
 6049 0f92 0000     		.short	0
 6050 0f94 0000     		.short	0
 6051 0f96 0000     		.short	0
 6052 0f98 0000     		.short	0
 6053 0f9a 0000     		.short	0
 6054 0f9c E003     		.short	992
 6055 0f9e F003     		.short	1008
 6056 0fa0 380E     		.short	3640
 6057 0fa2 180C     		.short	3096
 6058 0fa4 3800     		.short	56
 6059 0fa6 F003     		.short	1008
 6060 0fa8 C007     		.short	1984
 6061 0faa 000C     		.short	3072
 6062 0fac 180C     		.short	3096
 6063 0fae 380E     		.short	3640
 6064 0fb0 F007     		.short	2032
 6065 0fb2 E003     		.short	992
 6066 0fb4 0000     		.short	0
 6067 0fb6 0000     		.short	0
 6068 0fb8 0000     		.short	0
 6069 0fba 0000     		.short	0
 6070 0fbc 0000     		.short	0
 6071 0fbe 0000     		.short	0
 6072 0fc0 0000     		.short	0
 6073 0fc2 0000     		.short	0
 6074 0fc4 8000     		.short	128
 6075 0fc6 C000     		.short	192
 6076 0fc8 C000     		.short	192
 6077 0fca C000     		.short	192
 6078 0fcc F007     		.short	2032
 6079 0fce F007     		.short	2032
 6080 0fd0 C000     		.short	192
 6081 0fd2 C000     		.short	192
 6082 0fd4 C000     		.short	192
 6083 0fd6 C000     		.short	192
 6084 0fd8 C000     		.short	192
 6085 0fda C000     		.short	192
 6086 0fdc C000     		.short	192
 6087 0fde C000     		.short	192
 6088 0fe0 C007     		.short	1984
 6089 0fe2 8007     		.short	1920
 6090 0fe4 0000     		.short	0
 6091 0fe6 0000     		.short	0
 6092 0fe8 0000     		.short	0
 6093 0fea 0000     		.short	0
 6094 0fec 0000     		.short	0
 6095 0fee 0000     		.short	0
 6096 0ff0 0000     		.short	0
 6097 0ff2 0000     		.short	0
 6098 0ff4 0000     		.short	0
 6099 0ff6 0000     		.short	0
 6100 0ff8 0000     		.short	0
 6101 0ffa 0000     		.short	0
 6102 0ffc 1818     		.short	6168
 6103 0ffe 1818     		.short	6168
 6104 1000 1818     		.short	6168
 6105 1002 1818     		.short	6168
 6106 1004 1818     		.short	6168
 6107 1006 1818     		.short	6168
 6108 1008 1818     		.short	6168
 6109 100a 1818     		.short	6168
 6110 100c 1818     		.short	6168
 6111 100e 381C     		.short	7224
 6112 1010 F01F     		.short	8176
 6113 1012 E019     		.short	6624
 6114 1014 0000     		.short	0
 6115 1016 0000     		.short	0
 6116 1018 0000     		.short	0
 6117 101a 0000     		.short	0
 6118 101c 0000     		.short	0
 6119 101e 0000     		.short	0
 6120 1020 0000     		.short	0
 6121 1022 0000     		.short	0
 6122 1024 0000     		.short	0
 6123 1026 0000     		.short	0
 6124 1028 0000     		.short	0
 6125 102a 0000     		.short	0
 6126 102c 0C18     		.short	6156
 6127 102e 180C     		.short	3096
 6128 1030 180C     		.short	3096
 6129 1032 180C     		.short	3096
 6130 1034 3006     		.short	1584
 6131 1036 3006     		.short	1584
 6132 1038 3006     		.short	1584
 6133 103a 6003     		.short	864
 6134 103c 6003     		.short	864
 6135 103e 6003     		.short	864
 6136 1040 C001     		.short	448
 6137 1042 C001     		.short	448
 6138 1044 0000     		.short	0
 6139 1046 0000     		.short	0
 6140 1048 0000     		.short	0
 6141 104a 0000     		.short	0
 6142 104c 0000     		.short	0
 6143 104e 0000     		.short	0
 6144 1050 0000     		.short	0
 6145 1052 0000     		.short	0
 6146 1054 0000     		.short	0
 6147 1056 0000     		.short	0
 6148 1058 0000     		.short	0
 6149 105a 0000     		.short	0
 6150 105c C141     		.short	16833
 6151 105e C141     		.short	16833
 6152 1060 C361     		.short	25027
 6153 1062 6363     		.short	25443
 6154 1064 6363     		.short	25443
 6155 1066 6363     		.short	25443
 6156 1068 3636     		.short	13878
 6157 106a 3636     		.short	13878
 6158 106c 3636     		.short	13878
 6159 106e 1C1C     		.short	7196
 6160 1070 1C1C     		.short	7196
 6161 1072 1C1C     		.short	7196
 6162 1074 0000     		.short	0
 6163 1076 0000     		.short	0
 6164 1078 0000     		.short	0
 6165 107a 0000     		.short	0
 6166 107c 0000     		.short	0
 6167 107e 0000     		.short	0
 6168 1080 0000     		.short	0
 6169 1082 0000     		.short	0
 6170 1084 0000     		.short	0
 6171 1086 0000     		.short	0
 6172 1088 0000     		.short	0
 6173 108a 0000     		.short	0
 6174 108c 1C38     		.short	14364
 6175 108e 381C     		.short	7224
 6176 1090 300C     		.short	3120
 6177 1092 6006     		.short	1632
 6178 1094 C003     		.short	960
 6179 1096 C003     		.short	960
 6180 1098 C003     		.short	960
 6181 109a C003     		.short	960
 6182 109c 6006     		.short	1632
 6183 109e 300C     		.short	3120
 6184 10a0 381C     		.short	7224
 6185 10a2 1C38     		.short	14364
 6186 10a4 0000     		.short	0
 6187 10a6 0000     		.short	0
 6188 10a8 0000     		.short	0
 6189 10aa 0000     		.short	0
 6190 10ac 0000     		.short	0
 6191 10ae 0000     		.short	0
 6192 10b0 0000     		.short	0
 6193 10b2 0000     		.short	0
 6194 10b4 0000     		.short	0
 6195 10b6 0000     		.short	0
 6196 10b8 0000     		.short	0
 6197 10ba 0000     		.short	0
 6198 10bc 1830     		.short	12312
 6199 10be 3018     		.short	6192
 6200 10c0 3018     		.short	6192
 6201 10c2 7018     		.short	6256
 6202 10c4 600C     		.short	3168
 6203 10c6 600C     		.short	3168
 6204 10c8 E00C     		.short	3296
 6205 10ca C006     		.short	1728
 6206 10cc C006     		.short	1728
 6207 10ce 8003     		.short	896
 6208 10d0 8003     		.short	896
 6209 10d2 8003     		.short	896
 6210 10d4 8001     		.short	384
 6211 10d6 8001     		.short	384
 6212 10d8 C001     		.short	448
 6213 10da F000     		.short	240
 6214 10dc 7000     		.short	112
 6215 10de 0000     		.short	0
 6216 10e0 0000     		.short	0
 6217 10e2 0000     		.short	0
 6218 10e4 0000     		.short	0
 6219 10e6 0000     		.short	0
 6220 10e8 0000     		.short	0
 6221 10ea 0000     		.short	0
 6222 10ec FC1F     		.short	8188
 6223 10ee FC1F     		.short	8188
 6224 10f0 000C     		.short	3072
 6225 10f2 0006     		.short	1536
 6226 10f4 0003     		.short	768
 6227 10f6 8001     		.short	384
 6228 10f8 C000     		.short	192
 6229 10fa 6000     		.short	96
 6230 10fc 3000     		.short	48
 6231 10fe 1800     		.short	24
 6232 1100 FC1F     		.short	8188
 6233 1102 FC1F     		.short	8188
 6234 1104 0000     		.short	0
 6235 1106 0000     		.short	0
 6236 1108 0000     		.short	0
 6237 110a 0000     		.short	0
 6238 110c 0000     		.short	0
 6239 110e 0000     		.short	0
 6240 1110 0000     		.short	0
 6241 1112 0003     		.short	768
 6242 1114 8001     		.short	384
 6243 1116 C000     		.short	192
 6244 1118 C000     		.short	192
 6245 111a C000     		.short	192
 6246 111c C000     		.short	192
 6247 111e C000     		.short	192
 6248 1120 C000     		.short	192
 6249 1122 6000     		.short	96
 6250 1124 6000     		.short	96
 6251 1126 3000     		.short	48
 6252 1128 6000     		.short	96
 6253 112a 4000     		.short	64
 6254 112c C000     		.short	192
 6255 112e C000     		.short	192
 6256 1130 C000     		.short	192
 6257 1132 C000     		.short	192
 6258 1134 C000     		.short	192
 6259 1136 C000     		.short	192
 6260 1138 8001     		.short	384
 6261 113a 0003     		.short	768
 6262 113c 0000     		.short	0
 6263 113e 0000     		.short	0
 6264 1140 0000     		.short	0
 6265 1142 8001     		.short	384
 6266 1144 8001     		.short	384
 6267 1146 8001     		.short	384
 6268 1148 8001     		.short	384
 6269 114a 8001     		.short	384
 6270 114c 8001     		.short	384
 6271 114e 8001     		.short	384
 6272 1150 8001     		.short	384
 6273 1152 8001     		.short	384
 6274 1154 8001     		.short	384
 6275 1156 8001     		.short	384
 6276 1158 8001     		.short	384
 6277 115a 8001     		.short	384
 6278 115c 8001     		.short	384
 6279 115e 8001     		.short	384
 6280 1160 8001     		.short	384
 6281 1162 8001     		.short	384
 6282 1164 8001     		.short	384
 6283 1166 8001     		.short	384
 6284 1168 8001     		.short	384
 6285 116a 8001     		.short	384
 6286 116c 8001     		.short	384
 6287 116e 0000     		.short	0
 6288 1170 0000     		.short	0
 6289 1172 6000     		.short	96
 6290 1174 C000     		.short	192
 6291 1176 C001     		.short	448
 6292 1178 8001     		.short	384
 6293 117a 8001     		.short	384
 6294 117c 8001     		.short	384
 6295 117e 8001     		.short	384
 6296 1180 8001     		.short	384
 6297 1182 0003     		.short	768
 6298 1184 0003     		.short	768
 6299 1186 0006     		.short	1536
 6300 1188 0003     		.short	768
 6301 118a 0001     		.short	256
 6302 118c 8001     		.short	384
 6303 118e 8001     		.short	384
 6304 1190 8001     		.short	384
 6305 1192 8001     		.short	384
 6306 1194 8001     		.short	384
 6307 1196 8001     		.short	384
 6308 1198 C000     		.short	192
 6309 119a 6000     		.short	96
 6310 119c 0000     		.short	0
 6311 119e 0000     		.short	0
 6312 11a0 0000     		.short	0
 6313 11a2 0000     		.short	0
 6314 11a4 0000     		.short	0
 6315 11a6 0000     		.short	0
 6316 11a8 0000     		.short	0
 6317 11aa 0000     		.short	0
 6318 11ac 0000     		.short	0
 6319 11ae 0000     		.short	0
 6320 11b0 F010     		.short	4336
 6321 11b2 F81F     		.short	8184
 6322 11b4 080F     		.short	3848
 6323 11b6 0000     		.short	0
 6324 11b8 0000     		.short	0
 6325 11ba 0000     		.short	0
 6326 11bc 0000     		.short	0
 6327 11be 0000     		.short	0
 6328 11c0 0000     		.short	0
 6329 11c2 0000     		.short	0
 6330 11c4 0000     		.short	0
 6331 11c6 0000     		.short	0
 6332 11c8 0000     		.short	0
 6333 11ca 0000     		.short	0
 6334 11cc 0000     		.short	0
 6335 11ce 0000     		.short	0
 6336 11d0 0000     		.short	0
 6337 11d2 0000     		.short	0
 6338 11d4 0000     		.short	0
 6339 11d6 0000     		.short	0
 6340 11d8 0000     		.short	0
 6341 11da 0000     		.short	0
 6342 11dc 0000     		.short	0
 6343 11de 0000     		.short	0
 6344 11e0 0000     		.short	0
 6345 11e2 0000     		.short	0
 6346 11e4 0000     		.short	0
 6347 11e6 0000     		.short	0
 6348 11e8 0000     		.short	0
 6349 11ea 0000     		.short	0
 6350 11ec 0000     		.short	0
 6351 11ee 0000     		.short	0
 6352 11f0 0000     		.short	0
 6353 11f2 0000     		.short	0
 6354 11f4 0000     		.short	0
 6355 11f6 0000     		.short	0
 6356 11f8 0000     		.short	0
 6357 11fa 0000     		.short	0
 6358 11fc 0000     		.short	0
 6359 11fe 0000     		.short	0
 6360 1200 0000     		.short	0
 6361 1202 0000     		.short	0
 6362 1204 0000     		.short	0
 6363 1206 0000     		.short	0
 6364 1208 0000     		.short	0
 6365 120a C003     		.short	960
 6366 120c 300C     		.short	3120
 6367 120e 0810     		.short	4104
 6368 1210 0420     		.short	8196
 6369 1212 0420     		.short	8196
 6370 1214 0240     		.short	16386
 6371 1216 0240     		.short	16386
 6372 1218 0240     		.short	16386
 6373 121a 0240     		.short	16386
 6374 121c 0240     		.short	16386
 6375 121e 0420     		.short	8196
 6376 1220 0420     		.short	8196
 6377 1222 0810     		.short	4104
 6378 1224 300C     		.short	3120
 6379 1226 C003     		.short	960
 6380 1228 0000     		.short	0
 6381 122a 0000     		.short	0
 6382 122c 0000     		.short	0
 6383 122e 0000     		.short	0
 6384 1230 0000     		.short	0
 6385 1232 0000     		.short	0
 6386 1234 0000     		.short	0
 6387 1236 0000     		.short	0
 6388 1238 0000     		.short	0
 6389 123a C003     		.short	960
 6390 123c F00F     		.short	4080
 6391 123e F81F     		.short	8184
 6392 1240 FC3F     		.short	16380
 6393 1242 FC3F     		.short	16380
 6394 1244 FE7F     		.short	32766
 6395 1246 FE7F     		.short	32766
 6396 1248 FE7F     		.short	32766
 6397 124a FE7F     		.short	32766
 6398 124c FE7F     		.short	32766
 6399 124e FC3F     		.short	16380
 6400 1250 FC3F     		.short	16380
 6401 1252 F81F     		.short	8184
 6402 1254 F00F     		.short	4080
 6403 1256 C003     		.short	960
 6404 1258 0000     		.short	0
 6405 125a 0000     		.short	0
 6406 125c 0000     		.short	0
 6407 125e 0000     		.short	0
 6408 1260 0000     		.short	0
 6409 1262 0000     		.short	0
 6410 1264 0000     		.short	0
 6411 1266 0000     		.short	0
 6412 1268 0000     		.short	0
 6413 126a 0000     		.short	0
 6414 126c 0000     		.short	0
 6415 126e E007     		.short	2016
 6416 1270 F00F     		.short	4080
 6417 1272 1818     		.short	6168
 6418 1274 1818     		.short	6168
 6419 1276 1818     		.short	6168
 6420 1278 1818     		.short	6168
 6421 127a 1818     		.short	6168
 6422 127c 1818     		.short	6168
 6423 127e F00F     		.short	4080
 6424 1280 E007     		.short	2016
 6425 1282 0000     		.short	0
 6426 1284 0000     		.short	0
 6427 1286 0000     		.short	0
 6428 1288 0000     		.short	0
 6429 128a 0000     		.short	0
 6430 128c 0000     		.short	0
 6431 128e 0000     		.short	0
 6432 1290 0000     		.short	0
 6433 1292 0000     		.short	0
 6434 1294 0000     		.short	0
 6435 1296 0000     		.short	0
 6436 1298 0000     		.short	0
 6437 129a 0000     		.short	0
 6438 129c 0000     		.short	0
 6439 129e E007     		.short	2016
 6440 12a0 F00F     		.short	4080
 6441 12a2 F81F     		.short	8184
 6442 12a4 F81F     		.short	8184
 6443 12a6 F81F     		.short	8184
 6444 12a8 F81F     		.short	8184
 6445 12aa F81F     		.short	8184
 6446 12ac F81F     		.short	8184
 6447 12ae F00F     		.short	4080
 6448 12b0 E007     		.short	2016
 6449 12b2 0000     		.short	0
 6450 12b4 0000     		.short	0
 6451 12b6 0000     		.short	0
 6452 12b8 0000     		.short	0
 6453 12ba 0000     		.short	0
 6454 12bc 0000     		.short	0
 6455 12be 0000     		.short	0
 6456 12c0 0000     		.short	0
 6457 12c2 0000     		.short	0
 6458 12c4 0000     		.short	0
 6459 12c6 0000     		.short	0
 6460 12c8 0000     		.short	0
 6461 12ca 0000     		.short	0
 6462 12cc 0000     		.short	0
 6463 12ce 0000     		.short	0
 6464 12d0 0000     		.short	0
 6465 12d2 0000     		.short	0
 6466 12d4 0000     		.short	0
 6467 12d6 0000     		.short	0
 6468 12d8 8001     		.short	384
 6469 12da C003     		.short	960
 6470 12dc 6006     		.short	1632
 6471 12de 300C     		.short	3120
 6472 12e0 1818     		.short	6168
 6473 12e2 1818     		.short	6168
 6474 12e4 F81F     		.short	8184
 6475 12e6 F81F     		.short	8184
 6476 12e8 0000     		.short	0
 6477 12ea 0000     		.short	0
 6478 12ec 0000     		.short	0
 6479 12ee 0000     		.short	0
 6480 12f0 0000     		.short	0
 6481 12f2 0000     		.short	0
 6482 12f4 0000     		.short	0
 6483 12f6 0000     		.short	0
 6484 12f8 0000     		.short	0
 6485 12fa 0000     		.short	0
 6486 12fc 0000     		.short	0
 6487 12fe 0000     		.short	0
 6488 1300 0000     		.short	0
 6489 1302 0000     		.short	0
 6490 1304 0000     		.short	0
 6491 1306 0000     		.short	0
 6492 1308 8001     		.short	384
 6493 130a C003     		.short	960
 6494 130c E007     		.short	2016
 6495 130e F00F     		.short	4080
 6496 1310 F81F     		.short	8184
 6497 1312 F81F     		.short	8184
 6498 1314 F81F     		.short	8184
 6499 1316 F81F     		.short	8184
 6500 1318 0000     		.short	0
 6501 131a 0000     		.short	0
 6502 131c 0000     		.short	0
 6503 131e 0000     		.short	0
 6504 1320 0000     		.short	0
 6505 1322 0000     		.short	0
 6506 1324 0000     		.short	0
 6507 1326 0000     		.short	0
 6508 1328 F81F     		.short	8184
 6509 132a F81F     		.short	8184
 6510 132c 1818     		.short	6168
 6511 132e 1818     		.short	6168
 6512 1330 300C     		.short	3120
 6513 1332 6006     		.short	1632
 6514 1334 C003     		.short	960
 6515 1336 8001     		.short	384
 6516 1338 0000     		.short	0
 6517 133a 0000     		.short	0
 6518 133c 0000     		.short	0
 6519 133e 0000     		.short	0
 6520 1340 0000     		.short	0
 6521 1342 0000     		.short	0
 6522 1344 0000     		.short	0
 6523 1346 0000     		.short	0
 6524 1348 0000     		.short	0
 6525 134a 0000     		.short	0
 6526 134c 0000     		.short	0
 6527 134e 0000     		.short	0
 6528 1350 0000     		.short	0
 6529 1352 0000     		.short	0
 6530 1354 0000     		.short	0
 6531 1356 0000     		.short	0
 6532 1358 F81F     		.short	8184
 6533 135a F81F     		.short	8184
 6534 135c F81F     		.short	8184
 6535 135e F81F     		.short	8184
 6536 1360 F00F     		.short	4080
 6537 1362 E007     		.short	2016
 6538 1364 C003     		.short	960
 6539 1366 8001     		.short	384
 6540 1368 0000     		.short	0
 6541 136a 0000     		.short	0
 6542 136c 0000     		.short	0
 6543 136e 0000     		.short	0
 6544 1370 0000     		.short	0
 6545 1372 0000     		.short	0
 6546 1374 0000     		.short	0
 6547 1376 0000     		.short	0
 6548 1378 0000     		.short	0
 6549 137a 0000     		.short	0
 6550 137c 0000     		.short	0
 6551 137e 0000     		.short	0
 6552 1380 0000     		.short	0
 6553 1382 0000     		.short	0
 6554 1384 0000     		.short	0
 6555 1386 0000     		.short	0
 6556 1388 0000     		.short	0
 6557 138a 0000     		.short	0
 6558 138c 0000     		.short	0
 6559 138e E001     		.short	480
 6560 1390 F001     		.short	496
 6561 1392 9801     		.short	408
 6562 1394 8C01     		.short	396
 6563 1396 8601     		.short	390
 6564 1398 8601     		.short	390
 6565 139a 8C01     		.short	396
 6566 139c 9801     		.short	408
 6567 139e F001     		.short	496
 6568 13a0 E001     		.short	480
 6569 13a2 0000     		.short	0
 6570 13a4 0000     		.short	0
 6571 13a6 0000     		.short	0
 6572 13a8 0000     		.short	0
 6573 13aa 0000     		.short	0
 6574 13ac 0000     		.short	0
 6575 13ae 0000     		.short	0
 6576 13b0 0000     		.short	0
 6577 13b2 0000     		.short	0
 6578 13b4 0000     		.short	0
 6579 13b6 0000     		.short	0
 6580 13b8 0000     		.short	0
 6581 13ba 0000     		.short	0
 6582 13bc 0000     		.short	0
 6583 13be E001     		.short	480
 6584 13c0 F001     		.short	496
 6585 13c2 F801     		.short	504
 6586 13c4 FC01     		.short	508
 6587 13c6 FE01     		.short	510
 6588 13c8 FE01     		.short	510
 6589 13ca FC01     		.short	508
 6590 13cc F801     		.short	504
 6591 13ce F001     		.short	496
 6592 13d0 E001     		.short	480
 6593 13d2 0000     		.short	0
 6594 13d4 0000     		.short	0
 6595 13d6 0000     		.short	0
 6596 13d8 0000     		.short	0
 6597 13da 0000     		.short	0
 6598 13dc 0000     		.short	0
 6599 13de 0000     		.short	0
 6600 13e0 0000     		.short	0
 6601 13e2 0000     		.short	0
 6602 13e4 0000     		.short	0
 6603 13e6 0000     		.short	0
 6604 13e8 0000     		.short	0
 6605 13ea 0000     		.short	0
 6606 13ec 0000     		.short	0
 6607 13ee 8007     		.short	1920
 6608 13f0 800F     		.short	3968
 6609 13f2 8019     		.short	6528
 6610 13f4 8031     		.short	12672
 6611 13f6 8061     		.short	24960
 6612 13f8 8061     		.short	24960
 6613 13fa 8031     		.short	12672
 6614 13fc 8019     		.short	6528
 6615 13fe 800F     		.short	3968
 6616 1400 8007     		.short	1920
 6617 1402 0000     		.short	0
 6618 1404 0000     		.short	0
 6619 1406 0000     		.short	0
 6620 1408 0000     		.short	0
 6621 140a 0000     		.short	0
 6622 140c 0000     		.short	0
 6623 140e 0000     		.short	0
 6624 1410 0000     		.short	0
 6625 1412 0000     		.short	0
 6626 1414 0000     		.short	0
 6627 1416 0000     		.short	0
 6628 1418 0000     		.short	0
 6629 141a 0000     		.short	0
 6630 141c 0000     		.short	0
 6631 141e 8007     		.short	1920
 6632 1420 800F     		.short	3968
 6633 1422 801F     		.short	8064
 6634 1424 803F     		.short	16256
 6635 1426 807F     		.short	32640
 6636 1428 807F     		.short	32640
 6637 142a 803F     		.short	16256
 6638 142c 801F     		.short	8064
 6639 142e 800F     		.short	3968
 6640 1430 8007     		.short	1920
 6641 1432 0000     		.short	0
 6642 1434 0000     		.short	0
 6643 1436 0000     		.short	0
 6644 1438 0000     		.short	0
 6645 143a 0000     		.short	0
 6646 143c 0000     		.short	0
 6647 143e 0000     		.short	0
 6648 1440 0000     		.short	0
 6649 1442 C001     		.short	448
 6650 1444 2002     		.short	544
 6651 1446 2002     		.short	544
 6652 1448 4001     		.short	320
 6653 144a 3006     		.short	1584
 6654 144c 0808     		.short	2056
 6655 144e 0808     		.short	2056
 6656 1450 0808     		.short	2056
 6657 1452 0808     		.short	2056
 6658 1454 0808     		.short	2056
 6659 1456 0808     		.short	2056
 6660 1458 0808     		.short	2056
 6661 145a 2002     		.short	544
 6662 145c 2002     		.short	544
 6663 145e 2002     		.short	544
 6664 1460 2002     		.short	544
 6665 1462 2002     		.short	544
 6666 1464 2002     		.short	544
 6667 1466 2002     		.short	544
 6668 1468 2002     		.short	544
 6669 146a 2002     		.short	544
 6670 146c 2002     		.short	544
 6671 146e 0000     		.short	0
 6672 1470 0000     		.short	0
 6673 1472 C001     		.short	448
 6674 1474 E003     		.short	992
 6675 1476 E003     		.short	992
 6676 1478 C001     		.short	448
 6677 147a F007     		.short	2032
 6678 147c D80D     		.short	3544
 6679 147e D80D     		.short	3544
 6680 1480 D80D     		.short	3544
 6681 1482 D80D     		.short	3544
 6682 1484 D80D     		.short	3544
 6683 1486 D80D     		.short	3544
 6684 1488 D80D     		.short	3544
 6685 148a 6003     		.short	864
 6686 148c 6003     		.short	864
 6687 148e 6003     		.short	864
 6688 1490 6003     		.short	864
 6689 1492 6003     		.short	864
 6690 1494 6003     		.short	864
 6691 1496 6003     		.short	864
 6692 1498 6003     		.short	864
 6693 149a 6003     		.short	864
 6694 149c 6003     		.short	864
 6695 149e 0000     		.short	0
 6696 14a0 0000     		.short	0
 6697 14a2 C001     		.short	448
 6698 14a4 2002     		.short	544
 6699 14a6 2002     		.short	544
 6700 14a8 4001     		.short	320
 6701 14aa 3006     		.short	1584
 6702 14ac 0808     		.short	2056
 6703 14ae 0808     		.short	2056
 6704 14b0 0808     		.short	2056
 6705 14b2 0410     		.short	4100
 6706 14b4 0220     		.short	8194
 6707 14b6 0220     		.short	8194
 6708 14b8 4001     		.short	320
 6709 14ba 2002     		.short	544
 6710 14bc 2002     		.short	544
 6711 14be 1004     		.short	1040
 6712 14c0 0808     		.short	2056
 6713 14c2 0808     		.short	2056
 6714 14c4 0410     		.short	4100
 6715 14c6 0410     		.short	4100
 6716 14c8 0420     		.short	8196
 6717 14ca 0440     		.short	16388
 6718 14cc 0000     		.short	0
 6719 14ce 0000     		.short	0
 6720 14d0 0000     		.short	0
 6721 14d2 C001     		.short	448
 6722 14d4 E003     		.short	992
 6723 14d6 E003     		.short	992
 6724 14d8 C001     		.short	448
 6725 14da F007     		.short	2032
 6726 14dc D80D     		.short	3544
 6727 14de D80D     		.short	3544
 6728 14e0 D80D     		.short	3544
 6729 14e2 CC19     		.short	6604
 6730 14e4 C631     		.short	12742
 6731 14e6 C261     		.short	25026
 6732 14e8 C001     		.short	448
 6733 14ea 6003     		.short	864
 6734 14ec 6003     		.short	864
 6735 14ee 7006     		.short	1648
 6736 14f0 380C     		.short	3128
 6737 14f2 180C     		.short	3096
 6738 14f4 0C18     		.short	6156
 6739 14f6 0C18     		.short	6156
 6740 14f8 0C30     		.short	12300
 6741 14fa 0C60     		.short	24588
 6742 14fc 0000     		.short	0
 6743 14fe 0000     		.short	0
 6744              	.LC0:
 6745 1500 3100     		.ascii	"1\000"
 6746 1502 00       		.space	1
 6747 1503 3200     		.ascii	"2\000"
 6748 1505 00       		.space	1
 6749 1506 3300     		.ascii	"3\000"
 6750 1508 00       		.space	1
 6751 1509 3400     		.ascii	"4\000"
 6752 150b 00       		.space	1
 6753 150c 3500     		.ascii	"5\000"
 6754 150e 00       		.space	1
 6755 150f 3600     		.ascii	"6\000"
 6756 1511 00       		.space	1
 6757 1512 3700     		.ascii	"7\000"
 6758 1514 00       		.space	1
 6759 1515 3800     		.ascii	"8\000"
 6760 1517 00       		.space	1
 6761 1518 3900     		.ascii	"9\000"
 6762 151a 00       		.space	1
 6763 151b 313000   		.ascii	"10\000"
 6764              	.LC1:
 6765 151e 313000   		.ascii	"10\000"
 6766 1521 00       		.space	1
 6767 1522 323000   		.ascii	"20\000"
 6768 1525 00       		.space	1
 6769 1526 333000   		.ascii	"30\000"
 6770 1529 00       		.space	1
 6771 152a 343000   		.ascii	"40\000"
 6772 152d 00       		.space	1
 6773 152e 353000   		.ascii	"50\000"
 6774 1531 00       		.space	1
 6775 1532 363000   		.ascii	"60\000"
 6776 1535 00       		.space	1
 6777 1536 373000   		.ascii	"70\000"
 6778 1539 00       		.space	1
 6779 153a 383000   		.ascii	"80\000"
 6780 153d 00       		.space	1
 6781 153e 393000   		.ascii	"90\000"
 6782 1541 00       		.space	1
 6783 1542 31303000 		.ascii	"100\000"
 6786              	default5x7:
 6787 1546 00       		.byte	0
 6788 1547 00       		.byte	0
 6789 1548 00       		.byte	0
 6790 1549 00       		.byte	0
 6791 154a 00       		.byte	0
 6792 154b 00       		.byte	0
 6793 154c 00       		.byte	0
 6794 154d 5F       		.byte	95
 6795 154e 00       		.byte	0
 6796 154f 00       		.byte	0
 6797 1550 00       		.byte	0
 6798 1551 03       		.byte	3
 6799 1552 00       		.byte	0
 6800 1553 03       		.byte	3
 6801 1554 00       		.byte	0
 6802 1555 14       		.byte	20
 6803 1556 3E       		.byte	62
 6804 1557 14       		.byte	20
 6805 1558 3E       		.byte	62
 6806 1559 14       		.byte	20
 6807 155a 24       		.byte	36
 6808 155b 2A       		.byte	42
 6809 155c 7F       		.byte	127
 6810 155d 2A       		.byte	42
 6811 155e 12       		.byte	18
 6812 155f 43       		.byte	67
 6813 1560 33       		.byte	51
 6814 1561 08       		.byte	8
 6815 1562 66       		.byte	102
 6816 1563 61       		.byte	97
 6817 1564 36       		.byte	54
 6818 1565 49       		.byte	73
 6819 1566 55       		.byte	85
 6820 1567 22       		.byte	34
 6821 1568 50       		.byte	80
 6822 1569 00       		.byte	0
 6823 156a 05       		.byte	5
 6824 156b 03       		.byte	3
 6825 156c 00       		.byte	0
 6826 156d 00       		.byte	0
 6827 156e 00       		.byte	0
 6828 156f 1C       		.byte	28
 6829 1570 22       		.byte	34
 6830 1571 41       		.byte	65
 6831 1572 00       		.byte	0
 6832 1573 00       		.byte	0
 6833 1574 41       		.byte	65
 6834 1575 22       		.byte	34
 6835 1576 1C       		.byte	28
 6836 1577 00       		.byte	0
 6837 1578 14       		.byte	20
 6838 1579 08       		.byte	8
 6839 157a 3E       		.byte	62
 6840 157b 08       		.byte	8
 6841 157c 14       		.byte	20
 6842 157d 08       		.byte	8
 6843 157e 08       		.byte	8
 6844 157f 3E       		.byte	62
 6845 1580 08       		.byte	8
 6846 1581 08       		.byte	8
 6847 1582 00       		.byte	0
 6848 1583 50       		.byte	80
 6849 1584 30       		.byte	48
 6850 1585 00       		.byte	0
 6851 1586 00       		.byte	0
 6852 1587 08       		.byte	8
 6853 1588 08       		.byte	8
 6854 1589 08       		.byte	8
 6855 158a 08       		.byte	8
 6856 158b 08       		.byte	8
 6857 158c 00       		.byte	0
 6858 158d 60       		.byte	96
 6859 158e 60       		.byte	96
 6860 158f 00       		.byte	0
 6861 1590 00       		.byte	0
 6862 1591 20       		.byte	32
 6863 1592 10       		.byte	16
 6864 1593 08       		.byte	8
 6865 1594 04       		.byte	4
 6866 1595 02       		.byte	2
 6867 1596 3E       		.byte	62
 6868 1597 51       		.byte	81
 6869 1598 49       		.byte	73
 6870 1599 45       		.byte	69
 6871 159a 3E       		.byte	62
 6872 159b 04       		.byte	4
 6873 159c 02       		.byte	2
 6874 159d 7F       		.byte	127
 6875 159e 00       		.byte	0
 6876 159f 00       		.byte	0
 6877 15a0 42       		.byte	66
 6878 15a1 61       		.byte	97
 6879 15a2 51       		.byte	81
 6880 15a3 49       		.byte	73
 6881 15a4 46       		.byte	70
 6882 15a5 22       		.byte	34
 6883 15a6 41       		.byte	65
 6884 15a7 49       		.byte	73
 6885 15a8 49       		.byte	73
 6886 15a9 36       		.byte	54
 6887 15aa 18       		.byte	24
 6888 15ab 14       		.byte	20
 6889 15ac 12       		.byte	18
 6890 15ad 7F       		.byte	127
 6891 15ae 10       		.byte	16
 6892 15af 27       		.byte	39
 6893 15b0 45       		.byte	69
 6894 15b1 45       		.byte	69
 6895 15b2 45       		.byte	69
 6896 15b3 39       		.byte	57
 6897 15b4 3E       		.byte	62
 6898 15b5 49       		.byte	73
 6899 15b6 49       		.byte	73
 6900 15b7 49       		.byte	73
 6901 15b8 32       		.byte	50
 6902 15b9 01       		.byte	1
 6903 15ba 01       		.byte	1
 6904 15bb 71       		.byte	113
 6905 15bc 09       		.byte	9
 6906 15bd 07       		.byte	7
 6907 15be 36       		.byte	54
 6908 15bf 49       		.byte	73
 6909 15c0 49       		.byte	73
 6910 15c1 49       		.byte	73
 6911 15c2 36       		.byte	54
 6912 15c3 26       		.byte	38
 6913 15c4 49       		.byte	73
 6914 15c5 49       		.byte	73
 6915 15c6 49       		.byte	73
 6916 15c7 3E       		.byte	62
 6917 15c8 00       		.byte	0
 6918 15c9 36       		.byte	54
 6919 15ca 36       		.byte	54
 6920 15cb 00       		.byte	0
 6921 15cc 00       		.byte	0
 6922 15cd 00       		.byte	0
 6923 15ce 56       		.byte	86
 6924 15cf 36       		.byte	54
 6925 15d0 00       		.byte	0
 6926 15d1 00       		.byte	0
 6927 15d2 08       		.byte	8
 6928 15d3 14       		.byte	20
 6929 15d4 22       		.byte	34
 6930 15d5 41       		.byte	65
 6931 15d6 00       		.byte	0
 6932 15d7 14       		.byte	20
 6933 15d8 14       		.byte	20
 6934 15d9 14       		.byte	20
 6935 15da 14       		.byte	20
 6936 15db 14       		.byte	20
 6937 15dc 00       		.byte	0
 6938 15dd 41       		.byte	65
 6939 15de 22       		.byte	34
 6940 15df 14       		.byte	20
 6941 15e0 08       		.byte	8
 6942 15e1 02       		.byte	2
 6943 15e2 01       		.byte	1
 6944 15e3 51       		.byte	81
 6945 15e4 09       		.byte	9
 6946 15e5 06       		.byte	6
 6947 15e6 3E       		.byte	62
 6948 15e7 41       		.byte	65
 6949 15e8 59       		.byte	89
 6950 15e9 55       		.byte	85
 6951 15ea 5E       		.byte	94
 6952 15eb 7E       		.byte	126
 6953 15ec 09       		.byte	9
 6954 15ed 09       		.byte	9
 6955 15ee 09       		.byte	9
 6956 15ef 7E       		.byte	126
 6957 15f0 7F       		.byte	127
 6958 15f1 49       		.byte	73
 6959 15f2 49       		.byte	73
 6960 15f3 49       		.byte	73
 6961 15f4 36       		.byte	54
 6962 15f5 3E       		.byte	62
 6963 15f6 41       		.byte	65
 6964 15f7 41       		.byte	65
 6965 15f8 41       		.byte	65
 6966 15f9 22       		.byte	34
 6967 15fa 7F       		.byte	127
 6968 15fb 41       		.byte	65
 6969 15fc 41       		.byte	65
 6970 15fd 41       		.byte	65
 6971 15fe 3E       		.byte	62
 6972 15ff 7F       		.byte	127
 6973 1600 49       		.byte	73
 6974 1601 49       		.byte	73
 6975 1602 49       		.byte	73
 6976 1603 41       		.byte	65
 6977 1604 7F       		.byte	127
 6978 1605 09       		.byte	9
 6979 1606 09       		.byte	9
 6980 1607 09       		.byte	9
 6981 1608 01       		.byte	1
 6982 1609 3E       		.byte	62
 6983 160a 41       		.byte	65
 6984 160b 41       		.byte	65
 6985 160c 49       		.byte	73
 6986 160d 3A       		.byte	58
 6987 160e 7F       		.byte	127
 6988 160f 08       		.byte	8
 6989 1610 08       		.byte	8
 6990 1611 08       		.byte	8
 6991 1612 7F       		.byte	127
 6992 1613 00       		.byte	0
 6993 1614 41       		.byte	65
 6994 1615 7F       		.byte	127
 6995 1616 41       		.byte	65
 6996 1617 00       		.byte	0
 6997 1618 30       		.byte	48
 6998 1619 40       		.byte	64
 6999 161a 40       		.byte	64
 7000 161b 40       		.byte	64
 7001 161c 3F       		.byte	63
 7002 161d 7F       		.byte	127
 7003 161e 08       		.byte	8
 7004 161f 14       		.byte	20
 7005 1620 22       		.byte	34
 7006 1621 41       		.byte	65
 7007 1622 7F       		.byte	127
 7008 1623 40       		.byte	64
 7009 1624 40       		.byte	64
 7010 1625 40       		.byte	64
 7011 1626 40       		.byte	64
 7012 1627 7F       		.byte	127
 7013 1628 02       		.byte	2
 7014 1629 0C       		.byte	12
 7015 162a 02       		.byte	2
 7016 162b 7F       		.byte	127
 7017 162c 7F       		.byte	127
 7018 162d 02       		.byte	2
 7019 162e 04       		.byte	4
 7020 162f 08       		.byte	8
 7021 1630 7F       		.byte	127
 7022 1631 3E       		.byte	62
 7023 1632 41       		.byte	65
 7024 1633 41       		.byte	65
 7025 1634 41       		.byte	65
 7026 1635 3E       		.byte	62
 7027 1636 7F       		.byte	127
 7028 1637 09       		.byte	9
 7029 1638 09       		.byte	9
 7030 1639 09       		.byte	9
 7031 163a 06       		.byte	6
 7032 163b 1E       		.byte	30
 7033 163c 21       		.byte	33
 7034 163d 21       		.byte	33
 7035 163e 21       		.byte	33
 7036 163f 5E       		.byte	94
 7037 1640 7F       		.byte	127
 7038 1641 09       		.byte	9
 7039 1642 09       		.byte	9
 7040 1643 09       		.byte	9
 7041 1644 76       		.byte	118
 7042 1645 26       		.byte	38
 7043 1646 49       		.byte	73
 7044 1647 49       		.byte	73
 7045 1648 49       		.byte	73
 7046 1649 32       		.byte	50
 7047 164a 01       		.byte	1
 7048 164b 01       		.byte	1
 7049 164c 7F       		.byte	127
 7050 164d 01       		.byte	1
 7051 164e 01       		.byte	1
 7052 164f 3F       		.byte	63
 7053 1650 40       		.byte	64
 7054 1651 40       		.byte	64
 7055 1652 40       		.byte	64
 7056 1653 3F       		.byte	63
 7057 1654 1F       		.byte	31
 7058 1655 20       		.byte	32
 7059 1656 40       		.byte	64
 7060 1657 20       		.byte	32
 7061 1658 1F       		.byte	31
 7062 1659 7F       		.byte	127
 7063 165a 20       		.byte	32
 7064 165b 10       		.byte	16
 7065 165c 20       		.byte	32
 7066 165d 7F       		.byte	127
 7067 165e 41       		.byte	65
 7068 165f 22       		.byte	34
 7069 1660 1C       		.byte	28
 7070 1661 22       		.byte	34
 7071 1662 41       		.byte	65
 7072 1663 07       		.byte	7
 7073 1664 08       		.byte	8
 7074 1665 70       		.byte	112
 7075 1666 08       		.byte	8
 7076 1667 07       		.byte	7
 7077 1668 61       		.byte	97
 7078 1669 51       		.byte	81
 7079 166a 49       		.byte	73
 7080 166b 45       		.byte	69
 7081 166c 43       		.byte	67
 7082 166d 00       		.byte	0
 7083 166e 7F       		.byte	127
 7084 166f 41       		.byte	65
 7085 1670 00       		.byte	0
 7086 1671 00       		.byte	0
 7087 1672 02       		.byte	2
 7088 1673 04       		.byte	4
 7089 1674 08       		.byte	8
 7090 1675 10       		.byte	16
 7091 1676 20       		.byte	32
 7092 1677 00       		.byte	0
 7093 1678 00       		.byte	0
 7094 1679 41       		.byte	65
 7095 167a 7F       		.byte	127
 7096 167b 00       		.byte	0
 7097 167c 04       		.byte	4
 7098 167d 02       		.byte	2
 7099 167e 01       		.byte	1
 7100 167f 02       		.byte	2
 7101 1680 04       		.byte	4
 7102 1681 40       		.byte	64
 7103 1682 40       		.byte	64
 7104 1683 40       		.byte	64
 7105 1684 40       		.byte	64
 7106 1685 40       		.byte	64
 7107 1686 00       		.byte	0
 7108 1687 01       		.byte	1
 7109 1688 02       		.byte	2
 7110 1689 04       		.byte	4
 7111 168a 00       		.byte	0
 7112 168b 20       		.byte	32
 7113 168c 54       		.byte	84
 7114 168d 54       		.byte	84
 7115 168e 54       		.byte	84
 7116 168f 78       		.byte	120
 7117 1690 7F       		.byte	127
 7118 1691 44       		.byte	68
 7119 1692 44       		.byte	68
 7120 1693 44       		.byte	68
 7121 1694 38       		.byte	56
 7122 1695 38       		.byte	56
 7123 1696 44       		.byte	68
 7124 1697 44       		.byte	68
 7125 1698 44       		.byte	68
 7126 1699 44       		.byte	68
 7127 169a 38       		.byte	56
 7128 169b 44       		.byte	68
 7129 169c 44       		.byte	68
 7130 169d 44       		.byte	68
 7131 169e 7F       		.byte	127
 7132 169f 38       		.byte	56
 7133 16a0 54       		.byte	84
 7134 16a1 54       		.byte	84
 7135 16a2 54       		.byte	84
 7136 16a3 18       		.byte	24
 7137 16a4 04       		.byte	4
 7138 16a5 04       		.byte	4
 7139 16a6 7E       		.byte	126
 7140 16a7 05       		.byte	5
 7141 16a8 05       		.byte	5
 7142 16a9 08       		.byte	8
 7143 16aa 54       		.byte	84
 7144 16ab 54       		.byte	84
 7145 16ac 54       		.byte	84
 7146 16ad 3C       		.byte	60
 7147 16ae 7F       		.byte	127
 7148 16af 08       		.byte	8
 7149 16b0 04       		.byte	4
 7150 16b1 04       		.byte	4
 7151 16b2 78       		.byte	120
 7152 16b3 00       		.byte	0
 7153 16b4 44       		.byte	68
 7154 16b5 7D       		.byte	125
 7155 16b6 40       		.byte	64
 7156 16b7 00       		.byte	0
 7157 16b8 20       		.byte	32
 7158 16b9 40       		.byte	64
 7159 16ba 44       		.byte	68
 7160 16bb 3D       		.byte	61
 7161 16bc 00       		.byte	0
 7162 16bd 7F       		.byte	127
 7163 16be 10       		.byte	16
 7164 16bf 28       		.byte	40
 7165 16c0 44       		.byte	68
 7166 16c1 00       		.byte	0
 7167 16c2 00       		.byte	0
 7168 16c3 41       		.byte	65
 7169 16c4 7F       		.byte	127
 7170 16c5 40       		.byte	64
 7171 16c6 00       		.byte	0
 7172 16c7 7C       		.byte	124
 7173 16c8 04       		.byte	4
 7174 16c9 78       		.byte	120
 7175 16ca 04       		.byte	4
 7176 16cb 78       		.byte	120
 7177 16cc 7C       		.byte	124
 7178 16cd 08       		.byte	8
 7179 16ce 04       		.byte	4
 7180 16cf 04       		.byte	4
 7181 16d0 78       		.byte	120
 7182 16d1 38       		.byte	56
 7183 16d2 44       		.byte	68
 7184 16d3 44       		.byte	68
 7185 16d4 44       		.byte	68
 7186 16d5 38       		.byte	56
 7187 16d6 7C       		.byte	124
 7188 16d7 14       		.byte	20
 7189 16d8 14       		.byte	20
 7190 16d9 14       		.byte	20
 7191 16da 08       		.byte	8
 7192 16db 08       		.byte	8
 7193 16dc 14       		.byte	20
 7194 16dd 14       		.byte	20
 7195 16de 14       		.byte	20
 7196 16df 7C       		.byte	124
 7197 16e0 00       		.byte	0
 7198 16e1 7C       		.byte	124
 7199 16e2 08       		.byte	8
 7200 16e3 04       		.byte	4
 7201 16e4 04       		.byte	4
 7202 16e5 48       		.byte	72
 7203 16e6 54       		.byte	84
 7204 16e7 54       		.byte	84
 7205 16e8 54       		.byte	84
 7206 16e9 20       		.byte	32
 7207 16ea 04       		.byte	4
 7208 16eb 04       		.byte	4
 7209 16ec 3F       		.byte	63
 7210 16ed 44       		.byte	68
 7211 16ee 44       		.byte	68
 7212 16ef 3C       		.byte	60
 7213 16f0 40       		.byte	64
 7214 16f1 40       		.byte	64
 7215 16f2 20       		.byte	32
 7216 16f3 7C       		.byte	124
 7217 16f4 1C       		.byte	28
 7218 16f5 20       		.byte	32
 7219 16f6 40       		.byte	64
 7220 16f7 20       		.byte	32
 7221 16f8 1C       		.byte	28
 7222 16f9 3C       		.byte	60
 7223 16fa 40       		.byte	64
 7224 16fb 30       		.byte	48
 7225 16fc 40       		.byte	64
 7226 16fd 3C       		.byte	60
 7227 16fe 44       		.byte	68
 7228 16ff 28       		.byte	40
 7229 1700 10       		.byte	16
 7230 1701 28       		.byte	40
 7231 1702 44       		.byte	68
 7232 1703 0C       		.byte	12
 7233 1704 50       		.byte	80
 7234 1705 50       		.byte	80
 7235 1706 50       		.byte	80
 7236 1707 3C       		.byte	60
 7237 1708 44       		.byte	68
 7238 1709 64       		.byte	100
 7239 170a 54       		.byte	84
 7240 170b 4C       		.byte	76
 7241 170c 44       		.byte	68
 7242 170d 00       		.byte	0
 7243 170e 08       		.byte	8
 7244 170f 36       		.byte	54
 7245 1710 41       		.byte	65
 7246 1711 41       		.byte	65
 7247 1712 00       		.byte	0
 7248 1713 00       		.byte	0
 7249 1714 7F       		.byte	127
 7250 1715 00       		.byte	0
 7251 1716 00       		.byte	0
 7252 1717 41       		.byte	65
 7253 1718 41       		.byte	65
 7254 1719 36       		.byte	54
 7255 171a 08       		.byte	8
 7256 171b 00       		.byte	0
 7257 171c 02       		.byte	2
 7258 171d 01       		.byte	1
 7259 171e 02       		.byte	2
 7260 171f 04       		.byte	4
 7261 1720 02       		.byte	2
 7262 1721 00000000 		.space	5
 7262      00
 7263              		.section	.rodata.str1.1,"aMS",%progbits,1
 7264              	.LC2:
 7265 0000 20202020 		.ascii	"                    \000"
 7265      20202020 
 7265      20202020 
 7265      20202020 
 7265      20202020 
 7266              	.LC3:
 7267 0015 5900     		.ascii	"Y\000"
 7268              	.LC4:
 7269 0017 5800     		.ascii	"X\000"
 7270              	.LC5:
 7271 0019 583D4144 		.ascii	"X=ADC-CH  Y=VAL  Y-MAX=4096  Y-UNIT=41\000"
 7271      432D4348 
 7271      2020593D 
 7271      56414C20 
 7271      20592D4D 
 7272              	.LC6:
 7273 0040 28302C30 		.ascii	"(0,0)\000"
 7273      2900
 7274              		.data
 7275              		.align	1
 7276              		.set	.LANCHOR1,. + 0
 7279              	BackColor:
 7280 0000 FFFF     		.short	-1
 7281              		.bss
 7282              		.align	1
 7283              		.set	.LANCHOR0,. + 0
 7286              	TextColor:
 7287 0000 0000     		.space	2
 7288              		.text
 7289              	.Letext0:
 7290              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q2\\bin\\../lib/gcc/arm-none-eab
 7291              		.file 3 "../CM3 Core/LPC17xx.h"
 7292              		.file 4 "../Header Files/lpc_types.h"
 7293              		.file 5 "../Header Files/lpc17xx_uart.h"
 7294              		.file 6 "../Header Files/lpc17xx_ssp.h"
 7295              		.file 7 "../Header Files/lpc_ssp_glcd.h"
 7296              		.file 8 "<built-in>"
 7297              		.file 9 "../CM3 Core/core_cm3.h"
 7298              		.file 10 "../Header Files/lpc17xx_i2c.h"
 7299              		.file 11 "../Header Files/Font_24x16.h"
 7300              		.file 12 "../Header Files/Font_5x7.h"
 7301              		.file 13 "../Header Files/lpc17xx_gpio.h"
 7302              		.file 14 "../Header Files/lpc17xx_systick.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lpc_ssp_glcd.c
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:18     .text:00000000 $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:22     .text:00000000 wr_dat_start
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:52     .text:00000018 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:56     .text:0000001c $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:60     .text:0000001c wr_dat_stop
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:77     .text:00000024 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:81     .text:00000028 $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:85     .text:00000028 wr_dat_only
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:133    .text:00000048 $d
                            *COM*:00000040 Tx_Buf1
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:138    .text:00000050 $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:143    .text:00000050 GLCD_Backlight
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:178    .text:00000066 GLCD_Reset
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:223    .text:00000090 GLCD_SetTextColor
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:238    .text:00000098 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:242    .text:0000009c $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:247    .text:0000009c GLCD_SetBackColor
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:262    .text:000000a4 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:266    .text:000000a8 $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:271    .text:000000a8 Write_Command_Glcd
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:356    .text:00000100 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:360    .text:00000104 $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:365    .text:00000104 Write_Data_Glcd
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:438    .text:00000144 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:443    .text:0000014c $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:448    .text:0000014c GLCD_Bargraph
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:582    .text:000001f4 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:587    .text:000001fc $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:592    .text:000001fc GLCD_Draw_Char
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:715    .text:00000294 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:720    .text:0000029c $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:725    .text:0000029c GLCD_Display_Char
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:763    .text:000002c0 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:767    .text:000002c4 $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:772    .text:000002c4 GLCD_PutPixel
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:828    .text:000002f4 GLCD_Text
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:1052   .text:0000041e GLCD_Line
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:1260   .text:00000506 GLCD_Triangle
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:2105   .text:000009da GLCD_Frame
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:2269   .text:00000af8 GLCD_Circle
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:2611   .text:00000cda GLCD_Window
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:2684   .text:00000d24 GLCD_Display_String
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:2750   .text:00000d54 GLCD_ClearLn
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:2784   .text:00000d74 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:2788   .text:00000d78 $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:2793   .text:00000d78 GLCD_Clear
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:2863   .text:00000dc2 GLCD_Set_Loc
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:2914   .text:00000dee GLCD_Window_Fill
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:2984   .text:00000e24 GLCD_Bar
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:3042   .text:00000e56 BarGraph_Test
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:3403   .text:000010a8 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:3413   .text:000010c4 $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:3418   .text:000010c4 GLCD_Rect
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:3590   .text:000011b8 GLCD_Bitmap
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:3666   .text:000011f8 GLCD_Display_Home
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:3690   .text:00001206 GLCD_Driver_OutCtrl
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:3714   .text:00001218 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:3718   .text:0000121c $t
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:3750   .text:0000123c GLCD_Init
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:6786   .rodata:00001546 default5x7
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:4055   .rodata:00000000 Font_24x16
                            *COM*:00000040 I2C_Rx_Buf
                            *COM*:00000040 I2C_Tx_Buf
                            *COM*:00000040 Rx_Buf1
                            *COM*:00000001 TxIntStat
                            *COM*:00000210 rb
                            *COM*:00000002 EscFlag
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:4050   .rodata:00000000 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:7275   .data:00000000 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:7279   .data:00000000 BackColor
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:7282   .bss:00000000 $d
C:\Users\raghav\AppData\Local\Temp\ccop8283.s:7286   .bss:00000000 TextColor
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.549b84bf9d8399e395ff8216fcbb3d69
                           .group:00000000 wm4.LPC17xx.h.27.964facdaadd4aa3f18ac78c8a78f0013
                           .group:00000000 wm4.core_cm3.h.32.3cac756d6e704b813781f82afd94fa5f
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.6beb15babd14c076008ec0890c26e21c
                           .group:00000000 wm4.core_cm3.h.83.1a3cb9afc687cf157efeddb3d5f3109e
                           .group:00000000 wm4.LPC17xx.h.953.82b7a9ed60bb594048bc8738cf1d3489
                           .group:00000000 wm4.lpc_types.h.32.72d58ce80fabd1a5430c6ec0500a090b
                           .group:00000000 wm4.lpc17xx_pinsel.h.30.767cda9b27a5c688cd97e5947d664047
                           .group:00000000 wm4.lpc17xx_clkpwr.h.30.8537d92ff6965961e80fda89ac5019f2
                           .group:00000000 wm4.lpc17xx_systick.h.30.9f34c15ae315a203fed1d933040ad7b9
                           .group:00000000 wm4.lpc17xx_gpio.h.30.0b884ee110dd20865784f12e1569ecf1
                           .group:00000000 wm4.lpc17xx_wdt.h.34.a2dcafab9849854019efb51f717a8129
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832
                           .group:00000000 wm4.lpc17xx_uart.h.58.dbba6e724b29a6214e9cafbaf3ee8a9e
                           .group:00000000 wm4.lpc17xx_ssp.h.48.cd045d667ab7b89d5d550d38997df61b
                           .group:00000000 wm4.lpc17xx_i2c.h.30.8ecc2351e7cba41135ba36b3ad45f764
                           .group:00000000 wm4.lpc_i2c_tsc2004.h.29.34082f268f216caa8d0bf2c0960ad4a6
                           .group:00000000 wm4.lpc_ssp_glcd.h.46.c050a23f7d3e575d1eafabe862fb4f95
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.Font_24x16.h.16.3819cadfc08710b0322707370d919056

UNDEFINED SYMBOLS
CS_Force1
GPIO_SetValue
SSP_ReadWrite
GPIO_ClearValue
delay_ms
memcpy
GPIO_SetDir
