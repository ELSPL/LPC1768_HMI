   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"lpc17xx_uart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_uldivmod
  19              		.align	1
  20              		.global	UART_Init
  21              		.thumb
  22              		.thumb_func
  24              	UART_Init:
  25              	.LFB59:
  26              		.file 1 "../Source Files/lpc17xx_uart.c"
   1:../Source Files/lpc17xx_uart.c **** /**********************************************************************
   2:../Source Files/lpc17xx_uart.c **** * $Id$		lpc17xx_uart.c
   3:../Source Files/lpc17xx_uart.c **** *//**
   4:../Source Files/lpc17xx_uart.c **** * @file		lpc17xx_uart.c
   5:../Source Files/lpc17xx_uart.c **** * @brief	Contains all functions support for UART firmware library on LPC17xx
   6:../Source Files/lpc17xx_uart.c **** * @version	1.0
   7:../Source Files/lpc17xx_uart.c **** * @date		25. Nov. 2013
   8:../Source Files/lpc17xx_uart.c **** * @author	Dwijay.Edutech Learning Solutions
   9:../Source Files/lpc17xx_uart.c **** ***********************************************************************
  10:../Source Files/lpc17xx_uart.c **** * Software that is described herein is for illustrative purposes only
  11:../Source Files/lpc17xx_uart.c **** * which provides customers with programming information regarding the
  12:../Source Files/lpc17xx_uart.c **** * products. This software is supplied "AS IS" without any warranties.
  13:../Source Files/lpc17xx_uart.c **** * NXP Semiconductors assumes no responsibility or liability for the
  14:../Source Files/lpc17xx_uart.c **** * use of the software, conveys no license or title under any patent,
  15:../Source Files/lpc17xx_uart.c **** * copyright, or mask work right to the product. NXP Semiconductors
  16:../Source Files/lpc17xx_uart.c **** * reserves the right to make changes in the software without
  17:../Source Files/lpc17xx_uart.c **** * notification. NXP Semiconductors also make no representation or
  18:../Source Files/lpc17xx_uart.c **** * warranty that such application will be suitable for the specified
  19:../Source Files/lpc17xx_uart.c **** * use without further testing or modification.
  20:../Source Files/lpc17xx_uart.c **** **********************************************************************/
  21:../Source Files/lpc17xx_uart.c **** 
  22:../Source Files/lpc17xx_uart.c **** /* Peripheral group ----------------------------------------------------------- */
  23:../Source Files/lpc17xx_uart.c **** /** @addtogroup UART
  24:../Source Files/lpc17xx_uart.c ****  * @{
  25:../Source Files/lpc17xx_uart.c ****  */
  26:../Source Files/lpc17xx_uart.c **** 
  27:../Source Files/lpc17xx_uart.c **** /* Includes ------------------------------------------------------------------- */
  28:../Source Files/lpc17xx_uart.c **** #include "lpc17xx_uart.h"
  29:../Source Files/lpc17xx_uart.c **** #include "lpc17xx_clkpwr.h"
  30:../Source Files/lpc17xx_uart.c **** 
  31:../Source Files/lpc17xx_uart.c **** /* Private Functions ---------------------------------------------------------- */
  32:../Source Files/lpc17xx_uart.c **** static Status uart_set_divisors(LPC_UART_TypeDef *UARTx, uint32_t baudrate);
  33:../Source Files/lpc17xx_uart.c **** void UART_IntTransmit(LPC_UART_TypeDef *UARTx);
  34:../Source Files/lpc17xx_uart.c **** void UART_IntReceive(LPC_UART_TypeDef *UARTx);
  35:../Source Files/lpc17xx_uart.c **** 
  36:../Source Files/lpc17xx_uart.c **** #ifdef INTERRUPT_MODE
  37:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
  38:../Source Files/lpc17xx_uart.c ****  * @brief	UART0 interrupt handler sub-routine
  39:../Source Files/lpc17xx_uart.c ****  * @param	None
  40:../Source Files/lpc17xx_uart.c ****  * @return	None
  41:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
  42:../Source Files/lpc17xx_uart.c **** void UART0_IRQHandler(void)
  43:../Source Files/lpc17xx_uart.c **** {
  44:../Source Files/lpc17xx_uart.c **** 	// Call Standard UART 0 interrupt handler
  45:../Source Files/lpc17xx_uart.c **** 	uint32_t intsrc, tmp, tmp1;
  46:../Source Files/lpc17xx_uart.c **** 
  47:../Source Files/lpc17xx_uart.c **** 	// Determine the interrupt source
  48:../Source Files/lpc17xx_uart.c **** 	intsrc = UART_GetIntId(LPC_UART0);
  49:../Source Files/lpc17xx_uart.c **** 	tmp = intsrc & UART_IIR_INTID_MASK;
  50:../Source Files/lpc17xx_uart.c **** 
  51:../Source Files/lpc17xx_uart.c **** 	// Receive Line Status
  52:../Source Files/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_RLS)
  53:../Source Files/lpc17xx_uart.c **** 	{
  54:../Source Files/lpc17xx_uart.c **** 		// Check line status
  55:../Source Files/lpc17xx_uart.c **** 		tmp1 = UART_GetLineStatus(LPC_UART0);
  56:../Source Files/lpc17xx_uart.c **** 		// Mask out the Receive Ready and Transmit Holding empty status
  57:../Source Files/lpc17xx_uart.c **** 		tmp1 &= (UART_LSR_OE | UART_LSR_PE | UART_LSR_FE | UART_LSR_BI | UART_LSR_RXFE);
  58:../Source Files/lpc17xx_uart.c **** 		// If any error exist
  59:../Source Files/lpc17xx_uart.c **** 		if (tmp1)
  60:../Source Files/lpc17xx_uart.c **** 		{
  61:../Source Files/lpc17xx_uart.c **** 			while(tmp1)
  62:../Source Files/lpc17xx_uart.c **** 			{
  63:../Source Files/lpc17xx_uart.c **** 				; //implement error handling here
  64:../Source Files/lpc17xx_uart.c **** 			}
  65:../Source Files/lpc17xx_uart.c **** 		}
  66:../Source Files/lpc17xx_uart.c **** 	}
  67:../Source Files/lpc17xx_uart.c **** 
  68:../Source Files/lpc17xx_uart.c **** 	// Receive Data Available or Character time-out
  69:../Source Files/lpc17xx_uart.c **** 	if ((tmp == UART_IIR_INTID_RDA) || (tmp == UART_IIR_INTID_CTI))
  70:../Source Files/lpc17xx_uart.c **** 	{
  71:../Source Files/lpc17xx_uart.c **** 		UART_IntReceive(LPC_UART0);
  72:../Source Files/lpc17xx_uart.c **** 	}
  73:../Source Files/lpc17xx_uart.c **** 
  74:../Source Files/lpc17xx_uart.c **** 	// Transmit Holding Empty
  75:../Source Files/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_THRE)
  76:../Source Files/lpc17xx_uart.c **** 	{
  77:../Source Files/lpc17xx_uart.c **** 		UART_IntTransmit(LPC_UART0);
  78:../Source Files/lpc17xx_uart.c **** 	}
  79:../Source Files/lpc17xx_uart.c **** }
  80:../Source Files/lpc17xx_uart.c **** 
  81:../Source Files/lpc17xx_uart.c **** 
  82:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
  83:../Source Files/lpc17xx_uart.c ****  * @brief	UART2 interrupt handler sub-routine
  84:../Source Files/lpc17xx_uart.c ****  * @param	None
  85:../Source Files/lpc17xx_uart.c ****  * @return	None
  86:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
  87:../Source Files/lpc17xx_uart.c **** void UART2_IRQHandler(void)
  88:../Source Files/lpc17xx_uart.c **** {
  89:../Source Files/lpc17xx_uart.c **** 	// Call Standard UART 2 interrupt handler
  90:../Source Files/lpc17xx_uart.c **** 	uint32_t intsrc, tmp, tmp1;
  91:../Source Files/lpc17xx_uart.c **** 
  92:../Source Files/lpc17xx_uart.c **** 	/* Determine the interrupt source */
  93:../Source Files/lpc17xx_uart.c **** 	intsrc = UART_GetIntId(LPC_UART2);
  94:../Source Files/lpc17xx_uart.c **** 	tmp = intsrc & UART_IIR_INTID_MASK;
  95:../Source Files/lpc17xx_uart.c **** 
  96:../Source Files/lpc17xx_uart.c **** 	// Receive Line Status
  97:../Source Files/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_RLS)
  98:../Source Files/lpc17xx_uart.c **** 	{
  99:../Source Files/lpc17xx_uart.c **** 		// Check line status
 100:../Source Files/lpc17xx_uart.c **** 		tmp1 = UART_GetLineStatus(LPC_UART2);
 101:../Source Files/lpc17xx_uart.c **** 		// Mask out the Receive Ready and Transmit Holding empty status
 102:../Source Files/lpc17xx_uart.c **** 		tmp1 &= (UART_LSR_OE | UART_LSR_PE | UART_LSR_FE | UART_LSR_BI | UART_LSR_RXFE);
 103:../Source Files/lpc17xx_uart.c **** 		// If any error exist
 104:../Source Files/lpc17xx_uart.c **** 		if (tmp1)
 105:../Source Files/lpc17xx_uart.c **** 		{
 106:../Source Files/lpc17xx_uart.c **** 			while(tmp1)
 107:../Source Files/lpc17xx_uart.c **** 			{
 108:../Source Files/lpc17xx_uart.c **** 				; //implement error handling here
 109:../Source Files/lpc17xx_uart.c **** 			}
 110:../Source Files/lpc17xx_uart.c **** 		}
 111:../Source Files/lpc17xx_uart.c **** 	}
 112:../Source Files/lpc17xx_uart.c **** 
 113:../Source Files/lpc17xx_uart.c **** 	// Receive Data Available or Character time-out
 114:../Source Files/lpc17xx_uart.c **** 	if ((tmp == UART_IIR_INTID_RDA) || (tmp == UART_IIR_INTID_CTI))
 115:../Source Files/lpc17xx_uart.c **** 	{
 116:../Source Files/lpc17xx_uart.c **** 		UART_IntReceive(LPC_UART2);
 117:../Source Files/lpc17xx_uart.c **** 	}
 118:../Source Files/lpc17xx_uart.c **** 
 119:../Source Files/lpc17xx_uart.c **** 	// Transmit Holding Empty
 120:../Source Files/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_THRE)
 121:../Source Files/lpc17xx_uart.c **** 	{
 122:../Source Files/lpc17xx_uart.c **** 		UART_IntTransmit(LPC_UART2);
 123:../Source Files/lpc17xx_uart.c **** 	}
 124:../Source Files/lpc17xx_uart.c **** }
 125:../Source Files/lpc17xx_uart.c **** 
 126:../Source Files/lpc17xx_uart.c **** 
 127:../Source Files/lpc17xx_uart.c **** #endif
 128:../Source Files/lpc17xx_uart.c **** 
 129:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
 130:../Source Files/lpc17xx_uart.c ****  * @brief		Determines best dividers to get a target clock rate
 131:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Pointer to selected UART peripheral, should be:
 132:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART0: UART0 peripheral
 133:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 134:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 135:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 136:../Source Files/lpc17xx_uart.c ****  * @param[in]	baudrate Desired UART baud rate.
 137:../Source Files/lpc17xx_uart.c ****  * @return 		Error status, could be:
 138:../Source Files/lpc17xx_uart.c ****  * 				- SUCCESS
 139:../Source Files/lpc17xx_uart.c ****  * 				- ERROR
 140:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
 141:../Source Files/lpc17xx_uart.c **** static Status uart_set_divisors(LPC_UART_TypeDef *UARTx, uint32_t baudrate)
 142:../Source Files/lpc17xx_uart.c **** {
 143:../Source Files/lpc17xx_uart.c **** 	Status errorStatus = ERROR;
 144:../Source Files/lpc17xx_uart.c **** 
 145:../Source Files/lpc17xx_uart.c **** 	uint32_t uClk;
 146:../Source Files/lpc17xx_uart.c **** 	uint32_t d, m, bestd, bestm, tmp;
 147:../Source Files/lpc17xx_uart.c **** 	uint64_t best_divisor, divisor;
 148:../Source Files/lpc17xx_uart.c **** 	uint32_t current_error, best_error;
 149:../Source Files/lpc17xx_uart.c **** 	uint32_t recalcbaud;
 150:../Source Files/lpc17xx_uart.c **** 
 151:../Source Files/lpc17xx_uart.c **** 	/* get UART block clock */
 152:../Source Files/lpc17xx_uart.c **** 	if (UARTx == (LPC_UART_TypeDef *)LPC_UART0)
 153:../Source Files/lpc17xx_uart.c **** 	{
 154:../Source Files/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART0);
 155:../Source Files/lpc17xx_uart.c **** 	}
 156:../Source Files/lpc17xx_uart.c **** 	else if (UARTx == (LPC_UART_TypeDef *)LPC_UART1)
 157:../Source Files/lpc17xx_uart.c **** 	{
 158:../Source Files/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART1);
 159:../Source Files/lpc17xx_uart.c **** 	}
 160:../Source Files/lpc17xx_uart.c **** 	else if (UARTx == LPC_UART2)
 161:../Source Files/lpc17xx_uart.c **** 	{
 162:../Source Files/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART2);
 163:../Source Files/lpc17xx_uart.c **** 	}
 164:../Source Files/lpc17xx_uart.c **** 	else if (UARTx == LPC_UART3)
 165:../Source Files/lpc17xx_uart.c **** 	{
 166:../Source Files/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART3);
 167:../Source Files/lpc17xx_uart.c **** 	}
 168:../Source Files/lpc17xx_uart.c **** 
 169:../Source Files/lpc17xx_uart.c **** 
 170:../Source Files/lpc17xx_uart.c **** 	/* In the Uart IP block, baud rate is calculated using FDR and DLL-DLM registers
 171:../Source Files/lpc17xx_uart.c **** 	* The formula is :
 172:../Source Files/lpc17xx_uart.c **** 	* BaudRate= uClk * (mulFracDiv/(mulFracDiv+dividerAddFracDiv) / (16 * (DLL)
 173:../Source Files/lpc17xx_uart.c **** 	* It involves floating point calculations. That's the reason the formulae are adjusted with
 174:../Source Files/lpc17xx_uart.c **** 	* Multiply and divide method.*/
 175:../Source Files/lpc17xx_uart.c **** 	/* The value of mulFracDiv and dividerAddFracDiv should comply to the following expressions:
 176:../Source Files/lpc17xx_uart.c **** 	* 0 < mulFracDiv <= 15, 0 <= dividerAddFracDiv <= 15 */
 177:../Source Files/lpc17xx_uart.c **** 	best_error = 0xFFFFFFFF; /* Worst case */
 178:../Source Files/lpc17xx_uart.c **** 	bestd = 0;
 179:../Source Files/lpc17xx_uart.c **** 	bestm = 0;
 180:../Source Files/lpc17xx_uart.c **** 	best_divisor = 0;
 181:../Source Files/lpc17xx_uart.c **** 	for (m = 1 ; m <= 15 ;m++)
 182:../Source Files/lpc17xx_uart.c **** 	{
 183:../Source Files/lpc17xx_uart.c **** 		for (d = 0 ; d < m ; d++)
 184:../Source Files/lpc17xx_uart.c **** 		{
 185:../Source Files/lpc17xx_uart.c **** 		  divisor = ((uint64_t)uClk<<28)*m/(baudrate*(m+d));
 186:../Source Files/lpc17xx_uart.c **** 		  current_error = divisor & 0xFFFFFFFF;
 187:../Source Files/lpc17xx_uart.c **** 
 188:../Source Files/lpc17xx_uart.c **** 		  tmp = divisor>>32;
 189:../Source Files/lpc17xx_uart.c **** 
 190:../Source Files/lpc17xx_uart.c **** 		  /* Adjust error */
 191:../Source Files/lpc17xx_uart.c **** 		  if(current_error > ((uint32_t)1<<31)){
 192:../Source Files/lpc17xx_uart.c **** 			current_error = -current_error;
 193:../Source Files/lpc17xx_uart.c **** 			tmp++;
 194:../Source Files/lpc17xx_uart.c **** 			}
 195:../Source Files/lpc17xx_uart.c **** 
 196:../Source Files/lpc17xx_uart.c **** 		  if(tmp<1 || tmp>65536) /* Out of range */
 197:../Source Files/lpc17xx_uart.c **** 		  continue;
 198:../Source Files/lpc17xx_uart.c **** 
 199:../Source Files/lpc17xx_uart.c **** 		  if( current_error < best_error){
 200:../Source Files/lpc17xx_uart.c **** 			best_error = current_error;
 201:../Source Files/lpc17xx_uart.c **** 			best_divisor = tmp;
 202:../Source Files/lpc17xx_uart.c **** 			bestd = d;
 203:../Source Files/lpc17xx_uart.c **** 			bestm = m;
 204:../Source Files/lpc17xx_uart.c **** 			if(best_error == 0) break;
 205:../Source Files/lpc17xx_uart.c **** 			}
 206:../Source Files/lpc17xx_uart.c **** 		} /* end of inner for loop */
 207:../Source Files/lpc17xx_uart.c **** 
 208:../Source Files/lpc17xx_uart.c **** 		if (best_error == 0)
 209:../Source Files/lpc17xx_uart.c **** 		  break;
 210:../Source Files/lpc17xx_uart.c **** 	} /* end of outer for loop  */
 211:../Source Files/lpc17xx_uart.c **** 
 212:../Source Files/lpc17xx_uart.c **** 	if(best_divisor == 0) return ERROR; /* can not find best match */
 213:../Source Files/lpc17xx_uart.c **** 
 214:../Source Files/lpc17xx_uart.c **** 	recalcbaud = (uClk>>4) * bestm/(best_divisor * (bestm + bestd));
 215:../Source Files/lpc17xx_uart.c **** 
 216:../Source Files/lpc17xx_uart.c **** 	/* reuse best_error to evaluate baud error*/
 217:../Source Files/lpc17xx_uart.c **** 	if(baudrate>recalcbaud) best_error = baudrate - recalcbaud;
 218:../Source Files/lpc17xx_uart.c **** 	else best_error = recalcbaud -baudrate;
 219:../Source Files/lpc17xx_uart.c **** 
 220:../Source Files/lpc17xx_uart.c **** 	best_error = best_error * 100 / baudrate;
 221:../Source Files/lpc17xx_uart.c **** 
 222:../Source Files/lpc17xx_uart.c **** 	if (best_error < UART_ACCEPTED_BAUDRATE_ERROR)
 223:../Source Files/lpc17xx_uart.c **** 		{
 224:../Source Files/lpc17xx_uart.c **** 			if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 225:../Source Files/lpc17xx_uart.c **** 			{
 226:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 227:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/DLM = UART_LOAD_DLM(best_divisor);
 228:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/DLL = UART_LOAD_DLL(best_divisor);
 229:../Source Files/lpc17xx_uart.c **** 				/* Then reset DLAB bit */
 230:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 231:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->FDR = (UART_FDR_MULVAL(bestm) \
 232:../Source Files/lpc17xx_uart.c **** 						| UART_FDR_DIVADDVAL(bestd)) & UART_FDR_BITMASK;
 233:../Source Files/lpc17xx_uart.c **** 			}
 234:../Source Files/lpc17xx_uart.c **** 			else
 235:../Source Files/lpc17xx_uart.c **** 			{
 236:../Source Files/lpc17xx_uart.c **** 				UARTx->LCR |= UART_LCR_DLAB_EN;
 237:../Source Files/lpc17xx_uart.c **** 				UARTx->/*DLIER.*/DLM = UART_LOAD_DLM(best_divisor);
 238:../Source Files/lpc17xx_uart.c **** 				UARTx->/*RBTHDLR.*/DLL = UART_LOAD_DLL(best_divisor);
 239:../Source Files/lpc17xx_uart.c **** 				/* Then reset DLAB bit */
 240:../Source Files/lpc17xx_uart.c **** 				UARTx->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 241:../Source Files/lpc17xx_uart.c **** 				UARTx->FDR = (UART_FDR_MULVAL(bestm) \
 242:../Source Files/lpc17xx_uart.c **** 						| UART_FDR_DIVADDVAL(bestd)) & UART_FDR_BITMASK;
 243:../Source Files/lpc17xx_uart.c **** 			}
 244:../Source Files/lpc17xx_uart.c **** 			errorStatus = SUCCESS;
 245:../Source Files/lpc17xx_uart.c **** 		}
 246:../Source Files/lpc17xx_uart.c **** 
 247:../Source Files/lpc17xx_uart.c **** 		return errorStatus;
 248:../Source Files/lpc17xx_uart.c **** }
 249:../Source Files/lpc17xx_uart.c **** 
 250:../Source Files/lpc17xx_uart.c **** /* End of Private Functions ---------------------------------------------------- */
 251:../Source Files/lpc17xx_uart.c **** 
 252:../Source Files/lpc17xx_uart.c **** /************************** PUBLIC FUNCTIONS *************************/
 253:../Source Files/lpc17xx_uart.c **** /* Public Functions ----------------------------------------------------------- */
 254:../Source Files/lpc17xx_uart.c **** /** @addtogroup UART_Public_Functions
 255:../Source Files/lpc17xx_uart.c ****  * @{
 256:../Source Files/lpc17xx_uart.c ****  */
 257:../Source Files/lpc17xx_uart.c ****  
 258:../Source Files/lpc17xx_uart.c **** /*-------------------------PUBLIC FUNCTIONS------------------------------*/
 259:../Source Files/lpc17xx_uart.c ****  /* UART Initialization Config function ---------------------------------*/
 260:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
 261:../Source Files/lpc17xx_uart.c ****  * @brief		Initializes the UARTx peripheral according to the specified
 262:../Source Files/lpc17xx_uart.c ****  *               parameters.
 263:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 264:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
 265:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 266:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 267:../Source Files/lpc17xx_uart.c ****  * @param[in]	baud define the baudrate for UARTx
 268:../Source Files/lpc17xx_uart.c ****  * @return 		None
 269:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
 270:../Source Files/lpc17xx_uart.c **** void UART_Config(LPC_UART_TypeDef *UARTx, long int baud)
 271:../Source Files/lpc17xx_uart.c **** {
 272:../Source Files/lpc17xx_uart.c **** 	// UART Configuration structure variable
 273:../Source Files/lpc17xx_uart.c **** 	UART_CFG_Type UARTConfigStruct;
 274:../Source Files/lpc17xx_uart.c **** 	// UART FIFO configuration Struct variable
 275:../Source Files/lpc17xx_uart.c **** 	UART_FIFO_CFG_Type UARTFIFOConfigStruct;
 276:../Source Files/lpc17xx_uart.c **** 	// Pin configuration for UART
 277:../Source Files/lpc17xx_uart.c **** 	PINSEL_CFG_Type PinCfg;
 278:../Source Files/lpc17xx_uart.c **** 
 279:../Source Files/lpc17xx_uart.c **** 	// DeInit NVIC and SCBNVIC
 280:../Source Files/lpc17xx_uart.c **** //	NVIC_DeInit();
 281:../Source Files/lpc17xx_uart.c **** //	NVIC_SCBDeInit();
 282:../Source Files/lpc17xx_uart.c **** 
 283:../Source Files/lpc17xx_uart.c **** 	/* Configure the NVIC Preemption Priority Bits:
 284:../Source Files/lpc17xx_uart.c **** 	 * two (2) bits of preemption priority, six (6) bits of sub-priority.
 285:../Source Files/lpc17xx_uart.c **** 	 * Since the Number of Bits used for Priority Levels is five (5), so the
 286:../Source Files/lpc17xx_uart.c **** 	 * actual bit number of sub-priority is three (3)
 287:../Source Files/lpc17xx_uart.c **** 	 */
 288:../Source Files/lpc17xx_uart.c **** //	NVIC_SetPriorityGrouping(0x05);
 289:../Source Files/lpc17xx_uart.c **** //
 290:../Source Files/lpc17xx_uart.c **** //	//  Set Vector table offset value
 291:../Source Files/lpc17xx_uart.c **** //#if (__RAM_MODE__==1)
 292:../Source Files/lpc17xx_uart.c **** //	NVIC_SetVTOR(0x10000000);
 293:../Source Files/lpc17xx_uart.c **** //#else
 294:../Source Files/lpc17xx_uart.c **** //	NVIC_SetVTOR(0x00000000);
 295:../Source Files/lpc17xx_uart.c **** //#endif
 296:../Source Files/lpc17xx_uart.c **** 
 297:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART0)
 298:../Source Files/lpc17xx_uart.c **** 	{
 299:../Source Files/lpc17xx_uart.c **** 		/*
 300:../Source Files/lpc17xx_uart.c **** 		 * Initialize UART0 pin connect
 301:../Source Files/lpc17xx_uart.c **** 		 */
 302:../Source Files/lpc17xx_uart.c **** 		PinCfg.Funcnum = 1;
 303:../Source Files/lpc17xx_uart.c **** 		PinCfg.OpenDrain = 0;
 304:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinmode = 0;
 305:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 2;
 306:../Source Files/lpc17xx_uart.c **** 		PinCfg.Portnum = 0;
 307:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 308:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 3;
 309:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 310:../Source Files/lpc17xx_uart.c **** 	}
 311:../Source Files/lpc17xx_uart.c **** 
 312:../Source Files/lpc17xx_uart.c **** 	else if((LPC_UART1_TypeDef *)UARTx == LPC_UART1)
 313:../Source Files/lpc17xx_uart.c **** 	{
 314:../Source Files/lpc17xx_uart.c **** 		/*
 315:../Source Files/lpc17xx_uart.c **** 		 * Initialize UART1 pin connect
 316:../Source Files/lpc17xx_uart.c **** 		 */
 317:../Source Files/lpc17xx_uart.c **** 		PinCfg.Funcnum = 2;
 318:../Source Files/lpc17xx_uart.c **** 		PinCfg.OpenDrain = 0;
 319:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinmode = 0;
 320:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 0;
 321:../Source Files/lpc17xx_uart.c **** 		PinCfg.Portnum = 2;
 322:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 323:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 1;
 324:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 325:../Source Files/lpc17xx_uart.c **** 	}
 326:../Source Files/lpc17xx_uart.c **** 
 327:../Source Files/lpc17xx_uart.c **** 	else if(UARTx == LPC_UART2)
 328:../Source Files/lpc17xx_uart.c **** 	{
 329:../Source Files/lpc17xx_uart.c **** 		/*
 330:../Source Files/lpc17xx_uart.c **** 		 * Initialize UART2 pin connect
 331:../Source Files/lpc17xx_uart.c **** 		 */
 332:../Source Files/lpc17xx_uart.c **** 		PinCfg.Funcnum = 1;
 333:../Source Files/lpc17xx_uart.c **** 		PinCfg.OpenDrain = 0;
 334:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinmode = 0;
 335:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 10;
 336:../Source Files/lpc17xx_uart.c **** 		PinCfg.Portnum = 0;
 337:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 338:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 11;
 339:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 340:../Source Files/lpc17xx_uart.c **** 	}
 341:../Source Files/lpc17xx_uart.c **** 
 342:../Source Files/lpc17xx_uart.c **** 	/* Initialize UART Configuration parameter structure to default state:
 343:../Source Files/lpc17xx_uart.c **** 	 * Baudrate = 9600bps
 344:../Source Files/lpc17xx_uart.c **** 	 * 8 data bit
 345:../Source Files/lpc17xx_uart.c **** 	 * 1 Stop bit
 346:../Source Files/lpc17xx_uart.c **** 	 * None parity
 347:../Source Files/lpc17xx_uart.c **** 	 */
 348:../Source Files/lpc17xx_uart.c **** 
 349:../Source Files/lpc17xx_uart.c **** 	UART_ConfigStructInit(&UARTConfigStruct);
 350:../Source Files/lpc17xx_uart.c **** 	UARTConfigStruct.Baud_rate = baud;
 351:../Source Files/lpc17xx_uart.c **** 
 352:../Source Files/lpc17xx_uart.c **** 	// Initialize UARTx peripheral with given to corresponding parameter
 353:../Source Files/lpc17xx_uart.c **** 	UART_Init(UARTx, &UARTConfigStruct);
 354:../Source Files/lpc17xx_uart.c **** 
 355:../Source Files/lpc17xx_uart.c **** 	/* Initialize FIFOConfigStruct to default state:
 356:../Source Files/lpc17xx_uart.c **** 	 * 				- FIFO_DMAMode = DISABLE
 357:../Source Files/lpc17xx_uart.c **** 	 * 				- FIFO_Level = UART_FIFO_TRGLEV0
 358:../Source Files/lpc17xx_uart.c **** 	 * 				- FIFO_ResetRxBuf = ENABLE
 359:../Source Files/lpc17xx_uart.c **** 	 * 				- FIFO_ResetTxBuf = ENABLE
 360:../Source Files/lpc17xx_uart.c **** 	 * 				- FIFO_State = ENABLE
 361:../Source Files/lpc17xx_uart.c **** 	 */
 362:../Source Files/lpc17xx_uart.c **** 	UART_FIFOConfigStructInit(&UARTFIFOConfigStruct);
 363:../Source Files/lpc17xx_uart.c **** 
 364:../Source Files/lpc17xx_uart.c **** 	// Initialize FIFO for UARTx peripheral
 365:../Source Files/lpc17xx_uart.c **** 	UART_FIFOConfig(UARTx, &UARTFIFOConfigStruct);
 366:../Source Files/lpc17xx_uart.c **** 
 367:../Source Files/lpc17xx_uart.c **** 	// Enable UARTx Transmit
 368:../Source Files/lpc17xx_uart.c **** 	UART_TxCmd(UARTx, ENABLE);
 369:../Source Files/lpc17xx_uart.c **** 
 370:../Source Files/lpc17xx_uart.c **** #ifdef INTERRUPT_MODE
 371:../Source Files/lpc17xx_uart.c **** 	UART_IntConfig(UARTx, UART_INTCFG_RBR, ENABLE);
 372:../Source Files/lpc17xx_uart.c **** 	/* Enable UART line status interrupt */
 373:../Source Files/lpc17xx_uart.c **** 	UART_IntConfig(UARTx, UART_INTCFG_RLS, ENABLE);
 374:../Source Files/lpc17xx_uart.c **** 
 375:../Source Files/lpc17xx_uart.c **** 	/**
 376:../Source Files/lpc17xx_uart.c **** 	 * Do not enable transmit interrupt here, since it is handled by
 377:../Source Files/lpc17xx_uart.c **** 	 * UART_Send() function, just to reset Tx Interrupt state for the
 378:../Source Files/lpc17xx_uart.c **** 	 * first time
 379:../Source Files/lpc17xx_uart.c **** 	 */
 380:../Source Files/lpc17xx_uart.c **** 	TxIntStat = RESET;
 381:../Source Files/lpc17xx_uart.c **** 
 382:../Source Files/lpc17xx_uart.c **** 	// Reset ring buf head and tail idx
 383:../Source Files/lpc17xx_uart.c **** 	__BUF_RESET(rb.rx_head);
 384:../Source Files/lpc17xx_uart.c **** 	__BUF_RESET(rb.rx_tail);
 385:../Source Files/lpc17xx_uart.c **** 	__BUF_RESET(rb.tx_head);
 386:../Source Files/lpc17xx_uart.c **** 	__BUF_RESET(rb.tx_tail);
 387:../Source Files/lpc17xx_uart.c **** 
 388:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART0)
 389:../Source Files/lpc17xx_uart.c **** 	{
 390:../Source Files/lpc17xx_uart.c **** 		/* preemption = 1, sub-priority = 1 */
 391:../Source Files/lpc17xx_uart.c **** 		NVIC_SetPriority(UART0_IRQn, ((0x01<<3)|0x01));
 392:../Source Files/lpc17xx_uart.c **** 		/* Enable Interrupt for UART0 channel */
 393:../Source Files/lpc17xx_uart.c **** 		NVIC_EnableIRQ(UART0_IRQn);
 394:../Source Files/lpc17xx_uart.c **** 	}
 395:../Source Files/lpc17xx_uart.c **** 	else if(UARTx == LPC_UART2)
 396:../Source Files/lpc17xx_uart.c **** 	{
 397:../Source Files/lpc17xx_uart.c **** 		/* preemption = 1, sub-priority = 1 */
 398:../Source Files/lpc17xx_uart.c **** 		NVIC_SetPriority(UART2_IRQn, 2);
 399:../Source Files/lpc17xx_uart.c **** 		/* Enable Interrupt for UART2 channel */
 400:../Source Files/lpc17xx_uart.c **** 		NVIC_EnableIRQ(UART2_IRQn);
 401:../Source Files/lpc17xx_uart.c **** 	}
 402:../Source Files/lpc17xx_uart.c **** 
 403:../Source Files/lpc17xx_uart.c **** #endif
 404:../Source Files/lpc17xx_uart.c **** }
 405:../Source Files/lpc17xx_uart.c **** 
 406:../Source Files/lpc17xx_uart.c **** /* UART Init/DeInit functions -------------------------------------------------*/
 407:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
 408:../Source Files/lpc17xx_uart.c ****  * @brief		Initializes the UARTx peripheral according to the specified
 409:../Source Files/lpc17xx_uart.c ****  *               parameters in the UART_ConfigStruct.
 410:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 411:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
 412:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 413:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 414:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 415:../Source Files/lpc17xx_uart.c ****  * @param[in]	UART_ConfigStruct Pointer to a UART_CFG_Type structure
 416:../Source Files/lpc17xx_uart.c **** *                    that contains the configuration information for the
 417:../Source Files/lpc17xx_uart.c **** *                    specified UART peripheral.
 418:../Source Files/lpc17xx_uart.c ****  * @return 		None
 419:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
 420:../Source Files/lpc17xx_uart.c **** void UART_Init(LPC_UART_TypeDef *UARTx, UART_CFG_Type *UART_ConfigStruct)
 421:../Source Files/lpc17xx_uart.c **** {
  27              		.loc 1 421 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
 422:../Source Files/lpc17xx_uart.c **** 	uint32_t tmp;
 423:../Source Files/lpc17xx_uart.c **** 
 424:../Source Files/lpc17xx_uart.c **** 	// For debug mode
 425:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 426:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_DATABIT(UART_ConfigStruct->Databits));
 427:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_STOPBIT(UART_ConfigStruct->Stopbits));
 428:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_PARITY(UART_ConfigStruct->Parity));
 429:../Source Files/lpc17xx_uart.c **** 
 430:../Source Files/lpc17xx_uart.c **** 
 431:../Source Files/lpc17xx_uart.c **** 	if(UARTx == (LPC_UART_TypeDef *)LPC_UART0)
  44              		.loc 1 431 0
  45 0004 A34B     		ldr	r3, .L71
 421:../Source Files/lpc17xx_uart.c **** {
  46              		.loc 1 421 0
  47 0006 0446     		mov	r4, r0
 432:../Source Files/lpc17xx_uart.c **** 	{
 433:../Source Files/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 434:../Source Files/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART0, ENABLE);
  48              		.loc 1 434 0
  49 0008 0820     		movs	r0, #8
  50              	.LVL1:
 431:../Source Files/lpc17xx_uart.c **** 	if(UARTx == (LPC_UART_TypeDef *)LPC_UART0)
  51              		.loc 1 431 0
  52 000a 9C42     		cmp	r4, r3
 421:../Source Files/lpc17xx_uart.c **** {
  53              		.loc 1 421 0
  54 000c 8BB0     		sub	sp, sp, #44
  55              	.LCFI1:
  56              		.cfi_def_cfa_offset 80
 421:../Source Files/lpc17xx_uart.c **** {
  57              		.loc 1 421 0
  58 000e 8B46     		mov	fp, r1
 431:../Source Files/lpc17xx_uart.c **** 	if(UARTx == (LPC_UART_TypeDef *)LPC_UART0)
  59              		.loc 1 431 0
  60 0010 16D0     		beq	.L65
 435:../Source Files/lpc17xx_uart.c **** 	}
 436:../Source Files/lpc17xx_uart.c **** 
 437:../Source Files/lpc17xx_uart.c **** 
 438:../Source Files/lpc17xx_uart.c **** 
 439:../Source Files/lpc17xx_uart.c **** 	if(((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
  61              		.loc 1 439 0
  62 0012 A149     		ldr	r1, .L71+4
  63              	.LVL2:
  64 0014 8C42     		cmp	r4, r1
  65 0016 08D1     		bne	.L4
 440:../Source Files/lpc17xx_uart.c **** 	{
 441:../Source Files/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 442:../Source Files/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART1, ENABLE);
  66              		.loc 1 442 0
  67 0018 0121     		movs	r1, #1
  68 001a 1020     		movs	r0, #16
  69 001c FFF7FEFF 		bl	CLKPWR_ConfigPPWR
  70              	.LVL3:
 443:../Source Files/lpc17xx_uart.c **** 	}
 444:../Source Files/lpc17xx_uart.c **** 
 445:../Source Files/lpc17xx_uart.c **** 
 446:../Source Files/lpc17xx_uart.c **** 
 447:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART2)
 448:../Source Files/lpc17xx_uart.c **** 	{
 449:../Source Files/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 450:../Source Files/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART2, ENABLE);
 451:../Source Files/lpc17xx_uart.c **** 	}
 452:../Source Files/lpc17xx_uart.c **** 
 453:../Source Files/lpc17xx_uart.c **** 
 454:../Source Files/lpc17xx_uart.c **** 
 455:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART3)
 456:../Source Files/lpc17xx_uart.c **** 	{
 457:../Source Files/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 458:../Source Files/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART3, ENABLE);
 459:../Source Files/lpc17xx_uart.c **** 	}
 460:../Source Files/lpc17xx_uart.c **** 
 461:../Source Files/lpc17xx_uart.c **** 
 462:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 463:../Source Files/lpc17xx_uart.c **** 	{
 464:../Source Files/lpc17xx_uart.c **** 		/* FIFOs are empty */
 465:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = ( UART_FCR_FIFO_EN \
  71              		.loc 1 465 0
  72 0020 0721     		movs	r1, #7
 466:../Source Files/lpc17xx_uart.c **** 				| UART_FCR_RX_RS | UART_FCR_TX_RS);
 467:../Source Files/lpc17xx_uart.c **** 		// Disable FIFO
 468:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = 0;
  73              		.loc 1 468 0
  74 0022 0022     		movs	r2, #0
 465:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = ( UART_FCR_FIFO_EN \
  75              		.loc 1 465 0
  76 0024 2172     		strb	r1, [r4, #8]
  77              		.loc 1 468 0
  78 0026 2272     		strb	r2, [r4, #8]
 469:../Source Files/lpc17xx_uart.c **** 
 470:../Source Files/lpc17xx_uart.c **** 		// Dummy reading
 471:../Source Files/lpc17xx_uart.c **** 		while (((LPC_UART1_TypeDef *)UARTx)->LSR & UART_LSR_RDR)
  79              		.loc 1 471 0
  80 0028 0EE0     		b	.L5
  81              	.L4:
 447:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART2)
  82              		.loc 1 447 0
  83 002a 9C4A     		ldr	r2, .L71+8
  84 002c 9442     		cmp	r4, r2
 450:../Source Files/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART2, ENABLE);
  85              		.loc 1 450 0
  86 002e 08BF     		it	eq
  87 0030 4FF08070 		moveq	r0, #16777216
 447:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART2)
  88              		.loc 1 447 0
  89 0034 04D0     		beq	.L65
 455:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART3)
  90              		.loc 1 455 0
  91 0036 9A48     		ldr	r0, .L71+12
  92 0038 8442     		cmp	r4, r0
  93 003a 25D1     		bne	.L7
 458:../Source Files/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART3, ENABLE);
  94              		.loc 1 458 0
  95 003c 4FF00070 		mov	r0, #33554432
  96              	.L65:
  97 0040 0121     		movs	r1, #1
  98 0042 FFF7FEFF 		bl	CLKPWR_ConfigPPWR
  99              	.LVL4:
 100 0046 1FE0     		b	.L7
 101              	.L5:
 102              		.loc 1 471 0 discriminator 1
 103 0048 9348     		ldr	r0, .L71+4
 104 004a 057D     		ldrb	r5, [r0, #20]	@ zero_extendqisi2
 105 004c EA07     		lsls	r2, r5, #31
 106 004e 01D5     		bpl	.L69
 107              	.L8:
 472:../Source Files/lpc17xx_uart.c **** 		{
 473:../Source Files/lpc17xx_uart.c **** 			tmp = ((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/RBR;
 108              		.loc 1 473 0
 109 0050 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 110              	.LVL5:
 111 0052 F9E7     		b	.L5
 112              	.L69:
 474:../Source Files/lpc17xx_uart.c **** 		}
 475:../Source Files/lpc17xx_uart.c **** 
 476:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->TER = UART_TER_TXEN;
 113              		.loc 1 476 0
 114 0054 8026     		movs	r6, #128
 115 0056 80F83060 		strb	r6, [r0, #48]
 116              	.L9:
 477:../Source Files/lpc17xx_uart.c **** 		// Wait for current transmit complete
 478:../Source Files/lpc17xx_uart.c **** 		while (!(((LPC_UART1_TypeDef *)UARTx)->LSR & UART_LSR_THRE));
 117              		.loc 1 478 0 discriminator 1
 118 005a 8F4B     		ldr	r3, .L71+4
 119 005c 197D     		ldrb	r1, [r3, #20]	@ zero_extendqisi2
 120 005e 01F02002 		and	r2, r1, #32
 121 0062 D0B2     		uxtb	r0, r2
 122 0064 0028     		cmp	r0, #0
 123 0066 F8D0     		beq	.L9
 479:../Source Files/lpc17xx_uart.c **** 		// Disable Tx
 480:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->TER = 0;
 124              		.loc 1 480 0
 125 0068 0025     		movs	r5, #0
 126 006a 83F83050 		strb	r5, [r3, #48]
 481:../Source Files/lpc17xx_uart.c **** 
 482:../Source Files/lpc17xx_uart.c **** 		// Disable interrupt
 483:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER = 0;
 127              		.loc 1 483 0
 128 006e 5D60     		str	r5, [r3, #4]
 484:../Source Files/lpc17xx_uart.c **** 		// Set LCR to default state
 485:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR = 0;
 129              		.loc 1 485 0
 130 0070 1D73     		strb	r5, [r3, #12]
 486:../Source Files/lpc17xx_uart.c **** 		// Set ACR to default state
 487:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->ACR = 0;
 131              		.loc 1 487 0
 132 0072 1D62     		str	r5, [r3, #32]
 488:../Source Files/lpc17xx_uart.c **** 		// Set Modem Control to default state
 489:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->MCR = 0;
 133              		.loc 1 489 0
 134 0074 1D74     		strb	r5, [r3, #16]
 490:../Source Files/lpc17xx_uart.c **** 		// Set RS485 control to default state
 491:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->RS485CTRL = 0;
 135              		.loc 1 491 0
 136 0076 83F84C50 		strb	r5, [r3, #76]
 492:../Source Files/lpc17xx_uart.c **** 		// Set RS485 delay timer to default state
 493:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->RS485DLY = 0;
 137              		.loc 1 493 0
 138 007a 83F85450 		strb	r5, [r3, #84]
 494:../Source Files/lpc17xx_uart.c **** 		// Set RS485 addr match to default state
 495:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->ADRMATCH = 0;
 139              		.loc 1 495 0
 140 007e 83F85050 		strb	r5, [r3, #80]
 496:../Source Files/lpc17xx_uart.c **** 		//Dummy Reading to Clear Status
 497:../Source Files/lpc17xx_uart.c **** 		tmp = ((LPC_UART1_TypeDef *)UARTx)->MSR;
 141              		.loc 1 497 0
 142 0082 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
 498:../Source Files/lpc17xx_uart.c **** 		tmp = ((LPC_UART1_TypeDef *)UARTx)->LSR;
 143              		.loc 1 498 0
 144 0084 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 145 0086 1DE0     		b	.L10
 146              	.L7:
 499:../Source Files/lpc17xx_uart.c **** 	}
 500:../Source Files/lpc17xx_uart.c **** 	else
 501:../Source Files/lpc17xx_uart.c **** 	{
 502:../Source Files/lpc17xx_uart.c **** 		/* FIFOs are empty */
 503:../Source Files/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = ( UART_FCR_FIFO_EN | UART_FCR_RX_RS | UART_FCR_TX_RS);
 147              		.loc 1 503 0
 148 0088 0725     		movs	r5, #7
 504:../Source Files/lpc17xx_uart.c **** 		// Disable FIFO
 505:../Source Files/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = 0;
 149              		.loc 1 505 0
 150 008a 0026     		movs	r6, #0
 503:../Source Files/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = ( UART_FCR_FIFO_EN | UART_FCR_RX_RS | UART_FCR_TX_RS);
 151              		.loc 1 503 0
 152 008c 2572     		strb	r5, [r4, #8]
 153              		.loc 1 505 0
 154 008e 2672     		strb	r6, [r4, #8]
 155              	.L11:
 506:../Source Files/lpc17xx_uart.c **** 
 507:../Source Files/lpc17xx_uart.c **** 		// Dummy reading
 508:../Source Files/lpc17xx_uart.c **** 		while (UARTx->LSR & UART_LSR_RDR)
 156              		.loc 1 508 0 discriminator 1
 157 0090 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 158 0092 DB07     		lsls	r3, r3, #31
 159 0094 01D5     		bpl	.L70
 160              	.L12:
 509:../Source Files/lpc17xx_uart.c **** 		{
 510:../Source Files/lpc17xx_uart.c **** 			tmp = UARTx->/*RBTHDLR.*/RBR;
 161              		.loc 1 510 0
 162 0096 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 163 0098 FAE7     		b	.L11
 164              	.L70:
 511:../Source Files/lpc17xx_uart.c **** 		}
 512:../Source Files/lpc17xx_uart.c **** 
 513:../Source Files/lpc17xx_uart.c **** 		UARTx->TER = UART_TER_TXEN;
 165              		.loc 1 513 0
 166 009a 8021     		movs	r1, #128
 167 009c 84F83010 		strb	r1, [r4, #48]
 168              	.L13:
 514:../Source Files/lpc17xx_uart.c **** 		// Wait for current transmit complete
 515:../Source Files/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_THRE));
 169              		.loc 1 515 0 discriminator 1
 170 00a0 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 171 00a2 02F02000 		and	r0, r2, #32
 172 00a6 C5B2     		uxtb	r5, r0
 173 00a8 002D     		cmp	r5, #0
 174 00aa F9D0     		beq	.L13
 516:../Source Files/lpc17xx_uart.c **** 		// Disable Tx
 517:../Source Files/lpc17xx_uart.c **** 		UARTx->TER = 0;
 518:../Source Files/lpc17xx_uart.c **** 
 519:../Source Files/lpc17xx_uart.c **** 		// Disable interrupt
 520:../Source Files/lpc17xx_uart.c **** 		UARTx->/*DLIER.*/IER = 0;
 521:../Source Files/lpc17xx_uart.c **** 		// Set LCR to default state
 522:../Source Files/lpc17xx_uart.c **** 		UARTx->LCR = 0;
 523:../Source Files/lpc17xx_uart.c **** 		// Set ACR to default state
 524:../Source Files/lpc17xx_uart.c **** 		UARTx->ACR = 0;
 525:../Source Files/lpc17xx_uart.c **** 		// Dummy reading
 526:../Source Files/lpc17xx_uart.c **** 		tmp = UARTx->LSR;
 527:../Source Files/lpc17xx_uart.c **** 	}
 528:../Source Files/lpc17xx_uart.c **** 
 529:../Source Files/lpc17xx_uart.c **** 	if (UARTx == LPC_UART3)
 175              		.loc 1 529 0
 176 00ac 7C4B     		ldr	r3, .L71+12
 517:../Source Files/lpc17xx_uart.c **** 		UARTx->TER = 0;
 177              		.loc 1 517 0
 178 00ae 0026     		movs	r6, #0
 179 00b0 84F83060 		strb	r6, [r4, #48]
 180              		.loc 1 529 0
 181 00b4 9C42     		cmp	r4, r3
 520:../Source Files/lpc17xx_uart.c **** 		UARTx->/*DLIER.*/IER = 0;
 182              		.loc 1 520 0
 183 00b6 6660     		str	r6, [r4, #4]
 522:../Source Files/lpc17xx_uart.c **** 		UARTx->LCR = 0;
 184              		.loc 1 522 0
 185 00b8 2673     		strb	r6, [r4, #12]
 524:../Source Files/lpc17xx_uart.c **** 		UARTx->ACR = 0;
 186              		.loc 1 524 0
 187 00ba 2662     		str	r6, [r4, #32]
 526:../Source Files/lpc17xx_uart.c **** 		tmp = UARTx->LSR;
 188              		.loc 1 526 0
 189 00bc 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 530:../Source Files/lpc17xx_uart.c **** 	{
 531:../Source Files/lpc17xx_uart.c **** 		// Set IrDA to default state
 532:../Source Files/lpc17xx_uart.c **** 		UARTx->ICR = 0;
 190              		.loc 1 532 0
 191 00be 08BF     		it	eq
 192 00c0 84F82460 		strbeq	r6, [r4, #36]
 193              	.L10:
 194              	.LBB14:
 195              	.LBB15:
 152:../Source Files/lpc17xx_uart.c **** 	if (UARTx == (LPC_UART_TypeDef *)LPC_UART0)
 196              		.loc 1 152 0
 197 00c4 734E     		ldr	r6, .L71
 154:../Source Files/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART0);
 198              		.loc 1 154 0
 199 00c6 0620     		movs	r0, #6
 152:../Source Files/lpc17xx_uart.c **** 	if (UARTx == (LPC_UART_TypeDef *)LPC_UART0)
 200              		.loc 1 152 0
 201 00c8 B442     		cmp	r4, r6
 202              	.LBE15:
 203              	.LBE14:
 533:../Source Files/lpc17xx_uart.c **** 	}
 534:../Source Files/lpc17xx_uart.c **** 
 535:../Source Files/lpc17xx_uart.c **** 	// Set Line Control register ----------------------------
 536:../Source Files/lpc17xx_uart.c **** 
 537:../Source Files/lpc17xx_uart.c **** 	uart_set_divisors(UARTx, (UART_ConfigStruct->Baud_rate));
 204              		.loc 1 537 0
 205 00ca DBF80050 		ldr	r5, [fp, #0]
 206              	.LVL6:
 207              	.LBB19:
 208              	.LBB16:
 152:../Source Files/lpc17xx_uart.c **** 	if (UARTx == (LPC_UART_TypeDef *)LPC_UART0)
 209              		.loc 1 152 0
 210 00ce 0BD0     		beq	.L66
 156:../Source Files/lpc17xx_uart.c **** 	else if (UARTx == (LPC_UART_TypeDef *)LPC_UART1)
 211              		.loc 1 156 0
 212 00d0 714B     		ldr	r3, .L71+4
 158:../Source Files/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART1);
 213              		.loc 1 158 0
 214 00d2 0820     		movs	r0, #8
 156:../Source Files/lpc17xx_uart.c **** 	else if (UARTx == (LPC_UART_TypeDef *)LPC_UART1)
 215              		.loc 1 156 0
 216 00d4 9C42     		cmp	r4, r3
 217 00d6 07D0     		beq	.L66
 160:../Source Files/lpc17xx_uart.c **** 	else if (UARTx == LPC_UART2)
 218              		.loc 1 160 0
 219 00d8 7049     		ldr	r1, .L71+8
 162:../Source Files/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART2);
 220              		.loc 1 162 0
 221 00da 3020     		movs	r0, #48
 160:../Source Files/lpc17xx_uart.c **** 	else if (UARTx == LPC_UART2)
 222              		.loc 1 160 0
 223 00dc 8C42     		cmp	r4, r1
 224 00de 03D0     		beq	.L66
 164:../Source Files/lpc17xx_uart.c **** 	else if (UARTx == LPC_UART3)
 225              		.loc 1 164 0
 226 00e0 6F4A     		ldr	r2, .L71+12
 227 00e2 9442     		cmp	r4, r2
 228 00e4 03D1     		bne	.L15
 166:../Source Files/lpc17xx_uart.c **** 		uClk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_UART3);
 229              		.loc 1 166 0
 230 00e6 3220     		movs	r0, #50
 231              	.L66:
 232 00e8 FFF7FEFF 		bl	CLKPWR_GetPCLK
 233              	.LVL7:
 234 00ec 0746     		mov	r7, r0
 235              	.LVL8:
 236              	.L15:
 185:../Source Files/lpc17xx_uart.c **** 		  divisor = ((uint64_t)uClk<<28)*m/(baudrate*(m+d));
 237              		.loc 1 185 0
 238 00ee 3E07     		lsls	r6, r7, #28
 239 00f0 3809     		lsrs	r0, r7, #4
 240 00f2 0496     		str	r6, [sp, #16]
 241 00f4 0590     		str	r0, [sp, #20]
 242 00f6 DDE90423 		ldrd	r2, [sp, #16]
 243 00fa CDE90823 		strd	r2, [sp, #32]
 177:../Source Files/lpc17xx_uart.c **** 	best_error = 0xFFFFFFFF; /* Worst case */
 244              		.loc 1 177 0
 245 00fe 4FF0FF33 		mov	r3, #-1
 246 0102 0793     		str	r3, [sp, #28]
 180:../Source Files/lpc17xx_uart.c **** 	best_divisor = 0;
 247              		.loc 1 180 0
 248 0104 0022     		movs	r2, #0
 249 0106 0023     		movs	r3, #0
 250 0108 CDE90223 		strd	r2, [sp, #8]
 179:../Source Files/lpc17xx_uart.c **** 	bestm = 0;
 251              		.loc 1 179 0
 252 010c 0026     		movs	r6, #0
 253              		.loc 1 537 0
 254 010e 0695     		str	r5, [sp, #24]
 181:../Source Files/lpc17xx_uart.c **** 	for (m = 1 ; m <= 15 ;m++)
 255              		.loc 1 181 0
 256 0110 4FF00108 		mov	r8, #1
 178:../Source Files/lpc17xx_uart.c **** 	bestd = 0;
 257              		.loc 1 178 0
 258 0114 B146     		mov	r9, r6
 259              	.LVL9:
 260              	.L18:
 261              	.LBE16:
 262              	.LBE19:
 421:../Source Files/lpc17xx_uart.c **** {
 263              		.loc 1 421 0
 264 0116 4FF0000C 		mov	ip, #0
 265 011a E246     		mov	sl, ip
 266              	.LVL10:
 267              	.L22:
 268              	.LBB20:
 269              	.LBB17:
 185:../Source Files/lpc17xx_uart.c **** 		  divisor = ((uint64_t)uClk<<28)*m/(baudrate*(m+d));
 270              		.loc 1 185 0
 271 011c 069A     		ldr	r2, [sp, #24]
 272 011e 0023     		movs	r3, #0
 273 0120 6244     		add	r2, ip, r2
 274 0122 DDE90801 		ldrd	r0, [sp, #32]
 275 0126 CDF804C0 		str	ip, [sp, #4]
 276 012a FFF7FEFF 		bl	__aeabi_uldivmod
 277              	.LVL11:
 191:../Source Files/lpc17xx_uart.c **** 		  if(current_error > ((uint32_t)1<<31)){
 278              		.loc 1 191 0
 279 012e B0F1004F 		cmp	r0, #-2147483648
 280 0132 DDF804C0 		ldr	ip, [sp, #4]
 281 0136 01D9     		bls	.L19
 192:../Source Files/lpc17xx_uart.c **** 			current_error = -current_error;
 282              		.loc 1 192 0
 283 0138 4042     		negs	r0, r0
 284              	.LVL12:
 193:../Source Files/lpc17xx_uart.c **** 			tmp++;
 285              		.loc 1 193 0
 286 013a 0131     		adds	r1, r1, #1
 287              	.LVL13:
 288              	.L19:
 196:../Source Files/lpc17xx_uart.c **** 		  if(tmp<1 || tmp>65536) /* Out of range */
 289              		.loc 1 196 0
 290 013c 4B1E     		subs	r3, r1, #1
 291 013e B3F5803F 		cmp	r3, #65536
 292 0142 09D2     		bcs	.L20
 199:../Source Files/lpc17xx_uart.c **** 		  if( current_error < best_error){
 293              		.loc 1 199 0
 294 0144 079A     		ldr	r2, [sp, #28]
 295 0146 9042     		cmp	r0, r2
 296 0148 06D2     		bcs	.L20
 297              	.LVL14:
 201:../Source Files/lpc17xx_uart.c **** 			best_divisor = tmp;
 298              		.loc 1 201 0
 299 014a 0291     		str	r1, [sp, #8]
 300 014c 0021     		movs	r1, #0
 301              	.LVL15:
 302 014e 0391     		str	r1, [sp, #12]
 303              	.LVL16:
 204:../Source Files/lpc17xx_uart.c **** 			if(best_error == 0) break;
 304              		.loc 1 204 0
 305 0150 00B3     		cbz	r0, .L44
 306 0152 0790     		str	r0, [sp, #28]
 307 0154 4646     		mov	r6, r8
 308 0156 D146     		mov	r9, sl
 309              	.LVL17:
 310              	.L20:
 183:../Source Files/lpc17xx_uart.c **** 		for (d = 0 ; d < m ; d++)
 311              		.loc 1 183 0
 312 0158 0AF1010A 		add	sl, sl, #1
 313              	.LVL18:
 314 015c C245     		cmp	sl, r8
 315 015e AC44     		add	ip, ip, r5
 316 0160 DCD3     		bcc	.L22
 208:../Source Files/lpc17xx_uart.c **** 		if (best_error == 0)
 317              		.loc 1 208 0
 318 0162 0798     		ldr	r0, [sp, #28]
 319              	.LVL19:
 320 0164 80B1     		cbz	r0, .L23
 321 0166 069B     		ldr	r3, [sp, #24]
 322              	.LVL20:
 323 0168 DDE90401 		ldrd	r0, [sp, #16]
 324 016c 5A19     		adds	r2, r3, r5
 181:../Source Files/lpc17xx_uart.c **** 	for (m = 1 ; m <= 15 ;m++)
 325              		.loc 1 181 0
 326 016e 08F10108 		add	r8, r8, #1
 327              	.LVL21:
 328 0172 0692     		str	r2, [sp, #24]
 329 0174 DDE90823 		ldrd	r2, [sp, #32]
 330 0178 1218     		adds	r2, r2, r0
 331 017a 43EB0103 		adc	r3, r3, r1
 332 017e B8F1100F 		cmp	r8, #16
 333 0182 CDE90823 		strd	r2, [sp, #32]
 334 0186 C6D1     		bne	.L18
 335              	.LVL22:
 336              	.L23:
 212:../Source Files/lpc17xx_uart.c **** 	if(best_divisor == 0) return ERROR; /* can not find best match */
 337              		.loc 1 212 0
 338 0188 DDE90201 		ldrd	r0, [sp, #8]
 339 018c 50EA0103 		orrs	r3, r0, r1
 340 0190 4AD0     		beq	.L24
 341 0192 01E0     		b	.L21
 342              	.LVL23:
 343              	.L44:
 204:../Source Files/lpc17xx_uart.c **** 			if(best_error == 0) break;
 344              		.loc 1 204 0
 345 0194 D146     		mov	r9, sl
 346 0196 4646     		mov	r6, r8
 347              	.LVL24:
 348              	.L21:
 214:../Source Files/lpc17xx_uart.c **** 	recalcbaud = (uClk>>4) * bestm/(best_divisor * (bestm + bestd));
 349              		.loc 1 214 0
 350 0198 3809     		lsrs	r0, r7, #4
 351 019a 029F     		ldr	r7, [sp, #8]
 352              	.LVL25:
 353 019c 09EB0601 		add	r1, r9, r6
 354 01a0 A1FB0723 		umull	r2, r3, r1, r7
 355 01a4 039F     		ldr	r7, [sp, #12]
 356 01a6 7043     		muls	r0, r6, r0
 357 01a8 01FB0733 		mla	r3, r1, r7, r3
 358 01ac 0021     		movs	r1, #0
 359 01ae FFF7FEFF 		bl	__aeabi_uldivmod
 360              	.LVL26:
 217:../Source Files/lpc17xx_uart.c **** 	if(baudrate>recalcbaud) best_error = baudrate - recalcbaud;
 361              		.loc 1 217 0
 362 01b2 8542     		cmp	r5, r0
 363 01b4 8CBF     		ite	hi
 364 01b6 C0EB0500 		rsbhi	r0, r0, r5
 365              	.LVL27:
 218:../Source Files/lpc17xx_uart.c **** 	else best_error = recalcbaud -baudrate;
 366              		.loc 1 218 0
 367 01ba C5EB0000 		rsbls	r0, r5, r0
 368              	.LVL28:
 220:../Source Files/lpc17xx_uart.c **** 	best_error = best_error * 100 / baudrate;
 369              		.loc 1 220 0
 370 01be 6423     		movs	r3, #100
 371 01c0 5843     		muls	r0, r3, r0
 372              	.LVL29:
 373 01c2 B0FBF5F5 		udiv	r5, r0, r5
 374              	.LVL30:
 222:../Source Files/lpc17xx_uart.c **** 	if (best_error < UART_ACCEPTED_BAUDRATE_ERROR)
 375              		.loc 1 222 0
 376 01c6 022D     		cmp	r5, #2
 377 01c8 2ED8     		bhi	.L24
 226:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 378              		.loc 1 226 0
 379 01ca 207B     		ldrb	r0, [r4, #12]	@ zero_extendqisi2
 224:../Source Files/lpc17xx_uart.c **** 			if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 380              		.loc 1 224 0
 381 01cc 324A     		ldr	r2, .L71+4
 226:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 382              		.loc 1 226 0
 383 01ce 40F08001 		orr	r1, r0, #128
 224:../Source Files/lpc17xx_uart.c **** 			if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 384              		.loc 1 224 0
 385 01d2 9442     		cmp	r4, r2
 226:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 386              		.loc 1 226 0
 387 01d4 2173     		strb	r1, [r4, #12]
 224:../Source Files/lpc17xx_uart.c **** 			if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 388              		.loc 1 224 0
 389 01d6 13D1     		bne	.L27
 227:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/DLM = UART_LOAD_DLM(best_divisor);
 390              		.loc 1 227 0
 391 01d8 029B     		ldr	r3, [sp, #8]
 228:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/DLL = UART_LOAD_DLL(best_divisor);
 392              		.loc 1 228 0
 393 01da 9DF80800 		ldrb	r0, [sp, #8]	@ zero_extendqisi2
 227:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/DLM = UART_LOAD_DLM(best_divisor);
 394              		.loc 1 227 0
 395 01de C3F30722 		ubfx	r2, r3, #8, #8
 228:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/DLL = UART_LOAD_DLL(best_divisor);
 396              		.loc 1 228 0
 397 01e2 C1B2     		uxtb	r1, r0
 227:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/DLM = UART_LOAD_DLM(best_divisor);
 398              		.loc 1 227 0
 399 01e4 2271     		strb	r2, [r4, #4]
 228:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/DLL = UART_LOAD_DLL(best_divisor);
 400              		.loc 1 228 0
 401 01e6 2170     		strb	r1, [r4, #0]
 230:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 402              		.loc 1 230 0
 403 01e8 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 231:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->FDR = (UART_FDR_MULVAL(bestm) \
 404              		.loc 1 231 0
 405 01ea 3601     		lsls	r6, r6, #4
 406 01ec F0B2     		uxtb	r0, r6
 232:../Source Files/lpc17xx_uart.c **** 						| UART_FDR_DIVADDVAL(bestd)) & UART_FDR_BITMASK;
 407              		.loc 1 232 0
 408 01ee 09F00F09 		and	r9, r9, #15
 409              	.LVL31:
 230:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 410              		.loc 1 230 0
 411 01f2 03F07F02 		and	r2, r3, #127
 232:../Source Files/lpc17xx_uart.c **** 						| UART_FDR_DIVADDVAL(bestd)) & UART_FDR_BITMASK;
 412              		.loc 1 232 0
 413 01f6 40EA0906 		orr	r6, r0, r9
 230:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 414              		.loc 1 230 0
 415 01fa 2273     		strb	r2, [r4, #12]
 231:../Source Files/lpc17xx_uart.c **** 				((LPC_UART1_TypeDef *)UARTx)->FDR = (UART_FDR_MULVAL(bestm) \
 416              		.loc 1 231 0
 417 01fc A662     		str	r6, [r4, #40]
 418 01fe 16E0     		b	.L28
 419              	.LVL32:
 420              	.L27:
 237:../Source Files/lpc17xx_uart.c **** 				UARTx->/*DLIER.*/DLM = UART_LOAD_DLM(best_divisor);
 421              		.loc 1 237 0
 422 0200 029F     		ldr	r7, [sp, #8]
 423              	.LBE17:
 241:../Source Files/lpc17xx_uart.c **** 				UARTx->FDR = (UART_FDR_MULVAL(bestm) \
 424              		.loc 1 241 0
 425 0202 09F00F09 		and	r9, r9, #15
 426              	.LVL33:
 427              	.LBB18:
 237:../Source Files/lpc17xx_uart.c **** 				UARTx->/*DLIER.*/DLM = UART_LOAD_DLM(best_divisor);
 428              		.loc 1 237 0
 429 0206 C7F30723 		ubfx	r3, r7, #8, #8
 238:../Source Files/lpc17xx_uart.c **** 				UARTx->/*RBTHDLR.*/DLL = UART_LOAD_DLL(best_divisor);
 430              		.loc 1 238 0
 431 020a 9DF80870 		ldrb	r7, [sp, #8]	@ zero_extendqisi2
 237:../Source Files/lpc17xx_uart.c **** 				UARTx->/*DLIER.*/DLM = UART_LOAD_DLM(best_divisor);
 432              		.loc 1 237 0
 433 020e 2371     		strb	r3, [r4, #4]
 238:../Source Files/lpc17xx_uart.c **** 				UARTx->/*RBTHDLR.*/DLL = UART_LOAD_DLL(best_divisor);
 434              		.loc 1 238 0
 435 0210 FAB2     		uxtb	r2, r7
 436 0212 2270     		strb	r2, [r4, #0]
 240:../Source Files/lpc17xx_uart.c **** 				UARTx->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 437              		.loc 1 240 0
 438 0214 207B     		ldrb	r0, [r4, #12]	@ zero_extendqisi2
 241:../Source Files/lpc17xx_uart.c **** 				UARTx->FDR = (UART_FDR_MULVAL(bestm) \
 439              		.loc 1 241 0
 440 0216 49EA0616 		orr	r6, r9, r6, lsl #4
 240:../Source Files/lpc17xx_uart.c **** 				UARTx->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 441              		.loc 1 240 0
 442 021a 00F07F01 		and	r1, r0, #127
 241:../Source Files/lpc17xx_uart.c **** 				UARTx->FDR = (UART_FDR_MULVAL(bestm) \
 443              		.loc 1 241 0
 444 021e F6B2     		uxtb	r6, r6
 240:../Source Files/lpc17xx_uart.c **** 				UARTx->LCR &= (~UART_LCR_DLAB_EN) & UART_LCR_BITMASK;
 445              		.loc 1 240 0
 446 0220 2173     		strb	r1, [r4, #12]
 241:../Source Files/lpc17xx_uart.c **** 				UARTx->FDR = (UART_FDR_MULVAL(bestm) \
 447              		.loc 1 241 0
 448 0222 84F82860 		strb	r6, [r4, #40]
 449 0226 05E0     		b	.L29
 450              	.LVL34:
 451              	.L24:
 452              	.LBE18:
 453              	.LBE20:
 538:../Source Files/lpc17xx_uart.c **** 
 539:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 454              		.loc 1 539 0
 455 0228 1B49     		ldr	r1, .L71+4
 456 022a 8C42     		cmp	r4, r1
 457 022c 02D1     		bne	.L29
 458              	.LVL35:
 459              	.L28:
 540:../Source Files/lpc17xx_uart.c **** 	{
 541:../Source Files/lpc17xx_uart.c **** 		tmp = (((LPC_UART1_TypeDef *)UARTx)->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) \
 460              		.loc 1 541 0
 461 022e 1A4A     		ldr	r2, .L71+4
 462 0230 137B     		ldrb	r3, [r2, #12]	@ zero_extendqisi2
 463 0232 00E0     		b	.L67
 464              	.L29:
 542:../Source Files/lpc17xx_uart.c **** 				& UART_LCR_BITMASK;
 543:../Source Files/lpc17xx_uart.c **** 	}
 544:../Source Files/lpc17xx_uart.c **** 	else
 545:../Source Files/lpc17xx_uart.c **** 	{
 546:../Source Files/lpc17xx_uart.c **** 		tmp = (UARTx->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) & UART_LCR_BITMASK;
 465              		.loc 1 546 0
 466 0234 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 467              	.L67:
 547:../Source Files/lpc17xx_uart.c **** 	}
 548:../Source Files/lpc17xx_uart.c **** 
 549:../Source Files/lpc17xx_uart.c **** 	switch (UART_ConfigStruct->Databits){
 468              		.loc 1 549 0
 469 0236 9BF80500 		ldrb	r0, [fp, #5]	@ zero_extendqisi2
 546:../Source Files/lpc17xx_uart.c **** 		tmp = (UARTx->LCR & (UART_LCR_DLAB_EN | UART_LCR_BREAK_EN)) & UART_LCR_BITMASK;
 470              		.loc 1 546 0
 471 023a 03F0C003 		and	r3, r3, #192
 472              	.LVL36:
 473              		.loc 1 549 0
 474 023e 0128     		cmp	r0, #1
 475 0240 05D0     		beq	.L33
 476 0242 09D3     		bcc	.L32
 477 0244 0228     		cmp	r0, #2
 478 0246 05D1     		bne	.L64
 550:../Source Files/lpc17xx_uart.c **** 	case UART_DATABIT_5:
 551:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN5;
 552:../Source Files/lpc17xx_uart.c **** 		break;
 553:../Source Files/lpc17xx_uart.c **** 	case UART_DATABIT_6:
 554:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN6;
 555:../Source Files/lpc17xx_uart.c **** 		break;
 556:../Source Files/lpc17xx_uart.c **** 	case UART_DATABIT_7:
 557:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN7;
 479              		.loc 1 557 0
 480 0248 43F00203 		orr	r3, r3, #2
 481              	.LVL37:
 558:../Source Files/lpc17xx_uart.c **** 		break;
 482              		.loc 1 558 0
 483 024c 04E0     		b	.L32
 484              	.L33:
 554:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN6;
 485              		.loc 1 554 0
 486 024e 43F00103 		orr	r3, r3, #1
 487              	.LVL38:
 555:../Source Files/lpc17xx_uart.c **** 		break;
 488              		.loc 1 555 0
 489 0252 01E0     		b	.L32
 490              	.L64:
 559:../Source Files/lpc17xx_uart.c **** 	case UART_DATABIT_8:
 560:../Source Files/lpc17xx_uart.c **** 	default:
 561:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_LCR_WLEN8;
 491              		.loc 1 561 0
 492 0254 43F00303 		orr	r3, r3, #3
 493              	.LVL39:
 494              	.L32:
 562:../Source Files/lpc17xx_uart.c **** 		break;
 563:../Source Files/lpc17xx_uart.c **** 	}
 564:../Source Files/lpc17xx_uart.c **** 
 565:../Source Files/lpc17xx_uart.c **** 	if (UART_ConfigStruct->Parity == UART_PARITY_NONE)
 495              		.loc 1 565 0
 496 0258 9BF80410 		ldrb	r1, [fp, #4]	@ zero_extendqisi2
 497 025c 79B1     		cbz	r1, .L35
 498              	.LVL40:
 566:../Source Files/lpc17xx_uart.c **** 	{
 567:../Source Files/lpc17xx_uart.c **** 		// Do nothing...
 568:../Source Files/lpc17xx_uart.c **** 	}
 569:../Source Files/lpc17xx_uart.c **** 	else
 570:../Source Files/lpc17xx_uart.c **** 	{
 571:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_LCR_PARITY_EN;
 572:../Source Files/lpc17xx_uart.c **** 		switch (UART_ConfigStruct->Parity)
 499              		.loc 1 572 0
 500 025e 0329     		cmp	r1, #3
 501 0260 08D0     		beq	.L38
 502 0262 0429     		cmp	r1, #4
 503 0264 09D0     		beq	.L39
 504 0266 0229     		cmp	r1, #2
 571:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_LCR_PARITY_EN;
 505              		.loc 1 571 0
 506 0268 14BF     		ite	ne
 507 026a 43F00803 		orrne	r3, r3, #8
 508              	.LVL41:
 573:../Source Files/lpc17xx_uart.c **** 		{
 574:../Source Files/lpc17xx_uart.c **** 		case UART_PARITY_ODD:
 575:../Source Files/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_ODD;
 576:../Source Files/lpc17xx_uart.c **** 			break;
 577:../Source Files/lpc17xx_uart.c **** 
 578:../Source Files/lpc17xx_uart.c **** 		case UART_PARITY_EVEN:
 579:../Source Files/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_EVEN;
 509              		.loc 1 579 0
 510 026e 43F01803 		orreq	r3, r3, #24
 511              	.LVL42:
 580:../Source Files/lpc17xx_uart.c **** 			break;
 512              		.loc 1 580 0
 513 0272 04E0     		b	.L35
 514              	.LVL43:
 515              	.L38:
 581:../Source Files/lpc17xx_uart.c **** 
 582:../Source Files/lpc17xx_uart.c **** 		case UART_PARITY_SP_1:
 583:../Source Files/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_F_1;
 516              		.loc 1 583 0
 517 0274 43F02803 		orr	r3, r3, #40
 518              	.LVL44:
 584:../Source Files/lpc17xx_uart.c **** 			break;
 519              		.loc 1 584 0
 520 0278 01E0     		b	.L35
 521              	.LVL45:
 522              	.L39:
 585:../Source Files/lpc17xx_uart.c **** 
 586:../Source Files/lpc17xx_uart.c **** 		case UART_PARITY_SP_0:
 587:../Source Files/lpc17xx_uart.c **** 			tmp |= UART_LCR_PARITY_F_0;
 523              		.loc 1 587 0
 524 027a 43F03803 		orr	r3, r3, #56
 525              	.LVL46:
 526              	.L35:
 588:../Source Files/lpc17xx_uart.c **** 			break;
 589:../Source Files/lpc17xx_uart.c **** 		default:
 590:../Source Files/lpc17xx_uart.c **** 			break;
 591:../Source Files/lpc17xx_uart.c **** 		}
 592:../Source Files/lpc17xx_uart.c **** 	}
 593:../Source Files/lpc17xx_uart.c **** 
 594:../Source Files/lpc17xx_uart.c **** 	switch (UART_ConfigStruct->Stopbits){
 527              		.loc 1 594 0
 528 027e 9BF80620 		ldrb	r2, [fp, #6]	@ zero_extendqisi2
 529 0282 012A     		cmp	r2, #1
 595:../Source Files/lpc17xx_uart.c **** 	case UART_STOPBIT_2:
 596:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_LCR_STOPBIT_SEL;
 530              		.loc 1 596 0
 531 0284 08BF     		it	eq
 532 0286 43F00403 		orreq	r3, r3, #4
 533              	.LVL47:
 534 028a D8B2     		uxtb	r0, r3
 597:../Source Files/lpc17xx_uart.c **** 		break;
 598:../Source Files/lpc17xx_uart.c **** 	case UART_STOPBIT_1:
 599:../Source Files/lpc17xx_uart.c **** 	default:
 600:../Source Files/lpc17xx_uart.c **** 		// Do no thing
 601:../Source Files/lpc17xx_uart.c **** 		break;
 602:../Source Files/lpc17xx_uart.c **** 	}
 603:../Source Files/lpc17xx_uart.c **** 
 604:../Source Files/lpc17xx_uart.c **** 
 605:../Source Files/lpc17xx_uart.c **** 	// Write back to LCR, configure FIFO and Disable Tx
 606:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) ==  LPC_UART1)
 607:../Source Files/lpc17xx_uart.c **** 	{
 608:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR = (uint8_t)(tmp & UART_LCR_BITMASK);
 535              		.loc 1 608 0
 536 028c 2073     		strb	r0, [r4, #12]
 609:../Source Files/lpc17xx_uart.c **** 	}
 610:../Source Files/lpc17xx_uart.c **** 	else
 611:../Source Files/lpc17xx_uart.c **** 	{
 612:../Source Files/lpc17xx_uart.c **** 		UARTx->LCR = (uint8_t)(tmp & UART_LCR_BITMASK);
 613:../Source Files/lpc17xx_uart.c **** 	}
 614:../Source Files/lpc17xx_uart.c **** }
 537              		.loc 1 614 0
 538 028e 0BB0     		add	sp, sp, #44
 539 0290 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 540              	.L72:
 541              		.align	2
 542              	.L71:
 543 0294 00C00040 		.word	1073790976
 544 0298 00000140 		.word	1073807360
 545 029c 00800940 		.word	1074364416
 546 02a0 00C00940 		.word	1074380800
 547              		.cfi_endproc
 548              	.LFE59:
 550              		.align	1
 551              		.global	UART_ConfigStructInit
 552              		.thumb
 553              		.thumb_func
 555              	UART_ConfigStructInit:
 556              	.LFB61:
 615:../Source Files/lpc17xx_uart.c **** 
 616:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
 617:../Source Files/lpc17xx_uart.c ****  * @brief		De-initializes the UARTx peripheral registers to their
 618:../Source Files/lpc17xx_uart.c ****  *                  default reset values.
 619:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 620:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
 621:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 622:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 623:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 624:../Source Files/lpc17xx_uart.c ****  * @return 		None
 625:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
 626:../Source Files/lpc17xx_uart.c **** void UART_DeInit(LPC_UART_TypeDef* UARTx)
 627:../Source Files/lpc17xx_uart.c **** {
 628:../Source Files/lpc17xx_uart.c **** 	// For debug mode
 629:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 630:../Source Files/lpc17xx_uart.c **** 
 631:../Source Files/lpc17xx_uart.c **** 	UART_TxCmd(UARTx, DISABLE);
 632:../Source Files/lpc17xx_uart.c **** 
 633:../Source Files/lpc17xx_uart.c **** #ifdef _UART0
 634:../Source Files/lpc17xx_uart.c **** 	if (UARTx == (LPC_UART_TypeDef *)LPC_UART0)
 635:../Source Files/lpc17xx_uart.c **** 	{
 636:../Source Files/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 637:../Source Files/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART0, DISABLE);
 638:../Source Files/lpc17xx_uart.c **** 	}
 639:../Source Files/lpc17xx_uart.c **** #endif
 640:../Source Files/lpc17xx_uart.c **** 
 641:../Source Files/lpc17xx_uart.c **** #ifdef _UART1
 642:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 643:../Source Files/lpc17xx_uart.c **** 	{
 644:../Source Files/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 645:../Source Files/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART1, DISABLE);
 646:../Source Files/lpc17xx_uart.c **** 	}
 647:../Source Files/lpc17xx_uart.c **** #endif
 648:../Source Files/lpc17xx_uart.c **** 
 649:../Source Files/lpc17xx_uart.c **** #ifdef _UART2
 650:../Source Files/lpc17xx_uart.c **** 	if (UARTx == LPC_UART2)
 651:../Source Files/lpc17xx_uart.c **** 	{
 652:../Source Files/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 653:../Source Files/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART2, DISABLE);
 654:../Source Files/lpc17xx_uart.c **** 	}
 655:../Source Files/lpc17xx_uart.c **** #endif
 656:../Source Files/lpc17xx_uart.c **** 
 657:../Source Files/lpc17xx_uart.c **** #ifdef _UART3
 658:../Source Files/lpc17xx_uart.c **** 	if (UARTx == LPC_UART3)
 659:../Source Files/lpc17xx_uart.c **** 	{
 660:../Source Files/lpc17xx_uart.c **** 		/* Set up clock and power for UART module */
 661:../Source Files/lpc17xx_uart.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCUART3, DISABLE);
 662:../Source Files/lpc17xx_uart.c **** 	}
 663:../Source Files/lpc17xx_uart.c **** #endif
 664:../Source Files/lpc17xx_uart.c **** }
 665:../Source Files/lpc17xx_uart.c **** 
 666:../Source Files/lpc17xx_uart.c **** /*****************************************************************************//**
 667:../Source Files/lpc17xx_uart.c **** * @brief		Fills each UART_InitStruct member with its default value:
 668:../Source Files/lpc17xx_uart.c **** * 				- 9600 bps
 669:../Source Files/lpc17xx_uart.c **** * 				- 8-bit data
 670:../Source Files/lpc17xx_uart.c **** * 				- 1 Stopbit
 671:../Source Files/lpc17xx_uart.c **** * 				- None Parity
 672:../Source Files/lpc17xx_uart.c **** * @param[in]	UART_InitStruct Pointer to a UART_CFG_Type structure
 673:../Source Files/lpc17xx_uart.c **** *                    which will be initialized.
 674:../Source Files/lpc17xx_uart.c **** * @return		None
 675:../Source Files/lpc17xx_uart.c **** *******************************************************************************/
 676:../Source Files/lpc17xx_uart.c **** void UART_ConfigStructInit(UART_CFG_Type *UART_InitStruct)
 677:../Source Files/lpc17xx_uart.c **** {
 557              		.loc 1 677 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562              	.LVL48:
 678:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Baud_rate = 9600;
 679:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Databits = UART_DATABIT_8;
 680:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Parity = UART_PARITY_NONE;
 563              		.loc 1 680 0
 564 02a4 0022     		movs	r2, #0
 678:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Baud_rate = 9600;
 565              		.loc 1 678 0
 566 02a6 4FF41653 		mov	r3, #9600
 679:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Databits = UART_DATABIT_8;
 567              		.loc 1 679 0
 568 02aa 0321     		movs	r1, #3
 678:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Baud_rate = 9600;
 569              		.loc 1 678 0
 570 02ac 0360     		str	r3, [r0, #0]
 679:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Databits = UART_DATABIT_8;
 571              		.loc 1 679 0
 572 02ae 4171     		strb	r1, [r0, #5]
 573              		.loc 1 680 0
 574 02b0 0271     		strb	r2, [r0, #4]
 681:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Stopbits = UART_STOPBIT_1;
 575              		.loc 1 681 0
 576 02b2 8271     		strb	r2, [r0, #6]
 577 02b4 7047     		bx	lr
 578              		.cfi_endproc
 579              	.LFE61:
 581              		.align	1
 582              		.global	UART_SendByte
 583              		.thumb
 584              		.thumb_func
 586              	UART_SendByte:
 587              	.LFB62:
 682:../Source Files/lpc17xx_uart.c **** }
 683:../Source Files/lpc17xx_uart.c **** 
 684:../Source Files/lpc17xx_uart.c **** /* UART Send/Recieve functions -------------------------------------------------*/
 685:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
 686:../Source Files/lpc17xx_uart.c ****  * @brief		Transmit a single data through UART peripheral
 687:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 688:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
 689:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 690:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 691:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 692:../Source Files/lpc17xx_uart.c ****  * @param[in]	Data	Data to transmit (must be 8-bit long)
 693:../Source Files/lpc17xx_uart.c ****  * @return 		None
 694:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
 695:../Source Files/lpc17xx_uart.c **** void UART_SendByte(LPC_UART_TypeDef* UARTx, uint8_t Data)
 696:../Source Files/lpc17xx_uart.c **** {
 588              		.loc 1 696 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593              	.LVL49:
 697:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 698:../Source Files/lpc17xx_uart.c **** 
 699:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 700:../Source Files/lpc17xx_uart.c **** 	{
 701:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/THR = Data & UART_THR_MASKBIT;
 594              		.loc 1 701 0
 595 02b6 0170     		strb	r1, [r0, #0]
 596 02b8 7047     		bx	lr
 597              		.cfi_endproc
 598              	.LFE62:
 600              		.align	1
 601              		.global	UART_ReceiveByte
 602              		.thumb
 603              		.thumb_func
 605              	UART_ReceiveByte:
 606              	.LFB63:
 702:../Source Files/lpc17xx_uart.c **** 	}
 703:../Source Files/lpc17xx_uart.c **** 	else
 704:../Source Files/lpc17xx_uart.c **** 	{
 705:../Source Files/lpc17xx_uart.c **** 		UARTx->/*RBTHDLR.*/THR = Data & UART_THR_MASKBIT;
 706:../Source Files/lpc17xx_uart.c **** 	}
 707:../Source Files/lpc17xx_uart.c **** 
 708:../Source Files/lpc17xx_uart.c **** }
 709:../Source Files/lpc17xx_uart.c **** 
 710:../Source Files/lpc17xx_uart.c **** 
 711:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
 712:../Source Files/lpc17xx_uart.c ****  * @brief		Receive a single data from UART peripheral
 713:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 714:../Source Files/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
 715:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 716:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 717:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 718:../Source Files/lpc17xx_uart.c ****  * @return 		Data received
 719:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
 720:../Source Files/lpc17xx_uart.c **** uint8_t UART_ReceiveByte(LPC_UART_TypeDef* UARTx)
 721:../Source Files/lpc17xx_uart.c **** {
 607              		.loc 1 721 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612              	.LVL50:
 613 02ba 0349     		ldr	r1, .L80
 614 02bc 4FF00002 		mov	r2, #0
 722:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
 723:../Source Files/lpc17xx_uart.c **** 
 724:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 725:../Source Files/lpc17xx_uart.c **** 	{
 726:../Source Files/lpc17xx_uart.c **** 		EscFlag = 0;                    /* clear EscapeFlag */
 615              		.loc 1 726 0
 616 02c0 0A80     		strh	r2, [r1, #0]	@ movhi
 727:../Source Files/lpc17xx_uart.c **** 		return (((LPC_UART1_TypeDef *)UARTx)->/*RBTHDLR.*/RBR & UART_RBR_MASKBIT);
 617              		.loc 1 727 0
 618 02c2 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
 619              	.LVL51:
 728:../Source Files/lpc17xx_uart.c **** 	}
 729:../Source Files/lpc17xx_uart.c **** 	else
 730:../Source Files/lpc17xx_uart.c **** 	{
 731:../Source Files/lpc17xx_uart.c **** 		EscFlag = 0;                    /* clear EscapeFlag */
 732:../Source Files/lpc17xx_uart.c **** 		return (UARTx->/*RBTHDLR.*/RBR & UART_RBR_MASKBIT);
 733:../Source Files/lpc17xx_uart.c **** 	}
 734:../Source Files/lpc17xx_uart.c **** }
 620              		.loc 1 734 0
 621 02c4 7047     		bx	lr
 622              	.L81:
 623 02c6 00BF     		.align	2
 624              	.L80:
 625 02c8 00000000 		.word	EscFlag
 626              		.cfi_endproc
 627              	.LFE63:
 629              		.align	1
 630              		.global	UART_ForceBreak
 631              		.thumb
 632              		.thumb_func
 634              	UART_ForceBreak:
 635              	.LFB67:
 735:../Source Files/lpc17xx_uart.c **** 
 736:../Source Files/lpc17xx_uart.c **** 
 737:../Source Files/lpc17xx_uart.c **** #ifdef POLLING_MODE
 738:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
 739:../Source Files/lpc17xx_uart.c ****  * @brief		Send a block of data via UART peripheral
 740:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data, should be:
 741:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
 742:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 743:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 744:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 745:../Source Files/lpc17xx_uart.c ****  * @param[in]	txbuf 	Pointer to Transmit buffer
 746:../Source Files/lpc17xx_uart.c ****  * @param[in]	buflen 	Length of Transmit buffer
 747:../Source Files/lpc17xx_uart.c ****  * @param[in] 	flag 	Flag used in  UART transfer, should be
 748:../Source Files/lpc17xx_uart.c ****  * 						NONE_BLOCKING or BLOCKING
 749:../Source Files/lpc17xx_uart.c ****  * @return 		Number of bytes sent.
 750:../Source Files/lpc17xx_uart.c ****  *
 751:../Source Files/lpc17xx_uart.c ****  * Note: when using UART in BLOCKING mode, a time-out condition is used
 752:../Source Files/lpc17xx_uart.c ****  * via defined symbol UART_BLOCKING_TIMEOUT.
 753:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
 754:../Source Files/lpc17xx_uart.c **** uint32_t UART_Send(LPC_UART_TypeDef *UARTx, uint8_t *txbuf,
 755:../Source Files/lpc17xx_uart.c **** 		uint32_t buflen, TRANSFER_BLOCK_Type flag)
 756:../Source Files/lpc17xx_uart.c **** {
 757:../Source Files/lpc17xx_uart.c **** 	uint32_t bToSend, bSent, timeOut, fifo_cnt;
 758:../Source Files/lpc17xx_uart.c **** 	uint8_t *pChar = txbuf;
 759:../Source Files/lpc17xx_uart.c **** 
 760:../Source Files/lpc17xx_uart.c **** 	bToSend = buflen;
 761:../Source Files/lpc17xx_uart.c **** 
 762:../Source Files/lpc17xx_uart.c **** 	// blocking mode
 763:../Source Files/lpc17xx_uart.c **** 	if (flag == BLOCKING) {
 764:../Source Files/lpc17xx_uart.c **** 		bSent = 0;
 765:../Source Files/lpc17xx_uart.c **** 		while (bToSend){
 766:../Source Files/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
 767:../Source Files/lpc17xx_uart.c **** 			// Wait for THR empty with timeout
 768:../Source Files/lpc17xx_uart.c **** 			while (!(UARTx->LSR & UART_LSR_THRE)) {
 769:../Source Files/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 770:../Source Files/lpc17xx_uart.c **** 				timeOut--;
 771:../Source Files/lpc17xx_uart.c **** 			}
 772:../Source Files/lpc17xx_uart.c **** 			// Time out!
 773:../Source Files/lpc17xx_uart.c **** 			if(timeOut == 0) break;
 774:../Source Files/lpc17xx_uart.c **** 			fifo_cnt = UART_TX_FIFO_SIZE;
 775:../Source Files/lpc17xx_uart.c **** 			while (fifo_cnt && bToSend){
 776:../Source Files/lpc17xx_uart.c **** 				UART_SendByte(UARTx, (*pChar++));
 777:../Source Files/lpc17xx_uart.c **** 				fifo_cnt--;
 778:../Source Files/lpc17xx_uart.c **** 				bToSend--;
 779:../Source Files/lpc17xx_uart.c **** 				bSent++;
 780:../Source Files/lpc17xx_uart.c **** 			}
 781:../Source Files/lpc17xx_uart.c **** 		}
 782:../Source Files/lpc17xx_uart.c **** 	}
 783:../Source Files/lpc17xx_uart.c **** 	// None blocking mode
 784:../Source Files/lpc17xx_uart.c **** 	else {
 785:../Source Files/lpc17xx_uart.c **** 		bSent = 0;
 786:../Source Files/lpc17xx_uart.c **** 		while (bToSend) {
 787:../Source Files/lpc17xx_uart.c **** 			if (!(UARTx->LSR & UART_LSR_THRE)){
 788:../Source Files/lpc17xx_uart.c **** 				break;
 789:../Source Files/lpc17xx_uart.c **** 			}
 790:../Source Files/lpc17xx_uart.c **** 			fifo_cnt = UART_TX_FIFO_SIZE;
 791:../Source Files/lpc17xx_uart.c **** 			while (fifo_cnt && bToSend) {
 792:../Source Files/lpc17xx_uart.c **** 				UART_SendByte(UARTx, (*pChar++));
 793:../Source Files/lpc17xx_uart.c **** 				bToSend--;
 794:../Source Files/lpc17xx_uart.c **** 				fifo_cnt--;
 795:../Source Files/lpc17xx_uart.c **** 				bSent++;
 796:../Source Files/lpc17xx_uart.c **** 			}
 797:../Source Files/lpc17xx_uart.c **** 		}
 798:../Source Files/lpc17xx_uart.c **** 	}
 799:../Source Files/lpc17xx_uart.c **** 	return bSent;
 800:../Source Files/lpc17xx_uart.c **** }
 801:../Source Files/lpc17xx_uart.c **** 
 802:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
 803:../Source Files/lpc17xx_uart.c ****  * @brief		Receive a block of data via UART peripheral
 804:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
 805:../Source Files/lpc17xx_uart.c ****  * 				should be:
 806:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
 807:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 808:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 809:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 810:../Source Files/lpc17xx_uart.c ****  * @param[out]	rxbuf 	Pointer to Received buffer
 811:../Source Files/lpc17xx_uart.c ****  * @param[in]	buflen 	Length of Received buffer
 812:../Source Files/lpc17xx_uart.c ****  * @param[in] 	flag 	Flag mode, should be NONE_BLOCKING or BLOCKING
 813:../Source Files/lpc17xx_uart.c **** 
 814:../Source Files/lpc17xx_uart.c ****  * @return 		Number of bytes received
 815:../Source Files/lpc17xx_uart.c ****  *
 816:../Source Files/lpc17xx_uart.c ****  * Note: when using UART in BLOCKING mode, a time-out condition is used
 817:../Source Files/lpc17xx_uart.c ****  * via defined symbol UART_BLOCKING_TIMEOUT.
 818:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
 819:../Source Files/lpc17xx_uart.c **** uint32_t UART_Receive(LPC_UART_TypeDef *UARTx, uint8_t *rxbuf, \
 820:../Source Files/lpc17xx_uart.c **** 		uint32_t buflen, TRANSFER_BLOCK_Type flag)
 821:../Source Files/lpc17xx_uart.c **** {
 822:../Source Files/lpc17xx_uart.c **** 	uint32_t bToRecv, bRecv, timeOut;
 823:../Source Files/lpc17xx_uart.c **** 	uint8_t *pChar = rxbuf;
 824:../Source Files/lpc17xx_uart.c **** 
 825:../Source Files/lpc17xx_uart.c **** 	bToRecv = buflen;
 826:../Source Files/lpc17xx_uart.c **** 
 827:../Source Files/lpc17xx_uart.c **** 	// Blocking mode
 828:../Source Files/lpc17xx_uart.c **** 	if (flag == BLOCKING)
 829:../Source Files/lpc17xx_uart.c **** 	{
 830:../Source Files/lpc17xx_uart.c **** 		bRecv = 0;
 831:../Source Files/lpc17xx_uart.c **** 		while (bToRecv)
 832:../Source Files/lpc17xx_uart.c **** 		{
 833:../Source Files/lpc17xx_uart.c **** 			while (!(UARTx->LSR & UART_LSR_RDR))
 834:../Source Files/lpc17xx_uart.c **** 			{
 835:../Source Files/lpc17xx_uart.c **** 				//Infinite Loop
 836:../Source Files/lpc17xx_uart.c **** 			}
 837:../Source Files/lpc17xx_uart.c **** 			// Get data from the buffer
 838:../Source Files/lpc17xx_uart.c **** 			(*pChar++) = UART_ReceiveByte(UARTx);
 839:../Source Files/lpc17xx_uart.c **** 			bToRecv--;
 840:../Source Files/lpc17xx_uart.c **** 			bRecv++;
 841:../Source Files/lpc17xx_uart.c **** 		}
 842:../Source Files/lpc17xx_uart.c **** 	}
 843:../Source Files/lpc17xx_uart.c **** 	else if (flag == TIME_BLOCKING)
 844:../Source Files/lpc17xx_uart.c **** 	{
 845:../Source Files/lpc17xx_uart.c **** 		bRecv = 0;
 846:../Source Files/lpc17xx_uart.c **** 		while (bToRecv)
 847:../Source Files/lpc17xx_uart.c **** 		{
 848:../Source Files/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
 849:../Source Files/lpc17xx_uart.c **** 			while (!(UARTx->LSR & UART_LSR_RDR))
 850:../Source Files/lpc17xx_uart.c **** 			{
 851:../Source Files/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 852:../Source Files/lpc17xx_uart.c **** 				timeOut--;
 853:../Source Files/lpc17xx_uart.c **** 			}
 854:../Source Files/lpc17xx_uart.c **** 			// Time out!
 855:../Source Files/lpc17xx_uart.c **** 			if(timeOut == 0) break;
 856:../Source Files/lpc17xx_uart.c **** 			// Get data from the buffer
 857:../Source Files/lpc17xx_uart.c **** 			(*pChar++) = UART_ReceiveByte(UARTx);
 858:../Source Files/lpc17xx_uart.c **** 			bToRecv--;
 859:../Source Files/lpc17xx_uart.c **** 			bRecv++;
 860:../Source Files/lpc17xx_uart.c **** 		}
 861:../Source Files/lpc17xx_uart.c **** 	}
 862:../Source Files/lpc17xx_uart.c **** 	// None blocking mode
 863:../Source Files/lpc17xx_uart.c **** 	else
 864:../Source Files/lpc17xx_uart.c **** 	{
 865:../Source Files/lpc17xx_uart.c **** 		bRecv = 0;
 866:../Source Files/lpc17xx_uart.c **** 		while (bToRecv)
 867:../Source Files/lpc17xx_uart.c **** 		{
 868:../Source Files/lpc17xx_uart.c **** 			if (!(UARTx->LSR & UART_LSR_RDR))
 869:../Source Files/lpc17xx_uart.c **** 			{
 870:../Source Files/lpc17xx_uart.c **** 				break;
 871:../Source Files/lpc17xx_uart.c **** 			}
 872:../Source Files/lpc17xx_uart.c **** 			else
 873:../Source Files/lpc17xx_uart.c **** 			{
 874:../Source Files/lpc17xx_uart.c **** 				(*pChar++) = UART_ReceiveByte(UARTx);
 875:../Source Files/lpc17xx_uart.c **** 				bRecv++;
 876:../Source Files/lpc17xx_uart.c **** 				bToRecv--;
 877:../Source Files/lpc17xx_uart.c **** 			}
 878:../Source Files/lpc17xx_uart.c **** 		}
 879:../Source Files/lpc17xx_uart.c **** 	}
 880:../Source Files/lpc17xx_uart.c **** 	return bRecv;
 881:../Source Files/lpc17xx_uart.c **** }
 882:../Source Files/lpc17xx_uart.c **** #endif
 883:../Source Files/lpc17xx_uart.c **** 
 884:../Source Files/lpc17xx_uart.c **** 
 885:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
 886:../Source Files/lpc17xx_uart.c ****  * @brief	 The getche() function returns the next character read from the
 887:../Source Files/lpc17xx_uart.c ****              console and echoes that character to the screen.Characters from
 888:../Source Files/lpc17xx_uart.c ****              space(20hex) to (7E) are echo to the screen.The getche() function
 889:../Source Files/lpc17xx_uart.c ****              is not define by the ANSI C standard.
 890:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 891:../Source Files/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
 892:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 893:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 894:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 895:../Source Files/lpc17xx_uart.c ****  * @return 		return with valid character or nothing
 896:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
 897:../Source Files/lpc17xx_uart.c **** int16 getche(LPC_UART_TypeDef *UARTx)
 898:../Source Files/lpc17xx_uart.c **** {
 899:../Source Files/lpc17xx_uart.c **** 	uint8_t key[1];
 900:../Source Files/lpc17xx_uart.c **** 	uint32_t idx, len;
 901:../Source Files/lpc17xx_uart.c **** 	while(1)
 902:../Source Files/lpc17xx_uart.c **** 	{
 903:../Source Files/lpc17xx_uart.c **** 	    if(UARTx == LPC_UART0)
 904:../Source Files/lpc17xx_uart.c **** 	    {
 905:../Source Files/lpc17xx_uart.c **** 		    len = UART_Receive(UARTx, key, 1, BLOCKING);
 906:../Source Files/lpc17xx_uart.c **** 		    /* Got some data */
 907:../Source Files/lpc17xx_uart.c **** 		    idx = 0;
 908:../Source Files/lpc17xx_uart.c **** 		    while (idx < len)
 909:../Source Files/lpc17xx_uart.c **** 		    {
 910:../Source Files/lpc17xx_uart.c **** 		        if ( key[idx] == In_CR )
 911:../Source Files/lpc17xx_uart.c **** 	            {
 912:../Source Files/lpc17xx_uart.c **** 			        return(key[idx]);
 913:../Source Files/lpc17xx_uart.c **** 	            }
 914:../Source Files/lpc17xx_uart.c **** 	            else if ( key[idx] == In_DELETE || key[idx] == In_BACKSPACE )
 915:../Source Files/lpc17xx_uart.c **** 	            {
 916:../Source Files/lpc17xx_uart.c **** 	    	        return(key[idx]);
 917:../Source Files/lpc17xx_uart.c **** 	            }
 918:../Source Files/lpc17xx_uart.c **** 	            else if ( key[idx] == In_ESC )
 919:../Source Files/lpc17xx_uart.c **** 	            {
 920:../Source Files/lpc17xx_uart.c **** 	    	        EscFlag = 1;
 921:../Source Files/lpc17xx_uart.c **** 	    	        return ( In_ESC );
 922:../Source Files/lpc17xx_uart.c **** 	            }
 923:../Source Files/lpc17xx_uart.c **** 	            else if ( key[idx] >= ' ' )
 924:../Source Files/lpc17xx_uart.c **** 	            {
 925:../Source Files/lpc17xx_uart.c **** 	    	        return (key[idx]);
 926:../Source Files/lpc17xx_uart.c **** 	            }
 927:../Source Files/lpc17xx_uart.c **** 	            else
 928:../Source Files/lpc17xx_uart.c **** 	            {
 929:../Source Files/lpc17xx_uart.c **** 	    	        UART_Send(UARTx,&key[idx],1,BLOCKING);
 930:../Source Files/lpc17xx_uart.c **** 	            }
 931:../Source Files/lpc17xx_uart.c **** 		        idx++;
 932:../Source Files/lpc17xx_uart.c **** 		    }
 933:../Source Files/lpc17xx_uart.c **** 	    }
 934:../Source Files/lpc17xx_uart.c **** 	    else if(UARTx == LPC_UART2)
 935:../Source Files/lpc17xx_uart.c **** 	    {
 936:../Source Files/lpc17xx_uart.c **** 		    len = UART_Receive(UARTx, key, 1, BLOCKING);
 937:../Source Files/lpc17xx_uart.c **** 		    /* Got some data */
 938:../Source Files/lpc17xx_uart.c **** 		    idx = 0;
 939:../Source Files/lpc17xx_uart.c **** 		    while (idx < len)
 940:../Source Files/lpc17xx_uart.c **** 		    {
 941:../Source Files/lpc17xx_uart.c **** 		    	return(key[idx]);
 942:../Source Files/lpc17xx_uart.c **** 		    }
 943:../Source Files/lpc17xx_uart.c **** 	    }
 944:../Source Files/lpc17xx_uart.c **** 	}
 945:../Source Files/lpc17xx_uart.c ****     return(0);
 946:../Source Files/lpc17xx_uart.c **** }
 947:../Source Files/lpc17xx_uart.c **** 
 948:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
 949:../Source Files/lpc17xx_uart.c ****  * @brief	 One line editor
 950:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
 951:../Source Files/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
 952:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
 953:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
 954:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
 955:../Source Files/lpc17xx_uart.c ****  * @param[out]	s[] Pointer to Received buffer
 956:../Source Files/lpc17xx_uart.c ****  * @param[in]   lim Length of Received buffer
 957:../Source Files/lpc17xx_uart.c ****  * @return 		return character count
 958:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
 959:../Source Files/lpc17xx_uart.c **** uchar get_line(LPC_UART_TypeDef *UARTx, schar s[], uchar lim)
 960:../Source Files/lpc17xx_uart.c **** {
 961:../Source Files/lpc17xx_uart.c **** 	schar kb;                 /* input character */
 962:../Source Files/lpc17xx_uart.c **** 
 963:../Source Files/lpc17xx_uart.c **** 	uchar pointer=0;          /* Pointer in buffer */
 964:../Source Files/lpc17xx_uart.c **** 	uchar count=0;            /* character count */
 965:../Source Files/lpc17xx_uart.c ****     uint8_t temp;
 966:../Source Files/lpc17xx_uart.c **** 
 967:../Source Files/lpc17xx_uart.c **** 	while(1)
 968:../Source Files/lpc17xx_uart.c **** 	{
 969:../Source Files/lpc17xx_uart.c **** 		kb = getche(UARTx);
 970:../Source Files/lpc17xx_uart.c **** 
 971:../Source Files/lpc17xx_uart.c **** 		if (kb == In_ESC)                /* if ESCAPE pressed then exit */
 972:../Source Files/lpc17xx_uart.c **** 		{
 973:../Source Files/lpc17xx_uart.c **** 			return (kb);
 974:../Source Files/lpc17xx_uart.c **** 		}
 975:../Source Files/lpc17xx_uart.c **** 
 976:../Source Files/lpc17xx_uart.c **** 		else if (kb == In_CR)            /* CARRIAGE return ? */
 977:../Source Files/lpc17xx_uart.c **** 		{
 978:../Source Files/lpc17xx_uart.c **** 			s[pointer] = '\0';             /* put null char on last position */
 979:../Source Files/lpc17xx_uart.c **** 			break;                         /* yes, exit from this loop */
 980:../Source Files/lpc17xx_uart.c **** 		}
 981:../Source Files/lpc17xx_uart.c **** 
 982:../Source Files/lpc17xx_uart.c **** 		else if(kb == In_DELETE || kb == In_BACKSPACE)
 983:../Source Files/lpc17xx_uart.c **** 		{
 984:../Source Files/lpc17xx_uart.c **** 			if(pointer==0)                 /* any characters entered */
 985:../Source Files/lpc17xx_uart.c **** 			{
 986:../Source Files/lpc17xx_uart.c **** 				continue;                    /* no, so get another character */
 987:../Source Files/lpc17xx_uart.c **** 			}
 988:../Source Files/lpc17xx_uart.c **** 
 989:../Source Files/lpc17xx_uart.c **** 			temp = Out_BACKSPACE;
 990:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&temp,1,BLOCKING);   /* go back one position */
 991:../Source Files/lpc17xx_uart.c **** 			temp = Out_SPACE;
 992:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&temp,1,BLOCKING);   /* erase char */
 993:../Source Files/lpc17xx_uart.c **** 			temp = Out_BACKSPACE;
 994:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&temp,1,BLOCKING);   /* go back one more position */
 995:../Source Files/lpc17xx_uart.c **** 
 996:../Source Files/lpc17xx_uart.c **** 			pointer--;                     /* decrement pointer */
 997:../Source Files/lpc17xx_uart.c **** 			count--;                       /* decrement character count */
 998:../Source Files/lpc17xx_uart.c **** 
 999:../Source Files/lpc17xx_uart.c **** 			continue;
1000:../Source Files/lpc17xx_uart.c **** 		}
1001:../Source Files/lpc17xx_uart.c **** 
1002:../Source Files/lpc17xx_uart.c **** 		else if(pointer < lim)
1003:../Source Files/lpc17xx_uart.c **** 		{
1004:../Source Files/lpc17xx_uart.c **** 			s[pointer] = kb;               /* save character and increment pointer */
1005:../Source Files/lpc17xx_uart.c **** 			pointer++;
1006:../Source Files/lpc17xx_uart.c **** 			count++;                       /* increment count */
1007:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&kb,1,BLOCKING);       /* echo character */
1008:../Source Files/lpc17xx_uart.c **** 
1009:../Source Files/lpc17xx_uart.c **** 			continue;                      /* and get some more */
1010:../Source Files/lpc17xx_uart.c **** 		}
1011:../Source Files/lpc17xx_uart.c **** 		else
1012:../Source Files/lpc17xx_uart.c **** 		{
1013:../Source Files/lpc17xx_uart.c **** 			temp = In_BELL;
1014:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&temp,1,BLOCKING);   /* ring the bell */
1015:../Source Files/lpc17xx_uart.c **** 		}
1016:../Source Files/lpc17xx_uart.c **** 	}
1017:../Source Files/lpc17xx_uart.c **** 	return(count);
1018:../Source Files/lpc17xx_uart.c **** }
1019:../Source Files/lpc17xx_uart.c **** 
1020:../Source Files/lpc17xx_uart.c **** 
1021:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1022:../Source Files/lpc17xx_uart.c ****  * @brief		Modified version of Standard Printf statement
1023:../Source Files/lpc17xx_uart.c ****  *
1024:../Source Files/lpc17xx_uart.c ****  * @par			Supports standard formats "%c %s %d %x"
1025:../Source Files/lpc17xx_uart.c ****  * 				"%d" and "%x" requires non-standard qualifiers,"%dfn, %xfn":-
1026:../Source Files/lpc17xx_uart.c ****  *		        f supplies a fill character
1027:../Source Files/lpc17xx_uart.c ****  *		        n supplies a field width
1028:../Source Files/lpc17xx_uart.c ****  *
1029:../Source Files/lpc17xx_uart.c ****  *		        ENABLE RTC_SUPPORT in lpc17xx_uart.h for RTC Features
1030:../Source Files/lpc17xx_uart.c ****  *
1031:../Source Files/lpc17xx_uart.c ****  *				Supports custom formats  "%b  %u %t %y %a"
1032:../Source Files/lpc17xx_uart.c ****  *				"%b"	prints a 2 digit BCD value with leading zero
1033:../Source Files/lpc17xx_uart.c ****  *				"%u"	prints the 16 bit unsigned integer in hex format
1034:../Source Files/lpc17xx_uart.c ****  *				"%t"    prints current time
1035:../Source Files/lpc17xx_uart.c ****  *				"%y"    prints current date
1036:../Source Files/lpc17xx_uart.c ****  *				"%a"    prints alarm time and date
1037:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
1038:../Source Files/lpc17xx_uart.c ****  * 				should be:
1039:../Source Files/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
1040:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1041:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1042:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1043:../Source Files/lpc17xx_uart.c ****  * @param[in] 	*format Character format
1044:../Source Files/lpc17xx_uart.c ****  * @param[in]   ...  <multiple argument>
1045:../Source Files/lpc17xx_uart.c ****  *
1046:../Source Files/lpc17xx_uart.c ****  * @return 		return with valid character or nothing
1047:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1048:../Source Files/lpc17xx_uart.c **** int16 printf(LPC_UART_TypeDef *UARTx, const char *format, ...)
1049:../Source Files/lpc17xx_uart.c **** {
1050:../Source Files/lpc17xx_uart.c **** 	uchar hex[]= "0123456789ABCDEF";
1051:../Source Files/lpc17xx_uart.c **** 	unsigned int width_dec[10] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
1052:../Source Files/lpc17xx_uart.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
1053:../Source Files/lpc17xx_uart.c **** 	unsigned int temp;
1054:../Source Files/lpc17xx_uart.c **** 
1055:../Source Files/lpc17xx_uart.c **** 	schar format_flag, fill_char;
1056:../Source Files/lpc17xx_uart.c **** 	ulong32 u_val, div_val;
1057:../Source Files/lpc17xx_uart.c **** 	uint16 base;
1058:../Source Files/lpc17xx_uart.c **** 
1059:../Source Files/lpc17xx_uart.c **** 	schar *ptr;
1060:../Source Files/lpc17xx_uart.c **** #ifdef RTC_MODE
1061:../Source Files/lpc17xx_uart.c **** 	RTC_TIME_Type FullTime;
1062:../Source Files/lpc17xx_uart.c **** #endif
1063:../Source Files/lpc17xx_uart.c **** 	va_list ap;
1064:../Source Files/lpc17xx_uart.c **** 	va_start(ap, format);
1065:../Source Files/lpc17xx_uart.c **** 
1066:../Source Files/lpc17xx_uart.c **** 	for(;;)
1067:../Source Files/lpc17xx_uart.c **** 	{
1068:../Source Files/lpc17xx_uart.c **** 		while((format_flag = *format++) != '%')      /* until full format string read */
1069:../Source Files/lpc17xx_uart.c **** 		{
1070:../Source Files/lpc17xx_uart.c **** 			if(!format_flag)
1071:../Source Files/lpc17xx_uart.c **** 			{                        /* until '%' or '\0' */
1072:../Source Files/lpc17xx_uart.c **** 				return (0);
1073:../Source Files/lpc17xx_uart.c **** 			}
1074:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&format_flag,1,BLOCKING);
1075:../Source Files/lpc17xx_uart.c **** 		}
1076:../Source Files/lpc17xx_uart.c **** 
1077:../Source Files/lpc17xx_uart.c **** 		switch(format_flag = *format++)
1078:../Source Files/lpc17xx_uart.c **** 		{
1079:../Source Files/lpc17xx_uart.c **** 			case 'c':
1080:../Source Files/lpc17xx_uart.c **** 				format_flag = va_arg(ap, int);
1081:../Source Files/lpc17xx_uart.c **** 				UART_Send(UARTx,&format_flag,1,BLOCKING);
1082:../Source Files/lpc17xx_uart.c **** 
1083:../Source Files/lpc17xx_uart.c **** 				continue;
1084:../Source Files/lpc17xx_uart.c **** 
1085:../Source Files/lpc17xx_uart.c **** 			default:
1086:../Source Files/lpc17xx_uart.c **** 				UART_Send(UARTx,&format_flag,1,BLOCKING);
1087:../Source Files/lpc17xx_uart.c **** 
1088:../Source Files/lpc17xx_uart.c ****         		continue;
1089:../Source Files/lpc17xx_uart.c **** 
1090:../Source Files/lpc17xx_uart.c **** 			case 'b':
1091:../Source Files/lpc17xx_uart.c **** 				format_flag = va_arg(ap,int);
1092:../Source Files/lpc17xx_uart.c **** 				UART_Send(UARTx,&(hex[(uint16)format_flag >> 4]),1,BLOCKING);
1093:../Source Files/lpc17xx_uart.c **** 				UART_Send(UARTx,&(hex[(uint16)format_flag & 0x0F]),1,BLOCKING);
1094:../Source Files/lpc17xx_uart.c **** 
1095:../Source Files/lpc17xx_uart.c **** 				continue;
1096:../Source Files/lpc17xx_uart.c **** 
1097:../Source Files/lpc17xx_uart.c **** 			case 's':
1098:../Source Files/lpc17xx_uart.c **** 				ptr = va_arg(ap, schar *);
1099:../Source Files/lpc17xx_uart.c **** 				while(*ptr)
1100:../Source Files/lpc17xx_uart.c **** 				{
1101:../Source Files/lpc17xx_uart.c **** 					UART_Send(UARTx,&(*ptr++),1,BLOCKING);
1102:../Source Files/lpc17xx_uart.c **** 				}
1103:../Source Files/lpc17xx_uart.c **** 
1104:../Source Files/lpc17xx_uart.c **** 				continue;
1105:../Source Files/lpc17xx_uart.c **** #ifdef RTC_MODE
1106:../Source Files/lpc17xx_uart.c **** 			case 't':
1107:../Source Files/lpc17xx_uart.c **** 				RTC_GetFullTime (LPC_RTC, &FullTime);
1108:../Source Files/lpc17xx_uart.c **** 			    printf(UARTx, "%d02:%d02:%d02",FullTime.HOUR,FullTime.MIN,FullTime.SEC);
1109:../Source Files/lpc17xx_uart.c **** 
1110:../Source Files/lpc17xx_uart.c **** 				continue;
1111:../Source Files/lpc17xx_uart.c **** 
1112:../Source Files/lpc17xx_uart.c **** 			case 'y':
1113:../Source Files/lpc17xx_uart.c **** 				RTC_GetFullTime (LPC_RTC, &FullTime);
1114:../Source Files/lpc17xx_uart.c **** 			    printf(UARTx, "%d02/%d02/%d04",FullTime.DOM,FullTime.MONTH,FullTime.YEAR);
1115:../Source Files/lpc17xx_uart.c **** 
1116:../Source Files/lpc17xx_uart.c **** 				continue;
1117:../Source Files/lpc17xx_uart.c **** 
1118:../Source Files/lpc17xx_uart.c **** 			case 'a':
1119:../Source Files/lpc17xx_uart.c **** 				RTC_GetFullAlarmTime (LPC_RTC, &FullTime);
1120:../Source Files/lpc17xx_uart.c **** 				printf(UARTx, "Time: %d02:%d02:%d02",FullTime.HOUR,FullTime.MIN,FullTime.SEC);
1121:../Source Files/lpc17xx_uart.c **** 				printf(UARTx, "  Date: %d02/%d02/%d04",FullTime.DOM,FullTime.MONTH,FullTime.YEAR);
1122:../Source Files/lpc17xx_uart.c **** 
1123:../Source Files/lpc17xx_uart.c **** 				continue;
1124:../Source Files/lpc17xx_uart.c **** #endif
1125:../Source Files/lpc17xx_uart.c **** 			case 'u':
1126:../Source Files/lpc17xx_uart.c **** 				base = 16;
1127:../Source Files/lpc17xx_uart.c **** 				div_val = 0x100000;
1128:../Source Files/lpc17xx_uart.c **** 				u_val = va_arg(ap, uint32_t);
1129:../Source Files/lpc17xx_uart.c **** 				do
1130:../Source Files/lpc17xx_uart.c **** 				{
1131:../Source Files/lpc17xx_uart.c **** 					UART_Send(UARTx,&(hex[u_val/div_val]),1,BLOCKING);
1132:../Source Files/lpc17xx_uart.c **** 					u_val %= div_val;
1133:../Source Files/lpc17xx_uart.c **** 					div_val /= base;
1134:../Source Files/lpc17xx_uart.c **** 				}while(div_val);
1135:../Source Files/lpc17xx_uart.c **** 
1136:../Source Files/lpc17xx_uart.c **** 				continue;
1137:../Source Files/lpc17xx_uart.c **** 
1138:../Source Files/lpc17xx_uart.c **** 			case 'd':
1139:../Source Files/lpc17xx_uart.c **** 				base = 10;
1140:../Source Files/lpc17xx_uart.c **** 				fill_char = *format++;
1141:../Source Files/lpc17xx_uart.c **** 				format_flag = ( *format++ ) - '1';
1142:../Source Files/lpc17xx_uart.c **** 				div_val = width_dec[format_flag];
1143:../Source Files/lpc17xx_uart.c **** 				u_val = va_arg(ap,int);
1144:../Source Files/lpc17xx_uart.c **** 
1145:../Source Files/lpc17xx_uart.c **** 				if(((int)u_val) < 0)
1146:../Source Files/lpc17xx_uart.c **** 				{
1147:../Source Files/lpc17xx_uart.c **** 					u_val = - u_val;    /* applied to unsigned type, result still unsigned */
1148:../Source Files/lpc17xx_uart.c **** 					temp = '-';
1149:../Source Files/lpc17xx_uart.c **** 				    UART_Send(UARTx,&temp,1,BLOCKING);
1150:../Source Files/lpc17xx_uart.c **** 				}
1151:../Source Files/lpc17xx_uart.c **** 
1152:../Source Files/lpc17xx_uart.c **** 				goto  CONVERSION_LOOP;
1153:../Source Files/lpc17xx_uart.c **** 
1154:../Source Files/lpc17xx_uart.c **** 			case 'x':
1155:../Source Files/lpc17xx_uart.c **** 				base = 16;
1156:../Source Files/lpc17xx_uart.c **** 				fill_char = *format++;
1157:../Source Files/lpc17xx_uart.c **** 				format_flag = (*format++) - '1';
1158:../Source Files/lpc17xx_uart.c **** 				div_val = width_hex[format_flag];
1159:../Source Files/lpc17xx_uart.c **** 				u_val = va_arg(ap, int);
1160:../Source Files/lpc17xx_uart.c **** 
1161:../Source Files/lpc17xx_uart.c **** 				CONVERSION_LOOP:
1162:../Source Files/lpc17xx_uart.c **** 				while(div_val > 1 && div_val > u_val)
1163:../Source Files/lpc17xx_uart.c **** 				{
1164:../Source Files/lpc17xx_uart.c **** 					div_val /= base;
1165:../Source Files/lpc17xx_uart.c **** 					UART_Send(UARTx,&fill_char,1,BLOCKING);
1166:../Source Files/lpc17xx_uart.c **** 				}
1167:../Source Files/lpc17xx_uart.c **** 
1168:../Source Files/lpc17xx_uart.c **** 				do
1169:../Source Files/lpc17xx_uart.c **** 				{
1170:../Source Files/lpc17xx_uart.c **** 					UART_Send(UARTx,&(hex[u_val/div_val]),1,BLOCKING);
1171:../Source Files/lpc17xx_uart.c **** 					u_val %= div_val;
1172:../Source Files/lpc17xx_uart.c **** 					div_val /= base;
1173:../Source Files/lpc17xx_uart.c **** 				}while(div_val);
1174:../Source Files/lpc17xx_uart.c **** 		}/* end of switch statement */
1175:../Source Files/lpc17xx_uart.c **** 	}
1176:../Source Files/lpc17xx_uart.c **** 	return(0);
1177:../Source Files/lpc17xx_uart.c **** }
1178:../Source Files/lpc17xx_uart.c **** 
1179:../Source Files/lpc17xx_uart.c **** 
1180:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1181:../Source Files/lpc17xx_uart.c ****  * @brief		Force BREAK character on UART line, output pin UARTx TXD is
1182:../Source Files/lpc17xx_uart.c **** 				forced to logic 0.
1183:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
1184:../Source Files/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
1185:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1186:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1187:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1188:../Source Files/lpc17xx_uart.c ****  * @return 		None
1189:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1190:../Source Files/lpc17xx_uart.c **** void UART_ForceBreak(LPC_UART_TypeDef* UARTx)
1191:../Source Files/lpc17xx_uart.c **** {
 636              		.loc 1 1191 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 641              	.LVL52:
1192:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1193:../Source Files/lpc17xx_uart.c **** 
1194:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1195:../Source Files/lpc17xx_uart.c **** 	{
1196:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_BREAK_EN;
 642              		.loc 1 1196 0
 643 02cc 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 644 02ce 41F04002 		orr	r2, r1, #64
 645 02d2 0273     		strb	r2, [r0, #12]
 646 02d4 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE67:
 650              		.align	1
 651              		.global	UART_IntConfig
 652              		.thumb
 653              		.thumb_func
 655              	UART_IntConfig:
 656              	.LFB68:
1197:../Source Files/lpc17xx_uart.c **** 	}
1198:../Source Files/lpc17xx_uart.c **** 	else
1199:../Source Files/lpc17xx_uart.c **** 	{
1200:../Source Files/lpc17xx_uart.c **** 		UARTx->LCR |= UART_LCR_BREAK_EN;
1201:../Source Files/lpc17xx_uart.c **** 	}
1202:../Source Files/lpc17xx_uart.c **** }
1203:../Source Files/lpc17xx_uart.c **** 
1204:../Source Files/lpc17xx_uart.c **** 
1205:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
1206:../Source Files/lpc17xx_uart.c ****  * @brief 		Enable or disable specified UART interrupt.
1207:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be
1208:../Source Files/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
1209:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1210:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1211:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1212:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTIntCfg	Specifies the interrupt flag,
1213:../Source Files/lpc17xx_uart.c ****  * 				should be one of the following:
1214:../Source Files/lpc17xx_uart.c **** 				- UART_INTCFG_RBR 	:  RBR Interrupt enable
1215:../Source Files/lpc17xx_uart.c **** 				- UART_INTCFG_THRE 	:  THR Interrupt enable
1216:../Source Files/lpc17xx_uart.c **** 				- UART_INTCFG_RLS 	:  RX line status interrupt enable
1217:../Source Files/lpc17xx_uart.c **** 				- UART1_INTCFG_MS	:  Modem status interrupt enable (UART1 only)
1218:../Source Files/lpc17xx_uart.c **** 				- UART1_INTCFG_CTS	:  CTS1 signal transition interrupt enable (UART1 only)
1219:../Source Files/lpc17xx_uart.c **** 				- UART_INTCFG_ABEO 	:  Enables the end of auto-baud interrupt
1220:../Source Files/lpc17xx_uart.c **** 				- UART_INTCFG_ABTO 	:  Enables the auto-baud time-out interrupt
1221:../Source Files/lpc17xx_uart.c ****  * @param[in]	NewState New state of specified UART interrupt type,
1222:../Source Files/lpc17xx_uart.c ****  * 				should be:
1223:../Source Files/lpc17xx_uart.c ****  * 				- ENALBE: Enable this UART interrupt type.
1224:../Source Files/lpc17xx_uart.c **** * 				- DISALBE: Disable this UART interrupt type.
1225:../Source Files/lpc17xx_uart.c ****  * @return 		None
1226:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
1227:../Source Files/lpc17xx_uart.c **** void UART_IntConfig(LPC_UART_TypeDef *UARTx, UART_INT_Type UARTIntCfg, FunctionalState NewState)
1228:../Source Files/lpc17xx_uart.c **** {
 657              		.loc 1 1228 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              	.LVL53:
 662 02d6 10B5     		push	{r4, lr}
 663              	.LCFI2:
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 4, -8
 666              		.cfi_offset 14, -4
1229:../Source Files/lpc17xx_uart.c **** 	uint32_t tmp;
1230:../Source Files/lpc17xx_uart.c **** 
1231:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1232:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1233:../Source Files/lpc17xx_uart.c **** 
1234:../Source Files/lpc17xx_uart.c **** 	switch(UARTIntCfg){
 667              		.loc 1 1234 0
 668 02d8 0629     		cmp	r1, #6
 669 02da 14D8     		bhi	.L87
 670 02dc DFE801F0 		tbb	[pc, r1]
 671              	.L94:
 672 02e0 12       		.byte	(.L99-.L94)/2
 673 02e1 04       		.byte	(.L88-.L94)/2
 674 02e2 06       		.byte	(.L89-.L94)/2
 675 02e3 08       		.byte	(.L90-.L94)/2
 676 02e4 0A       		.byte	(.L91-.L94)/2
 677 02e5 0C       		.byte	(.L92-.L94)/2
 678 02e6 0F       		.byte	(.L93-.L94)/2
 679 02e7 00       		.align	1
 680              	.L88:
 681              	.LVL54:
1235:../Source Files/lpc17xx_uart.c **** 		case UART_INTCFG_RBR:
1236:../Source Files/lpc17xx_uart.c **** 			tmp = UART_IER_RBRINT_EN;
1237:../Source Files/lpc17xx_uart.c **** 			break;
1238:../Source Files/lpc17xx_uart.c **** 		case UART_INTCFG_THRE:
1239:../Source Files/lpc17xx_uart.c **** 			tmp = UART_IER_THREINT_EN;
 682              		.loc 1 1239 0
 683 02e8 0223     		movs	r3, #2
1240:../Source Files/lpc17xx_uart.c **** 			break;
 684              		.loc 1 1240 0
 685 02ea 0CE0     		b	.L87
 686              	.LVL55:
 687              	.L89:
1241:../Source Files/lpc17xx_uart.c **** 		case UART_INTCFG_RLS:
1242:../Source Files/lpc17xx_uart.c **** 			tmp = UART_IER_RLSINT_EN;
 688              		.loc 1 1242 0
 689 02ec 0423     		movs	r3, #4
1243:../Source Files/lpc17xx_uart.c **** 			break;
 690              		.loc 1 1243 0
 691 02ee 0AE0     		b	.L87
 692              	.LVL56:
 693              	.L90:
1244:../Source Files/lpc17xx_uart.c **** 		case UART1_INTCFG_MS:
1245:../Source Files/lpc17xx_uart.c **** 			tmp = UART1_IER_MSINT_EN;
 694              		.loc 1 1245 0
 695 02f0 0823     		movs	r3, #8
1246:../Source Files/lpc17xx_uart.c **** 			break;
 696              		.loc 1 1246 0
 697 02f2 08E0     		b	.L87
 698              	.LVL57:
 699              	.L91:
1247:../Source Files/lpc17xx_uart.c **** 		case UART1_INTCFG_CTS:
1248:../Source Files/lpc17xx_uart.c **** 			tmp = UART1_IER_CTSINT_EN;
 700              		.loc 1 1248 0
 701 02f4 8023     		movs	r3, #128
1249:../Source Files/lpc17xx_uart.c **** 			break;
 702              		.loc 1 1249 0
 703 02f6 06E0     		b	.L87
 704              	.LVL58:
 705              	.L92:
1250:../Source Files/lpc17xx_uart.c **** 		case UART_INTCFG_ABEO:
1251:../Source Files/lpc17xx_uart.c **** 			tmp = UART_IER_ABEOINT_EN;
 706              		.loc 1 1251 0
 707 02f8 4FF48073 		mov	r3, #256
1252:../Source Files/lpc17xx_uart.c **** 			break;
 708              		.loc 1 1252 0
 709 02fc 03E0     		b	.L87
 710              	.LVL59:
 711              	.L93:
1253:../Source Files/lpc17xx_uart.c **** 		case UART_INTCFG_ABTO:
1254:../Source Files/lpc17xx_uart.c **** 			tmp = UART_IER_ABTOINT_EN;
 712              		.loc 1 1254 0
 713 02fe 4FF40073 		mov	r3, #512
1255:../Source Files/lpc17xx_uart.c **** 			break;
 714              		.loc 1 1255 0
 715 0302 00E0     		b	.L87
 716              	.LVL60:
 717              	.L99:
1236:../Source Files/lpc17xx_uart.c **** 			tmp = UART_IER_RBRINT_EN;
 718              		.loc 1 1236 0
 719 0304 0123     		movs	r3, #1
 720              	.L87:
 721              	.LVL61:
1256:../Source Files/lpc17xx_uart.c **** 	}
1257:../Source Files/lpc17xx_uart.c **** 
1258:../Source Files/lpc17xx_uart.c **** 	if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
1259:../Source Files/lpc17xx_uart.c **** 	{
1260:../Source Files/lpc17xx_uart.c **** 		CHECK_PARAM((PARAM_UART_INTCFG(UARTIntCfg)) || (PARAM_UART1_INTCFG(UARTIntCfg)));
1261:../Source Files/lpc17xx_uart.c **** 	}
1262:../Source Files/lpc17xx_uart.c **** 	else
1263:../Source Files/lpc17xx_uart.c **** 	{
1264:../Source Files/lpc17xx_uart.c **** 		CHECK_PARAM(PARAM_UART_INTCFG(UARTIntCfg));
1265:../Source Files/lpc17xx_uart.c **** 	}
1266:../Source Files/lpc17xx_uart.c **** 
1267:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 722              		.loc 1 1267 0
 723 0306 012A     		cmp	r2, #1
 724 0308 0B4A     		ldr	r2, .L101
 725              	.LVL62:
 726 030a 03D1     		bne	.L95
1268:../Source Files/lpc17xx_uart.c **** 	{
1269:../Source Files/lpc17xx_uart.c **** 		if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
1270:../Source Files/lpc17xx_uart.c **** 		{
1271:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER |= tmp;
 727              		.loc 1 1271 0
 728 030c 4468     		ldr	r4, [r0, #4]
 729 030e 2343     		orrs	r3, r3, r4
 730              	.LVL63:
 731 0310 4360     		str	r3, [r0, #4]
 732 0312 10BD     		pop	{r4, pc}
 733              	.LVL64:
 734              	.L95:
1272:../Source Files/lpc17xx_uart.c **** 		}
1273:../Source Files/lpc17xx_uart.c **** 		else
1274:../Source Files/lpc17xx_uart.c **** 		{
1275:../Source Files/lpc17xx_uart.c **** 			UARTx->/*DLIER.*/IER |= tmp;
1276:../Source Files/lpc17xx_uart.c **** 		}
1277:../Source Files/lpc17xx_uart.c **** 	}
1278:../Source Files/lpc17xx_uart.c **** 	else
1279:../Source Files/lpc17xx_uart.c **** 	{
1280:../Source Files/lpc17xx_uart.c **** 		if ((LPC_UART1_TypeDef *) UARTx == LPC_UART1)
 735              		.loc 1 1280 0
 736 0314 9042     		cmp	r0, r2
 737 0316 6FEA0303 		mvn	r3, r3
 738              	.LVL65:
 739 031a 05D1     		bne	.L98
1281:../Source Files/lpc17xx_uart.c **** 		{
1282:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->/*DLIER.*/IER &= (~tmp) & UART1_IER_BITMASK;
 740              		.loc 1 1282 0
 741 031c 4268     		ldr	r2, [r0, #4]
 742 031e 40F28F31 		movw	r1, #911
 743              	.LVL66:
 744 0322 1140     		ands	r1, r1, r2
 745 0324 0B40     		ands	r3, r3, r1
 746              	.LVL67:
 747 0326 04E0     		b	.L100
 748              	.LVL68:
 749              	.L98:
1283:../Source Files/lpc17xx_uart.c **** 		}
1284:../Source Files/lpc17xx_uart.c **** 		else
1285:../Source Files/lpc17xx_uart.c **** 		{
1286:../Source Files/lpc17xx_uart.c **** 			UARTx->/*DLIER.*/IER &= (~tmp) & UART_IER_BITMASK;
 750              		.loc 1 1286 0
 751 0328 4168     		ldr	r1, [r0, #4]
 752              	.LVL69:
 753 032a 40F20734 		movw	r4, #775
 754 032e 0C40     		ands	r4, r4, r1
 755 0330 2340     		ands	r3, r3, r4
 756              	.LVL70:
 757              	.L100:
 758 0332 4360     		str	r3, [r0, #4]
 759 0334 10BD     		pop	{r4, pc}
 760              	.L102:
 761 0336 00BF     		.align	2
 762              	.L101:
 763 0338 00000140 		.word	1073807360
 764              		.cfi_endproc
 765              	.LFE68:
 767              		.align	1
 768              		.global	UART_GetLineStatus
 769              		.thumb
 770              		.thumb_func
 772              	UART_GetLineStatus:
 773              	.LFB69:
1287:../Source Files/lpc17xx_uart.c **** 		}
1288:../Source Files/lpc17xx_uart.c **** 	}
1289:../Source Files/lpc17xx_uart.c **** }
1290:../Source Files/lpc17xx_uart.c **** 
1291:../Source Files/lpc17xx_uart.c **** 
1292:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
1293:../Source Files/lpc17xx_uart.c ****  * @brief 		Get current value of Line Status register in UART peripheral.
1294:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
1295:../Source Files/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
1296:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1297:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1298:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1299:../Source Files/lpc17xx_uart.c ****  * @return		Current value of Line Status register in UART peripheral.
1300:../Source Files/lpc17xx_uart.c ****  * Note:	The return value of this function must be ANDed with each member in
1301:../Source Files/lpc17xx_uart.c ****  * 			UART_LS_Type enumeration to determine current flag status
1302:../Source Files/lpc17xx_uart.c ****  * 			corresponding to each Line status type. Because some flags in
1303:../Source Files/lpc17xx_uart.c ****  * 			Line Status register will be cleared after reading, the next reading
1304:../Source Files/lpc17xx_uart.c ****  * 			Line Status register could not be correct. So this function used to
1305:../Source Files/lpc17xx_uart.c ****  * 			read Line status register in one time only, then the return value
1306:../Source Files/lpc17xx_uart.c ****  * 			used to check all flags.
1307:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
1308:../Source Files/lpc17xx_uart.c **** uint8_t UART_GetLineStatus(LPC_UART_TypeDef* UARTx)
1309:../Source Files/lpc17xx_uart.c **** {
 774              		.loc 1 1309 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 779              	.LVL71:
1310:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1311:../Source Files/lpc17xx_uart.c **** 
1312:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1313:../Source Files/lpc17xx_uart.c **** 	{
1314:../Source Files/lpc17xx_uart.c **** 		return ((((LPC_UART1_TypeDef *)LPC_UART1)->LSR) & UART_LSR_BITMASK);
 780              		.loc 1 1314 0
 781 033c 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 782              	.LVL72:
1315:../Source Files/lpc17xx_uart.c **** 	}
1316:../Source Files/lpc17xx_uart.c **** 	else
1317:../Source Files/lpc17xx_uart.c **** 	{
1318:../Source Files/lpc17xx_uart.c **** 		return ((UARTx->LSR) & UART_LSR_BITMASK);
1319:../Source Files/lpc17xx_uart.c **** 	}
1320:../Source Files/lpc17xx_uart.c **** }
 783              		.loc 1 1320 0
 784 033e 7047     		bx	lr
 785              		.cfi_endproc
 786              	.LFE69:
 788              		.align	1
 789              		.global	UART_GetIntId
 790              		.thumb
 791              		.thumb_func
 793              	UART_GetIntId:
 794              	.LFB70:
1321:../Source Files/lpc17xx_uart.c **** 
1322:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
1323:../Source Files/lpc17xx_uart.c ****  * @brief 		Get Interrupt Identification value
1324:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
1325:../Source Files/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
1326:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1327:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1328:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1329:../Source Files/lpc17xx_uart.c ****  * @return		Current value of UART UIIR register in UART peripheral.
1330:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
1331:../Source Files/lpc17xx_uart.c **** uint32_t UART_GetIntId(LPC_UART_TypeDef* UARTx)
1332:../Source Files/lpc17xx_uart.c **** {
 795              		.loc 1 1332 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800              	.LVL73:
1333:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1334:../Source Files/lpc17xx_uart.c **** 	return (UARTx->IIR & 0x03CF);
 801              		.loc 1 1334 0
 802 0340 8368     		ldr	r3, [r0, #8]
1335:../Source Files/lpc17xx_uart.c **** }
 803              		.loc 1 1335 0
 804 0342 40F2CF30 		movw	r0, #975
 805              	.LVL74:
 806 0346 1840     		ands	r0, r0, r3
 807 0348 7047     		bx	lr
 808              		.cfi_endproc
 809              	.LFE70:
 811              		.align	1
 812              		.global	UART_CheckBusy
 813              		.thumb
 814              		.thumb_func
 816              	UART_CheckBusy:
 817              	.LFB71:
1336:../Source Files/lpc17xx_uart.c **** 
1337:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1338:../Source Files/lpc17xx_uart.c ****  * @brief		Check whether if UART is busy or not
1339:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
1340:../Source Files/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
1341:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1342:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1343:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1344:../Source Files/lpc17xx_uart.c ****  * @return		RESET if UART is not busy, otherwise return SET.
1345:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1346:../Source Files/lpc17xx_uart.c **** FlagStatus UART_CheckBusy(LPC_UART_TypeDef *UARTx)
1347:../Source Files/lpc17xx_uart.c **** {
 818              		.loc 1 1347 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823              	.LVL75:
1348:../Source Files/lpc17xx_uart.c **** 	if (UARTx->LSR & UART_LSR_TEMT){
 824              		.loc 1 1348 0
 825 034a 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 826              	.LVL76:
 827 034c 80F04001 		eor	r1, r0, #64
1349:../Source Files/lpc17xx_uart.c **** 		return RESET;
1350:../Source Files/lpc17xx_uart.c **** 	} else {
1351:../Source Files/lpc17xx_uart.c **** 		return SET;
1352:../Source Files/lpc17xx_uart.c **** 	}
1353:../Source Files/lpc17xx_uart.c **** }
 828              		.loc 1 1353 0
 829 0350 C1F38010 		ubfx	r0, r1, #6, #1
 830 0354 7047     		bx	lr
 831              		.cfi_endproc
 832              	.LFE71:
 834              		.align	1
 835              		.global	UART_FIFOConfig
 836              		.thumb
 837              		.thumb_func
 839              	UART_FIFOConfig:
 840              	.LFB72:
1354:../Source Files/lpc17xx_uart.c **** 
1355:../Source Files/lpc17xx_uart.c **** 
1356:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1357:../Source Files/lpc17xx_uart.c ****  * @brief		Configure FIFO function on selected UART peripheral
1358:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
1359:../Source Files/lpc17xx_uart.c ****  *  			- LPC_UART0: UART0 peripheral
1360:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1361:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1362:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1363:../Source Files/lpc17xx_uart.c ****  * @param[in]	FIFOCfg	Pointer to a UART_FIFO_CFG_Type Structure that
1364:../Source Files/lpc17xx_uart.c ****  * 						contains specified information about FIFO configuration
1365:../Source Files/lpc17xx_uart.c ****  * @return 		none
1366:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1367:../Source Files/lpc17xx_uart.c **** void UART_FIFOConfig(LPC_UART_TypeDef *UARTx, UART_FIFO_CFG_Type *FIFOCfg)
1368:../Source Files/lpc17xx_uart.c **** {
 841              		.loc 1 1368 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		@ link register save eliminated.
 846              	.LVL77:
1369:../Source Files/lpc17xx_uart.c **** 	uint8_t tmp = 0;
1370:../Source Files/lpc17xx_uart.c **** 
1371:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1372:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_FIFO_LEVEL(FIFOCfg->FIFO_Level));
1373:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_DMAMode));
1374:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_ResetRxBuf));
1375:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(FIFOCfg->FIFO_ResetTxBuf));
1376:../Source Files/lpc17xx_uart.c **** 
1377:../Source Files/lpc17xx_uart.c **** 	tmp |= UART_FCR_FIFO_EN;
1378:../Source Files/lpc17xx_uart.c **** 	switch (FIFOCfg->FIFO_Level){
 847              		.loc 1 1378 0
 848 0356 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 849 0358 022B     		cmp	r3, #2
 850 035a 9CBF     		itt	ls
 851 035c 0B4A     		ldrls	r2, .L116
 852 035e D35C     		ldrbls	r3, [r2, r3]	@ zero_extendqisi2
1379:../Source Files/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV0:
1380:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV0;
1381:../Source Files/lpc17xx_uart.c **** 		break;
1382:../Source Files/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV1:
1383:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV1;
1384:../Source Files/lpc17xx_uart.c **** 		break;
1385:../Source Files/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV2:
1386:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV2;
1387:../Source Files/lpc17xx_uart.c **** 		break;
1388:../Source Files/lpc17xx_uart.c **** 	case UART_FIFO_TRGLEV3:
1389:../Source Files/lpc17xx_uart.c **** 	default:
1390:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_FCR_TRG_LEV3;
1391:../Source Files/lpc17xx_uart.c **** 		break;
1392:../Source Files/lpc17xx_uart.c **** 	}
1393:../Source Files/lpc17xx_uart.c **** 
1394:../Source Files/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_ResetTxBuf == ENABLE)
 853              		.loc 1 1394 0
 854 0360 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
1378:../Source Files/lpc17xx_uart.c **** 	switch (FIFOCfg->FIFO_Level){
 855              		.loc 1 1378 0
 856 0362 88BF     		it	hi
 857 0364 C123     		movhi	r3, #193
 858              	.LVL78:
 859              		.loc 1 1394 0
 860 0366 012A     		cmp	r2, #1
1395:../Source Files/lpc17xx_uart.c **** 	{
1396:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_FCR_TX_RS;
1397:../Source Files/lpc17xx_uart.c **** 	}
1398:../Source Files/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_ResetRxBuf == ENABLE)
 861              		.loc 1 1398 0
 862 0368 0A78     		ldrb	r2, [r1, #0]	@ zero_extendqisi2
1399:../Source Files/lpc17xx_uart.c **** 	{
1400:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_FCR_RX_RS;
1401:../Source Files/lpc17xx_uart.c **** 	}
1402:../Source Files/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_DMAMode == ENABLE)
 863              		.loc 1 1402 0
 864 036a 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 865              	.LVL79:
1396:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_FCR_TX_RS;
 866              		.loc 1 1396 0
 867 036c 08BF     		it	eq
 868 036e 43F00403 		orreq	r3, r3, #4
 869              	.LVL80:
1398:../Source Files/lpc17xx_uart.c **** 	if (FIFOCfg->FIFO_ResetRxBuf == ENABLE)
 870              		.loc 1 1398 0
 871 0372 012A     		cmp	r2, #1
1400:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_FCR_RX_RS;
 872              		.loc 1 1400 0
 873 0374 08BF     		it	eq
 874 0376 43F00203 		orreq	r3, r3, #2
 875              	.LVL81:
 876              		.loc 1 1402 0
 877 037a 0129     		cmp	r1, #1
1403:../Source Files/lpc17xx_uart.c **** 	{
1404:../Source Files/lpc17xx_uart.c **** 		tmp |= UART_FCR_DMAMODE_SEL;
 878              		.loc 1 1404 0
 879 037c 08BF     		it	eq
 880 037e 43F00803 		orreq	r3, r3, #8
 881              	.LVL82:
 882 0382 23F03003 		bic	r3, r3, #48
 883              	.LVL83:
1405:../Source Files/lpc17xx_uart.c **** 	}
1406:../Source Files/lpc17xx_uart.c **** 
1407:../Source Files/lpc17xx_uart.c **** 
1408:../Source Files/lpc17xx_uart.c **** 	//write to FIFO control register
1409:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1410:../Source Files/lpc17xx_uart.c **** 	{
1411:../Source Files/lpc17xx_uart.c **** 		((LPC_UART1_TypeDef *)UARTx)->/*IIFCR.*/FCR = tmp & UART_FCR_BITMASK;
 884              		.loc 1 1411 0
 885 0386 D9B2     		uxtb	r1, r3
 886 0388 0172     		strb	r1, [r0, #8]
 887 038a 7047     		bx	lr
 888              	.L117:
 889              		.align	2
 890              	.L116:
 891 038c 00000000 		.word	.LANCHOR0
 892              		.cfi_endproc
 893              	.LFE72:
 895              		.align	1
 896              		.global	UART_Config
 897              		.thumb
 898              		.thumb_func
 900              	UART_Config:
 901              	.LFB58:
 271:../Source Files/lpc17xx_uart.c **** {
 902              		.loc 1 271 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 24
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              	.LVL84:
 907 0390 70B5     		push	{r4, r5, r6, lr}
 908              	.LCFI3:
 909              		.cfi_def_cfa_offset 16
 910              		.cfi_offset 4, -16
 911              		.cfi_offset 5, -12
 912              		.cfi_offset 6, -8
 913              		.cfi_offset 14, -4
 297:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART0)
 914              		.loc 1 297 0
 915 0392 474B     		ldr	r3, .L128
 271:../Source Files/lpc17xx_uart.c **** {
 916              		.loc 1 271 0
 917 0394 86B0     		sub	sp, sp, #24
 918              	.LCFI4:
 919              		.cfi_def_cfa_offset 40
 297:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART0)
 920              		.loc 1 297 0
 921 0396 9842     		cmp	r0, r3
 271:../Source Files/lpc17xx_uart.c **** {
 922              		.loc 1 271 0
 923 0398 0446     		mov	r4, r0
 924 039a 0E46     		mov	r6, r1
 297:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART0)
 925              		.loc 1 297 0
 926 039c 12D1     		bne	.L119
 305:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 2;
 927              		.loc 1 305 0
 928 039e 0225     		movs	r5, #2
 303:../Source Files/lpc17xx_uart.c **** 		PinCfg.OpenDrain = 0;
 929              		.loc 1 303 0
 930 03a0 0020     		movs	r0, #0
 931              	.LVL85:
 305:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 2;
 932              		.loc 1 305 0
 933 03a2 8DF80950 		strb	r5, [sp, #9]
 306:../Source Files/lpc17xx_uart.c **** 		PinCfg.Portnum = 0;
 934              		.loc 1 306 0
 935 03a6 06AD     		add	r5, sp, #24
 936 03a8 05F8100D 		strb	r0, [r5, #-16]!
 302:../Source Files/lpc17xx_uart.c **** 		PinCfg.Funcnum = 1;
 937              		.loc 1 302 0
 938 03ac 0123     		movs	r3, #1
 303:../Source Files/lpc17xx_uart.c **** 		PinCfg.OpenDrain = 0;
 939              		.loc 1 303 0
 940 03ae 8DF80C00 		strb	r0, [sp, #12]
 304:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinmode = 0;
 941              		.loc 1 304 0
 942 03b2 8DF80B00 		strb	r0, [sp, #11]
 307:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 943              		.loc 1 307 0
 944 03b6 2846     		mov	r0, r5
 302:../Source Files/lpc17xx_uart.c **** 		PinCfg.Funcnum = 1;
 945              		.loc 1 302 0
 946 03b8 8DF80A30 		strb	r3, [sp, #10]
 307:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 947              		.loc 1 307 0
 948 03bc FFF7FEFF 		bl	PINSEL_ConfigPin
 949              	.LVL86:
 308:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 3;
 950              		.loc 1 308 0
 951 03c0 0320     		movs	r0, #3
 952 03c2 29E0     		b	.L126
 953              	.LVL87:
 954              	.L119:
 312:../Source Files/lpc17xx_uart.c **** 	else if((LPC_UART1_TypeDef *)UARTx == LPC_UART1)
 955              		.loc 1 312 0
 956 03c4 3B48     		ldr	r0, .L128+4
 957              	.LVL88:
 958 03c6 8442     		cmp	r4, r0
 959 03c8 11D1     		bne	.L121
 317:../Source Files/lpc17xx_uart.c **** 		PinCfg.Funcnum = 2;
 960              		.loc 1 317 0
 961 03ca 0221     		movs	r1, #2
 962              	.LVL89:
 321:../Source Files/lpc17xx_uart.c **** 		PinCfg.Portnum = 2;
 963              		.loc 1 321 0
 964 03cc 06AD     		add	r5, sp, #24
 965 03ce 05F8101D 		strb	r1, [r5, #-16]!
 318:../Source Files/lpc17xx_uart.c **** 		PinCfg.OpenDrain = 0;
 966              		.loc 1 318 0
 967 03d2 0022     		movs	r2, #0
 322:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 968              		.loc 1 322 0
 969 03d4 2846     		mov	r0, r5
 317:../Source Files/lpc17xx_uart.c **** 		PinCfg.Funcnum = 2;
 970              		.loc 1 317 0
 971 03d6 8DF80A10 		strb	r1, [sp, #10]
 318:../Source Files/lpc17xx_uart.c **** 		PinCfg.OpenDrain = 0;
 972              		.loc 1 318 0
 973 03da 8DF80C20 		strb	r2, [sp, #12]
 319:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinmode = 0;
 974              		.loc 1 319 0
 975 03de 8DF80B20 		strb	r2, [sp, #11]
 320:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 0;
 976              		.loc 1 320 0
 977 03e2 8DF80920 		strb	r2, [sp, #9]
 322:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 978              		.loc 1 322 0
 979 03e6 FFF7FEFF 		bl	PINSEL_ConfigPin
 980              	.LVL90:
 323:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 1;
 981              		.loc 1 323 0
 982 03ea 0120     		movs	r0, #1
 983 03ec 14E0     		b	.L126
 984              	.LVL91:
 985              	.L121:
 327:../Source Files/lpc17xx_uart.c **** 	else if(UARTx == LPC_UART2)
 986              		.loc 1 327 0
 987 03ee 3249     		ldr	r1, .L128+8
 988              	.LVL92:
 989 03f0 8C42     		cmp	r4, r1
 990 03f2 16D1     		bne	.L120
 335:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 10;
 991              		.loc 1 335 0
 992 03f4 0A25     		movs	r5, #10
 333:../Source Files/lpc17xx_uart.c **** 		PinCfg.OpenDrain = 0;
 993              		.loc 1 333 0
 994 03f6 0023     		movs	r3, #0
 335:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 10;
 995              		.loc 1 335 0
 996 03f8 8DF80950 		strb	r5, [sp, #9]
 336:../Source Files/lpc17xx_uart.c **** 		PinCfg.Portnum = 0;
 997              		.loc 1 336 0
 998 03fc 06AD     		add	r5, sp, #24
 999 03fe 05F8103D 		strb	r3, [r5, #-16]!
 332:../Source Files/lpc17xx_uart.c **** 		PinCfg.Funcnum = 1;
 1000              		.loc 1 332 0
 1001 0402 0122     		movs	r2, #1
 337:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 1002              		.loc 1 337 0
 1003 0404 2846     		mov	r0, r5
 332:../Source Files/lpc17xx_uart.c **** 		PinCfg.Funcnum = 1;
 1004              		.loc 1 332 0
 1005 0406 8DF80A20 		strb	r2, [sp, #10]
 333:../Source Files/lpc17xx_uart.c **** 		PinCfg.OpenDrain = 0;
 1006              		.loc 1 333 0
 1007 040a 8DF80C30 		strb	r3, [sp, #12]
 334:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinmode = 0;
 1008              		.loc 1 334 0
 1009 040e 8DF80B30 		strb	r3, [sp, #11]
 337:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 1010              		.loc 1 337 0
 1011 0412 FFF7FEFF 		bl	PINSEL_ConfigPin
 1012              	.LVL93:
 338:../Source Files/lpc17xx_uart.c **** 		PinCfg.Pinnum = 11;
 1013              		.loc 1 338 0
 1014 0416 0B20     		movs	r0, #11
 1015              	.L126:
 1016 0418 8DF80900 		strb	r0, [sp, #9]
 339:../Source Files/lpc17xx_uart.c **** 		PINSEL_ConfigPin(&PinCfg);
 1017              		.loc 1 339 0
 1018 041c 2846     		mov	r0, r5
 1019 041e FFF7FEFF 		bl	PINSEL_ConfigPin
 1020              	.LVL94:
 1021              	.L120:
 1022              	.LBB37:
 1023              	.LBB38:
 679:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Databits = UART_DATABIT_8;
 1024              		.loc 1 679 0
 1025 0422 0321     		movs	r1, #3
 1026 0424 8DF81510 		strb	r1, [sp, #21]
 1027              	.LBE38:
 1028              	.LBE37:
 350:../Source Files/lpc17xx_uart.c **** 	UARTConfigStruct.Baud_rate = baud;
 1029              		.loc 1 350 0
 1030 0428 06A9     		add	r1, sp, #24
 1031              	.LBB41:
 1032              	.LBB39:
 680:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Parity = UART_PARITY_NONE;
 1033              		.loc 1 680 0
 1034 042a 0025     		movs	r5, #0
 1035              	.LBE39:
 1036              	.LBE41:
 350:../Source Files/lpc17xx_uart.c **** 	UARTConfigStruct.Baud_rate = baud;
 1037              		.loc 1 350 0
 1038 042c 41F8086D 		str	r6, [r1, #-8]!
 353:../Source Files/lpc17xx_uart.c **** 	UART_Init(UARTx, &UARTConfigStruct);
 1039              		.loc 1 353 0
 1040 0430 2046     		mov	r0, r4
 1041              	.LBB42:
 1042              	.LBB40:
 680:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Parity = UART_PARITY_NONE;
 1043              		.loc 1 680 0
 1044 0432 8DF81450 		strb	r5, [sp, #20]
 681:../Source Files/lpc17xx_uart.c **** 	UART_InitStruct->Stopbits = UART_STOPBIT_1;
 1045              		.loc 1 681 0
 1046 0436 8DF81650 		strb	r5, [sp, #22]
 1047              	.LBE40:
 1048              	.LBE42:
 353:../Source Files/lpc17xx_uart.c **** 	UART_Init(UARTx, &UARTConfigStruct);
 1049              		.loc 1 353 0
 1050 043a FFF7FEFF 		bl	UART_Init
 1051              	.LVL95:
 1052              	.LBB43:
 1053              	.LBB44:
1412:../Source Files/lpc17xx_uart.c **** 	}
1413:../Source Files/lpc17xx_uart.c **** 	else
1414:../Source Files/lpc17xx_uart.c **** 	{
1415:../Source Files/lpc17xx_uart.c **** 		UARTx->/*IIFCR.*/FCR = tmp & UART_FCR_BITMASK;
1416:../Source Files/lpc17xx_uart.c **** 	}
1417:../Source Files/lpc17xx_uart.c **** }
1418:../Source Files/lpc17xx_uart.c **** 
1419:../Source Files/lpc17xx_uart.c **** /*****************************************************************************//**
1420:../Source Files/lpc17xx_uart.c **** * @brief		Fills each UART_FIFOInitStruct member with its default value:
1421:../Source Files/lpc17xx_uart.c **** * 				- FIFO_DMAMode = DISABLE
1422:../Source Files/lpc17xx_uart.c **** * 				- FIFO_Level = UART_FIFO_TRGLEV0
1423:../Source Files/lpc17xx_uart.c **** * 				- FIFO_ResetRxBuf = ENABLE
1424:../Source Files/lpc17xx_uart.c **** * 				- FIFO_ResetTxBuf = ENABLE
1425:../Source Files/lpc17xx_uart.c **** * 				- FIFO_State = ENABLE
1426:../Source Files/lpc17xx_uart.c **** 
1427:../Source Files/lpc17xx_uart.c **** * @param[in]	UART_FIFOInitStruct Pointer to a UART_FIFO_CFG_Type structure
1428:../Source Files/lpc17xx_uart.c **** *                    which will be initialized.
1429:../Source Files/lpc17xx_uart.c **** * @return		None
1430:../Source Files/lpc17xx_uart.c **** *******************************************************************************/
1431:../Source Files/lpc17xx_uart.c **** void UART_FIFOConfigStructInit(UART_FIFO_CFG_Type *UART_FIFOInitStruct)
1432:../Source Files/lpc17xx_uart.c **** {
1433:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_DMAMode = DISABLE;
1434:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_Level = UART_FIFO_TRGLEV0;
1435:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_ResetRxBuf = ENABLE;
 1054              		.loc 1 1435 0
 1055 043e 0122     		movs	r2, #1
 1056              	.LBE44:
 1057              	.LBE43:
 365:../Source Files/lpc17xx_uart.c **** 	UART_FIFOConfig(UARTx, &UARTFIFOConfigStruct);
 1058              		.loc 1 365 0
 1059 0440 2046     		mov	r0, r4
 1060 0442 01A9     		add	r1, sp, #4
 1061              	.LVL96:
 1062              	.LBB46:
 1063              	.LBB45:
 1064              		.loc 1 1435 0
 1065 0444 8DF80420 		strb	r2, [sp, #4]
1436:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_ResetTxBuf = ENABLE;
 1066              		.loc 1 1436 0
 1067 0448 8DF80520 		strb	r2, [sp, #5]
1433:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_DMAMode = DISABLE;
 1068              		.loc 1 1433 0
 1069 044c 8DF80650 		strb	r5, [sp, #6]
1434:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_Level = UART_FIFO_TRGLEV0;
 1070              		.loc 1 1434 0
 1071 0450 8DF80750 		strb	r5, [sp, #7]
 1072              	.LBE45:
 1073              	.LBE46:
 365:../Source Files/lpc17xx_uart.c **** 	UART_FIFOConfig(UARTx, &UARTFIFOConfigStruct);
 1074              		.loc 1 365 0
 1075 0454 FFF7FEFF 		bl	UART_FIFOConfig
 1076              	.LVL97:
 1077              	.LBB47:
 1078              	.LBB48:
 1079              	.LBB49:
1437:../Source Files/lpc17xx_uart.c **** }
1438:../Source Files/lpc17xx_uart.c **** 
1439:../Source Files/lpc17xx_uart.c **** 
1440:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1441:../Source Files/lpc17xx_uart.c ****  * @brief		Start/Stop Auto Baudrate activity
1442:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be
1443:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
1444:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1445:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1446:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1447:../Source Files/lpc17xx_uart.c ****  * @param[in]	ABConfigStruct	A pointer to UART_AB_CFG_Type structure that
1448:../Source Files/lpc17xx_uart.c ****  * 								contains specified information about UART
1449:../Source Files/lpc17xx_uart.c ****  * 								auto baudrate configuration
1450:../Source Files/lpc17xx_uart.c ****  * @param[in]	NewState New State of Auto baudrate activity, should be:
1451:../Source Files/lpc17xx_uart.c ****  * 				- ENABLE: Start this activity
1452:../Source Files/lpc17xx_uart.c ****  *				- DISABLE: Stop this activity
1453:../Source Files/lpc17xx_uart.c ****  * Note:		Auto-baudrate mode enable bit will be cleared once this mode
1454:../Source Files/lpc17xx_uart.c ****  * 				completed.
1455:../Source Files/lpc17xx_uart.c ****  * @return 		none
1456:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1457:../Source Files/lpc17xx_uart.c **** void UART_ABCmd(LPC_UART_TypeDef *UARTx, UART_AB_CFG_Type *ABConfigStruct, \
1458:../Source Files/lpc17xx_uart.c **** 				FunctionalState NewState)
1459:../Source Files/lpc17xx_uart.c **** {
1460:../Source Files/lpc17xx_uart.c **** 	uint32_t tmp;
1461:../Source Files/lpc17xx_uart.c **** 
1462:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1463:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1464:../Source Files/lpc17xx_uart.c **** 
1465:../Source Files/lpc17xx_uart.c **** 	tmp = 0;
1466:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE) {
1467:../Source Files/lpc17xx_uart.c **** 		if (ABConfigStruct->ABMode == UART_AUTOBAUD_MODE1){
1468:../Source Files/lpc17xx_uart.c **** 			tmp |= UART_ACR_MODE;
1469:../Source Files/lpc17xx_uart.c **** 		}
1470:../Source Files/lpc17xx_uart.c **** 		if (ABConfigStruct->AutoRestart == ENABLE){
1471:../Source Files/lpc17xx_uart.c **** 			tmp |= UART_ACR_AUTO_RESTART;
1472:../Source Files/lpc17xx_uart.c **** 		}
1473:../Source Files/lpc17xx_uart.c **** 	}
1474:../Source Files/lpc17xx_uart.c **** 
1475:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1476:../Source Files/lpc17xx_uart.c **** 	{
1477:../Source Files/lpc17xx_uart.c **** 		if (NewState == ENABLE)
1478:../Source Files/lpc17xx_uart.c **** 		{
1479:../Source Files/lpc17xx_uart.c **** 			// Clear DLL and DLM value
1480:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
1481:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->DLL = 0;
1482:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->DLM = 0;
1483:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR &= ~UART_LCR_DLAB_EN;
1484:../Source Files/lpc17xx_uart.c **** 			// FDR value must be reset to default value
1485:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->FDR = 0x10;
1486:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->ACR = UART_ACR_START | tmp;
1487:../Source Files/lpc17xx_uart.c **** 		}
1488:../Source Files/lpc17xx_uart.c **** 		else
1489:../Source Files/lpc17xx_uart.c **** 		{
1490:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->ACR = 0;
1491:../Source Files/lpc17xx_uart.c **** 		}
1492:../Source Files/lpc17xx_uart.c **** 	}
1493:../Source Files/lpc17xx_uart.c **** 	else
1494:../Source Files/lpc17xx_uart.c **** 	{
1495:../Source Files/lpc17xx_uart.c **** 		if (NewState == ENABLE)
1496:../Source Files/lpc17xx_uart.c **** 		{
1497:../Source Files/lpc17xx_uart.c **** 			// Clear DLL and DLM value
1498:../Source Files/lpc17xx_uart.c **** 			UARTx->LCR |= UART_LCR_DLAB_EN;
1499:../Source Files/lpc17xx_uart.c **** 			UARTx->DLL = 0;
1500:../Source Files/lpc17xx_uart.c **** 			UARTx->DLM = 0;
1501:../Source Files/lpc17xx_uart.c **** 			UARTx->LCR &= ~UART_LCR_DLAB_EN;
1502:../Source Files/lpc17xx_uart.c **** 			// FDR value must be reset to default value
1503:../Source Files/lpc17xx_uart.c **** 			UARTx->FDR = 0x10;
1504:../Source Files/lpc17xx_uart.c **** 			UARTx->ACR = UART_ACR_START | tmp;
1505:../Source Files/lpc17xx_uart.c **** 		}
1506:../Source Files/lpc17xx_uart.c **** 		else
1507:../Source Files/lpc17xx_uart.c **** 		{
1508:../Source Files/lpc17xx_uart.c **** 			UARTx->ACR = 0;
1509:../Source Files/lpc17xx_uart.c **** 		}
1510:../Source Files/lpc17xx_uart.c **** 	}
1511:../Source Files/lpc17xx_uart.c **** }
1512:../Source Files/lpc17xx_uart.c **** 
1513:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1514:../Source Files/lpc17xx_uart.c ****  * @brief		Clear Autobaud Interrupt Pending
1515:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be
1516:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
1517:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1518:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1519:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1520:../Source Files/lpc17xx_uart.c ****  * @param[in]	ABIntType	type of auto-baud interrupt, should be:
1521:../Source Files/lpc17xx_uart.c ****  * 				- UART_AUTOBAUD_INTSTAT_ABEO: End of Auto-baud interrupt
1522:../Source Files/lpc17xx_uart.c ****  * 				- UART_AUTOBAUD_INTSTAT_ABTO: Auto-baud time out interrupt
1523:../Source Files/lpc17xx_uart.c ****  * @return 		none
1524:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1525:../Source Files/lpc17xx_uart.c **** void UART_ABClearIntPending(LPC_UART_TypeDef *UARTx, UART_ABEO_Type ABIntType)
1526:../Source Files/lpc17xx_uart.c **** {
1527:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1528:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1529:../Source Files/lpc17xx_uart.c **** 	{
1530:../Source Files/lpc17xx_uart.c **** 		UARTx->ACR |= ABIntType;
1531:../Source Files/lpc17xx_uart.c **** 	}
1532:../Source Files/lpc17xx_uart.c **** 	else
1533:../Source Files/lpc17xx_uart.c **** 		UARTx->ACR |= ABIntType;
1534:../Source Files/lpc17xx_uart.c **** }
1535:../Source Files/lpc17xx_uart.c **** 
1536:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1537:../Source Files/lpc17xx_uart.c ****  * @brief		Enable/Disable transmission on UART TxD pin
1538:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	UART peripheral selected, should be:
1539:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
1540:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
1541:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
1542:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
1543:../Source Files/lpc17xx_uart.c ****  * @param[in]	NewState New State of Tx transmission function, should be:
1544:../Source Files/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function
1545:../Source Files/lpc17xx_uart.c **** 				- DISABLE: Disable this function
1546:../Source Files/lpc17xx_uart.c ****  * @return none
1547:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1548:../Source Files/lpc17xx_uart.c **** void UART_TxCmd(LPC_UART_TypeDef *UARTx, FunctionalState NewState)
1549:../Source Files/lpc17xx_uart.c **** {
1550:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UARTx(UARTx));
1551:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1552:../Source Files/lpc17xx_uart.c **** 
1553:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE)
1554:../Source Files/lpc17xx_uart.c **** 	{
1555:../Source Files/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1556:../Source Files/lpc17xx_uart.c **** 		{
1557:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->TER |= UART_TER_TXEN;
 1080              		.loc 1 1557 0
 1081 0458 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 1082              	.LBE49:
 1083              	.LBE48:
 1084              	.LBE47:
 371:../Source Files/lpc17xx_uart.c **** 	UART_IntConfig(UARTx, UART_INTCFG_RBR, ENABLE);
 1085              		.loc 1 371 0
 1086 045c 0021     		movs	r1, #0
 1087              	.LBB54:
 1088              	.LBB52:
 1089              	.LBB50:
 1090              		.loc 1 1557 0
 1091 045e 43F08000 		orr	r0, r3, #128
 1092              	.LBE50:
 1093              	.LBE52:
 1094              	.LBE54:
 371:../Source Files/lpc17xx_uart.c **** 	UART_IntConfig(UARTx, UART_INTCFG_RBR, ENABLE);
 1095              		.loc 1 371 0
 1096 0462 0122     		movs	r2, #1
 1097              	.LBB55:
 1098              	.LBB53:
 1099              	.LBB51:
 1100              		.loc 1 1557 0
 1101 0464 84F83000 		strb	r0, [r4, #48]
 1102              	.LBE51:
 1103              	.LBE53:
 1104              	.LBE55:
 371:../Source Files/lpc17xx_uart.c **** 	UART_IntConfig(UARTx, UART_INTCFG_RBR, ENABLE);
 1105              		.loc 1 371 0
 1106 0468 2046     		mov	r0, r4
 1107 046a FFF7FEFF 		bl	UART_IntConfig
 1108              	.LVL98:
 373:../Source Files/lpc17xx_uart.c **** 	UART_IntConfig(UARTx, UART_INTCFG_RLS, ENABLE);
 1109              		.loc 1 373 0
 1110 046e 0221     		movs	r1, #2
 1111 0470 0122     		movs	r2, #1
 1112 0472 2046     		mov	r0, r4
 1113 0474 FFF7FEFF 		bl	UART_IntConfig
 1114              	.LVL99:
 388:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART0)
 1115              		.loc 1 388 0
 1116 0478 0D48     		ldr	r0, .L128
 383:../Source Files/lpc17xx_uart.c **** 	__BUF_RESET(rb.rx_head);
 1117              		.loc 1 383 0
 1118 047a 104B     		ldr	r3, .L128+12
 380:../Source Files/lpc17xx_uart.c **** 	TxIntStat = RESET;
 1119              		.loc 1 380 0
 1120 047c 104A     		ldr	r2, .L128+16
 1121 047e 0021     		movs	r1, #0
 388:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART0)
 1122              		.loc 1 388 0
 1123 0480 8442     		cmp	r4, r0
 380:../Source Files/lpc17xx_uart.c **** 	TxIntStat = RESET;
 1124              		.loc 1 380 0
 1125 0482 1170     		strb	r1, [r2, #0]
 383:../Source Files/lpc17xx_uart.c **** 	__BUF_RESET(rb.rx_head);
 1126              		.loc 1 383 0
 1127 0484 9960     		str	r1, [r3, #8]
 384:../Source Files/lpc17xx_uart.c **** 	__BUF_RESET(rb.rx_tail);
 1128              		.loc 1 384 0
 1129 0486 D960     		str	r1, [r3, #12]
 385:../Source Files/lpc17xx_uart.c **** 	__BUF_RESET(rb.tx_head);
 1130              		.loc 1 385 0
 1131 0488 1960     		str	r1, [r3, #0]
 386:../Source Files/lpc17xx_uart.c **** 	__BUF_RESET(rb.tx_tail);
 1132              		.loc 1 386 0
 1133 048a 5960     		str	r1, [r3, #4]
 388:../Source Files/lpc17xx_uart.c **** 	if(UARTx == LPC_UART0)
 1134              		.loc 1 388 0
 1135 048c 05D1     		bne	.L124
 1136              	.LVL100:
 1137              	.LBB56:
 1138              	.LBB57:
 1139              		.file 2 "../CM3 Core/core_cm3.h"
   1:../CM3 Core/core_cm3.h **** /**************************************************************************//**
   2:../CM3 Core/core_cm3.h ****  * @file     core_cm3.h
   3:../CM3 Core/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:../CM3 Core/core_cm3.h ****  * @version  V2.01
   5:../CM3 Core/core_cm3.h ****  * @date     06. December 2010
   6:../CM3 Core/core_cm3.h ****  *
   7:../CM3 Core/core_cm3.h ****  * @note
   8:../CM3 Core/core_cm3.h ****  * Copyright (C) 2009-2010 ARM Limited. All rights reserved.
   9:../CM3 Core/core_cm3.h ****  *
  10:../CM3 Core/core_cm3.h ****  * @par
  11:../CM3 Core/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../CM3 Core/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../CM3 Core/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:../CM3 Core/core_cm3.h ****  *
  15:../CM3 Core/core_cm3.h ****  * @par
  16:../CM3 Core/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../CM3 Core/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../CM3 Core/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../CM3 Core/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../CM3 Core/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../CM3 Core/core_cm3.h ****  *
  22:../CM3 Core/core_cm3.h ****  ******************************************************************************/
  23:../CM3 Core/core_cm3.h **** #if defined ( __ICCARM__ )
  24:../CM3 Core/core_cm3.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  25:../CM3 Core/core_cm3.h **** #endif
  26:../CM3 Core/core_cm3.h **** 
  27:../CM3 Core/core_cm3.h **** #ifdef __cplusplus
  28:../CM3 Core/core_cm3.h ****  extern "C" {
  29:../CM3 Core/core_cm3.h **** #endif
  30:../CM3 Core/core_cm3.h **** 
  31:../CM3 Core/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  32:../CM3 Core/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  33:../CM3 Core/core_cm3.h **** 
  34:../CM3 Core/core_cm3.h **** 
  35:../CM3 Core/core_cm3.h **** /*******************************************************************************
  36:../CM3 Core/core_cm3.h ****  *                 CMSIS definitions
  37:../CM3 Core/core_cm3.h ****  ******************************************************************************/
  38:../CM3 Core/core_cm3.h **** /** @ingroup  CMSIS
  39:../CM3 Core/core_cm3.h ****  * @addtogroup CMSIS_core_definitions CMSIS Core Definitions
  40:../CM3 Core/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  41:../CM3 Core/core_cm3.h ****    - CMSIS version number
  42:../CM3 Core/core_cm3.h ****    - Cortex-M core
  43:../CM3 Core/core_cm3.h ****    - Cortex-M core Revision Number
  44:../CM3 Core/core_cm3.h ****   @{
  45:../CM3 Core/core_cm3.h ****  */
  46:../CM3 Core/core_cm3.h **** 
  47:../CM3 Core/core_cm3.h **** /*  CMSIS CM3 definitions */
  48:../CM3 Core/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x02)                                                       /*!<
  49:../CM3 Core/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x00)                                                       /*!<
  50:../CM3 Core/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  51:../CM3 Core/core_cm3.h **** 
  52:../CM3 Core/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  53:../CM3 Core/core_cm3.h **** 
  54:../CM3 Core/core_cm3.h **** 
  55:../CM3 Core/core_cm3.h **** #if defined ( __CC_ARM   )
  56:../CM3 Core/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  57:../CM3 Core/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  58:../CM3 Core/core_cm3.h **** 
  59:../CM3 Core/core_cm3.h **** #elif defined ( __ICCARM__ )
  60:../CM3 Core/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
  61:../CM3 Core/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
  62:../CM3 Core/core_cm3.h **** 
  63:../CM3 Core/core_cm3.h **** #elif defined   (  __GNUC__  )
  64:../CM3 Core/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  65:../CM3 Core/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  66:../CM3 Core/core_cm3.h **** 
  67:../CM3 Core/core_cm3.h **** #elif defined   (  __TASKING__  )
  68:../CM3 Core/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  69:../CM3 Core/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  70:../CM3 Core/core_cm3.h **** 
  71:../CM3 Core/core_cm3.h **** #endif
  72:../CM3 Core/core_cm3.h **** 
  73:../CM3 Core/core_cm3.h **** #include <stdint.h>                      /*!< standard types definitions                      */
  74:../CM3 Core/core_cm3.h **** #include "core_cmInstr.h"                /*!< Core Instruction Access                         */
  75:../CM3 Core/core_cm3.h **** #include "core_cmFunc.h"                 /*!< Core Function Access                            */
  76:../CM3 Core/core_cm3.h **** 
  77:../CM3 Core/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
  78:../CM3 Core/core_cm3.h **** 
  79:../CM3 Core/core_cm3.h **** 
  80:../CM3 Core/core_cm3.h **** #ifndef __CMSIS_GENERIC
  81:../CM3 Core/core_cm3.h **** 
  82:../CM3 Core/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
  83:../CM3 Core/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
  84:../CM3 Core/core_cm3.h **** 
  85:../CM3 Core/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
  86:../CM3 Core/core_cm3.h **** #ifdef __cplusplus
  87:../CM3 Core/core_cm3.h ****   #define     __I     volatile           /*!< defines 'read only' permissions                 */
  88:../CM3 Core/core_cm3.h **** #else
  89:../CM3 Core/core_cm3.h ****   #define     __I     volatile const     /*!< defines 'read only' permissions                 */
  90:../CM3 Core/core_cm3.h **** #endif
  91:../CM3 Core/core_cm3.h **** #define     __O     volatile             /*!< defines 'write only' permissions                */
  92:../CM3 Core/core_cm3.h **** #define     __IO    volatile             /*!< defines 'read / write' permissions              */
  93:../CM3 Core/core_cm3.h **** 
  94:../CM3 Core/core_cm3.h **** /*@} end of group CMSIS_core_definitions */
  95:../CM3 Core/core_cm3.h **** 
  96:../CM3 Core/core_cm3.h **** 
  97:../CM3 Core/core_cm3.h **** 
  98:../CM3 Core/core_cm3.h **** /*******************************************************************************
  99:../CM3 Core/core_cm3.h ****  *                 Register Abstraction
 100:../CM3 Core/core_cm3.h ****  ******************************************************************************/
 101:../CM3 Core/core_cm3.h **** 
 102:../CM3 Core/core_cm3.h **** /** @ingroup  CMSIS
 103:../CM3 Core/core_cm3.h ****  * @addtogroup CMSIS_core_register CMSIS Core Register
 104:../CM3 Core/core_cm3.h ****   Core Register contain:
 105:../CM3 Core/core_cm3.h ****   - Core Register
 106:../CM3 Core/core_cm3.h ****   - Core NVIC Register
 107:../CM3 Core/core_cm3.h ****   - Core SCB Register
 108:../CM3 Core/core_cm3.h ****   - Core SysTick Register
 109:../CM3 Core/core_cm3.h ****   - Core Debug Register
 110:../CM3 Core/core_cm3.h ****   - Core MPU Register
 111:../CM3 Core/core_cm3.h **** */
 112:../CM3 Core/core_cm3.h **** 
 113:../CM3 Core/core_cm3.h **** /** \ingroup  CMSIS_core_register
 114:../CM3 Core/core_cm3.h ****     \defgroup CMSIS_CORE CMSIS Core
 115:../CM3 Core/core_cm3.h ****   Type definitions for the Cortex-M Core Registers
 116:../CM3 Core/core_cm3.h ****   @{
 117:../CM3 Core/core_cm3.h ****  */
 118:../CM3 Core/core_cm3.h **** 
 119:../CM3 Core/core_cm3.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 120:../CM3 Core/core_cm3.h ****  */
 121:../CM3 Core/core_cm3.h **** typedef union
 122:../CM3 Core/core_cm3.h **** {
 123:../CM3 Core/core_cm3.h ****   struct
 124:../CM3 Core/core_cm3.h ****   {
 125:../CM3 Core/core_cm3.h **** #if (__CORTEX_M != 0x04)
 126:../CM3 Core/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 127:../CM3 Core/core_cm3.h **** #else
 128:../CM3 Core/core_cm3.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 129:../CM3 Core/core_cm3.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 130:../CM3 Core/core_cm3.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 131:../CM3 Core/core_cm3.h **** #endif
 132:../CM3 Core/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 133:../CM3 Core/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 134:../CM3 Core/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 135:../CM3 Core/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 136:../CM3 Core/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 137:../CM3 Core/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 138:../CM3 Core/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 139:../CM3 Core/core_cm3.h **** } APSR_Type;
 140:../CM3 Core/core_cm3.h **** 
 141:../CM3 Core/core_cm3.h **** 
 142:../CM3 Core/core_cm3.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 143:../CM3 Core/core_cm3.h ****  */
 144:../CM3 Core/core_cm3.h **** typedef union
 145:../CM3 Core/core_cm3.h **** {
 146:../CM3 Core/core_cm3.h ****   struct
 147:../CM3 Core/core_cm3.h ****   {
 148:../CM3 Core/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 149:../CM3 Core/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 150:../CM3 Core/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 151:../CM3 Core/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 152:../CM3 Core/core_cm3.h **** } IPSR_Type;
 153:../CM3 Core/core_cm3.h **** 
 154:../CM3 Core/core_cm3.h **** 
 155:../CM3 Core/core_cm3.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 156:../CM3 Core/core_cm3.h ****  */
 157:../CM3 Core/core_cm3.h **** typedef union
 158:../CM3 Core/core_cm3.h **** {
 159:../CM3 Core/core_cm3.h ****   struct
 160:../CM3 Core/core_cm3.h ****   {
 161:../CM3 Core/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 162:../CM3 Core/core_cm3.h **** #if (__CORTEX_M != 0x04)
 163:../CM3 Core/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 164:../CM3 Core/core_cm3.h **** #else
 165:../CM3 Core/core_cm3.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 166:../CM3 Core/core_cm3.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 167:../CM3 Core/core_cm3.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 168:../CM3 Core/core_cm3.h **** #endif
 169:../CM3 Core/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 170:../CM3 Core/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 171:../CM3 Core/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 172:../CM3 Core/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 173:../CM3 Core/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 174:../CM3 Core/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 175:../CM3 Core/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 176:../CM3 Core/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 177:../CM3 Core/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 178:../CM3 Core/core_cm3.h **** } xPSR_Type;
 179:../CM3 Core/core_cm3.h **** 
 180:../CM3 Core/core_cm3.h **** 
 181:../CM3 Core/core_cm3.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 182:../CM3 Core/core_cm3.h ****  */
 183:../CM3 Core/core_cm3.h **** typedef union
 184:../CM3 Core/core_cm3.h **** {
 185:../CM3 Core/core_cm3.h ****   struct
 186:../CM3 Core/core_cm3.h ****   {
 187:../CM3 Core/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 188:../CM3 Core/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 189:../CM3 Core/core_cm3.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 190:../CM3 Core/core_cm3.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 191:../CM3 Core/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 192:../CM3 Core/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 193:../CM3 Core/core_cm3.h **** } CONTROL_Type;
 194:../CM3 Core/core_cm3.h **** 
 195:../CM3 Core/core_cm3.h **** /*@} end of group CMSIS_CORE */
 196:../CM3 Core/core_cm3.h **** 
 197:../CM3 Core/core_cm3.h **** 
 198:../CM3 Core/core_cm3.h **** /** \ingroup  CMSIS_core_register
 199:../CM3 Core/core_cm3.h ****     \defgroup CMSIS_NVIC CMSIS NVIC
 200:../CM3 Core/core_cm3.h ****   Type definitions for the Cortex-M NVIC Registers
 201:../CM3 Core/core_cm3.h ****   @{
 202:../CM3 Core/core_cm3.h ****  */
 203:../CM3 Core/core_cm3.h **** 
 204:../CM3 Core/core_cm3.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 205:../CM3 Core/core_cm3.h ****  */
 206:../CM3 Core/core_cm3.h **** typedef struct
 207:../CM3 Core/core_cm3.h **** {
 208:../CM3 Core/core_cm3.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 209:../CM3 Core/core_cm3.h ****        uint32_t RESERVED0[24];
 210:../CM3 Core/core_cm3.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 211:../CM3 Core/core_cm3.h ****        uint32_t RSERVED1[24];
 212:../CM3 Core/core_cm3.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 213:../CM3 Core/core_cm3.h ****        uint32_t RESERVED2[24];
 214:../CM3 Core/core_cm3.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 215:../CM3 Core/core_cm3.h ****        uint32_t RESERVED3[24];
 216:../CM3 Core/core_cm3.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 217:../CM3 Core/core_cm3.h ****        uint32_t RESERVED4[56];
 218:../CM3 Core/core_cm3.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 219:../CM3 Core/core_cm3.h ****        uint32_t RESERVED5[644];
 220:../CM3 Core/core_cm3.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 221:../CM3 Core/core_cm3.h **** }  NVIC_Type;
 222:../CM3 Core/core_cm3.h **** 
 223:../CM3 Core/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 224:../CM3 Core/core_cm3.h **** 
 225:../CM3 Core/core_cm3.h **** 
 226:../CM3 Core/core_cm3.h **** /** \ingroup  CMSIS_core_register
 227:../CM3 Core/core_cm3.h ****     \defgroup CMSIS_SCB CMSIS SCB
 228:../CM3 Core/core_cm3.h ****   Type definitions for the Cortex-M System Control Block Registers
 229:../CM3 Core/core_cm3.h ****   @{
 230:../CM3 Core/core_cm3.h ****  */
 231:../CM3 Core/core_cm3.h **** 
 232:../CM3 Core/core_cm3.h **** /** \brief  Structure type to access the System Control Block (SCB).
 233:../CM3 Core/core_cm3.h ****  */
 234:../CM3 Core/core_cm3.h **** typedef struct
 235:../CM3 Core/core_cm3.h **** {
 236:../CM3 Core/core_cm3.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPU ID Base Register            
 237:../CM3 Core/core_cm3.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control State Register
 238:../CM3 Core/core_cm3.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 239:../CM3 Core/core_cm3.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt / Reset Co
 240:../CM3 Core/core_cm3.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 241:../CM3 Core/core_cm3.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 242:../CM3 Core/core_cm3.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 243:../CM3 Core/core_cm3.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 244:../CM3 Core/core_cm3.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 245:../CM3 Core/core_cm3.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  Hard Fault Status Register      
 246:../CM3 Core/core_cm3.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 247:../CM3 Core/core_cm3.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  Mem Manage Address Register     
 248:../CM3 Core/core_cm3.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  Bus Fault Address Register      
 249:../CM3 Core/core_cm3.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 250:../CM3 Core/core_cm3.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 251:../CM3 Core/core_cm3.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 252:../CM3 Core/core_cm3.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 253:../CM3 Core/core_cm3.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 254:../CM3 Core/core_cm3.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  ISA Feature Register            
 255:../CM3 Core/core_cm3.h **** } SCB_Type;
 256:../CM3 Core/core_cm3.h **** 
 257:../CM3 Core/core_cm3.h **** /* SCB CPUID Register Definitions */
 258:../CM3 Core/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 259:../CM3 Core/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 260:../CM3 Core/core_cm3.h **** 
 261:../CM3 Core/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 262:../CM3 Core/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 263:../CM3 Core/core_cm3.h **** 
 264:../CM3 Core/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 265:../CM3 Core/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 266:../CM3 Core/core_cm3.h **** 
 267:../CM3 Core/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 268:../CM3 Core/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 269:../CM3 Core/core_cm3.h **** 
 270:../CM3 Core/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 271:../CM3 Core/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 272:../CM3 Core/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 273:../CM3 Core/core_cm3.h **** 
 274:../CM3 Core/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 275:../CM3 Core/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 276:../CM3 Core/core_cm3.h **** 
 277:../CM3 Core/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 278:../CM3 Core/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 279:../CM3 Core/core_cm3.h **** 
 280:../CM3 Core/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 281:../CM3 Core/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 282:../CM3 Core/core_cm3.h **** 
 283:../CM3 Core/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 284:../CM3 Core/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 285:../CM3 Core/core_cm3.h **** 
 286:../CM3 Core/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 287:../CM3 Core/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 288:../CM3 Core/core_cm3.h **** 
 289:../CM3 Core/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 290:../CM3 Core/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 291:../CM3 Core/core_cm3.h **** 
 292:../CM3 Core/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 293:../CM3 Core/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 294:../CM3 Core/core_cm3.h **** 
 295:../CM3 Core/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 296:../CM3 Core/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 297:../CM3 Core/core_cm3.h **** 
 298:../CM3 Core/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 299:../CM3 Core/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 300:../CM3 Core/core_cm3.h **** 
 301:../CM3 Core/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 302:../CM3 Core/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 303:../CM3 Core/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 304:../CM3 Core/core_cm3.h **** 
 305:../CM3 Core/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 306:../CM3 Core/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 307:../CM3 Core/core_cm3.h **** 
 308:../CM3 Core/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 309:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 310:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 311:../CM3 Core/core_cm3.h **** 
 312:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 313:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 314:../CM3 Core/core_cm3.h **** 
 315:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 316:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 317:../CM3 Core/core_cm3.h **** 
 318:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 319:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 320:../CM3 Core/core_cm3.h **** 
 321:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 322:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 323:../CM3 Core/core_cm3.h **** 
 324:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 325:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 326:../CM3 Core/core_cm3.h **** 
 327:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 328:../CM3 Core/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 329:../CM3 Core/core_cm3.h **** 
 330:../CM3 Core/core_cm3.h **** /* SCB System Control Register Definitions */
 331:../CM3 Core/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 332:../CM3 Core/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 333:../CM3 Core/core_cm3.h **** 
 334:../CM3 Core/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 335:../CM3 Core/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 336:../CM3 Core/core_cm3.h **** 
 337:../CM3 Core/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 338:../CM3 Core/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 339:../CM3 Core/core_cm3.h **** 
 340:../CM3 Core/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 341:../CM3 Core/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 342:../CM3 Core/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 343:../CM3 Core/core_cm3.h **** 
 344:../CM3 Core/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 345:../CM3 Core/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 346:../CM3 Core/core_cm3.h **** 
 347:../CM3 Core/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 348:../CM3 Core/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 349:../CM3 Core/core_cm3.h **** 
 350:../CM3 Core/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 351:../CM3 Core/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 352:../CM3 Core/core_cm3.h **** 
 353:../CM3 Core/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 354:../CM3 Core/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 355:../CM3 Core/core_cm3.h **** 
 356:../CM3 Core/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 357:../CM3 Core/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 358:../CM3 Core/core_cm3.h **** 
 359:../CM3 Core/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 360:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 361:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 362:../CM3 Core/core_cm3.h **** 
 363:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 364:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 365:../CM3 Core/core_cm3.h **** 
 366:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 367:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 368:../CM3 Core/core_cm3.h **** 
 369:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 370:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 371:../CM3 Core/core_cm3.h **** 
 372:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 373:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 374:../CM3 Core/core_cm3.h **** 
 375:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 376:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 377:../CM3 Core/core_cm3.h **** 
 378:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 379:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 380:../CM3 Core/core_cm3.h **** 
 381:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 382:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 383:../CM3 Core/core_cm3.h **** 
 384:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 385:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 386:../CM3 Core/core_cm3.h **** 
 387:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 388:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 389:../CM3 Core/core_cm3.h **** 
 390:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 391:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 392:../CM3 Core/core_cm3.h **** 
 393:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 394:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 395:../CM3 Core/core_cm3.h **** 
 396:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 397:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 398:../CM3 Core/core_cm3.h **** 
 399:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 400:../CM3 Core/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 401:../CM3 Core/core_cm3.h **** 
 402:../CM3 Core/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 403:../CM3 Core/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 404:../CM3 Core/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 405:../CM3 Core/core_cm3.h **** 
 406:../CM3 Core/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 407:../CM3 Core/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 408:../CM3 Core/core_cm3.h **** 
 409:../CM3 Core/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 410:../CM3 Core/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 411:../CM3 Core/core_cm3.h **** 
 412:../CM3 Core/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 413:../CM3 Core/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 414:../CM3 Core/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 415:../CM3 Core/core_cm3.h **** 
 416:../CM3 Core/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 417:../CM3 Core/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 418:../CM3 Core/core_cm3.h **** 
 419:../CM3 Core/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 420:../CM3 Core/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 421:../CM3 Core/core_cm3.h **** 
 422:../CM3 Core/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 423:../CM3 Core/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 424:../CM3 Core/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 425:../CM3 Core/core_cm3.h **** 
 426:../CM3 Core/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 427:../CM3 Core/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 428:../CM3 Core/core_cm3.h **** 
 429:../CM3 Core/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 430:../CM3 Core/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 431:../CM3 Core/core_cm3.h **** 
 432:../CM3 Core/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 433:../CM3 Core/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 434:../CM3 Core/core_cm3.h **** 
 435:../CM3 Core/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 436:../CM3 Core/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 437:../CM3 Core/core_cm3.h **** 
 438:../CM3 Core/core_cm3.h **** /*@} end of group CMSIS_SCB */
 439:../CM3 Core/core_cm3.h **** 
 440:../CM3 Core/core_cm3.h **** 
 441:../CM3 Core/core_cm3.h **** /** \ingroup  CMSIS_core_register
 442:../CM3 Core/core_cm3.h ****     \defgroup CMSIS_SysTick CMSIS SysTick
 443:../CM3 Core/core_cm3.h ****   Type definitions for the Cortex-M System Timer Registers
 444:../CM3 Core/core_cm3.h ****   @{
 445:../CM3 Core/core_cm3.h ****  */
 446:../CM3 Core/core_cm3.h **** 
 447:../CM3 Core/core_cm3.h **** /** \brief  Structure type to access the System Timer (SysTick).
 448:../CM3 Core/core_cm3.h ****  */
 449:../CM3 Core/core_cm3.h **** typedef struct
 450:../CM3 Core/core_cm3.h **** {
 451:../CM3 Core/core_cm3.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 452:../CM3 Core/core_cm3.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 453:../CM3 Core/core_cm3.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 454:../CM3 Core/core_cm3.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 455:../CM3 Core/core_cm3.h **** } SysTick_Type;
 456:../CM3 Core/core_cm3.h **** 
 457:../CM3 Core/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 458:../CM3 Core/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 459:../CM3 Core/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 460:../CM3 Core/core_cm3.h **** 
 461:../CM3 Core/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 462:../CM3 Core/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 463:../CM3 Core/core_cm3.h **** 
 464:../CM3 Core/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 465:../CM3 Core/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 466:../CM3 Core/core_cm3.h **** 
 467:../CM3 Core/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 468:../CM3 Core/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 469:../CM3 Core/core_cm3.h **** 
 470:../CM3 Core/core_cm3.h **** /* SysTick Reload Register Definitions */
 471:../CM3 Core/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 472:../CM3 Core/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 473:../CM3 Core/core_cm3.h **** 
 474:../CM3 Core/core_cm3.h **** /* SysTick Current Register Definitions */
 475:../CM3 Core/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 476:../CM3 Core/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 477:../CM3 Core/core_cm3.h **** 
 478:../CM3 Core/core_cm3.h **** /* SysTick Calibration Register Definitions */
 479:../CM3 Core/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 480:../CM3 Core/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 481:../CM3 Core/core_cm3.h **** 
 482:../CM3 Core/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 483:../CM3 Core/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 484:../CM3 Core/core_cm3.h **** 
 485:../CM3 Core/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 486:../CM3 Core/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 487:../CM3 Core/core_cm3.h **** 
 488:../CM3 Core/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 489:../CM3 Core/core_cm3.h **** 
 490:../CM3 Core/core_cm3.h **** 
 491:../CM3 Core/core_cm3.h **** /** \ingroup  CMSIS_core_register
 492:../CM3 Core/core_cm3.h ****     \defgroup CMSIS_ITM CMSIS ITM
 493:../CM3 Core/core_cm3.h ****   Type definitions for the Cortex-M Instrumentation Trace Macrocell (ITM)
 494:../CM3 Core/core_cm3.h ****   @{
 495:../CM3 Core/core_cm3.h ****  */
 496:../CM3 Core/core_cm3.h **** 
 497:../CM3 Core/core_cm3.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 498:../CM3 Core/core_cm3.h ****  */
 499:../CM3 Core/core_cm3.h **** typedef struct
 500:../CM3 Core/core_cm3.h **** {
 501:../CM3 Core/core_cm3.h ****   __O  union
 502:../CM3 Core/core_cm3.h ****   {
 503:../CM3 Core/core_cm3.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 504:../CM3 Core/core_cm3.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 505:../CM3 Core/core_cm3.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 506:../CM3 Core/core_cm3.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 507:../CM3 Core/core_cm3.h ****        uint32_t RESERVED0[864];
 508:../CM3 Core/core_cm3.h ****   __IO uint32_t TER;                     /*!< Offset:       (R/W)  ITM Trace Enable Register       
 509:../CM3 Core/core_cm3.h ****        uint32_t RESERVED1[15];
 510:../CM3 Core/core_cm3.h ****   __IO uint32_t TPR;                     /*!< Offset:       (R/W)  ITM Trace Privilege Register    
 511:../CM3 Core/core_cm3.h ****        uint32_t RESERVED2[15];
 512:../CM3 Core/core_cm3.h ****   __IO uint32_t TCR;                     /*!< Offset:       (R/W)  ITM Trace Control Register      
 513:../CM3 Core/core_cm3.h ****        uint32_t RESERVED3[29];
 514:../CM3 Core/core_cm3.h ****   __IO uint32_t IWR;                     /*!< Offset:       (R/W)  ITM Integration Write Register  
 515:../CM3 Core/core_cm3.h ****   __IO uint32_t IRR;                     /*!< Offset:       (R/W)  ITM Integration Read Register   
 516:../CM3 Core/core_cm3.h ****   __IO uint32_t IMCR;                    /*!< Offset:       (R/W)  ITM Integration Mode Control Reg
 517:../CM3 Core/core_cm3.h ****        uint32_t RESERVED4[43];
 518:../CM3 Core/core_cm3.h ****   __IO uint32_t LAR;                     /*!< Offset:       (R/W)  ITM Lock Access Register        
 519:../CM3 Core/core_cm3.h ****   __IO uint32_t LSR;                     /*!< Offset:       (R/W)  ITM Lock Status Register        
 520:../CM3 Core/core_cm3.h ****        uint32_t RESERVED5[6];
 521:../CM3 Core/core_cm3.h ****   __I  uint32_t PID4;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 522:../CM3 Core/core_cm3.h ****   __I  uint32_t PID5;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 523:../CM3 Core/core_cm3.h ****   __I  uint32_t PID6;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 524:../CM3 Core/core_cm3.h ****   __I  uint32_t PID7;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 525:../CM3 Core/core_cm3.h ****   __I  uint32_t PID0;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 526:../CM3 Core/core_cm3.h ****   __I  uint32_t PID1;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 527:../CM3 Core/core_cm3.h ****   __I  uint32_t PID2;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 528:../CM3 Core/core_cm3.h ****   __I  uint32_t PID3;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 529:../CM3 Core/core_cm3.h ****   __I  uint32_t CID0;                    /*!< Offset:       (R/ )  ITM Component  Identification Re
 530:../CM3 Core/core_cm3.h ****   __I  uint32_t CID1;                    /*!< Offset:       (R/ )  ITM Component  Identification Re
 531:../CM3 Core/core_cm3.h ****   __I  uint32_t CID2;                    /*!< Offset:       (R/ )  ITM Component  Identification Re
 532:../CM3 Core/core_cm3.h ****   __I  uint32_t CID3;                    /*!< Offset:       (R/ )  ITM Component  Identification Re
 533:../CM3 Core/core_cm3.h **** } ITM_Type;
 534:../CM3 Core/core_cm3.h **** 
 535:../CM3 Core/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 536:../CM3 Core/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 537:../CM3 Core/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 538:../CM3 Core/core_cm3.h **** 
 539:../CM3 Core/core_cm3.h **** /* ITM Trace Control Register Definitions */
 540:../CM3 Core/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 541:../CM3 Core/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 542:../CM3 Core/core_cm3.h **** 
 543:../CM3 Core/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 544:../CM3 Core/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7FUL << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 545:../CM3 Core/core_cm3.h **** 
 546:../CM3 Core/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 547:../CM3 Core/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 548:../CM3 Core/core_cm3.h **** 
 549:../CM3 Core/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 550:../CM3 Core/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 551:../CM3 Core/core_cm3.h **** 
 552:../CM3 Core/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 553:../CM3 Core/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 554:../CM3 Core/core_cm3.h **** 
 555:../CM3 Core/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 556:../CM3 Core/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 557:../CM3 Core/core_cm3.h **** 
 558:../CM3 Core/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 559:../CM3 Core/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 560:../CM3 Core/core_cm3.h **** 
 561:../CM3 Core/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 562:../CM3 Core/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 563:../CM3 Core/core_cm3.h **** 
 564:../CM3 Core/core_cm3.h **** /* ITM Integration Write Register Definitions */
 565:../CM3 Core/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 566:../CM3 Core/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 567:../CM3 Core/core_cm3.h **** 
 568:../CM3 Core/core_cm3.h **** /* ITM Integration Read Register Definitions */
 569:../CM3 Core/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 570:../CM3 Core/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 571:../CM3 Core/core_cm3.h **** 
 572:../CM3 Core/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 573:../CM3 Core/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 574:../CM3 Core/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 575:../CM3 Core/core_cm3.h **** 
 576:../CM3 Core/core_cm3.h **** /* ITM Lock Status Register Definitions */
 577:../CM3 Core/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 578:../CM3 Core/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 579:../CM3 Core/core_cm3.h **** 
 580:../CM3 Core/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 581:../CM3 Core/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 582:../CM3 Core/core_cm3.h **** 
 583:../CM3 Core/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 584:../CM3 Core/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL << ITM_LSR_Present_Pos)                   /*!< ITM 
 585:../CM3 Core/core_cm3.h **** 
 586:../CM3 Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 587:../CM3 Core/core_cm3.h **** 
 588:../CM3 Core/core_cm3.h **** 
 589:../CM3 Core/core_cm3.h **** /** \ingroup  CMSIS_core_register
 590:../CM3 Core/core_cm3.h ****     \defgroup CMSIS_InterruptType CMSIS Interrupt Type
 591:../CM3 Core/core_cm3.h ****   Type definitions for the Cortex-M Interrupt Type Register
 592:../CM3 Core/core_cm3.h ****   @{
 593:../CM3 Core/core_cm3.h ****  */
 594:../CM3 Core/core_cm3.h **** 
 595:../CM3 Core/core_cm3.h **** /** \brief  Structure type to access the Interrupt Type Register.
 596:../CM3 Core/core_cm3.h ****  */
 597:../CM3 Core/core_cm3.h **** typedef struct
 598:../CM3 Core/core_cm3.h **** {
 599:../CM3 Core/core_cm3.h ****        uint32_t RESERVED0;
 600:../CM3 Core/core_cm3.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Control Type Register 
 601:../CM3 Core/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 602:../CM3 Core/core_cm3.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 603:../CM3 Core/core_cm3.h **** #else
 604:../CM3 Core/core_cm3.h ****        uint32_t RESERVED1;
 605:../CM3 Core/core_cm3.h **** #endif
 606:../CM3 Core/core_cm3.h **** } InterruptType_Type;
 607:../CM3 Core/core_cm3.h **** 
 608:../CM3 Core/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 609:../CM3 Core/core_cm3.h **** #define IntType_ICTR_INTLINESNUM_Pos  0                                                   /*!< Inte
 610:../CM3 Core/core_cm3.h **** #define IntType_ICTR_INTLINESNUM_Msk (0x1FUL << IntType_ICTR_INTLINESNUM_Pos)             /*!< Inte
 611:../CM3 Core/core_cm3.h **** 
 612:../CM3 Core/core_cm3.h **** /* Auxiliary Control Register Definitions */
 613:../CM3 Core/core_cm3.h **** #define IntType_ACTLR_DISFOLD_Pos     2                                                   /*!< Inte
 614:../CM3 Core/core_cm3.h **** #define IntType_ACTLR_DISFOLD_Msk    (1UL << IntType_ACTLR_DISFOLD_Pos)                   /*!< Inte
 615:../CM3 Core/core_cm3.h **** 
 616:../CM3 Core/core_cm3.h **** #define IntType_ACTLR_DISDEFWBUF_Pos  1                                                   /*!< Inte
 617:../CM3 Core/core_cm3.h **** #define IntType_ACTLR_DISDEFWBUF_Msk (1UL << IntType_ACTLR_DISDEFWBUF_Pos)                /*!< Inte
 618:../CM3 Core/core_cm3.h **** 
 619:../CM3 Core/core_cm3.h **** #define IntType_ACTLR_DISMCYCINT_Pos  0                                                   /*!< Inte
 620:../CM3 Core/core_cm3.h **** #define IntType_ACTLR_DISMCYCINT_Msk (1UL << IntType_ACTLR_DISMCYCINT_Pos)                /*!< Inte
 621:../CM3 Core/core_cm3.h **** 
 622:../CM3 Core/core_cm3.h **** /*@}*/ /* end of group CMSIS_InterruptType */
 623:../CM3 Core/core_cm3.h **** 
 624:../CM3 Core/core_cm3.h **** 
 625:../CM3 Core/core_cm3.h **** #if (__MPU_PRESENT == 1)
 626:../CM3 Core/core_cm3.h **** /** \ingroup  CMSIS_core_register
 627:../CM3 Core/core_cm3.h ****     \defgroup CMSIS_MPU CMSIS MPU
 628:../CM3 Core/core_cm3.h ****   Type definitions for the Cortex-M Memory Protection Unit (MPU)
 629:../CM3 Core/core_cm3.h ****   @{
 630:../CM3 Core/core_cm3.h ****  */
 631:../CM3 Core/core_cm3.h **** 
 632:../CM3 Core/core_cm3.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
 633:../CM3 Core/core_cm3.h ****  */
 634:../CM3 Core/core_cm3.h **** typedef struct
 635:../CM3 Core/core_cm3.h **** {
 636:../CM3 Core/core_cm3.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
 637:../CM3 Core/core_cm3.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
 638:../CM3 Core/core_cm3.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
 639:../CM3 Core/core_cm3.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 640:../CM3 Core/core_cm3.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 641:../CM3 Core/core_cm3.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
 642:../CM3 Core/core_cm3.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
 643:../CM3 Core/core_cm3.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
 644:../CM3 Core/core_cm3.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
 645:../CM3 Core/core_cm3.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
 646:../CM3 Core/core_cm3.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
 647:../CM3 Core/core_cm3.h **** } MPU_Type;
 648:../CM3 Core/core_cm3.h **** 
 649:../CM3 Core/core_cm3.h **** /* MPU Type Register */
 650:../CM3 Core/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 651:../CM3 Core/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 652:../CM3 Core/core_cm3.h **** 
 653:../CM3 Core/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 654:../CM3 Core/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 655:../CM3 Core/core_cm3.h **** 
 656:../CM3 Core/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 657:../CM3 Core/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 658:../CM3 Core/core_cm3.h **** 
 659:../CM3 Core/core_cm3.h **** /* MPU Control Register */
 660:../CM3 Core/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 661:../CM3 Core/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 662:../CM3 Core/core_cm3.h **** 
 663:../CM3 Core/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 664:../CM3 Core/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 665:../CM3 Core/core_cm3.h **** 
 666:../CM3 Core/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 667:../CM3 Core/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 668:../CM3 Core/core_cm3.h **** 
 669:../CM3 Core/core_cm3.h **** /* MPU Region Number Register */
 670:../CM3 Core/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 671:../CM3 Core/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
 672:../CM3 Core/core_cm3.h **** 
 673:../CM3 Core/core_cm3.h **** /* MPU Region Base Address Register */
 674:../CM3 Core/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 675:../CM3 Core/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 676:../CM3 Core/core_cm3.h **** 
 677:../CM3 Core/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 678:../CM3 Core/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 679:../CM3 Core/core_cm3.h **** 
 680:../CM3 Core/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 681:../CM3 Core/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 682:../CM3 Core/core_cm3.h **** 
 683:../CM3 Core/core_cm3.h **** /* MPU Region Attribute and Size Register */
 684:../CM3 Core/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 685:../CM3 Core/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
 686:../CM3 Core/core_cm3.h **** 
 687:../CM3 Core/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 688:../CM3 Core/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7UL << MPU_RASR_AP_Pos)                       /*!< MPU 
 689:../CM3 Core/core_cm3.h **** 
 690:../CM3 Core/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 691:../CM3 Core/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7UL << MPU_RASR_TEX_Pos)                      /*!< MPU 
 692:../CM3 Core/core_cm3.h **** 
 693:../CM3 Core/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 694:../CM3 Core/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
 695:../CM3 Core/core_cm3.h **** 
 696:../CM3 Core/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 697:../CM3 Core/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
 698:../CM3 Core/core_cm3.h **** 
 699:../CM3 Core/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 700:../CM3 Core/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
 701:../CM3 Core/core_cm3.h **** 
 702:../CM3 Core/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 703:../CM3 Core/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 704:../CM3 Core/core_cm3.h **** 
 705:../CM3 Core/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 706:../CM3 Core/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 707:../CM3 Core/core_cm3.h **** 
 708:../CM3 Core/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 709:../CM3 Core/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1UL << MPU_RASR_ENA_Pos)                   /*!< MPU 
 710:../CM3 Core/core_cm3.h **** 
 711:../CM3 Core/core_cm3.h **** /*@} end of group CMSIS_MPU */
 712:../CM3 Core/core_cm3.h **** #endif
 713:../CM3 Core/core_cm3.h **** 
 714:../CM3 Core/core_cm3.h **** 
 715:../CM3 Core/core_cm3.h **** /** \ingroup  CMSIS_core_register
 716:../CM3 Core/core_cm3.h ****     \defgroup CMSIS_CoreDebug CMSIS Core Debug
 717:../CM3 Core/core_cm3.h ****   Type definitions for the Cortex-M Core Debug Registers
 718:../CM3 Core/core_cm3.h ****   @{
 719:../CM3 Core/core_cm3.h ****  */
 720:../CM3 Core/core_cm3.h **** 
 721:../CM3 Core/core_cm3.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
 722:../CM3 Core/core_cm3.h ****  */
 723:../CM3 Core/core_cm3.h **** typedef struct
 724:../CM3 Core/core_cm3.h **** {
 725:../CM3 Core/core_cm3.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
 726:../CM3 Core/core_cm3.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
 727:../CM3 Core/core_cm3.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
 728:../CM3 Core/core_cm3.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
 729:../CM3 Core/core_cm3.h **** } CoreDebug_Type;
 730:../CM3 Core/core_cm3.h **** 
 731:../CM3 Core/core_cm3.h **** /* Debug Halting Control and Status Register */
 732:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 733:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 734:../CM3 Core/core_cm3.h **** 
 735:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 736:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 737:../CM3 Core/core_cm3.h **** 
 738:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 739:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 740:../CM3 Core/core_cm3.h **** 
 741:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 742:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 743:../CM3 Core/core_cm3.h **** 
 744:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 745:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 746:../CM3 Core/core_cm3.h **** 
 747:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 748:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 749:../CM3 Core/core_cm3.h **** 
 750:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 751:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 752:../CM3 Core/core_cm3.h **** 
 753:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 754:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 755:../CM3 Core/core_cm3.h **** 
 756:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 757:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 758:../CM3 Core/core_cm3.h **** 
 759:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 760:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 761:../CM3 Core/core_cm3.h **** 
 762:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 763:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 764:../CM3 Core/core_cm3.h **** 
 765:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 766:../CM3 Core/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 767:../CM3 Core/core_cm3.h **** 
 768:../CM3 Core/core_cm3.h **** /* Debug Core Register Selector Register */
 769:../CM3 Core/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 770:../CM3 Core/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 771:../CM3 Core/core_cm3.h **** 
 772:../CM3 Core/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 773:../CM3 Core/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 774:../CM3 Core/core_cm3.h **** 
 775:../CM3 Core/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 776:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 777:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 778:../CM3 Core/core_cm3.h **** 
 779:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 780:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 781:../CM3 Core/core_cm3.h **** 
 782:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 783:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 784:../CM3 Core/core_cm3.h **** 
 785:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 786:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 787:../CM3 Core/core_cm3.h **** 
 788:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 789:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 790:../CM3 Core/core_cm3.h **** 
 791:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 792:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 793:../CM3 Core/core_cm3.h **** 
 794:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 795:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 796:../CM3 Core/core_cm3.h **** 
 797:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 798:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 799:../CM3 Core/core_cm3.h **** 
 800:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 801:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 802:../CM3 Core/core_cm3.h **** 
 803:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 804:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 805:../CM3 Core/core_cm3.h **** 
 806:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 807:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 808:../CM3 Core/core_cm3.h **** 
 809:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 810:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 811:../CM3 Core/core_cm3.h **** 
 812:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 813:../CM3 Core/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 814:../CM3 Core/core_cm3.h **** 
 815:../CM3 Core/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
 816:../CM3 Core/core_cm3.h **** 
 817:../CM3 Core/core_cm3.h **** 
 818:../CM3 Core/core_cm3.h **** /** \ingroup  CMSIS_core_register
 819:../CM3 Core/core_cm3.h ****   @{
 820:../CM3 Core/core_cm3.h ****  */
 821:../CM3 Core/core_cm3.h **** 
 822:../CM3 Core/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 823:../CM3 Core/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 824:../CM3 Core/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
 825:../CM3 Core/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
 826:../CM3 Core/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
 827:../CM3 Core/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
 828:../CM3 Core/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 829:../CM3 Core/core_cm3.h **** 
 830:../CM3 Core/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 831:../CM3 Core/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 832:../CM3 Core/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 833:../CM3 Core/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 834:../CM3 Core/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 835:../CM3 Core/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 836:../CM3 Core/core_cm3.h **** 
 837:../CM3 Core/core_cm3.h **** #if (__MPU_PRESENT == 1)
 838:../CM3 Core/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
 839:../CM3 Core/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 840:../CM3 Core/core_cm3.h **** #endif
 841:../CM3 Core/core_cm3.h **** 
 842:../CM3 Core/core_cm3.h **** /*@} */
 843:../CM3 Core/core_cm3.h **** 
 844:../CM3 Core/core_cm3.h **** 
 845:../CM3 Core/core_cm3.h **** 
 846:../CM3 Core/core_cm3.h **** /*******************************************************************************
 847:../CM3 Core/core_cm3.h ****  *                Hardware Abstraction Layer
 848:../CM3 Core/core_cm3.h ****  ******************************************************************************/
 849:../CM3 Core/core_cm3.h **** /** \ingroup  CMSIS
 850:../CM3 Core/core_cm3.h ****   \addtogroup CMSIS_Core_FunctionInterface CMSIS Core Function Interface
 851:../CM3 Core/core_cm3.h ****   Core Function Interface contains:
 852:../CM3 Core/core_cm3.h ****   - Core NVIC Functions
 853:../CM3 Core/core_cm3.h ****   - Core SysTick Functions
 854:../CM3 Core/core_cm3.h ****   - Core Debug Functions
 855:../CM3 Core/core_cm3.h ****   - Core Register Access Functions
 856:../CM3 Core/core_cm3.h **** */
 857:../CM3 Core/core_cm3.h **** 
 858:../CM3 Core/core_cm3.h **** 
 859:../CM3 Core/core_cm3.h **** 
 860:../CM3 Core/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
 861:../CM3 Core/core_cm3.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 862:../CM3 Core/core_cm3.h ****     \defgroup CMSIS_Core_NVICFunctions CMSIS Core NVIC Functions
 863:../CM3 Core/core_cm3.h ****   @{
 864:../CM3 Core/core_cm3.h ****  */
 865:../CM3 Core/core_cm3.h **** /** @addtogroup CMSIS_Core_NVICFunctions
 866:../CM3 Core/core_cm3.h ****  * @{
 867:../CM3 Core/core_cm3.h ****  */
 868:../CM3 Core/core_cm3.h **** /** \brief  Set Priority Grouping
 869:../CM3 Core/core_cm3.h **** 
 870:../CM3 Core/core_cm3.h ****   This function sets the priority grouping field using the required unlock sequence.
 871:../CM3 Core/core_cm3.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
 872:../CM3 Core/core_cm3.h ****   Only values from 0..7 are used.
 873:../CM3 Core/core_cm3.h ****   In case of a conflict between priority grouping and available
 874:../CM3 Core/core_cm3.h ****   priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
 875:../CM3 Core/core_cm3.h **** 
 876:../CM3 Core/core_cm3.h ****     \param [in]      PriorityGroup  Priority grouping field
 877:../CM3 Core/core_cm3.h ****  */
 878:../CM3 Core/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 879:../CM3 Core/core_cm3.h **** {
 880:../CM3 Core/core_cm3.h ****   uint32_t reg_value;
 881:../CM3 Core/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
 882:../CM3 Core/core_cm3.h **** 
 883:../CM3 Core/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
 884:../CM3 Core/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
 885:../CM3 Core/core_cm3.h ****   reg_value  =  (reg_value                       |
 886:../CM3 Core/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
 887:../CM3 Core/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
 888:../CM3 Core/core_cm3.h ****   SCB->AIRCR =  reg_value;
 889:../CM3 Core/core_cm3.h **** }
 890:../CM3 Core/core_cm3.h **** 
 891:../CM3 Core/core_cm3.h **** 
 892:../CM3 Core/core_cm3.h **** /** \brief  Get Priority Grouping
 893:../CM3 Core/core_cm3.h **** 
 894:../CM3 Core/core_cm3.h ****   This function gets the priority grouping from NVIC Interrupt Controller.
 895:../CM3 Core/core_cm3.h ****   Priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
 896:../CM3 Core/core_cm3.h **** 
 897:../CM3 Core/core_cm3.h ****     \return                Priority grouping field
 898:../CM3 Core/core_cm3.h ****  */
 899:../CM3 Core/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
 900:../CM3 Core/core_cm3.h **** {
 901:../CM3 Core/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
 902:../CM3 Core/core_cm3.h **** }
 903:../CM3 Core/core_cm3.h **** 
 904:../CM3 Core/core_cm3.h **** 
 905:../CM3 Core/core_cm3.h **** /** \brief  Enable External Interrupt
 906:../CM3 Core/core_cm3.h **** 
 907:../CM3 Core/core_cm3.h ****     This function enables a device specific interupt in the NVIC interrupt controller.
 908:../CM3 Core/core_cm3.h ****     The interrupt number cannot be a negative value.
 909:../CM3 Core/core_cm3.h **** 
 910:../CM3 Core/core_cm3.h ****     \param [in]      IRQn  Number of the external interrupt to enable
 911:../CM3 Core/core_cm3.h ****  */
 912:../CM3 Core/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 913:../CM3 Core/core_cm3.h **** {
 914:../CM3 Core/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 915:../CM3 Core/core_cm3.h **** }
 916:../CM3 Core/core_cm3.h **** 
 917:../CM3 Core/core_cm3.h **** 
 918:../CM3 Core/core_cm3.h **** /** \brief  Disable External Interrupt
 919:../CM3 Core/core_cm3.h **** 
 920:../CM3 Core/core_cm3.h ****     This function disables a device specific interupt in the NVIC interrupt controller.
 921:../CM3 Core/core_cm3.h ****     The interrupt number cannot be a negative value.
 922:../CM3 Core/core_cm3.h **** 
 923:../CM3 Core/core_cm3.h ****     \param [in]      IRQn  Number of the external interrupt to disable
 924:../CM3 Core/core_cm3.h ****  */
 925:../CM3 Core/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 926:../CM3 Core/core_cm3.h **** {
 927:../CM3 Core/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 928:../CM3 Core/core_cm3.h **** }
 929:../CM3 Core/core_cm3.h **** 
 930:../CM3 Core/core_cm3.h **** 
 931:../CM3 Core/core_cm3.h **** /** \brief  Get Pending Interrupt
 932:../CM3 Core/core_cm3.h **** 
 933:../CM3 Core/core_cm3.h ****     This function reads the pending register in the NVIC and returns the pending bit
 934:../CM3 Core/core_cm3.h ****     for the specified interrupt.
 935:../CM3 Core/core_cm3.h **** 
 936:../CM3 Core/core_cm3.h ****     \param [in]      IRQn  Number of the interrupt for get pending
 937:../CM3 Core/core_cm3.h ****     \return             0  Interrupt status is not pending
 938:../CM3 Core/core_cm3.h ****     \return             1  Interrupt status is pending
 939:../CM3 Core/core_cm3.h ****  */
 940:../CM3 Core/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 941:../CM3 Core/core_cm3.h **** {
 942:../CM3 Core/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
 943:../CM3 Core/core_cm3.h **** }
 944:../CM3 Core/core_cm3.h **** 
 945:../CM3 Core/core_cm3.h **** 
 946:../CM3 Core/core_cm3.h **** /** \brief  Set Pending Interrupt
 947:../CM3 Core/core_cm3.h **** 
 948:../CM3 Core/core_cm3.h ****     This function sets the pending bit for the specified interrupt.
 949:../CM3 Core/core_cm3.h ****     The interrupt number cannot be a negative value.
 950:../CM3 Core/core_cm3.h **** 
 951:../CM3 Core/core_cm3.h ****     \param [in]      IRQn  Number of the interrupt for set pending
 952:../CM3 Core/core_cm3.h ****  */
 953:../CM3 Core/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 954:../CM3 Core/core_cm3.h **** {
 955:../CM3 Core/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
 956:../CM3 Core/core_cm3.h **** }
 957:../CM3 Core/core_cm3.h **** 
 958:../CM3 Core/core_cm3.h **** 
 959:../CM3 Core/core_cm3.h **** /** \brief  Clear Pending Interrupt
 960:../CM3 Core/core_cm3.h **** 
 961:../CM3 Core/core_cm3.h ****     This function clears the pending bit for the specified interrupt.
 962:../CM3 Core/core_cm3.h ****     The interrupt number cannot be a negative value.
 963:../CM3 Core/core_cm3.h **** 
 964:../CM3 Core/core_cm3.h ****     \param [in]      IRQn  Number of the interrupt for clear pending
 965:../CM3 Core/core_cm3.h ****  */
 966:../CM3 Core/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 967:../CM3 Core/core_cm3.h **** {
 968:../CM3 Core/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
 969:../CM3 Core/core_cm3.h **** }
 970:../CM3 Core/core_cm3.h **** 
 971:../CM3 Core/core_cm3.h **** 
 972:../CM3 Core/core_cm3.h **** /** \brief  Get Active Interrupt
 973:../CM3 Core/core_cm3.h **** 
 974:../CM3 Core/core_cm3.h ****     This function reads the active register in NVIC and returns the active bit.
 975:../CM3 Core/core_cm3.h ****     \param [in]      IRQn  Number of the interrupt for get active
 976:../CM3 Core/core_cm3.h ****     \return             0  Interrupt status is not active
 977:../CM3 Core/core_cm3.h ****     \return             1  Interrupt status is active
 978:../CM3 Core/core_cm3.h ****  */
 979:../CM3 Core/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
 980:../CM3 Core/core_cm3.h **** {
 981:../CM3 Core/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
 982:../CM3 Core/core_cm3.h **** }
 983:../CM3 Core/core_cm3.h **** 
 984:../CM3 Core/core_cm3.h **** 
 985:../CM3 Core/core_cm3.h **** /** \brief  Set Interrupt Priority
 986:../CM3 Core/core_cm3.h **** 
 987:../CM3 Core/core_cm3.h ****     This function sets the priority for the specified interrupt. The interrupt
 988:../CM3 Core/core_cm3.h ****     number can be positive to specify an external (device specific)
 989:../CM3 Core/core_cm3.h ****     interrupt, or negative to specify an internal (core) interrupt.
 990:../CM3 Core/core_cm3.h **** 
 991:../CM3 Core/core_cm3.h ****     Note: The priority cannot be set for every core interrupt.
 992:../CM3 Core/core_cm3.h **** 
 993:../CM3 Core/core_cm3.h ****     \param [in]      IRQn  Number of the interrupt for set priority
 994:../CM3 Core/core_cm3.h ****     \param [in]  priority  Priority to set
 995:../CM3 Core/core_cm3.h ****  */
 996:../CM3 Core/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 997:../CM3 Core/core_cm3.h **** {
 998:../CM3 Core/core_cm3.h ****   if(IRQn < 0) {
 999:../CM3 Core/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1000:../CM3 Core/core_cm3.h ****   else {
1001:../CM3 Core/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 1140              		.loc 2 1001 0
 1141 048e 0D4B     		ldr	r3, .L128+20
 1142 0490 4821     		movs	r1, #72
 1143 0492 83F80513 		strb	r1, [r3, #773]
 1144              	.LVL101:
 1145              	.LBE57:
 1146              	.LBE56:
 1147              	.LBB58:
 1148              	.LBB59:
 914:../CM3 Core/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 1149              		.loc 2 914 0
 1150 0496 2020     		movs	r0, #32
 1151 0498 07E0     		b	.L127
 1152              	.LVL102:
 1153              	.L124:
 1154              	.LBE59:
 1155              	.LBE58:
 395:../Source Files/lpc17xx_uart.c **** 	else if(UARTx == LPC_UART2)
 1156              		.loc 1 395 0
 1157 049a 0749     		ldr	r1, .L128+8
 1158 049c 8C42     		cmp	r4, r1
 1159 049e 05D1     		bne	.L118
 1160              	.LVL103:
 1161              	.LBB60:
 1162              	.LBB61:
 1163              		.loc 2 1001 0
 1164 04a0 084B     		ldr	r3, .L128+20
 1165 04a2 1022     		movs	r2, #16
 1166 04a4 83F80723 		strb	r2, [r3, #775]
 1167              	.LVL104:
 1168              	.LBE61:
 1169              	.LBE60:
 1170              	.LBB62:
 1171              	.LBB63:
 914:../CM3 Core/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 1172              		.loc 2 914 0
 1173 04a8 8020     		movs	r0, #128
 1174              	.LVL105:
 1175              	.L127:
 1176 04aa 1860     		str	r0, [r3, #0]
 1177              	.L118:
 1178              	.LBE63:
 1179              	.LBE62:
 404:../Source Files/lpc17xx_uart.c **** }
 1180              		.loc 1 404 0
 1181 04ac 06B0     		add	sp, sp, #24
 1182 04ae 70BD     		pop	{r4, r5, r6, pc}
 1183              	.L129:
 1184              		.align	2
 1185              	.L128:
 1186 04b0 00C00040 		.word	1073790976
 1187 04b4 00000140 		.word	1073807360
 1188 04b8 00800940 		.word	1074364416
 1189 04bc 00000000 		.word	rb
 1190 04c0 00000000 		.word	TxIntStat
 1191 04c4 00E100E0 		.word	-536813312
 1192              		.cfi_endproc
 1193              	.LFE58:
 1195              		.align	1
 1196              		.global	UART_FIFOConfigStructInit
 1197              		.thumb
 1198              		.thumb_func
 1200              	UART_FIFOConfigStructInit:
 1201              	.LFB73:
1432:../Source Files/lpc17xx_uart.c **** {
 1202              		.loc 1 1432 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 0
 1205              		@ frame_needed = 0, uses_anonymous_args = 0
 1206              		@ link register save eliminated.
 1207              	.LVL106:
1433:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_DMAMode = DISABLE;
 1208              		.loc 1 1433 0
 1209 04c8 0023     		movs	r3, #0
1435:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_ResetRxBuf = ENABLE;
 1210              		.loc 1 1435 0
 1211 04ca 0121     		movs	r1, #1
1433:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_DMAMode = DISABLE;
 1212              		.loc 1 1433 0
 1213 04cc 8370     		strb	r3, [r0, #2]
1434:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_Level = UART_FIFO_TRGLEV0;
 1214              		.loc 1 1434 0
 1215 04ce C370     		strb	r3, [r0, #3]
1435:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_ResetRxBuf = ENABLE;
 1216              		.loc 1 1435 0
 1217 04d0 0170     		strb	r1, [r0, #0]
1436:../Source Files/lpc17xx_uart.c **** 	UART_FIFOInitStruct->FIFO_ResetTxBuf = ENABLE;
 1218              		.loc 1 1436 0
 1219 04d2 4170     		strb	r1, [r0, #1]
 1220 04d4 7047     		bx	lr
 1221              		.cfi_endproc
 1222              	.LFE73:
 1224              		.align	1
 1225              		.global	UART_ABCmd
 1226              		.thumb
 1227              		.thumb_func
 1229              	UART_ABCmd:
 1230              	.LFB74:
1459:../Source Files/lpc17xx_uart.c **** {
 1231              		.loc 1 1459 0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 0
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235              		@ link register save eliminated.
 1236              	.LVL107:
1466:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE) {
 1237              		.loc 1 1466 0
 1238 04d6 012A     		cmp	r2, #1
 1239 04d8 4FF00003 		mov	r3, #0
 1240 04dc 20D1     		bne	.L138
1467:../Source Files/lpc17xx_uart.c **** 		if (ABConfigStruct->ABMode == UART_AUTOBAUD_MODE1){
 1241              		.loc 1 1467 0
 1242 04de 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
1470:../Source Files/lpc17xx_uart.c **** 		if (ABConfigStruct->AutoRestart == ENABLE){
 1243              		.loc 1 1470 0
 1244 04e0 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1245              	.LVL108:
1465:../Source Files/lpc17xx_uart.c **** 	tmp = 0;
 1246              		.loc 1 1465 0
 1247 04e2 012B     		cmp	r3, #1
 1248 04e4 0CBF     		ite	eq
 1249 04e6 0223     		moveq	r3, #2
 1250 04e8 0023     		movne	r3, #0
 1251              	.LVL109:
1470:../Source Files/lpc17xx_uart.c **** 		if (ABConfigStruct->AutoRestart == ENABLE){
 1252              		.loc 1 1470 0
 1253 04ea 012A     		cmp	r2, #1
 1254 04ec 01D1     		bne	.L134
1471:../Source Files/lpc17xx_uart.c **** 			tmp |= UART_ACR_AUTO_RESTART;
 1255              		.loc 1 1471 0
 1256 04ee 43F00403 		orr	r3, r3, #4
 1257              	.LVL110:
 1258              	.L134:
1480:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 1259              		.loc 1 1480 0
 1260 04f2 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
1475:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 1261              		.loc 1 1475 0
 1262 04f4 0B49     		ldr	r1, .L145
 1263              	.LVL111:
 1264 04f6 8842     		cmp	r0, r1
1480:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 1265              		.loc 1 1480 0
 1266 04f8 42F08001 		orr	r1, r2, #128
1481:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->DLL = 0;
 1267              		.loc 1 1481 0
 1268 04fc 4FF00002 		mov	r2, #0
1480:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR |= UART_LCR_DLAB_EN;
 1269              		.loc 1 1480 0
 1270 0500 0173     		strb	r1, [r0, #12]
1481:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->DLL = 0;
 1271              		.loc 1 1481 0
 1272 0502 0270     		strb	r2, [r0, #0]
1482:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->DLM = 0;
 1273              		.loc 1 1482 0
 1274 0504 0271     		strb	r2, [r0, #4]
1483:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->LCR &= ~UART_LCR_DLAB_EN;
 1275              		.loc 1 1483 0
 1276 0506 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 1277 0508 01F07F02 		and	r2, r1, #127
 1278 050c 0273     		strb	r2, [r0, #12]
1485:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->FDR = 0x10;
 1279              		.loc 1 1485 0
 1280 050e 4FF01001 		mov	r1, #16
1475:../Source Files/lpc17xx_uart.c **** 	if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
 1281              		.loc 1 1475 0
 1282 0512 02D0     		beq	.L144
 1283              	.L141:
1503:../Source Files/lpc17xx_uart.c **** 			UARTx->FDR = 0x10;
 1284              		.loc 1 1503 0
 1285 0514 80F82810 		strb	r1, [r0, #40]
 1286 0518 00E0     		b	.L143
 1287              	.L144:
1485:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->FDR = 0x10;
 1288              		.loc 1 1485 0
 1289 051a 8162     		str	r1, [r0, #40]
 1290              	.L143:
1486:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->ACR = UART_ACR_START | tmp;
 1291              		.loc 1 1486 0
 1292 051c 43F00103 		orr	r3, r3, #1
 1293              	.LVL112:
 1294              	.L138:
1490:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->ACR = 0;
 1295              		.loc 1 1490 0
 1296 0520 0362     		str	r3, [r0, #32]
 1297 0522 7047     		bx	lr
 1298              	.L146:
 1299              		.align	2
 1300              	.L145:
 1301 0524 00000140 		.word	1073807360
 1302              		.cfi_endproc
 1303              	.LFE74:
 1305              		.align	1
 1306              		.global	UART_ABClearIntPending
 1307              		.thumb
 1308              		.thumb_func
 1310              	UART_ABClearIntPending:
 1311              	.LFB75:
1526:../Source Files/lpc17xx_uart.c **** {
 1312              		.loc 1 1526 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 0
 1315              		@ frame_needed = 0, uses_anonymous_args = 0
 1316              		@ link register save eliminated.
 1317              	.LVL113:
1530:../Source Files/lpc17xx_uart.c **** 		UARTx->ACR |= ABIntType;
 1318              		.loc 1 1530 0
 1319 0528 026A     		ldr	r2, [r0, #32]
 1320 052a 1143     		orrs	r1, r1, r2
 1321              	.LVL114:
 1322 052c 0162     		str	r1, [r0, #32]
 1323 052e 7047     		bx	lr
 1324              		.cfi_endproc
 1325              	.LFE75:
 1327              		.align	1
 1328              		.global	UART_TxCmd
 1329              		.thumb
 1330              		.thumb_func
 1332              	UART_TxCmd:
 1333              	.LFB76:
1549:../Source Files/lpc17xx_uart.c **** {
 1334              		.loc 1 1549 0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338              		@ link register save eliminated.
 1339              	.LVL115:
1553:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 1340              		.loc 1 1553 0
 1341 0530 0129     		cmp	r1, #1
 1342 0532 06D1     		bne	.L151
 1343              	.LVL116:
 1344              	.LBB66:
 1345              	.LBB67:
 1346              		.loc 1 1557 0
 1347 0534 90F83020 		ldrb	r2, [r0, #48]	@ zero_extendqisi2
 1348 0538 42F08003 		orr	r3, r2, #128
 1349 053c 80F83030 		strb	r3, [r0, #48]
 1350 0540 7047     		bx	lr
 1351              	.LVL117:
 1352              	.L151:
 1353 0542 4FF00001 		mov	r1, #0
 1354              	.LVL118:
 1355              	.LBE67:
 1356              	.LBE66:
1558:../Source Files/lpc17xx_uart.c **** 		}
1559:../Source Files/lpc17xx_uart.c **** 		else
1560:../Source Files/lpc17xx_uart.c **** 		{
1561:../Source Files/lpc17xx_uart.c **** 			UARTx->TER |= UART_TER_TXEN;
1562:../Source Files/lpc17xx_uart.c **** 		}
1563:../Source Files/lpc17xx_uart.c **** 	}
1564:../Source Files/lpc17xx_uart.c **** 	else
1565:../Source Files/lpc17xx_uart.c **** 	{
1566:../Source Files/lpc17xx_uart.c **** 		if (((LPC_UART1_TypeDef *)UARTx) == LPC_UART1)
1567:../Source Files/lpc17xx_uart.c **** 		{
1568:../Source Files/lpc17xx_uart.c **** 			((LPC_UART1_TypeDef *)UARTx)->TER &= (~UART_TER_TXEN) & UART_TER_BITMASK;
 1357              		.loc 1 1568 0
 1358 0546 90F83020 		ldrb	r2, [r0, #48]	@ zero_extendqisi2
 1359 054a 80F83010 		strb	r1, [r0, #48]
 1360 054e 7047     		bx	lr
 1361              		.cfi_endproc
 1362              	.LFE76:
 1364              		.align	1
 1365              		.global	UART_DeInit
 1366              		.thumb
 1367              		.thumb_func
 1369              	UART_DeInit:
 1370              	.LFB60:
 627:../Source Files/lpc17xx_uart.c **** {
 1371              		.loc 1 627 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              		@ link register save eliminated.
 1376              	.LVL119:
 631:../Source Files/lpc17xx_uart.c **** 	UART_TxCmd(UARTx, DISABLE);
 1377              		.loc 1 631 0
 1378 0550 0021     		movs	r1, #0
 664:../Source Files/lpc17xx_uart.c **** }
 1379              		.loc 1 664 0
 631:../Source Files/lpc17xx_uart.c **** 	UART_TxCmd(UARTx, DISABLE);
 1380              		.loc 1 631 0
 1381 0552 FFF7FEBF 		b	UART_TxCmd
 1382              	.LVL120:
 1383              		.cfi_endproc
 1384              	.LFE60:
 1386              		.align	1
 1387              		.global	UART_IrDAInvtInputCmd
 1388              		.thumb
 1389              		.thumb_func
 1391              	UART_IrDAInvtInputCmd:
 1392              	.LFB77:
1569:../Source Files/lpc17xx_uart.c **** 		}
1570:../Source Files/lpc17xx_uart.c **** 		else
1571:../Source Files/lpc17xx_uart.c **** 		{
1572:../Source Files/lpc17xx_uart.c **** 			UARTx->TER &= (~UART_TER_TXEN) & UART_TER_BITMASK;
1573:../Source Files/lpc17xx_uart.c **** 		}
1574:../Source Files/lpc17xx_uart.c **** 	}
1575:../Source Files/lpc17xx_uart.c **** }
1576:../Source Files/lpc17xx_uart.c **** 
1577:../Source Files/lpc17xx_uart.c **** /* UART IrDA functions ---------------------------------------------------*/
1578:../Source Files/lpc17xx_uart.c **** 
1579:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1580:../Source Files/lpc17xx_uart.c ****  * @brief		Enable or disable inverting serial input function of IrDA
1581:../Source Files/lpc17xx_uart.c ****  * 				on UART peripheral.
1582:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be LPC_UART3 (only)
1583:../Source Files/lpc17xx_uart.c ****  * @param[in]	NewState New state of inverting serial input, should be:
1584:../Source Files/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function.
1585:../Source Files/lpc17xx_uart.c ****  * 				- DISABLE: Disable this function.
1586:../Source Files/lpc17xx_uart.c ****  * @return none
1587:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1588:../Source Files/lpc17xx_uart.c **** void UART_IrDAInvtInputCmd(LPC_UART_TypeDef* UARTx, FunctionalState NewState)
1589:../Source Files/lpc17xx_uart.c **** {
 1393              		.loc 1 1589 0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 0
 1396              		@ frame_needed = 0, uses_anonymous_args = 0
 1397              		@ link register save eliminated.
 1398              	.LVL121:
1590:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
1591:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1592:../Source Files/lpc17xx_uart.c **** 
1593:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 1399              		.loc 1 1593 0
 1400 0556 0129     		cmp	r1, #1
 1401 0558 04D1     		bne	.L157
1594:../Source Files/lpc17xx_uart.c **** 	{
1595:../Source Files/lpc17xx_uart.c **** 		UARTx->ICR |= UART_ICR_IRDAINV;
 1402              		.loc 1 1595 0
 1403 055a 90F82420 		ldrb	r2, [r0, #36]	@ zero_extendqisi2
 1404 055e 42F00201 		orr	r1, r2, #2
 1405              	.LVL122:
 1406 0562 04E0     		b	.L159
 1407              	.LVL123:
 1408              	.L157:
1596:../Source Files/lpc17xx_uart.c **** 	}
1597:../Source Files/lpc17xx_uart.c **** 	else if (NewState == DISABLE)
 1409              		.loc 1 1597 0
 1410 0564 29B9     		cbnz	r1, .L156
1598:../Source Files/lpc17xx_uart.c **** 	{
1599:../Source Files/lpc17xx_uart.c **** 		UARTx->ICR &= (~UART_ICR_IRDAINV) & UART_ICR_BITMASK;
 1411              		.loc 1 1599 0
 1412 0566 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1413 056a 03F03D01 		and	r1, r3, #61
 1414              	.LVL124:
 1415              	.L159:
 1416 056e 80F82410 		strb	r1, [r0, #36]
 1417              	.L156:
 1418 0572 7047     		bx	lr
 1419              		.cfi_endproc
 1420              	.LFE77:
 1422              		.align	1
 1423              		.global	UART_IrDACmd
 1424              		.thumb
 1425              		.thumb_func
 1427              	UART_IrDACmd:
 1428              	.LFB78:
1600:../Source Files/lpc17xx_uart.c **** 	}
1601:../Source Files/lpc17xx_uart.c **** }
1602:../Source Files/lpc17xx_uart.c **** 
1603:../Source Files/lpc17xx_uart.c **** 
1604:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1605:../Source Files/lpc17xx_uart.c ****  * @brief		Enable or disable IrDA function on UART peripheral.
1606:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be LPC_UART3 (only)
1607:../Source Files/lpc17xx_uart.c ****  * @param[in]	NewState New state of IrDA function, should be:
1608:../Source Files/lpc17xx_uart.c ****  * 				- ENABLE: Enable this function.
1609:../Source Files/lpc17xx_uart.c ****  * 				- DISABLE: Disable this function.
1610:../Source Files/lpc17xx_uart.c ****  * @return none
1611:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1612:../Source Files/lpc17xx_uart.c **** void UART_IrDACmd(LPC_UART_TypeDef* UARTx, FunctionalState NewState)
1613:../Source Files/lpc17xx_uart.c **** {
 1429              		.loc 1 1613 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              		@ link register save eliminated.
 1434              	.LVL125:
1614:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
1615:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1616:../Source Files/lpc17xx_uart.c **** 
1617:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE)
1618:../Source Files/lpc17xx_uart.c **** 	{
1619:../Source Files/lpc17xx_uart.c **** 		UARTx->ICR |= UART_ICR_IRDAEN;
 1435              		.loc 1 1619 0
 1436 0574 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
1617:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 1437              		.loc 1 1617 0
 1438 0578 0129     		cmp	r1, #1
 1439              		.loc 1 1619 0
 1440 057a 0CBF     		ite	eq
 1441 057c 43F00103 		orreq	r3, r3, #1
1620:../Source Files/lpc17xx_uart.c **** 	}
1621:../Source Files/lpc17xx_uart.c **** 	else
1622:../Source Files/lpc17xx_uart.c **** 	{
1623:../Source Files/lpc17xx_uart.c **** 		UARTx->ICR &= (~UART_ICR_IRDAEN) & UART_ICR_BITMASK;
 1442              		.loc 1 1623 0
 1443 0580 03F03E03 		andne	r3, r3, #62
 1444 0584 80F82430 		strb	r3, [r0, #36]
 1445 0588 7047     		bx	lr
 1446              		.cfi_endproc
 1447              	.LFE78:
 1449              		.align	1
 1450              		.global	UART_IrDAPulseDivConfig
 1451              		.thumb
 1452              		.thumb_func
 1454              	UART_IrDAPulseDivConfig:
 1455              	.LFB79:
1624:../Source Files/lpc17xx_uart.c **** 	}
1625:../Source Files/lpc17xx_uart.c **** }
1626:../Source Files/lpc17xx_uart.c **** 
1627:../Source Files/lpc17xx_uart.c **** 
1628:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1629:../Source Files/lpc17xx_uart.c ****  * @brief		Configure Pulse divider for IrDA function on UART peripheral.
1630:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx UART peripheral selected, should be LPC_UART3 (only)
1631:../Source Files/lpc17xx_uart.c ****  * @param[in]	PulseDiv Pulse Divider value from Peripheral clock,
1632:../Source Files/lpc17xx_uart.c ****  * 				should be one of the following:
1633:../Source Files/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV2 	: Pulse width = 2 * Tpclk
1634:../Source Files/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV4 	: Pulse width = 4 * Tpclk
1635:../Source Files/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV8 	: Pulse width = 8 * Tpclk
1636:../Source Files/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV16 	: Pulse width = 16 * Tpclk
1637:../Source Files/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV32 	: Pulse width = 32 * Tpclk
1638:../Source Files/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV64 	: Pulse width = 64 * Tpclk
1639:../Source Files/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV128 : Pulse width = 128 * Tpclk
1640:../Source Files/lpc17xx_uart.c **** 				- UART_IrDA_PULSEDIV256 : Pulse width = 256 * Tpclk
1641:../Source Files/lpc17xx_uart.c **** 
1642:../Source Files/lpc17xx_uart.c ****  * @return none
1643:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1644:../Source Files/lpc17xx_uart.c **** void UART_IrDAPulseDivConfig(LPC_UART_TypeDef *UARTx, UART_IrDA_PULSE_Type PulseDiv)
1645:../Source Files/lpc17xx_uart.c **** {
 1456              		.loc 1 1645 0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 0
 1459              		@ frame_needed = 0, uses_anonymous_args = 0
 1460              		@ link register save eliminated.
 1461              	.LVL126:
1646:../Source Files/lpc17xx_uart.c **** 	uint32_t tmp, tmp1;
1647:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA(UARTx));
1648:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_IrDA_PULSEDIV(PulseDiv));
1649:../Source Files/lpc17xx_uart.c **** 
1650:../Source Files/lpc17xx_uart.c **** 	tmp1 = UART_ICR_PULSEDIV(PulseDiv);
1651:../Source Files/lpc17xx_uart.c **** 	tmp = UARTx->ICR & (~UART_ICR_PULSEDIV(7));
 1462              		.loc 1 1651 0
 1463 058a 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1464              	.LVL127:
1650:../Source Files/lpc17xx_uart.c **** 	tmp1 = UART_ICR_PULSEDIV(PulseDiv);
 1465              		.loc 1 1650 0
 1466 058e 01F00701 		and	r1, r1, #7
 1467              	.LVL128:
 1468              		.loc 1 1651 0
 1469 0592 03F0C702 		and	r2, r3, #199
1652:../Source Files/lpc17xx_uart.c **** 	tmp |= tmp1 | UART_ICR_FIXPULSE_EN;
 1470              		.loc 1 1652 0
 1471 0596 42EAC103 		orr	r3, r2, r1, lsl #3
 1472              	.LVL129:
1653:../Source Files/lpc17xx_uart.c **** 	UARTx->ICR = tmp & UART_ICR_BITMASK;
 1473              		.loc 1 1653 0
 1474 059a 03F03F01 		and	r1, r3, #63
 1475 059e 41F00402 		orr	r2, r1, #4
 1476 05a2 80F82420 		strb	r2, [r0, #36]
 1477 05a6 7047     		bx	lr
 1478              		.cfi_endproc
 1479              	.LFE79:
 1481              		.align	1
 1482              		.global	UART_FullModemForcePinState
 1483              		.thumb
 1484              		.thumb_func
 1486              	UART_FullModemForcePinState:
 1487              	.LFB80:
1654:../Source Files/lpc17xx_uart.c **** }
1655:../Source Files/lpc17xx_uart.c **** 
1656:../Source Files/lpc17xx_uart.c **** 
1657:../Source Files/lpc17xx_uart.c **** 
1658:../Source Files/lpc17xx_uart.c **** /* UART1 FullModem function ---------------------------------------------*/
1659:../Source Files/lpc17xx_uart.c **** 
1660:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1661:../Source Files/lpc17xx_uart.c ****  * @brief		Force pin DTR/RTS corresponding to given state (Full modem mode)
1662:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1663:../Source Files/lpc17xx_uart.c ****  * @param[in]	Pin	Pin that NewState will be applied to, should be:
1664:../Source Files/lpc17xx_uart.c ****  * 				- UART1_MODEM_PIN_DTR: DTR pin.
1665:../Source Files/lpc17xx_uart.c ****  * 				- UART1_MODEM_PIN_RTS: RTS pin.
1666:../Source Files/lpc17xx_uart.c ****  * @param[in]	NewState New State of DTR/RTS pin, should be:
1667:../Source Files/lpc17xx_uart.c ****  * 				- INACTIVE: Force the pin to inactive signal.
1668:../Source Files/lpc17xx_uart.c **** 				- ACTIVE: Force the pin to active signal.
1669:../Source Files/lpc17xx_uart.c ****  * @return none
1670:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1671:../Source Files/lpc17xx_uart.c **** void UART_FullModemForcePinState(LPC_UART1_TypeDef *UARTx, UART_MODEM_PIN_Type Pin, \
1672:../Source Files/lpc17xx_uart.c **** 							UART1_SignalState NewState)
1673:../Source Files/lpc17xx_uart.c **** {
 1488              		.loc 1 1673 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
 1493              	.LVL130:
 1494 05a8 0129     		cmp	r1, #1
 1495 05aa 9DBF     		ittte	ls
 1496 05ac 064B     		ldrls	r3, .L171
 1497 05ae 5918     		addls	r1, r3, r1
 1498              	.LVL131:
 1499 05b0 CB78     		ldrbls	r3, [r1, #3]	@ zero_extendqisi2
 1500              		.loc 1 1673 0
 1501 05b2 0023     		movhi	r3, #0
 1502              	.LVL132:
1674:../Source Files/lpc17xx_uart.c **** 	uint8_t tmp = 0;
1675:../Source Files/lpc17xx_uart.c **** 
1676:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1677:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM_PIN(Pin));
1678:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_SIGNALSTATE(NewState));
1679:../Source Files/lpc17xx_uart.c **** 
1680:../Source Files/lpc17xx_uart.c **** 	switch (Pin){
1681:../Source Files/lpc17xx_uart.c **** 	case UART1_MODEM_PIN_DTR:
1682:../Source Files/lpc17xx_uart.c **** 		tmp = UART1_MCR_DTR_CTRL;
1683:../Source Files/lpc17xx_uart.c **** 		break;
1684:../Source Files/lpc17xx_uart.c **** 	case UART1_MODEM_PIN_RTS:
1685:../Source Files/lpc17xx_uart.c **** 		tmp = UART1_MCR_RTS_CTRL;
1686:../Source Files/lpc17xx_uart.c **** 		break;
1687:../Source Files/lpc17xx_uart.c **** 	default:
1688:../Source Files/lpc17xx_uart.c **** 		break;
1689:../Source Files/lpc17xx_uart.c **** 	}
1690:../Source Files/lpc17xx_uart.c **** 
1691:../Source Files/lpc17xx_uart.c **** 	if (NewState == ACTIVE){
 1503              		.loc 1 1691 0
 1504 05b4 012A     		cmp	r2, #1
1692:../Source Files/lpc17xx_uart.c **** 		UARTx->MCR |= tmp;
 1505              		.loc 1 1692 0
 1506 05b6 027C     		ldrb	r2, [r0, #16]	@ zero_extendqisi2
 1507              	.LVL133:
1693:../Source Files/lpc17xx_uart.c **** 	} else {
1694:../Source Files/lpc17xx_uart.c **** 		UARTx->MCR &= (~tmp) & UART1_MCR_BITMASK;
 1508              		.loc 1 1694 0
 1509 05b8 16BF     		itet	ne
 1510 05ba 22F00C02 		bicne	r2, r2, #12
1692:../Source Files/lpc17xx_uart.c **** 		UARTx->MCR |= tmp;
 1511              		.loc 1 1692 0
 1512 05be 1343     		orreq	r3, r3, r2
 1513              	.LVL134:
 1514              		.loc 1 1694 0
 1515 05c0 22EA0303 		bicne	r3, r2, r3
 1516 05c4 0374     		strb	r3, [r0, #16]
 1517 05c6 7047     		bx	lr
 1518              	.L172:
 1519              		.align	2
 1520              	.L171:
 1521 05c8 00000000 		.word	.LANCHOR0
 1522              		.cfi_endproc
 1523              	.LFE80:
 1525              		.align	1
 1526              		.global	UART_FullModemConfigMode
 1527              		.thumb
 1528              		.thumb_func
 1530              	UART_FullModemConfigMode:
 1531              	.LFB81:
1695:../Source Files/lpc17xx_uart.c **** 	}
1696:../Source Files/lpc17xx_uart.c **** }
1697:../Source Files/lpc17xx_uart.c **** 
1698:../Source Files/lpc17xx_uart.c **** 
1699:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1700:../Source Files/lpc17xx_uart.c ****  * @brief		Configure Full Modem mode for UART peripheral
1701:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1702:../Source Files/lpc17xx_uart.c ****  * @param[in]	Mode Full Modem mode, should be:
1703:../Source Files/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_LOOPBACK: Loop back mode.
1704:../Source Files/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_AUTO_RTS: Auto-RTS mode.
1705:../Source Files/lpc17xx_uart.c ****  * 				- UART1_MODEM_MODE_AUTO_CTS: Auto-CTS mode.
1706:../Source Files/lpc17xx_uart.c ****  * @param[in]	NewState New State of this mode, should be:
1707:../Source Files/lpc17xx_uart.c ****  * 				- ENABLE: Enable this mode.
1708:../Source Files/lpc17xx_uart.c **** 				- DISABLE: Disable this mode.
1709:../Source Files/lpc17xx_uart.c ****  * @return none
1710:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1711:../Source Files/lpc17xx_uart.c **** void UART_FullModemConfigMode(LPC_UART1_TypeDef *UARTx, UART_MODEM_MODE_Type Mode, \
1712:../Source Files/lpc17xx_uart.c **** 							FunctionalState NewState)
1713:../Source Files/lpc17xx_uart.c **** {
 1532              		.loc 1 1713 0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              		@ link register save eliminated.
 1537              	.LVL135:
1714:../Source Files/lpc17xx_uart.c **** 	uint8_t tmp;
1715:../Source Files/lpc17xx_uart.c **** 
1716:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1717:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM_MODE(Mode));
1718:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
1719:../Source Files/lpc17xx_uart.c **** 
1720:../Source Files/lpc17xx_uart.c **** 	switch(Mode){
 1538              		.loc 1 1720 0
 1539 05cc 0129     		cmp	r1, #1
 1540 05ce 05D0     		beq	.L176
 1541 05d0 06D3     		bcc	.L180
1721:../Source Files/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_LOOPBACK:
1722:../Source Files/lpc17xx_uart.c **** 		tmp = UART1_MCR_LOOPB_EN;
1723:../Source Files/lpc17xx_uart.c **** 		break;
1724:../Source Files/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_AUTO_RTS:
1725:../Source Files/lpc17xx_uart.c **** 		tmp = UART1_MCR_AUTO_RTS_EN;
1726:../Source Files/lpc17xx_uart.c **** 		break;
1727:../Source Files/lpc17xx_uart.c **** 	case UART1_MODEM_MODE_AUTO_CTS:
1728:../Source Files/lpc17xx_uart.c **** 		tmp = UART1_MCR_AUTO_CTS_EN;
 1542              		.loc 1 1728 0
 1543 05d2 0229     		cmp	r1, #2
 1544 05d4 14BF     		ite	ne
 1545 05d6 0021     		movne	r1, #0
 1546 05d8 8021     		moveq	r1, #128
 1547              	.LVL136:
 1548 05da 02E0     		b	.L175
 1549              	.LVL137:
 1550              	.L176:
1725:../Source Files/lpc17xx_uart.c **** 		tmp = UART1_MCR_AUTO_RTS_EN;
 1551              		.loc 1 1725 0
 1552 05dc 4021     		movs	r1, #64
 1553              	.LVL138:
1726:../Source Files/lpc17xx_uart.c **** 		break;
 1554              		.loc 1 1726 0
 1555 05de 00E0     		b	.L175
 1556              	.LVL139:
 1557              	.L180:
1722:../Source Files/lpc17xx_uart.c **** 		tmp = UART1_MCR_LOOPB_EN;
 1558              		.loc 1 1722 0
 1559 05e0 1021     		movs	r1, #16
 1560              	.LVL140:
 1561              	.L175:
1729:../Source Files/lpc17xx_uart.c **** 		break;
1730:../Source Files/lpc17xx_uart.c **** 	default:
1731:../Source Files/lpc17xx_uart.c **** 		break;
1732:../Source Files/lpc17xx_uart.c **** 	}
1733:../Source Files/lpc17xx_uart.c **** 
1734:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE)
1735:../Source Files/lpc17xx_uart.c **** 	{
1736:../Source Files/lpc17xx_uart.c **** 		UARTx->MCR |= tmp;
 1562              		.loc 1 1736 0
 1563 05e2 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
1734:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE)
 1564              		.loc 1 1734 0
 1565 05e4 012A     		cmp	r2, #1
1737:../Source Files/lpc17xx_uart.c **** 	}
1738:../Source Files/lpc17xx_uart.c **** 	else
1739:../Source Files/lpc17xx_uart.c **** 	{
1740:../Source Files/lpc17xx_uart.c **** 		UARTx->MCR &= (~tmp) & UART1_MCR_BITMASK;
 1566              		.loc 1 1740 0
 1567 05e6 16BF     		itet	ne
 1568 05e8 23F00C03 		bicne	r3, r3, #12
1736:../Source Files/lpc17xx_uart.c **** 		UARTx->MCR |= tmp;
 1569              		.loc 1 1736 0
 1570 05ec 1943     		orreq	r1, r1, r3
 1571              		.loc 1 1740 0
 1572 05ee 23EA0101 		bicne	r1, r3, r1
 1573 05f2 0174     		strb	r1, [r0, #16]
 1574 05f4 7047     		bx	lr
 1575              		.cfi_endproc
 1576              	.LFE81:
 1578              		.align	1
 1579              		.global	UART_FullModemGetStatus
 1580              		.thumb
 1581              		.thumb_func
 1583              	UART_FullModemGetStatus:
 1584              	.LFB82:
1741:../Source Files/lpc17xx_uart.c **** 	}
1742:../Source Files/lpc17xx_uart.c **** }
1743:../Source Files/lpc17xx_uart.c **** 
1744:../Source Files/lpc17xx_uart.c **** 
1745:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1746:../Source Files/lpc17xx_uart.c ****  * @brief		Get current status of modem status register
1747:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1748:../Source Files/lpc17xx_uart.c ****  * @return 		Current value of modem status register
1749:../Source Files/lpc17xx_uart.c ****  * Note:	The return value of this function must be ANDed with each member
1750:../Source Files/lpc17xx_uart.c ****  * 			UART_MODEM_STAT_type enumeration to determine current flag status
1751:../Source Files/lpc17xx_uart.c ****  * 			corresponding to each modem flag status. Because some flags in
1752:../Source Files/lpc17xx_uart.c ****  * 			modem status register will be cleared after reading, the next reading
1753:../Source Files/lpc17xx_uart.c ****  * 			modem register could not be correct. So this function used to
1754:../Source Files/lpc17xx_uart.c ****  * 			read modem status register in one time only, then the return value
1755:../Source Files/lpc17xx_uart.c ****  * 			used to check all flags.
1756:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1757:../Source Files/lpc17xx_uart.c **** uint8_t UART_FullModemGetStatus(LPC_UART1_TypeDef *UARTx)
1758:../Source Files/lpc17xx_uart.c **** {
 1585              		.loc 1 1758 0
 1586              		.cfi_startproc
 1587              		@ args = 0, pretend = 0, frame = 0
 1588              		@ frame_needed = 0, uses_anonymous_args = 0
 1589              		@ link register save eliminated.
 1590              	.LVL141:
1759:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1760:../Source Files/lpc17xx_uart.c **** 	return ((UARTx->MSR) & UART1_MSR_BITMASK);
 1591              		.loc 1 1760 0
 1592 05f6 007E     		ldrb	r0, [r0, #24]	@ zero_extendqisi2
 1593              	.LVL142:
1761:../Source Files/lpc17xx_uart.c **** }
 1594              		.loc 1 1761 0
 1595 05f8 7047     		bx	lr
 1596              		.cfi_endproc
 1597              	.LFE82:
 1599              		.align	1
 1600              		.global	UART_RS485Config
 1601              		.thumb
 1602              		.thumb_func
 1604              	UART_RS485Config:
 1605              	.LFB83:
1762:../Source Files/lpc17xx_uart.c **** 
1763:../Source Files/lpc17xx_uart.c **** 
1764:../Source Files/lpc17xx_uart.c **** /* UART RS485 functions --------------------------------------------------------------*/
1765:../Source Files/lpc17xx_uart.c **** 
1766:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1767:../Source Files/lpc17xx_uart.c ****  * @brief		Configure UART peripheral in RS485 mode according to the specified
1768:../Source Files/lpc17xx_uart.c **** *               parameters in the RS485ConfigStruct.
1769:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1770:../Source Files/lpc17xx_uart.c ****  * @param[in]	RS485ConfigStruct Pointer to a UART1_RS485_CTRLCFG_Type structure
1771:../Source Files/lpc17xx_uart.c **** *                    that contains the configuration information for specified UART
1772:../Source Files/lpc17xx_uart.c **** *                    in RS485 mode.
1773:../Source Files/lpc17xx_uart.c ****  * @return		None
1774:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1775:../Source Files/lpc17xx_uart.c **** void UART_RS485Config(LPC_UART1_TypeDef *UARTx, UART1_RS485_CTRLCFG_Type *RS485ConfigStruct)
1776:../Source Files/lpc17xx_uart.c **** {
 1606              		.loc 1 1776 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              		@ link register save eliminated.
 1611              	.LVL143:
1777:../Source Files/lpc17xx_uart.c **** 	uint32_t tmp;
1778:../Source Files/lpc17xx_uart.c **** 
1779:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_MODEM(UARTx));
1780:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->AutoAddrDetect_State));
1781:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->AutoDirCtrl_State));
1782:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_RS485_CFG_DELAYVALUE(RS485ConfigStruct->DelayValue));
1783:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_SETSTATE(RS485ConfigStruct->DirCtrlPol_Level));
1784:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART_RS485_DIRCTRL_PIN(RS485ConfigStruct->DirCtrlPin));
1785:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_UART1_RS485_CFG_MATCHADDRVALUE(RS485ConfigStruct->MatchAddrValue));
1786:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->NormalMultiDropMode_State));
1787:../Source Files/lpc17xx_uart.c **** 	CHECK_PARAM(PARAM_FUNCTIONALSTATE(RS485ConfigStruct->Rx_State));
1788:../Source Files/lpc17xx_uart.c **** 
1789:../Source Files/lpc17xx_uart.c **** 	tmp = 0;
1790:../Source Files/lpc17xx_uart.c **** 	// If Auto Direction Control is enabled -  This function is used in Master mode
1791:../Source Files/lpc17xx_uart.c **** 	if (RS485ConfigStruct->AutoDirCtrl_State == ENABLE)
 1612              		.loc 1 1791 0
 1613 05fa CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 1614 05fc 012B     		cmp	r3, #1
 1615 05fe 0DD1     		bne	.L190
 1616              	.LVL144:
1792:../Source Files/lpc17xx_uart.c **** 	{
1793:../Source Files/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_DCTRL_EN;
1794:../Source Files/lpc17xx_uart.c **** 
1795:../Source Files/lpc17xx_uart.c **** 		// Set polar
1796:../Source Files/lpc17xx_uart.c **** 		if (RS485ConfigStruct->DirCtrlPol_Level == SET)
 1617              		.loc 1 1796 0
 1618 0600 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
1793:../Source Files/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_DCTRL_EN;
 1619              		.loc 1 1793 0
 1620 0602 012A     		cmp	r2, #1
 1621 0604 0CBF     		ite	eq
 1622 0606 3023     		moveq	r3, #48
 1623 0608 1023     		movne	r3, #16
 1624              	.LVL145:
1797:../Source Files/lpc17xx_uart.c **** 		{
1798:../Source Files/lpc17xx_uart.c **** 			tmp |= UART1_RS485CTRL_OINV_1;
1799:../Source Files/lpc17xx_uart.c **** 		}
1800:../Source Files/lpc17xx_uart.c **** 
1801:../Source Files/lpc17xx_uart.c **** 		// Set pin according to
1802:../Source Files/lpc17xx_uart.c **** 		if (RS485ConfigStruct->DirCtrlPin == UART1_RS485_DIRCTRL_DTR)
 1625              		.loc 1 1802 0
 1626 060a 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 1627 060c 012A     		cmp	r2, #1
1803:../Source Files/lpc17xx_uart.c **** 		{
1804:../Source Files/lpc17xx_uart.c **** 			tmp |= UART1_RS485CTRL_SEL_DTR;
1805:../Source Files/lpc17xx_uart.c **** 		}
1806:../Source Files/lpc17xx_uart.c **** 
1807:../Source Files/lpc17xx_uart.c **** 		// Fill delay time
1808:../Source Files/lpc17xx_uart.c **** 		UARTx->RS485DLY = RS485ConfigStruct->DelayValue & UART1_RS485DLY_BITMASK;
 1628              		.loc 1 1808 0
 1629 060e CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
1804:../Source Files/lpc17xx_uart.c **** 			tmp |= UART1_RS485CTRL_SEL_DTR;
 1630              		.loc 1 1804 0
 1631 0610 08BF     		it	eq
 1632 0612 43F00803 		orreq	r3, r3, #8
 1633              	.LVL146:
 1634              		.loc 1 1808 0
 1635 0616 80F85420 		strb	r2, [r0, #84]
 1636 061a 00E0     		b	.L184
 1637              	.LVL147:
 1638              	.L190:
1789:../Source Files/lpc17xx_uart.c **** 	tmp = 0;
 1639              		.loc 1 1789 0
 1640 061c 0023     		movs	r3, #0
 1641              	.LVL148:
 1642              	.L184:
1809:../Source Files/lpc17xx_uart.c **** 	}
1810:../Source Files/lpc17xx_uart.c **** 
1811:../Source Files/lpc17xx_uart.c **** 	// MultiDrop mode is enable
1812:../Source Files/lpc17xx_uart.c **** 	if (RS485ConfigStruct->NormalMultiDropMode_State == ENABLE)
 1643              		.loc 1 1812 0
 1644 061e 0A78     		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 1645 0620 012A     		cmp	r2, #1
1813:../Source Files/lpc17xx_uart.c **** 	{
1814:../Source Files/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_NMM_EN;
1815:../Source Files/lpc17xx_uart.c **** 	}
1816:../Source Files/lpc17xx_uart.c **** 
1817:../Source Files/lpc17xx_uart.c **** 	// Auto Address Detect function
1818:../Source Files/lpc17xx_uart.c **** 	if (RS485ConfigStruct->AutoAddrDetect_State == ENABLE)
 1646              		.loc 1 1818 0
 1647 0622 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
1814:../Source Files/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_NMM_EN;
 1648              		.loc 1 1814 0
 1649 0624 08BF     		it	eq
 1650 0626 43F00103 		orreq	r3, r3, #1
 1651              	.LVL149:
 1652              		.loc 1 1818 0
 1653 062a 012A     		cmp	r2, #1
 1654 062c 04D1     		bne	.L188
1819:../Source Files/lpc17xx_uart.c **** 	{
1820:../Source Files/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_AADEN;
1821:../Source Files/lpc17xx_uart.c **** 		// Fill Match Address
1822:../Source Files/lpc17xx_uart.c **** 		UARTx->ADRMATCH = RS485ConfigStruct->MatchAddrValue & UART1_RS485ADRMATCH_BITMASK;
 1655              		.loc 1 1822 0
 1656 062e 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
1820:../Source Files/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_AADEN;
 1657              		.loc 1 1820 0
 1658 0630 43F00403 		orr	r3, r3, #4
 1659              	.LVL150:
 1660              		.loc 1 1822 0
 1661 0634 80F85020 		strb	r2, [r0, #80]
 1662              	.L188:
1823:../Source Files/lpc17xx_uart.c **** 	}
1824:../Source Files/lpc17xx_uart.c **** 
1825:../Source Files/lpc17xx_uart.c **** 
1826:../Source Files/lpc17xx_uart.c **** 	// Receiver is disable
1827:../Source Files/lpc17xx_uart.c **** 	if (RS485ConfigStruct->Rx_State == DISABLE)
 1663              		.loc 1 1827 0
 1664 0638 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 1665              	.LVL151:
 1666 063a 09B9     		cbnz	r1, .L189
1828:../Source Files/lpc17xx_uart.c **** 	{
1829:../Source Files/lpc17xx_uart.c **** 		tmp |= UART1_RS485CTRL_RX_DIS;
 1667              		.loc 1 1829 0
 1668 063c 43F00203 		orr	r3, r3, #2
 1669              	.LVL152:
 1670              	.L189:
1830:../Source Files/lpc17xx_uart.c **** 	}
1831:../Source Files/lpc17xx_uart.c **** 
1832:../Source Files/lpc17xx_uart.c **** 	// write back to RS485 control register
1833:../Source Files/lpc17xx_uart.c **** 	UARTx->RS485CTRL = tmp & UART1_RS485CTRL_BITMASK;
 1671              		.loc 1 1833 0
 1672 0640 03F03F02 		and	r2, r3, #63
 1673 0644 80F84C20 		strb	r2, [r0, #76]
1834:../Source Files/lpc17xx_uart.c **** 
1835:../Source Files/lpc17xx_uart.c **** 	// Enable Parity function and leave parity in stick '0' parity as default
1836:../Source Files/lpc17xx_uart.c **** 	UARTx->LCR |= (UART_LCR_PARITY_F_0 | UART_LCR_PARITY_EN);
 1674              		.loc 1 1836 0
 1675 0648 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 1676 064a 41F03803 		orr	r3, r1, #56
 1677              	.LVL153:
 1678 064e 0373     		strb	r3, [r0, #12]
 1679 0650 7047     		bx	lr
 1680              		.cfi_endproc
 1681              	.LFE83:
 1683              		.align	1
 1684              		.global	UART_RS485ReceiverCmd
 1685              		.thumb
 1686              		.thumb_func
 1688              	UART_RS485ReceiverCmd:
 1689              	.LFB84:
1837:../Source Files/lpc17xx_uart.c **** }
1838:../Source Files/lpc17xx_uart.c **** 
1839:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1840:../Source Files/lpc17xx_uart.c ****  * @brief		Enable/Disable receiver in RS485 module in UART1
1841:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1842:../Source Files/lpc17xx_uart.c ****  * @param[in]	NewState	New State of command, should be:
1843:../Source Files/lpc17xx_uart.c ****  * 							- ENABLE: Enable this function.
1844:../Source Files/lpc17xx_uart.c ****  * 							- DISABLE: Disable this function.
1845:../Source Files/lpc17xx_uart.c ****  * @return		None
1846:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1847:../Source Files/lpc17xx_uart.c **** void UART_RS485ReceiverCmd(LPC_UART1_TypeDef *UARTx, FunctionalState NewState)
1848:../Source Files/lpc17xx_uart.c **** {
 1690              		.loc 1 1848 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              		@ link register save eliminated.
 1695              	.LVL154:
1849:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE){
1850:../Source Files/lpc17xx_uart.c **** 		UARTx->RS485CTRL &= ~UART1_RS485CTRL_RX_DIS;
 1696              		.loc 1 1850 0
 1697 0652 90F84C30 		ldrb	r3, [r0, #76]	@ zero_extendqisi2
1849:../Source Files/lpc17xx_uart.c **** 	if (NewState == ENABLE){
 1698              		.loc 1 1849 0
 1699 0656 0129     		cmp	r1, #1
 1700              		.loc 1 1850 0
 1701 0658 0CBF     		ite	eq
 1702 065a 03F0FD03 		andeq	r3, r3, #253
1851:../Source Files/lpc17xx_uart.c **** 	} else {
1852:../Source Files/lpc17xx_uart.c **** 		UARTx->RS485CTRL |= UART1_RS485CTRL_RX_DIS;
 1703              		.loc 1 1852 0
 1704 065e 43F00203 		orrne	r3, r3, #2
 1705 0662 80F84C30 		strb	r3, [r0, #76]
 1706 0666 7047     		bx	lr
 1707              		.cfi_endproc
 1708              	.LFE84:
 1710              		.align	1
 1711              		.global	UART_IntReceive
 1712              		.thumb
 1713              		.thumb_func
 1715              	UART_IntReceive:
 1716              	.LFB88:
1853:../Source Files/lpc17xx_uart.c **** 	}
1854:../Source Files/lpc17xx_uart.c **** }
1855:../Source Files/lpc17xx_uart.c **** 
1856:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1857:../Source Files/lpc17xx_uart.c ****  * @brief		Send data on RS485 bus with specified parity stick value (9-bit mode).
1858:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1859:../Source Files/lpc17xx_uart.c ****  * @param[in]	pDatFrm 	Pointer to data frame.
1860:../Source Files/lpc17xx_uart.c ****  * @param[in]	size		Size of data.
1861:../Source Files/lpc17xx_uart.c ****  * @param[in]	ParityStick	Parity Stick value, should be 0 or 1.
1862:../Source Files/lpc17xx_uart.c ****  * @return		None
1863:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1864:../Source Files/lpc17xx_uart.c **** uint32_t UART_RS485Send(LPC_UART1_TypeDef *UARTx, uint8_t *pDatFrm, \
1865:../Source Files/lpc17xx_uart.c **** 					uint32_t size, uint8_t ParityStick)
1866:../Source Files/lpc17xx_uart.c **** {
1867:../Source Files/lpc17xx_uart.c **** 	uint8_t tmp, save;
1868:../Source Files/lpc17xx_uart.c **** 	uint32_t cnt;
1869:../Source Files/lpc17xx_uart.c **** 
1870:../Source Files/lpc17xx_uart.c **** 	if (ParityStick){
1871:../Source Files/lpc17xx_uart.c **** 		save = tmp = UARTx->LCR & UART_LCR_BITMASK;
1872:../Source Files/lpc17xx_uart.c **** 		tmp &= ~(UART_LCR_PARITY_EVEN);
1873:../Source Files/lpc17xx_uart.c **** 		UARTx->LCR = tmp;
1874:../Source Files/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
1875:../Source Files/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_TEMT));
1876:../Source Files/lpc17xx_uart.c **** 		UARTx->LCR = save;
1877:../Source Files/lpc17xx_uart.c **** 	} else {
1878:../Source Files/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
1879:../Source Files/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_TEMT));
1880:../Source Files/lpc17xx_uart.c **** 	}
1881:../Source Files/lpc17xx_uart.c **** 	return cnt;
1882:../Source Files/lpc17xx_uart.c **** }
1883:../Source Files/lpc17xx_uart.c **** 
1884:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1885:../Source Files/lpc17xx_uart.c ****  * @brief		Send Slave address frames on RS485 bus.
1886:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1887:../Source Files/lpc17xx_uart.c ****  * @param[in]	SlvAddr Slave Address.
1888:../Source Files/lpc17xx_uart.c ****  * @return		None
1889:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1890:../Source Files/lpc17xx_uart.c **** void UART_RS485SendSlvAddr(LPC_UART1_TypeDef *UARTx, uint8_t SlvAddr)
1891:../Source Files/lpc17xx_uart.c **** {
1892:../Source Files/lpc17xx_uart.c **** 	UART_RS485Send(UARTx, &SlvAddr, 1, 1);
1893:../Source Files/lpc17xx_uart.c **** }
1894:../Source Files/lpc17xx_uart.c **** 
1895:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
1896:../Source Files/lpc17xx_uart.c ****  * @brief		Send Data frames on RS485 bus.
1897:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	LPC_UART1 (only)
1898:../Source Files/lpc17xx_uart.c ****  * @param[in]	pData Pointer to data to be sent.
1899:../Source Files/lpc17xx_uart.c ****  * @param[in]	size Size of data frame to be sent.
1900:../Source Files/lpc17xx_uart.c ****  * @return		None
1901:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
1902:../Source Files/lpc17xx_uart.c **** uint32_t UART_RS485SendData(LPC_UART1_TypeDef *UARTx, uint8_t *pData, uint32_t size)
1903:../Source Files/lpc17xx_uart.c **** {
1904:../Source Files/lpc17xx_uart.c **** 	return (UART_RS485Send(UARTx, pData, size, 0));
1905:../Source Files/lpc17xx_uart.c **** }
1906:../Source Files/lpc17xx_uart.c **** 
1907:../Source Files/lpc17xx_uart.c **** 
1908:../Source Files/lpc17xx_uart.c **** /* UART INTERRUPT functions ---------------------------------------------------------*/
1909:../Source Files/lpc17xx_uart.c **** 
1910:../Source Files/lpc17xx_uart.c **** #ifdef INTERRUPT_MODE
1911:../Source Files/lpc17xx_uart.c **** 
1912:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
1913:../Source Files/lpc17xx_uart.c ****  * @brief 		UART receive function (ring buffer used)
1914:../Source Files/lpc17xx_uart.c ****  * @param[in]	None
1915:../Source Files/lpc17xx_uart.c ****  * @return 		None
1916:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
1917:../Source Files/lpc17xx_uart.c **** void UART_IntReceive(LPC_UART_TypeDef *UARTx)
1918:../Source Files/lpc17xx_uart.c **** {
 1717              		.loc 1 1918 0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 0
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 1721              	.LVL155:
 1722 0668 10B5     		push	{r4, lr}
 1723              	.LCFI5:
 1724              		.cfi_def_cfa_offset 8
 1725              		.cfi_offset 4, -8
 1726              		.cfi_offset 14, -4
 1727 066a 0446     		mov	r4, r0
 1728              	.LVL156:
 1729              	.L205:
1919:../Source Files/lpc17xx_uart.c **** 	uint8_t tmpc;
1920:../Source Files/lpc17xx_uart.c **** 
1921:../Source Files/lpc17xx_uart.c **** 	while(1)
1922:../Source Files/lpc17xx_uart.c **** 	{
1923:../Source Files/lpc17xx_uart.c **** 		// Call UART read function in UART driver
1924:../Source Files/lpc17xx_uart.c **** 		tmpc = UART_ReceiveByte(UARTx);
 1730              		.loc 1 1924 0
 1731 066c 2046     		mov	r0, r4
 1732 066e FFF7FEFF 		bl	UART_ReceiveByte
 1733              	.LVL157:
1925:../Source Files/lpc17xx_uart.c **** 		if (tmpc)
 1734              		.loc 1 1925 0
 1735 0672 0246     		mov	r2, r0
 1736 0674 80B1     		cbz	r0, .L196
1926:../Source Files/lpc17xx_uart.c **** 		{
1927:../Source Files/lpc17xx_uart.c **** 			/* Check if buffer is more space
1928:../Source Files/lpc17xx_uart.c **** 			 * If no more space, remaining character will be trimmed out
1929:../Source Files/lpc17xx_uart.c **** 			 */
1930:../Source Files/lpc17xx_uart.c **** 			if (!__BUF_IS_FULL(rb.rx_head,rb.rx_tail))
 1737              		.loc 1 1930 0
 1738 0676 094B     		ldr	r3, .L206
 1739 0678 D868     		ldr	r0, [r3, #12]
 1740              	.LVL158:
 1741 067a 9968     		ldr	r1, [r3, #8]
 1742 067c 0131     		adds	r1, r1, #1
 1743 067e 4140     		eors	r1, r1, r0
 1744 0680 11F0FF0F 		tst	r1, #255
 1745 0684 F2D0     		beq	.L205
1931:../Source Files/lpc17xx_uart.c **** 			{
1932:../Source Files/lpc17xx_uart.c **** 				rb.rx[rb.rx_head] = tmpc;
 1746              		.loc 1 1932 0
 1747 0686 9868     		ldr	r0, [r3, #8]
 1748 0688 1918     		adds	r1, r3, r0
 1749 068a 81F81021 		strb	r2, [r1, #272]
1933:../Source Files/lpc17xx_uart.c **** 				__BUF_INCR(rb.rx_head);
 1750              		.loc 1 1933 0
 1751 068e 9A68     		ldr	r2, [r3, #8]
 1752 0690 501C     		adds	r0, r2, #1
 1753 0692 C1B2     		uxtb	r1, r0
 1754 0694 9960     		str	r1, [r3, #8]
 1755 0696 E9E7     		b	.L205
 1756              	.LVL159:
 1757              	.L196:
 1758 0698 10BD     		pop	{r4, pc}
 1759              	.L207:
 1760 069a 00BF     		.align	2
 1761              	.L206:
 1762 069c 00000000 		.word	rb
 1763              		.cfi_endproc
 1764              	.LFE88:
 1766              		.align	1
 1767              		.global	UART_IntTransmit
 1768              		.thumb
 1769              		.thumb_func
 1771              	UART_IntTransmit:
 1772              	.LFB89:
1934:../Source Files/lpc17xx_uart.c **** 			}
1935:../Source Files/lpc17xx_uart.c **** 		}
1936:../Source Files/lpc17xx_uart.c **** 		// no more data
1937:../Source Files/lpc17xx_uart.c **** 		else
1938:../Source Files/lpc17xx_uart.c **** 		{
1939:../Source Files/lpc17xx_uart.c **** 			break;
1940:../Source Files/lpc17xx_uart.c **** 		}
1941:../Source Files/lpc17xx_uart.c **** 	}
1942:../Source Files/lpc17xx_uart.c **** }
1943:../Source Files/lpc17xx_uart.c **** 
1944:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
1945:../Source Files/lpc17xx_uart.c ****  * @brief 		UART transmit function (ring buffer used)
1946:../Source Files/lpc17xx_uart.c ****  * @param[in]	None
1947:../Source Files/lpc17xx_uart.c ****  * @return 		None
1948:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
1949:../Source Files/lpc17xx_uart.c **** void UART_IntTransmit(LPC_UART_TypeDef *UARTx)
1950:../Source Files/lpc17xx_uart.c **** {
 1773              		.loc 1 1950 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 0
 1776              		@ frame_needed = 0, uses_anonymous_args = 0
 1777              	.LVL160:
 1778 06a0 70B5     		push	{r4, r5, r6, lr}
 1779              	.LCFI6:
 1780              		.cfi_def_cfa_offset 16
 1781              		.cfi_offset 4, -16
 1782              		.cfi_offset 5, -12
 1783              		.cfi_offset 6, -8
 1784              		.cfi_offset 14, -4
1951:../Source Files/lpc17xx_uart.c **** 	uint32_t bToSend, bSent, timeOut, fifo_cnt;
1952:../Source Files/lpc17xx_uart.c **** 	uint8_t *pChar;
1953:../Source Files/lpc17xx_uart.c **** 
1954:../Source Files/lpc17xx_uart.c ****     // Disable THRE interrupt
1955:../Source Files/lpc17xx_uart.c ****     UART_IntConfig(UARTx, UART_INTCFG_THRE, DISABLE);
 1785              		.loc 1 1955 0
 1786 06a2 0121     		movs	r1, #1
 1787 06a4 0022     		movs	r2, #0
1950:../Source Files/lpc17xx_uart.c **** {
 1788              		.loc 1 1950 0
 1789 06a6 0446     		mov	r4, r0
 1790              		.loc 1 1955 0
 1791 06a8 FFF7FEFF 		bl	UART_IntConfig
 1792              	.LVL161:
 1793              	.L209:
1956:../Source Files/lpc17xx_uart.c **** 
1957:../Source Files/lpc17xx_uart.c **** 	/* Wait for FIFO buffer empty, transfer UART_TX_FIFO_SIZE bytes
1958:../Source Files/lpc17xx_uart.c **** 	 * of data or break whenever ring buffers are empty */
1959:../Source Files/lpc17xx_uart.c **** 	/* Wait until THR empty */
1960:../Source Files/lpc17xx_uart.c ****     while (UART_CheckBusy(UARTx) == SET);
 1794              		.loc 1 1960 0 discriminator 1
 1795 06ac 2046     		mov	r0, r4
 1796 06ae FFF7FEFF 		bl	UART_CheckBusy
 1797              	.LVL162:
 1798 06b2 0128     		cmp	r0, #1
 1799 06b4 FAD0     		beq	.L209
 1800              	.L233:
1961:../Source Files/lpc17xx_uart.c **** 
1962:../Source Files/lpc17xx_uart.c **** 	while (!__BUF_IS_EMPTY(rb.tx_head,rb.tx_tail))
 1801              		.loc 1 1962 0 discriminator 1
 1802 06b6 1A4B     		ldr	r3, .L239
 1803 06b8 1A68     		ldr	r2, [r3, #0]
 1804 06ba 5968     		ldr	r1, [r3, #4]
 1805 06bc 81EA0200 		eor	r0, r1, r2
 1806 06c0 10F0FF0F 		tst	r0, #255
 1807 06c4 0BD0     		beq	.L212
 1808              	.L218:
1963:../Source Files/lpc17xx_uart.c ****     {
1964:../Source Files/lpc17xx_uart.c ****         /* Move a piece of data into the transmit FIFO */
1965:../Source Files/lpc17xx_uart.c **** 		// None blocking mode
1966:../Source Files/lpc17xx_uart.c **** 		pChar = &rb.tx[rb.tx_tail];
 1809              		.loc 1 1966 0
 1810 06c6 5A68     		ldr	r2, [r3, #4]
 1811              	.LVL163:
 1812 06c8 4FF0FF33 		mov	r3, #-1
 1813              	.LVL164:
 1814              	.L211:
1967:../Source Files/lpc17xx_uart.c **** 		bToSend = 1;
1968:../Source Files/lpc17xx_uart.c **** 		bSent = 0;
1969:../Source Files/lpc17xx_uart.c **** 		while (bToSend)
1970:../Source Files/lpc17xx_uart.c **** 		{
1971:../Source Files/lpc17xx_uart.c **** 			timeOut = UART_BLOCKING_TIMEOUT;
1972:../Source Files/lpc17xx_uart.c **** 			// Wait for THR empty with timeout
1973:../Source Files/lpc17xx_uart.c **** 			while (!(UARTx->LSR & UART_LSR_THRE))
 1815              		.loc 1 1973 0 discriminator 1
 1816 06cc 257D     		ldrb	r5, [r4, #20]	@ zero_extendqisi2
 1817 06ce 05F02006 		and	r6, r5, #32
 1818 06d2 F1B2     		uxtb	r1, r6
 1819 06d4 11B9     		cbnz	r1, .L238
 1820              	.L213:
1974:../Source Files/lpc17xx_uart.c **** 			{
1975:../Source Files/lpc17xx_uart.c **** 				if (timeOut == 0) break;
 1821              		.loc 1 1975 0
 1822 06d6 13B1     		cbz	r3, .L212
1976:../Source Files/lpc17xx_uart.c **** 				timeOut--;
 1823              		.loc 1 1976 0
 1824 06d8 013B     		subs	r3, r3, #1
 1825              	.LVL165:
 1826 06da F7E7     		b	.L211
 1827              	.L238:
1977:../Source Files/lpc17xx_uart.c **** 			}
1978:../Source Files/lpc17xx_uart.c **** 			// Time out!
1979:../Source Files/lpc17xx_uart.c **** 			if(timeOut == 0) break;
 1828              		.loc 1 1979 0
 1829 06dc B3B9     		cbnz	r3, .L234
 1830              	.LVL166:
 1831              	.L212:
1980:../Source Files/lpc17xx_uart.c **** 			fifo_cnt = UART_TX_FIFO_SIZE;
1981:../Source Files/lpc17xx_uart.c **** 			while (fifo_cnt && bToSend)
1982:../Source Files/lpc17xx_uart.c **** 			{
1983:../Source Files/lpc17xx_uart.c **** 				UART_SendByte(UARTx, (*pChar++));
1984:../Source Files/lpc17xx_uart.c **** 				fifo_cnt--;
1985:../Source Files/lpc17xx_uart.c **** 				bToSend--;
1986:../Source Files/lpc17xx_uart.c **** 				bSent++;
1987:../Source Files/lpc17xx_uart.c **** 			}
1988:../Source Files/lpc17xx_uart.c **** 		}
1989:../Source Files/lpc17xx_uart.c **** 
1990:../Source Files/lpc17xx_uart.c ****     	if(bSent)
1991:../Source Files/lpc17xx_uart.c ****     	{
1992:../Source Files/lpc17xx_uart.c ****     		/* Update transmit ring FIFO tail pointer */
1993:../Source Files/lpc17xx_uart.c ****     		__BUF_INCR(rb.tx_tail);
1994:../Source Files/lpc17xx_uart.c ****      	}
1995:../Source Files/lpc17xx_uart.c ****     	else
1996:../Source Files/lpc17xx_uart.c ****     	{
1997:../Source Files/lpc17xx_uart.c ****     		break;
1998:../Source Files/lpc17xx_uart.c ****     	}
1999:../Source Files/lpc17xx_uart.c ****     }
2000:../Source Files/lpc17xx_uart.c **** 
2001:../Source Files/lpc17xx_uart.c ****     /* If there is no more data to send, disable the transmit
2002:../Source Files/lpc17xx_uart.c ****        interrupt - else enable it or keep it enabled */
2003:../Source Files/lpc17xx_uart.c **** 	if (__BUF_IS_EMPTY(rb.tx_head, rb.tx_tail))
 1832              		.loc 1 2003 0
 1833 06de 1048     		ldr	r0, .L239
 1834 06e0 0568     		ldr	r5, [r0, #0]
 1835 06e2 4668     		ldr	r6, [r0, #4]
 1836 06e4 6E40     		eors	r6, r6, r5
 1837 06e6 16F0FF06 		ands	r6, r6, #255
 1838 06ea 0E4D     		ldr	r5, .L239+4
 1839 06ec 06D1     		bne	.L235
2004:../Source Files/lpc17xx_uart.c **** 	{
2005:../Source Files/lpc17xx_uart.c ****     	UART_IntConfig(UARTx, UART_INTCFG_THRE, DISABLE);
 1840              		.loc 1 2005 0
 1841 06ee 2046     		mov	r0, r4
 1842 06f0 0121     		movs	r1, #1
 1843 06f2 3246     		mov	r2, r6
 1844 06f4 FFF7FEFF 		bl	UART_IntConfig
 1845              	.LVL167:
2006:../Source Files/lpc17xx_uart.c ****     	// Reset Tx Interrupt state
2007:../Source Files/lpc17xx_uart.c ****     	TxIntStat = RESET;
 1846              		.loc 1 2007 0
 1847 06f8 2E70     		strb	r6, [r5, #0]
 1848 06fa 70BD     		pop	{r4, r5, r6, pc}
 1849              	.L235:
2008:../Source Files/lpc17xx_uart.c ****     }
2009:../Source Files/lpc17xx_uart.c ****     else
2010:../Source Files/lpc17xx_uart.c ****     {
2011:../Source Files/lpc17xx_uart.c ****       	// Set Tx Interrupt state
2012:../Source Files/lpc17xx_uart.c **** 		TxIntStat = SET;
 1850              		.loc 1 2012 0
 1851 06fc 0121     		movs	r1, #1
2013:../Source Files/lpc17xx_uart.c ****     	UART_IntConfig(UARTx, UART_INTCFG_THRE, ENABLE);
 1852              		.loc 1 2013 0
 1853 06fe 2046     		mov	r0, r4
 1854 0700 0A46     		mov	r2, r1
2012:../Source Files/lpc17xx_uart.c **** 		TxIntStat = SET;
 1855              		.loc 1 2012 0
 1856 0702 2970     		strb	r1, [r5, #0]
2014:../Source Files/lpc17xx_uart.c ****     }
2015:../Source Files/lpc17xx_uart.c **** }
 1857              		.loc 1 2015 0
 1858 0704 BDE87040 		pop	{r4, r5, r6, lr}
2013:../Source Files/lpc17xx_uart.c ****     	UART_IntConfig(UARTx, UART_INTCFG_THRE, ENABLE);
 1859              		.loc 1 2013 0
 1860 0708 FFF7FEBF 		b	UART_IntConfig
 1861              	.LVL168:
 1862              	.L234:
1983:../Source Files/lpc17xx_uart.c **** 				UART_SendByte(UARTx, (*pChar++));
 1863              		.loc 1 1983 0
 1864 070c 044B     		ldr	r3, .L239
 1865              	.LVL169:
 1866 070e 9A18     		adds	r2, r3, r2
 1867              	.LVL170:
 1868 0710 107C     		ldrb	r0, [r2, #16]	@ zero_extendqisi2
 1869              	.LVL171:
 1870              	.LBB68:
 1871              	.LBB69:
 705:../Source Files/lpc17xx_uart.c **** 		UARTx->/*RBTHDLR.*/THR = Data & UART_THR_MASKBIT;
 1872              		.loc 1 705 0
 1873 0712 2070     		strb	r0, [r4, #0]
 1874              	.LVL172:
 1875              	.LBE69:
 1876              	.LBE68:
1993:../Source Files/lpc17xx_uart.c ****     		__BUF_INCR(rb.tx_tail);
 1877              		.loc 1 1993 0
 1878 0714 5D68     		ldr	r5, [r3, #4]
 1879 0716 6E1C     		adds	r6, r5, #1
 1880 0718 F1B2     		uxtb	r1, r6
 1881 071a 5960     		str	r1, [r3, #4]
 1882 071c CBE7     		b	.L233
 1883              	.L240:
 1884 071e 00BF     		.align	2
 1885              	.L239:
 1886 0720 00000000 		.word	rb
 1887 0724 00000000 		.word	TxIntStat
 1888              		.cfi_endproc
 1889              	.LFE89:
 1891              		.align	1
 1892              		.global	UART2_IRQHandler
 1893              		.thumb
 1894              		.thumb_func
 1896              	UART2_IRQHandler:
 1897              	.LFB56:
  88:../Source Files/lpc17xx_uart.c **** {
 1898              		.loc 1 88 0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 0
 1901              		@ frame_needed = 0, uses_anonymous_args = 0
 1902              	.LVL173:
 1903 0728 10B5     		push	{r4, lr}
 1904              	.LCFI7:
 1905              		.cfi_def_cfa_offset 8
 1906              		.cfi_offset 4, -8
 1907              		.cfi_offset 14, -4
 1908              	.LBB74:
 1909              	.LBB75:
1334:../Source Files/lpc17xx_uart.c **** 	return (UARTx->IIR & 0x03CF);
 1910              		.loc 1 1334 0
 1911 072a 0D4B     		ldr	r3, .L254
 1912 072c 9C68     		ldr	r4, [r3, #8]
 1913              	.LBE75:
 1914              	.LBE74:
  94:../Source Files/lpc17xx_uart.c **** 	tmp = intsrc & UART_IIR_INTID_MASK;
 1915              		.loc 1 94 0
 1916 072e 04F00E04 		and	r4, r4, #14
 1917              	.LVL174:
  97:../Source Files/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_RLS)
 1918              		.loc 1 97 0
 1919 0732 062C     		cmp	r4, #6
 1920 0734 04D1     		bne	.L242
 1921              	.LVL175:
 1922              	.LBB76:
 1923              	.LBB77:
1318:../Source Files/lpc17xx_uart.c **** 		return ((UARTx->LSR) & UART_LSR_BITMASK);
 1924              		.loc 1 1318 0
 1925 0736 187D     		ldrb	r0, [r3, #20]	@ zero_extendqisi2
 1926              	.LVL176:
 1927              	.LBE77:
 1928              	.LBE76:
 104:../Source Files/lpc17xx_uart.c **** 		if (tmp1)
 1929              		.loc 1 104 0
 1930 0738 10F09E0F 		tst	r0, #158
 1931 073c 0ED0     		beq	.L241
 1932              	.L253:
 1933 073e FEE7     		b	.L253
 1934              	.LVL177:
 1935              	.L242:
 114:../Source Files/lpc17xx_uart.c **** 	if ((tmp == UART_IIR_INTID_RDA) || (tmp == UART_IIR_INTID_CTI))
 1936              		.loc 1 114 0
 1937 0740 042C     		cmp	r4, #4
 1938 0742 01D0     		beq	.L245
 114:../Source Files/lpc17xx_uart.c **** 	if ((tmp == UART_IIR_INTID_RDA) || (tmp == UART_IIR_INTID_CTI))
 1939              		.loc 1 114 0 is_stmt 0 discriminator 1
 1940 0744 0C2C     		cmp	r4, #12
 1941 0746 02D1     		bne	.L246
 1942              	.L245:
 116:../Source Files/lpc17xx_uart.c **** 		UART_IntReceive(LPC_UART2);
 1943              		.loc 1 116 0 is_stmt 1
 1944 0748 0548     		ldr	r0, .L254
 1945 074a FFF7FEFF 		bl	UART_IntReceive
 1946              	.LVL178:
 1947              	.L246:
 120:../Source Files/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_THRE)
 1948              		.loc 1 120 0
 1949 074e 022C     		cmp	r4, #2
 1950 0750 04D1     		bne	.L241
 122:../Source Files/lpc17xx_uart.c **** 		UART_IntTransmit(LPC_UART2);
 1951              		.loc 1 122 0
 1952 0752 0348     		ldr	r0, .L254
 124:../Source Files/lpc17xx_uart.c **** }
 1953              		.loc 1 124 0
 1954 0754 BDE81040 		pop	{r4, lr}
 122:../Source Files/lpc17xx_uart.c **** 		UART_IntTransmit(LPC_UART2);
 1955              		.loc 1 122 0
 1956 0758 FFF7FEBF 		b	UART_IntTransmit
 1957              	.LVL179:
 1958              	.L241:
 1959 075c 10BD     		pop	{r4, pc}
 1960              	.L255:
 1961 075e 00BF     		.align	2
 1962              	.L254:
 1963 0760 00800940 		.word	1074364416
 1964              		.cfi_endproc
 1965              	.LFE56:
 1967              		.align	1
 1968              		.global	UART0_IRQHandler
 1969              		.thumb
 1970              		.thumb_func
 1972              	UART0_IRQHandler:
 1973              	.LFB55:
  43:../Source Files/lpc17xx_uart.c **** {
 1974              		.loc 1 43 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 1978              	.LVL180:
 1979 0764 10B5     		push	{r4, lr}
 1980              	.LCFI8:
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 4, -8
 1983              		.cfi_offset 14, -4
 1984              	.LBB82:
 1985              	.LBB83:
1334:../Source Files/lpc17xx_uart.c **** 	return (UARTx->IIR & 0x03CF);
 1986              		.loc 1 1334 0
 1987 0766 0D4B     		ldr	r3, .L269
 1988 0768 9C68     		ldr	r4, [r3, #8]
 1989              	.LBE83:
 1990              	.LBE82:
  49:../Source Files/lpc17xx_uart.c **** 	tmp = intsrc & UART_IIR_INTID_MASK;
 1991              		.loc 1 49 0
 1992 076a 04F00E04 		and	r4, r4, #14
 1993              	.LVL181:
  52:../Source Files/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_RLS)
 1994              		.loc 1 52 0
 1995 076e 062C     		cmp	r4, #6
 1996 0770 04D1     		bne	.L257
 1997              	.LVL182:
 1998              	.LBB84:
 1999              	.LBB85:
1318:../Source Files/lpc17xx_uart.c **** 		return ((UARTx->LSR) & UART_LSR_BITMASK);
 2000              		.loc 1 1318 0
 2001 0772 187D     		ldrb	r0, [r3, #20]	@ zero_extendqisi2
 2002              	.LVL183:
 2003              	.LBE85:
 2004              	.LBE84:
  59:../Source Files/lpc17xx_uart.c **** 		if (tmp1)
 2005              		.loc 1 59 0
 2006 0774 10F09E0F 		tst	r0, #158
 2007 0778 0ED0     		beq	.L256
 2008              	.L268:
 2009 077a FEE7     		b	.L268
 2010              	.LVL184:
 2011              	.L257:
  69:../Source Files/lpc17xx_uart.c **** 	if ((tmp == UART_IIR_INTID_RDA) || (tmp == UART_IIR_INTID_CTI))
 2012              		.loc 1 69 0
 2013 077c 042C     		cmp	r4, #4
 2014 077e 01D0     		beq	.L260
  69:../Source Files/lpc17xx_uart.c **** 	if ((tmp == UART_IIR_INTID_RDA) || (tmp == UART_IIR_INTID_CTI))
 2015              		.loc 1 69 0 is_stmt 0 discriminator 1
 2016 0780 0C2C     		cmp	r4, #12
 2017 0782 02D1     		bne	.L261
 2018              	.L260:
  71:../Source Files/lpc17xx_uart.c **** 		UART_IntReceive(LPC_UART0);
 2019              		.loc 1 71 0 is_stmt 1
 2020 0784 0548     		ldr	r0, .L269
 2021 0786 FFF7FEFF 		bl	UART_IntReceive
 2022              	.LVL185:
 2023              	.L261:
  75:../Source Files/lpc17xx_uart.c **** 	if (tmp == UART_IIR_INTID_THRE)
 2024              		.loc 1 75 0
 2025 078a 022C     		cmp	r4, #2
 2026 078c 04D1     		bne	.L256
  77:../Source Files/lpc17xx_uart.c **** 		UART_IntTransmit(LPC_UART0);
 2027              		.loc 1 77 0
 2028 078e 0348     		ldr	r0, .L269
  79:../Source Files/lpc17xx_uart.c **** }
 2029              		.loc 1 79 0
 2030 0790 BDE81040 		pop	{r4, lr}
  77:../Source Files/lpc17xx_uart.c **** 		UART_IntTransmit(LPC_UART0);
 2031              		.loc 1 77 0
 2032 0794 FFF7FEBF 		b	UART_IntTransmit
 2033              	.LVL186:
 2034              	.L256:
 2035 0798 10BD     		pop	{r4, pc}
 2036              	.L270:
 2037 079a 00BF     		.align	2
 2038              	.L269:
 2039 079c 00C00040 		.word	1073790976
 2040              		.cfi_endproc
 2041              	.LFE55:
 2043              		.align	1
 2044              		.global	UART_Send
 2045              		.thumb
 2046              		.thumb_func
 2048              	UART_Send:
 2049              	.LFB90:
2016:../Source Files/lpc17xx_uart.c **** 
2017:../Source Files/lpc17xx_uart.c **** 
2018:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
2019:../Source Files/lpc17xx_uart.c ****  * @brief		Send a block of data via UART peripheral
2020:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data, should be:
2021:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
2022:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
2023:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
2024:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
2025:../Source Files/lpc17xx_uart.c ****  * @param[in]	txbuf 	Pointer to Transmit buffer
2026:../Source Files/lpc17xx_uart.c ****  * @param[in]	buflen 	Length of Transmit buffer
2027:../Source Files/lpc17xx_uart.c ****  * @param[in] 	flag 	Flag used in  UART transfer, should be
2028:../Source Files/lpc17xx_uart.c ****  * 						NONE_BLOCKING or BLOCKING
2029:../Source Files/lpc17xx_uart.c ****  * @return 		Number of bytes sent.
2030:../Source Files/lpc17xx_uart.c ****  *
2031:../Source Files/lpc17xx_uart.c ****  * Note: when using UART in BLOCKING mode, a time-out condition is used
2032:../Source Files/lpc17xx_uart.c ****  * via defined symbol UART_BLOCKING_TIMEOUT.
2033:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
2034:../Source Files/lpc17xx_uart.c **** uint32_t UART_Send(LPC_UART_TypeDef *UARTx, uint8_t *txbuf, uint32_t buflen, TRANSFER_BLOCK_Type fl
2035:../Source Files/lpc17xx_uart.c **** {
 2050              		.loc 1 2035 0
 2051              		.cfi_startproc
 2052              		@ args = 0, pretend = 0, frame = 0
 2053              		@ frame_needed = 0, uses_anonymous_args = 0
 2054              	.LVL187:
 2055 07a0 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2056              	.LCFI9:
 2057              		.cfi_def_cfa_offset 24
 2058              		.cfi_offset 3, -24
 2059              		.cfi_offset 4, -20
 2060              		.cfi_offset 5, -16
 2061              		.cfi_offset 6, -12
 2062              		.cfi_offset 7, -8
 2063              		.cfi_offset 14, -4
 2064              		.loc 1 2035 0
 2065 07a2 0E46     		mov	r6, r1
 2066              	.LVL188:
 2067 07a4 1746     		mov	r7, r2
2036:../Source Files/lpc17xx_uart.c **** 	uint8_t *data = (uint8_t *) txbuf;
2037:../Source Files/lpc17xx_uart.c **** 	uint32_t bytes = 0;
2038:../Source Files/lpc17xx_uart.c **** 
2039:../Source Files/lpc17xx_uart.c **** 	/* Temporarily lock out UART transmit interrupts during this
2040:../Source Files/lpc17xx_uart.c **** 	   read so the UART transmit interrupt won't cause problems
2041:../Source Files/lpc17xx_uart.c **** 	   with the index values */
2042:../Source Files/lpc17xx_uart.c **** 	UART_IntConfig(UARTx, UART_INTCFG_THRE, DISABLE);
 2068              		.loc 1 2042 0
 2069 07a6 0121     		movs	r1, #1
 2070              	.LVL189:
 2071 07a8 0022     		movs	r2, #0
 2072              	.LVL190:
2035:../Source Files/lpc17xx_uart.c **** {
 2073              		.loc 1 2035 0
 2074 07aa 0546     		mov	r5, r0
 2075              		.loc 1 2042 0
 2076 07ac FFF7FEFF 		bl	UART_IntConfig
 2077              	.LVL191:
2037:../Source Files/lpc17xx_uart.c **** 	uint32_t bytes = 0;
 2078              		.loc 1 2037 0
 2079 07b0 0024     		movs	r4, #0
 2080              	.LVL192:
 2081              	.L272:
2043:../Source Files/lpc17xx_uart.c **** 
2044:../Source Files/lpc17xx_uart.c **** 	/* Loop until transmit run buffer is full or until n_bytes
2045:../Source Files/lpc17xx_uart.c **** 	   expires */
2046:../Source Files/lpc17xx_uart.c **** 	while ((buflen > 0) && (!__BUF_IS_FULL(rb.tx_head, rb.tx_tail)))
 2082              		.loc 1 2046 0 discriminator 1
 2083 07b2 BC42     		cmp	r4, r7
 2084 07b4 06D1     		bne	.L273
 2085              	.L277:
2047:../Source Files/lpc17xx_uart.c **** 	{
2048:../Source Files/lpc17xx_uart.c **** 		/* Write data from buffer into ring buffer */
2049:../Source Files/lpc17xx_uart.c **** 		rb.tx[rb.tx_head] = *data;
2050:../Source Files/lpc17xx_uart.c **** 		data++;
2051:../Source Files/lpc17xx_uart.c **** 
2052:../Source Files/lpc17xx_uart.c **** 		/* Increment head pointer */
2053:../Source Files/lpc17xx_uart.c **** 		__BUF_INCR(rb.tx_head);
2054:../Source Files/lpc17xx_uart.c **** 
2055:../Source Files/lpc17xx_uart.c **** 		/* Increment data count and decrement buffer size count */
2056:../Source Files/lpc17xx_uart.c **** 		bytes++;
2057:../Source Files/lpc17xx_uart.c **** 		buflen--;
2058:../Source Files/lpc17xx_uart.c **** 	}
2059:../Source Files/lpc17xx_uart.c **** 
2060:../Source Files/lpc17xx_uart.c **** 	/**
2061:../Source Files/lpc17xx_uart.c **** 	 * Check if current Tx interrupt enable is reset,
2062:../Source Files/lpc17xx_uart.c **** 	 * that means the Tx interrupt must be re-enabled
2063:../Source Files/lpc17xx_uart.c **** 	 * due to call UART_IntTransmit() function to trigger
2064:../Source Files/lpc17xx_uart.c **** 	 * this interrupt type
2065:../Source Files/lpc17xx_uart.c **** 	 */
2066:../Source Files/lpc17xx_uart.c **** 	if (TxIntStat == RESET)
 2086              		.loc 1 2066 0
 2087 07b6 104B     		ldr	r3, .L280
 2088 07b8 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2089 07ba A9B9     		cbnz	r1, .L279
2067:../Source Files/lpc17xx_uart.c **** 	{
2068:../Source Files/lpc17xx_uart.c **** 		UART_IntTransmit(UARTx);
 2090              		.loc 1 2068 0
 2091 07bc 2846     		mov	r0, r5
 2092 07be FFF7FEFF 		bl	UART_IntTransmit
 2093              	.LVL193:
 2094 07c2 16E0     		b	.L278
 2095              	.L273:
2046:../Source Files/lpc17xx_uart.c **** 	while ((buflen > 0) && (!__BUF_IS_FULL(rb.tx_head, rb.tx_tail)))
 2096              		.loc 1 2046 0 discriminator 2
 2097 07c4 0D4B     		ldr	r3, .L280+4
 2098 07c6 5968     		ldr	r1, [r3, #4]
 2099 07c8 1A68     		ldr	r2, [r3, #0]
 2100 07ca 501C     		adds	r0, r2, #1
 2101 07cc 4840     		eors	r0, r0, r1
 2102 07ce 10F0FF0F 		tst	r0, #255
 2103 07d2 F0D0     		beq	.L277
 2104              	.L276:
2049:../Source Files/lpc17xx_uart.c **** 		rb.tx[rb.tx_head] = *data;
 2105              		.loc 1 2049 0
 2106 07d4 1A68     		ldr	r2, [r3, #0]
 2107 07d6 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 2108 07d8 9918     		adds	r1, r3, r2
 2109 07da 0874     		strb	r0, [r1, #16]
2053:../Source Files/lpc17xx_uart.c **** 		__BUF_INCR(rb.tx_head);
 2110              		.loc 1 2053 0
 2111 07dc 1A68     		ldr	r2, [r3, #0]
2056:../Source Files/lpc17xx_uart.c **** 		bytes++;
 2112              		.loc 1 2056 0
 2113 07de 0134     		adds	r4, r4, #1
 2114              	.LVL194:
2053:../Source Files/lpc17xx_uart.c **** 		__BUF_INCR(rb.tx_head);
 2115              		.loc 1 2053 0
 2116 07e0 501C     		adds	r0, r2, #1
 2117 07e2 C1B2     		uxtb	r1, r0
 2118 07e4 1960     		str	r1, [r3, #0]
 2119 07e6 E4E7     		b	.L272
 2120              	.L279:
 2121              	.LVL195:
 2122              	.LBB88:
 2123              	.LBB89:
2069:../Source Files/lpc17xx_uart.c **** 	}
2070:../Source Files/lpc17xx_uart.c **** 	/**
2071:../Source Files/lpc17xx_uart.c **** 	 * Otherwise, re-enables Tx Interrupt
2072:../Source Files/lpc17xx_uart.c **** 	 */
2073:../Source Files/lpc17xx_uart.c **** 	else
2074:../Source Files/lpc17xx_uart.c **** 	{
2075:../Source Files/lpc17xx_uart.c **** 		UART_IntConfig(UARTx, UART_INTCFG_THRE, ENABLE);
 2124              		.loc 1 2075 0
 2125 07e8 0121     		movs	r1, #1
 2126 07ea 2846     		mov	r0, r5
 2127 07ec 0A46     		mov	r2, r1
 2128 07ee FFF7FEFF 		bl	UART_IntConfig
 2129              	.LVL196:
 2130              	.L278:
 2131              	.LBE89:
 2132              	.LBE88:
2076:../Source Files/lpc17xx_uart.c **** 	}
2077:../Source Files/lpc17xx_uart.c **** 
2078:../Source Files/lpc17xx_uart.c **** 	return bytes;
2079:../Source Files/lpc17xx_uart.c **** }
 2133              		.loc 1 2079 0
 2134 07f2 2046     		mov	r0, r4
 2135 07f4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2136              	.L281:
 2137 07f6 00BF     		.align	2
 2138              	.L280:
 2139 07f8 00000000 		.word	TxIntStat
 2140 07fc 00000000 		.word	rb
 2141              		.cfi_endproc
 2142              	.LFE90:
 2144              		.align	1
 2145              		.global	printf
 2146              		.thumb
 2147              		.thumb_func
 2149              	printf:
 2150              	.LFB66:
1049:../Source Files/lpc17xx_uart.c **** {
 2151              		.loc 1 1049 0
 2152              		.cfi_startproc
 2153              		@ args = 4, pretend = 12, frame = 112
 2154              		@ frame_needed = 0, uses_anonymous_args = 1
 2155              	.LVL197:
 2156 0800 0EB4     		push	{r1, r2, r3}
 2157              	.LCFI10:
 2158              		.cfi_def_cfa_offset 12
 2159              		.cfi_offset 1, -12
 2160              		.cfi_offset 2, -8
 2161              		.cfi_offset 3, -4
 2162 0802 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2163              	.LCFI11:
 2164              		.cfi_def_cfa_offset 40
 2165              		.cfi_offset 4, -40
 2166              		.cfi_offset 5, -36
 2167              		.cfi_offset 6, -32
 2168              		.cfi_offset 7, -28
 2169              		.cfi_offset 8, -24
 2170              		.cfi_offset 9, -20
 2171              		.cfi_offset 14, -16
1050:../Source Files/lpc17xx_uart.c **** 	uchar hex[]= "0123456789ABCDEF";
 2172              		.loc 1 1050 0
 2173 0806 864B     		ldr	r3, .L315
1049:../Source Files/lpc17xx_uart.c **** {
 2174              		.loc 1 1049 0
 2175 0808 9CB0     		sub	sp, sp, #112
 2176              	.LCFI12:
 2177              		.cfi_def_cfa_offset 152
1049:../Source Files/lpc17xx_uart.c **** {
 2178              		.loc 1 1049 0
 2179 080a 239C     		ldr	r4, [sp, #140]
 2180 080c 0546     		mov	r5, r0
1050:../Source Files/lpc17xx_uart.c **** 	uchar hex[]= "0123456789ABCDEF";
 2181              		.loc 1 1050 0
 2182 080e 03AA     		add	r2, sp, #12
 2183 0810 03F11007 		add	r7, r3, #16
 2184              	.LVL198:
 2185              	.L283:
 2186 0814 1868     		ldr	r0, [r3, #0]	@ unaligned
 2187 0816 5968     		ldr	r1, [r3, #4]	@ unaligned
 2188 0818 1646     		mov	r6, r2
 2189 081a 03C6     		stmia	r6!, {r0, r1}
 2190 081c 0833     		adds	r3, r3, #8
 2191 081e BB42     		cmp	r3, r7
 2192 0820 3246     		mov	r2, r6
 2193 0822 F7D1     		bne	.L283
 2194 0824 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
1051:../Source Files/lpc17xx_uart.c **** 	unsigned int width_dec[10] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
 2195              		.loc 1 1051 0
 2196 0826 0021     		movs	r1, #0
1050:../Source Files/lpc17xx_uart.c **** 	uchar hex[]= "0123456789ABCDEF";
 2197              		.loc 1 1050 0
 2198 0828 3070     		strb	r0, [r6, #0]
1051:../Source Files/lpc17xx_uart.c **** 	unsigned int width_dec[10] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
 2199              		.loc 1 1051 0
 2200 082a 2822     		movs	r2, #40
 2201 082c 08A8     		add	r0, sp, #32
 2202 082e FFF7FEFF 		bl	memset
 2203              	.LVL199:
 2204 0832 0A21     		movs	r1, #10
 2205 0834 4FF47A72 		mov	r2, #1000
 2206 0838 0991     		str	r1, [sp, #36]
 2207 083a 6423     		movs	r3, #100
 2208 083c 0B92     		str	r2, [sp, #44]
 2209 083e 7949     		ldr	r1, .L315+4
 2210 0840 794A     		ldr	r2, .L315+8
 2211 0842 0A93     		str	r3, [sp, #40]
 2212 0844 42F21070 		movw	r0, #10000
 2213 0848 784B     		ldr	r3, .L315+12
 2214 084a 0126     		movs	r6, #1
 2215 084c 0C90     		str	r0, [sp, #48]
 2216 084e 0D91     		str	r1, [sp, #52]
 2217 0850 0F92     		str	r2, [sp, #60]
1052:../Source Files/lpc17xx_uart.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
 2218              		.loc 1 1052 0
 2219 0852 0021     		movs	r1, #0
 2220 0854 2822     		movs	r2, #40
 2221 0856 12A8     		add	r0, sp, #72
1051:../Source Files/lpc17xx_uart.c **** 	unsigned int width_dec[10] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
 2222              		.loc 1 1051 0
 2223 0858 0E93     		str	r3, [sp, #56]
 2224 085a 0896     		str	r6, [sp, #32]
1052:../Source Files/lpc17xx_uart.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
 2225              		.loc 1 1052 0
 2226 085c FFF7FEFF 		bl	memset
 2227              	.LVL200:
 2228 0860 1020     		movs	r0, #16
 2229 0862 4FF48071 		mov	r1, #256
 2230 0866 4FF48053 		mov	r3, #4096
 2231 086a 4FF48032 		mov	r2, #65536
 2232 086e 1390     		str	r0, [sp, #76]
 2233 0870 1491     		str	r1, [sp, #80]
 2234 0872 1593     		str	r3, [sp, #84]
 2235 0874 1692     		str	r2, [sp, #88]
 2236 0876 4FF48010 		mov	r0, #1048576
 2237 087a 4FF08071 		mov	r1, #16777216
 2238 087e 4FF08053 		mov	r3, #268435456
1064:../Source Files/lpc17xx_uart.c **** 	va_start(ap, format);
 2239              		.loc 1 1064 0
 2240 0882 24AA     		add	r2, sp, #144
1052:../Source Files/lpc17xx_uart.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
 2241              		.loc 1 1052 0
 2242 0884 1296     		str	r6, [sp, #72]
 2243 0886 1790     		str	r0, [sp, #92]
 2244 0888 1891     		str	r1, [sp, #96]
 2245 088a 1993     		str	r3, [sp, #100]
1064:../Source Files/lpc17xx_uart.c **** 	va_start(ap, format);
 2246              		.loc 1 1064 0
 2247 088c 0292     		str	r2, [sp, #8]
 2248              	.LVL201:
 2249              	.L284:
1068:../Source Files/lpc17xx_uart.c **** 		while((format_flag = *format++) != '%')      /* until full format string read */
 2250              		.loc 1 1068 0 discriminator 1
 2251 088e 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 2252 0890 2528     		cmp	r0, #37
 2253 0892 8DF80200 		strb	r0, [sp, #2]
 2254              	.LVL202:
 2255 0896 0CD0     		beq	.L313
 2256              	.L286:
1070:../Source Files/lpc17xx_uart.c **** 			if(!format_flag)
 2257              		.loc 1 1070 0
 2258 0898 0028     		cmp	r0, #0
 2259 089a 00F0BB80 		beq	.L309
1068:../Source Files/lpc17xx_uart.c **** 		while((format_flag = *format++) != '%')      /* until full format string read */
 2260              		.loc 1 1068 0
 2261 089e 671C     		adds	r7, r4, #1
 2262              	.LVL203:
 2263              	.L311:
1074:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&format_flag,1,BLOCKING);
 2264              		.loc 1 1074 0
 2265 08a0 2846     		mov	r0, r5
 2266 08a2 0DF10201 		add	r1, sp, #2
 2267              	.LVL204:
 2268              	.L312:
 2269 08a6 0122     		movs	r2, #1
 2270 08a8 0223     		movs	r3, #2
 2271 08aa FFF7FEFF 		bl	UART_Send
 2272              	.LVL205:
 2273              	.L295:
1049:../Source Files/lpc17xx_uart.c **** {
 2274              		.loc 1 1049 0 discriminator 1
 2275 08ae 3C46     		mov	r4, r7
 2276 08b0 EDE7     		b	.L284
 2277              	.LVL206:
 2278              	.L313:
1077:../Source Files/lpc17xx_uart.c **** 		switch(format_flag = *format++)
 2279              		.loc 1 1077 0
 2280 08b2 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2281 08b4 A71C     		adds	r7, r4, #2
 2282              	.LVL207:
 2283 08b6 41B2     		sxtb	r1, r0
 2284 08b8 6429     		cmp	r1, #100
 2285 08ba 8DF80200 		strb	r0, [sp, #2]
 2286 08be 54D0     		beq	.L290
 2287 08c0 0CDC     		bgt	.L294
 2288 08c2 6229     		cmp	r1, #98
 2289 08c4 15D0     		beq	.L288
 2290 08c6 6329     		cmp	r1, #99
 2291 08c8 EAD1     		bne	.L311
1080:../Source Files/lpc17xx_uart.c **** 				format_flag = va_arg(ap, int);
 2292              		.loc 1 1080 0
 2293 08ca 029C     		ldr	r4, [sp, #8]
 2294 08cc 1CA9     		add	r1, sp, #112
 2295 08ce 2268     		ldr	r2, [r4, #0]
 2296 08d0 231D     		adds	r3, r4, #4
 2297 08d2 0293     		str	r3, [sp, #8]
 2298 08d4 01F86E2D 		strb	r2, [r1, #-110]!
 2299              	.LVL208:
1081:../Source Files/lpc17xx_uart.c **** 				UART_Send(UARTx,&format_flag,1,BLOCKING);
 2300              		.loc 1 1081 0
 2301 08d8 2846     		mov	r0, r5
 2302 08da E4E7     		b	.L312
 2303              	.LVL209:
 2304              	.L294:
1077:../Source Files/lpc17xx_uart.c **** 		switch(format_flag = *format++)
 2305              		.loc 1 1077 0
 2306 08dc 7529     		cmp	r1, #117
 2307 08de 2CD0     		beq	.L292
 2308 08e0 7829     		cmp	r1, #120
 2309 08e2 64D0     		beq	.L293
 2310 08e4 7329     		cmp	r1, #115
 2311 08e6 DBD1     		bne	.L311
1098:../Source Files/lpc17xx_uart.c **** 				ptr = va_arg(ap, schar *);
 2312              		.loc 1 1098 0
 2313 08e8 0299     		ldr	r1, [sp, #8]
 2314 08ea 0A1D     		adds	r2, r1, #4
 2315 08ec 0292     		str	r2, [sp, #8]
 2316              	.LVL210:
 2317 08ee 0C68     		ldr	r4, [r1, #0]
1099:../Source Files/lpc17xx_uart.c **** 				while(*ptr)
 2318              		.loc 1 1099 0
 2319 08f0 17E0     		b	.L296
 2320              	.LVL211:
 2321              	.L288:
1091:../Source Files/lpc17xx_uart.c **** 				format_flag = va_arg(ap,int);
 2322              		.loc 1 1091 0
 2323 08f2 0298     		ldr	r0, [sp, #8]
1092:../Source Files/lpc17xx_uart.c **** 				UART_Send(UARTx,&(hex[(uint16)format_flag >> 4]),1,BLOCKING);
 2324              		.loc 1 1092 0
 2325 08f4 03AA     		add	r2, sp, #12
1091:../Source Files/lpc17xx_uart.c **** 				format_flag = va_arg(ap,int);
 2326              		.loc 1 1091 0
 2327 08f6 0478     		ldrb	r4, [r0, #0]	@ zero_extendqisi2
 2328              	.LVL212:
 2329 08f8 011D     		adds	r1, r0, #4
 2330              	.LVL213:
1092:../Source Files/lpc17xx_uart.c **** 				UART_Send(UARTx,&(hex[(uint16)format_flag >> 4]),1,BLOCKING);
 2331              		.loc 1 1092 0
 2332 08fa 63B2     		sxtb	r3, r4
 2333              	.LVL214:
1091:../Source Files/lpc17xx_uart.c **** 				format_flag = va_arg(ap,int);
 2334              		.loc 1 1091 0
 2335 08fc 0291     		str	r1, [sp, #8]
1092:../Source Files/lpc17xx_uart.c **** 				UART_Send(UARTx,&(hex[(uint16)format_flag >> 4]),1,BLOCKING);
 2336              		.loc 1 1092 0
 2337 08fe C3F30B11 		ubfx	r1, r3, #4, #12
 2338              	.LVL215:
 2339 0902 5118     		adds	r1, r2, r1
 2340 0904 0223     		movs	r3, #2
 2341              	.LVL216:
 2342 0906 2846     		mov	r0, r5
 2343 0908 0122     		movs	r2, #1
1091:../Source Files/lpc17xx_uart.c **** 				format_flag = va_arg(ap,int);
 2344              		.loc 1 1091 0
 2345 090a 8DF80240 		strb	r4, [sp, #2]
 2346              	.LVL217:
1092:../Source Files/lpc17xx_uart.c **** 				UART_Send(UARTx,&(hex[(uint16)format_flag >> 4]),1,BLOCKING);
 2347              		.loc 1 1092 0
 2348 090e FFF7FEFF 		bl	UART_Send
 2349              	.LVL218:
1093:../Source Files/lpc17xx_uart.c **** 				UART_Send(UARTx,&(hex[(uint16)format_flag & 0x0F]),1,BLOCKING);
 2350              		.loc 1 1093 0
 2351 0912 9DF80200 		ldrb	r0, [sp, #2]	@ zero_extendqisi2
 2352              	.LVL219:
 2353 0916 03AB     		add	r3, sp, #12
 2354 0918 00F00F04 		and	r4, r0, #15
 2355              	.LVL220:
 2356 091c 1919     		adds	r1, r3, r4
 2357 091e 2846     		mov	r0, r5
 2358              	.LVL221:
 2359 0920 C1E7     		b	.L312
 2360              	.LVL222:
 2361              	.L296:
 2362 0922 2146     		mov	r1, r4
 2363              	.LVL223:
1099:../Source Files/lpc17xx_uart.c **** 				while(*ptr)
 2364              		.loc 1 1099 0 discriminator 1
 2365 0924 91F90000 		ldrsb	r0, [r1, #0]
 2366 0928 0134     		adds	r4, r4, #1
 2367 092a 0028     		cmp	r0, #0
 2368 092c BFD0     		beq	.L295
 2369              	.L297:
 2370              	.LVL224:
1101:../Source Files/lpc17xx_uart.c **** 					UART_Send(UARTx,&(*ptr++),1,BLOCKING);
 2371              		.loc 1 1101 0
 2372 092e 2846     		mov	r0, r5
 2373 0930 0122     		movs	r2, #1
 2374 0932 0223     		movs	r3, #2
 2375 0934 FFF7FEFF 		bl	UART_Send
 2376              	.LVL225:
 2377 0938 F3E7     		b	.L296
 2378              	.LVL226:
 2379              	.L292:
1128:../Source Files/lpc17xx_uart.c **** 				u_val = va_arg(ap, uint32_t);
 2380              		.loc 1 1128 0
 2381 093a 029B     		ldr	r3, [sp, #8]
 2382 093c 0626     		movs	r6, #6
 2383 093e 191D     		adds	r1, r3, #4
 2384 0940 D3F80080 		ldr	r8, [r3, #0]
 2385              	.LVL227:
 2386 0944 0291     		str	r1, [sp, #8]
1127:../Source Files/lpc17xx_uart.c **** 				div_val = 0x100000;
 2387              		.loc 1 1127 0
 2388 0946 4FF48014 		mov	r4, #1048576
 2389              	.LVL228:
 2390              	.L298:
1131:../Source Files/lpc17xx_uart.c **** 					UART_Send(UARTx,&(hex[u_val/div_val]),1,BLOCKING);
 2391              		.loc 1 1131 0 discriminator 1
 2392 094a B8FBF4F9 		udiv	r9, r8, r4
 2393 094e 03AA     		add	r2, sp, #12
 2394 0950 02EB0901 		add	r1, r2, r9
 2395 0954 0223     		movs	r3, #2
 2396 0956 0122     		movs	r2, #1
 2397 0958 2846     		mov	r0, r5
 2398 095a FFF7FEFF 		bl	UART_Send
 2399              	.LVL229:
1132:../Source Files/lpc17xx_uart.c **** 					u_val %= div_val;
 2400              		.loc 1 1132 0 discriminator 1
 2401 095e 04FB1988 		mls	r8, r4, r9, r8
 2402              	.LVL230:
1133:../Source Files/lpc17xx_uart.c **** 					div_val /= base;
 2403              		.loc 1 1133 0 discriminator 1
 2404 0962 2409     		lsrs	r4, r4, #4
 2405              	.LVL231:
1134:../Source Files/lpc17xx_uart.c **** 				}while(div_val);
 2406              		.loc 1 1134 0 discriminator 1
 2407 0964 013E     		subs	r6, r6, #1
 2408 0966 F0D1     		bne	.L298
 2409 0968 A1E7     		b	.L295
 2410              	.LVL232:
 2411              	.L290:
1141:../Source Files/lpc17xx_uart.c **** 				format_flag = ( *format++ ) - '1';
 2412              		.loc 1 1141 0
 2413 096a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
1140:../Source Files/lpc17xx_uart.c **** 				fill_char = *format++;
 2414              		.loc 1 1140 0
 2415 096c A778     		ldrb	r7, [r4, #2]	@ zero_extendqisi2
 2416              	.LVL233:
1141:../Source Files/lpc17xx_uart.c **** 				format_flag = ( *format++ ) - '1';
 2417              		.loc 1 1141 0
 2418 096e 3138     		subs	r0, r0, #49
 2419 0970 C6B2     		uxtb	r6, r0
1143:../Source Files/lpc17xx_uart.c **** 				u_val = va_arg(ap,int);
 2420              		.loc 1 1143 0
 2421 0972 0298     		ldr	r0, [sp, #8]
1142:../Source Files/lpc17xx_uart.c **** 				div_val = width_dec[format_flag];
 2422              		.loc 1 1142 0
 2423 0974 73B2     		sxtb	r3, r6
1141:../Source Files/lpc17xx_uart.c **** 				format_flag = ( *format++ ) - '1';
 2424              		.loc 1 1141 0
 2425 0976 8DF80260 		strb	r6, [sp, #2]
1143:../Source Files/lpc17xx_uart.c **** 				u_val = va_arg(ap,int);
 2426              		.loc 1 1143 0
 2427 097a 061D     		adds	r6, r0, #4
 2428 097c 0296     		str	r6, [sp, #8]
 2429 097e 0668     		ldr	r6, [r0, #0]
1142:../Source Files/lpc17xx_uart.c **** 				div_val = width_dec[format_flag];
 2430              		.loc 1 1142 0
 2431 0980 1CA9     		add	r1, sp, #112
1140:../Source Files/lpc17xx_uart.c **** 				fill_char = *format++;
 2432              		.loc 1 1140 0
 2433 0982 8DF80370 		strb	r7, [sp, #3]
 2434              	.LVL234:
1142:../Source Files/lpc17xx_uart.c **** 				div_val = width_dec[format_flag];
 2435              		.loc 1 1142 0
 2436 0986 01EB8302 		add	r2, r1, r3, lsl #2
1141:../Source Files/lpc17xx_uart.c **** 				format_flag = ( *format++ ) - '1';
 2437              		.loc 1 1141 0
 2438 098a 271D     		adds	r7, r4, #4
 2439              	.LVL235:
1145:../Source Files/lpc17xx_uart.c **** 				if(((int)u_val) < 0)
 2440              		.loc 1 1145 0
 2441 098c 002E     		cmp	r6, #0
1142:../Source Files/lpc17xx_uart.c **** 				div_val = width_dec[format_flag];
 2442              		.loc 1 1142 0
 2443 098e 52F8504C 		ldr	r4, [r2, #-80]
 2444              	.LVL236:
1145:../Source Files/lpc17xx_uart.c **** 				if(((int)u_val) < 0)
 2445              		.loc 1 1145 0
 2446 0992 09DA     		bge	.L304
1148:../Source Files/lpc17xx_uart.c **** 					temp = '-';
 2447              		.loc 1 1148 0
 2448 0994 2D23     		movs	r3, #45
 2449 0996 1CA9     		add	r1, sp, #112
 2450 0998 41F86C3D 		str	r3, [r1, #-108]!
1149:../Source Files/lpc17xx_uart.c **** 				    UART_Send(UARTx,&temp,1,BLOCKING);
 2451              		.loc 1 1149 0
 2452 099c 2846     		mov	r0, r5
 2453 099e 0122     		movs	r2, #1
 2454 09a0 0223     		movs	r3, #2
1147:../Source Files/lpc17xx_uart.c **** 					u_val = - u_val;    /* applied to unsigned type, result still unsigned */
 2455              		.loc 1 1147 0
 2456 09a2 7642     		negs	r6, r6
 2457              	.LVL237:
1149:../Source Files/lpc17xx_uart.c **** 				    UART_Send(UARTx,&temp,1,BLOCKING);
 2458              		.loc 1 1149 0
 2459 09a4 FFF7FEFF 		bl	UART_Send
 2460              	.LVL238:
 2461              	.L304:
1139:../Source Files/lpc17xx_uart.c **** 				base = 10;
 2462              		.loc 1 1139 0
 2463 09a8 4FF00A08 		mov	r8, #10
 2464 09ac 20E0     		b	.L310
 2465              	.LVL239:
 2466              	.L293:
 2467              	.L299:
1157:../Source Files/lpc17xx_uart.c **** 				format_flag = (*format++) - '1';
 2468              		.loc 1 1157 0
 2469 09ae E678     		ldrb	r6, [r4, #3]	@ zero_extendqisi2
1156:../Source Files/lpc17xx_uart.c **** 				fill_char = *format++;
 2470              		.loc 1 1156 0
 2471 09b0 A778     		ldrb	r7, [r4, #2]	@ zero_extendqisi2
 2472              	.LVL240:
1157:../Source Files/lpc17xx_uart.c **** 				format_flag = (*format++) - '1';
 2473              		.loc 1 1157 0
 2474 09b2 313E     		subs	r6, r6, #49
 2475 09b4 F3B2     		uxtb	r3, r6
1159:../Source Files/lpc17xx_uart.c **** 				u_val = va_arg(ap, int);
 2476              		.loc 1 1159 0
 2477 09b6 0298     		ldr	r0, [sp, #8]
1158:../Source Files/lpc17xx_uart.c **** 				div_val = width_hex[format_flag];
 2478              		.loc 1 1158 0
 2479 09b8 59B2     		sxtb	r1, r3
 2480 09ba 1CAA     		add	r2, sp, #112
1159:../Source Files/lpc17xx_uart.c **** 				u_val = va_arg(ap, int);
 2481              		.loc 1 1159 0
 2482 09bc 061D     		adds	r6, r0, #4
1156:../Source Files/lpc17xx_uart.c **** 				fill_char = *format++;
 2483              		.loc 1 1156 0
 2484 09be 8DF80370 		strb	r7, [sp, #3]
 2485              	.LVL241:
1157:../Source Files/lpc17xx_uart.c **** 				format_flag = (*format++) - '1';
 2486              		.loc 1 1157 0
 2487 09c2 271D     		adds	r7, r4, #4
 2488              	.LVL242:
1158:../Source Files/lpc17xx_uart.c **** 				div_val = width_hex[format_flag];
 2489              		.loc 1 1158 0
 2490 09c4 02EB8104 		add	r4, r2, r1, lsl #2
1159:../Source Files/lpc17xx_uart.c **** 				u_val = va_arg(ap, int);
 2491              		.loc 1 1159 0
 2492 09c8 0296     		str	r6, [sp, #8]
1157:../Source Files/lpc17xx_uart.c **** 				format_flag = (*format++) - '1';
 2493              		.loc 1 1157 0
 2494 09ca 8DF80230 		strb	r3, [sp, #2]
1158:../Source Files/lpc17xx_uart.c **** 				div_val = width_hex[format_flag];
 2495              		.loc 1 1158 0
 2496 09ce 54F8284C 		ldr	r4, [r4, #-40]
 2497              	.LVL243:
1159:../Source Files/lpc17xx_uart.c **** 				u_val = va_arg(ap, int);
 2498              		.loc 1 1159 0
 2499 09d2 0668     		ldr	r6, [r0, #0]
 2500              	.LVL244:
1155:../Source Files/lpc17xx_uart.c **** 				base = 16;
 2501              		.loc 1 1155 0
 2502 09d4 4FF01008 		mov	r8, #16
 2503 09d8 0AE0     		b	.L310
 2504              	.LVL245:
 2505              	.L314:
1162:../Source Files/lpc17xx_uart.c **** 				while(div_val > 1 && div_val > u_val)
 2506              		.loc 1 1162 0 discriminator 2
 2507 09da B442     		cmp	r4, r6
 2508 09dc 0AD9     		bls	.L305
 2509              	.L302:
1165:../Source Files/lpc17xx_uart.c **** 					UART_Send(UARTx,&fill_char,1,BLOCKING);
 2510              		.loc 1 1165 0
 2511 09de 2846     		mov	r0, r5
 2512 09e0 0DF10301 		add	r1, sp, #3
 2513 09e4 0122     		movs	r2, #1
 2514 09e6 0223     		movs	r3, #2
1164:../Source Files/lpc17xx_uart.c **** 					div_val /= base;
 2515              		.loc 1 1164 0
 2516 09e8 B4FBF8F4 		udiv	r4, r4, r8
 2517              	.LVL246:
1165:../Source Files/lpc17xx_uart.c **** 					UART_Send(UARTx,&fill_char,1,BLOCKING);
 2518              		.loc 1 1165 0
 2519 09ec FFF7FEFF 		bl	UART_Send
 2520              	.LVL247:
 2521              	.L310:
1162:../Source Files/lpc17xx_uart.c **** 				while(div_val > 1 && div_val > u_val)
 2522              		.loc 1 1162 0 discriminator 1
 2523 09f0 012C     		cmp	r4, #1
 2524 09f2 F2D8     		bhi	.L314
 2525              	.L305:
 2526              	.LVL248:
1170:../Source Files/lpc17xx_uart.c **** 					UART_Send(UARTx,&(hex[u_val/div_val]),1,BLOCKING);
 2527              		.loc 1 1170 0 discriminator 1
 2528 09f4 B6FBF4F9 		udiv	r9, r6, r4
 2529 09f8 03A9     		add	r1, sp, #12
 2530 09fa 2846     		mov	r0, r5
 2531 09fc 4944     		add	r1, r1, r9
 2532 09fe 0122     		movs	r2, #1
 2533 0a00 0223     		movs	r3, #2
 2534 0a02 FFF7FEFF 		bl	UART_Send
 2535              	.LVL249:
1171:../Source Files/lpc17xx_uart.c **** 					u_val %= div_val;
 2536              		.loc 1 1171 0 discriminator 1
 2537 0a06 04FB1966 		mls	r6, r4, r9, r6
 2538              	.LVL250:
1172:../Source Files/lpc17xx_uart.c **** 					div_val /= base;
 2539              		.loc 1 1172 0 discriminator 1
 2540 0a0a B4FBF8F4 		udiv	r4, r4, r8
 2541              	.LVL251:
1173:../Source Files/lpc17xx_uart.c **** 				}while(div_val);
 2542              		.loc 1 1173 0 discriminator 1
 2543 0a0e 002C     		cmp	r4, #0
 2544 0a10 F0D1     		bne	.L305
 2545 0a12 4CE7     		b	.L295
 2546              	.LVL252:
 2547              	.L309:
1177:../Source Files/lpc17xx_uart.c **** }
 2548              		.loc 1 1177 0
 2549 0a14 1CB0     		add	sp, sp, #112
 2550 0a16 BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 2551 0a1a 03B0     		add	sp, sp, #12
 2552 0a1c 7047     		bx	lr
 2553              	.L316:
 2554 0a1e 00BF     		.align	2
 2555              	.L315:
 2556 0a20 00000000 		.word	.LC0
 2557 0a24 A0860100 		.word	100000
 2558 0a28 80969800 		.word	10000000
 2559 0a2c 40420F00 		.word	1000000
 2560              		.cfi_endproc
 2561              	.LFE66:
 2563              		.align	1
 2564              		.global	UART_RS485SendSlvAddr
 2565              		.thumb
 2566              		.thumb_func
 2568              	UART_RS485SendSlvAddr:
 2569              	.LFB86:
1891:../Source Files/lpc17xx_uart.c **** {
 2570              		.loc 1 1891 0
 2571              		.cfi_startproc
 2572              		@ args = 0, pretend = 0, frame = 8
 2573              		@ frame_needed = 0, uses_anonymous_args = 0
 2574              	.LVL253:
 2575 0a30 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2576              	.LCFI13:
 2577              		.cfi_def_cfa_offset 24
 2578              		.cfi_offset 0, -24
 2579              		.cfi_offset 1, -20
 2580              		.cfi_offset 2, -16
 2581              		.cfi_offset 4, -12
 2582              		.cfi_offset 5, -8
 2583              		.cfi_offset 14, -4
 2584              	.LVL254:
 2585              	.LBB94:
 2586              	.LBB95:
 2587              	.LBB96:
 2588              	.LBB97:
1871:../Source Files/lpc17xx_uart.c **** 		save = tmp = UARTx->LCR & UART_LCR_BITMASK;
 2589              		.loc 1 1871 0
 2590 0a32 057B     		ldrb	r5, [r0, #12]	@ zero_extendqisi2
 2591              	.LVL255:
 2592              	.LBE97:
 2593              	.LBE96:
 2594              	.LBE95:
 2595              	.LBE94:
1891:../Source Files/lpc17xx_uart.c **** {
 2596              		.loc 1 1891 0
 2597 0a34 02AB     		add	r3, sp, #8
 2598              	.LVL256:
 2599 0a36 03F8011D 		strb	r1, [r3, #-1]!
 2600              	.LBB104:
 2601              	.LBB102:
 2602              	.LBB100:
 2603              	.LBB98:
1872:../Source Files/lpc17xx_uart.c **** 		tmp &= ~(UART_LCR_PARITY_EVEN);
 2604              		.loc 1 1872 0
 2605 0a3a 05F0EF02 		and	r2, r5, #239
 2606              	.LVL257:
1873:../Source Files/lpc17xx_uart.c **** 		UARTx->LCR = tmp;
 2607              		.loc 1 1873 0
 2608 0a3e 0273     		strb	r2, [r0, #12]
1874:../Source Files/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
 2609              		.loc 1 1874 0
 2610 0a40 1946     		mov	r1, r3
 2611              	.LVL258:
 2612 0a42 0122     		movs	r2, #1
 2613              	.LVL259:
 2614 0a44 0223     		movs	r3, #2
 2615              	.LBE98:
 2616              	.LBE100:
 2617              	.LBE102:
 2618              	.LBE104:
1891:../Source Files/lpc17xx_uart.c **** {
 2619              		.loc 1 1891 0
 2620 0a46 0446     		mov	r4, r0
 2621              	.LBB105:
 2622              	.LBB103:
 2623              	.LBB101:
 2624              	.LBB99:
1874:../Source Files/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
 2625              		.loc 1 1874 0
 2626 0a48 FFF7FEFF 		bl	UART_Send
 2627              	.LVL260:
 2628              	.L318:
1875:../Source Files/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_TEMT));
 2629              		.loc 1 1875 0
 2630 0a4c 207D     		ldrb	r0, [r4, #20]	@ zero_extendqisi2
 2631 0a4e 00F04001 		and	r1, r0, #64
 2632 0a52 CBB2     		uxtb	r3, r1
 2633 0a54 002B     		cmp	r3, #0
 2634 0a56 F9D0     		beq	.L318
1876:../Source Files/lpc17xx_uart.c **** 		UARTx->LCR = save;
 2635              		.loc 1 1876 0
 2636 0a58 2573     		strb	r5, [r4, #12]
 2637              	.LBE99:
 2638              	.LBE101:
 2639              	.LBE103:
 2640              	.LBE105:
1893:../Source Files/lpc17xx_uart.c **** }
 2641              		.loc 1 1893 0
 2642 0a5a 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 2643              		.cfi_endproc
 2644              	.LFE86:
 2646              		.align	1
 2647              		.global	UART_RS485Send
 2648              		.thumb
 2649              		.thumb_func
 2651              	UART_RS485Send:
 2652              	.LFB85:
1866:../Source Files/lpc17xx_uart.c **** {
 2653              		.loc 1 1866 0
 2654              		.cfi_startproc
 2655              		@ args = 0, pretend = 0, frame = 0
 2656              		@ frame_needed = 0, uses_anonymous_args = 0
 2657              	.LVL261:
 2658 0a5c 38B5     		push	{r3, r4, r5, lr}
 2659              	.LCFI14:
 2660              		.cfi_def_cfa_offset 16
 2661              		.cfi_offset 3, -16
 2662              		.cfi_offset 4, -12
 2663              		.cfi_offset 5, -8
 2664              		.cfi_offset 14, -4
1866:../Source Files/lpc17xx_uart.c **** {
 2665              		.loc 1 1866 0
 2666 0a5e 0446     		mov	r4, r0
1870:../Source Files/lpc17xx_uart.c **** 	if (ParityStick){
 2667              		.loc 1 1870 0
 2668 0a60 73B1     		cbz	r3, .L324
 2669              	.LVL262:
 2670              	.LBB108:
 2671              	.LBB109:
1871:../Source Files/lpc17xx_uart.c **** 		save = tmp = UARTx->LCR & UART_LCR_BITMASK;
 2672              		.loc 1 1871 0
 2673 0a62 057B     		ldrb	r5, [r0, #12]	@ zero_extendqisi2
 2674              	.LVL263:
1872:../Source Files/lpc17xx_uart.c **** 		tmp &= ~(UART_LCR_PARITY_EVEN);
 2675              		.loc 1 1872 0
 2676 0a64 05F0EF03 		and	r3, r5, #239
 2677              	.LVL264:
1873:../Source Files/lpc17xx_uart.c **** 		UARTx->LCR = tmp;
 2678              		.loc 1 1873 0
 2679 0a68 0373     		strb	r3, [r0, #12]
1874:../Source Files/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
 2680              		.loc 1 1874 0
 2681 0a6a 0223     		movs	r3, #2
 2682              	.LVL265:
 2683 0a6c FFF7FEFF 		bl	UART_Send
 2684              	.LVL266:
 2685              	.L325:
1875:../Source Files/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_TEMT));
 2686              		.loc 1 1875 0
 2687 0a70 217D     		ldrb	r1, [r4, #20]	@ zero_extendqisi2
 2688 0a72 01F04002 		and	r2, r1, #64
 2689 0a76 D3B2     		uxtb	r3, r2
 2690 0a78 002B     		cmp	r3, #0
 2691 0a7a F9D0     		beq	.L325
1876:../Source Files/lpc17xx_uart.c **** 		UARTx->LCR = save;
 2692              		.loc 1 1876 0
 2693 0a7c 2573     		strb	r5, [r4, #12]
 2694 0a7e 38BD     		pop	{r3, r4, r5, pc}
 2695              	.LVL267:
 2696              	.L324:
 2697              	.LBE109:
 2698              	.LBE108:
1878:../Source Files/lpc17xx_uart.c **** 		cnt = UART_Send((LPC_UART_TypeDef *)UARTx, pDatFrm, size, BLOCKING);
 2699              		.loc 1 1878 0
 2700 0a80 0223     		movs	r3, #2
 2701              	.LVL268:
 2702 0a82 FFF7FEFF 		bl	UART_Send
 2703              	.LVL269:
 2704              	.L327:
1879:../Source Files/lpc17xx_uart.c **** 		while (!(UARTx->LSR & UART_LSR_TEMT));
 2705              		.loc 1 1879 0 discriminator 1
 2706 0a86 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2707 0a88 03F04001 		and	r1, r3, #64
 2708 0a8c CAB2     		uxtb	r2, r1
 2709 0a8e 002A     		cmp	r2, #0
 2710 0a90 F9D0     		beq	.L327
1882:../Source Files/lpc17xx_uart.c **** }
 2711              		.loc 1 1882 0
 2712 0a92 38BD     		pop	{r3, r4, r5, pc}
 2713              		.cfi_endproc
 2714              	.LFE85:
 2716              		.align	1
 2717              		.global	UART_RS485SendData
 2718              		.thumb
 2719              		.thumb_func
 2721              	UART_RS485SendData:
 2722              	.LFB87:
1903:../Source Files/lpc17xx_uart.c **** {
 2723              		.loc 1 1903 0
 2724              		.cfi_startproc
 2725              		@ args = 0, pretend = 0, frame = 0
 2726              		@ frame_needed = 0, uses_anonymous_args = 0
 2727              		@ link register save eliminated.
 2728              	.LVL270:
1904:../Source Files/lpc17xx_uart.c **** 	return (UART_RS485Send(UARTx, pData, size, 0));
 2729              		.loc 1 1904 0
 2730 0a94 0023     		movs	r3, #0
1905:../Source Files/lpc17xx_uart.c **** }
 2731              		.loc 1 1905 0
1904:../Source Files/lpc17xx_uart.c **** 	return (UART_RS485Send(UARTx, pData, size, 0));
 2732              		.loc 1 1904 0
 2733 0a96 FFF7FEBF 		b	UART_RS485Send
 2734              	.LVL271:
 2735              		.cfi_endproc
 2736              	.LFE87:
 2738              		.align	1
 2739              		.global	UART_Receive
 2740              		.thumb
 2741              		.thumb_func
 2743              	UART_Receive:
 2744              	.LFB91:
2080:../Source Files/lpc17xx_uart.c **** 
2081:../Source Files/lpc17xx_uart.c **** /*********************************************************************//**
2082:../Source Files/lpc17xx_uart.c ****  * @brief		Receive a block of data via UART peripheral
2083:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
2084:../Source Files/lpc17xx_uart.c ****  * 				should be:
2085:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
2086:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
2087:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
2088:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
2089:../Source Files/lpc17xx_uart.c ****  * @param[out]	rxbuf 	Pointer to Received buffer
2090:../Source Files/lpc17xx_uart.c ****  * @param[in]	buflen 	Length of Received buffer
2091:../Source Files/lpc17xx_uart.c ****  * @param[in] 	flag 	Flag mode, should be NONE_BLOCKING or BLOCKING
2092:../Source Files/lpc17xx_uart.c **** 
2093:../Source Files/lpc17xx_uart.c ****  * @return 		Number of bytes received
2094:../Source Files/lpc17xx_uart.c ****  *
2095:../Source Files/lpc17xx_uart.c ****  * Note: when using UART in BLOCKING mode, a time-out condition is used
2096:../Source Files/lpc17xx_uart.c ****  * via defined symbol UART_BLOCKING_TIMEOUT.
2097:../Source Files/lpc17xx_uart.c ****  **********************************************************************/
2098:../Source Files/lpc17xx_uart.c **** uint32_t UART_Receive(LPC_UART_TypeDef *UARTx, uint8_t *rxbuf, uint32_t buflen, TRANSFER_BLOCK_Type
2099:../Source Files/lpc17xx_uart.c **** {
 2745              		.loc 1 2099 0
 2746              		.cfi_startproc
 2747              		@ args = 0, pretend = 0, frame = 0
 2748              		@ frame_needed = 0, uses_anonymous_args = 0
 2749              	.LVL272:
 2750 0a9a F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2751              	.LCFI15:
 2752              		.cfi_def_cfa_offset 24
 2753              		.cfi_offset 3, -24
 2754              		.cfi_offset 4, -20
 2755              		.cfi_offset 5, -16
 2756              		.cfi_offset 6, -12
 2757              		.cfi_offset 7, -8
 2758              		.cfi_offset 14, -4
 2759              		.loc 1 2099 0
 2760 0a9c 0E46     		mov	r6, r1
 2761              	.LVL273:
2100:../Source Files/lpc17xx_uart.c **** 	uint8_t *data = (uint8_t *) rxbuf;
2101:../Source Files/lpc17xx_uart.c **** 	uint32_t bytes = 0;
2102:../Source Files/lpc17xx_uart.c **** 
2103:../Source Files/lpc17xx_uart.c **** 	/* Temporarily lock out UART receive interrupts during this
2104:../Source Files/lpc17xx_uart.c **** 	   read so the UART receive interrupt won't cause problems
2105:../Source Files/lpc17xx_uart.c **** 	   with the index values */
2106:../Source Files/lpc17xx_uart.c **** 	UART_IntConfig(UARTx, UART_INTCFG_RBR, DISABLE);
 2762              		.loc 1 2106 0
 2763 0a9e 0021     		movs	r1, #0
 2764              	.LVL274:
2099:../Source Files/lpc17xx_uart.c **** {
 2765              		.loc 1 2099 0
 2766 0aa0 1746     		mov	r7, r2
 2767              		.loc 1 2106 0
 2768 0aa2 0A46     		mov	r2, r1
 2769              	.LVL275:
2099:../Source Files/lpc17xx_uart.c **** {
 2770              		.loc 1 2099 0
 2771 0aa4 0546     		mov	r5, r0
 2772              		.loc 1 2106 0
 2773 0aa6 FFF7FEFF 		bl	UART_IntConfig
 2774              	.LVL276:
2101:../Source Files/lpc17xx_uart.c **** 	uint32_t bytes = 0;
 2775              		.loc 1 2101 0
 2776 0aaa 0024     		movs	r4, #0
 2777              	.LVL277:
 2778              	.L338:
2107:../Source Files/lpc17xx_uart.c **** 
2108:../Source Files/lpc17xx_uart.c **** 	/* Loop until receive buffer ring is empty or
2109:../Source Files/lpc17xx_uart.c **** 		until max_bytes expires */
2110:../Source Files/lpc17xx_uart.c **** 	while ((buflen > 0) && (!(__BUF_IS_EMPTY(rb.rx_head, rb.rx_tail))))
 2779              		.loc 1 2110 0 discriminator 1
 2780 0aac BC42     		cmp	r4, r7
 2781 0aae 12D0     		beq	.L341
 2782              		.loc 1 2110 0 is_stmt 0 discriminator 2
 2783 0ab0 0C4B     		ldr	r3, .L343
 2784 0ab2 9A68     		ldr	r2, [r3, #8]
 2785 0ab4 D968     		ldr	r1, [r3, #12]
 2786 0ab6 81EA0200 		eor	r0, r1, r2
 2787 0aba 10F0FF0F 		tst	r0, #255
 2788 0abe 0AD0     		beq	.L341
 2789              	.L340:
2111:../Source Files/lpc17xx_uart.c **** 	{
2112:../Source Files/lpc17xx_uart.c **** 		/* Read data from ring buffer into user buffer */
2113:../Source Files/lpc17xx_uart.c **** 		*data = rb.rx[rb.rx_tail];
 2790              		.loc 1 2113 0 is_stmt 1
 2791 0ac0 DA68     		ldr	r2, [r3, #12]
 2792 0ac2 9918     		adds	r1, r3, r2
 2793 0ac4 91F81001 		ldrb	r0, [r1, #272]	@ zero_extendqisi2
 2794 0ac8 3055     		strb	r0, [r6, r4]
2114:../Source Files/lpc17xx_uart.c **** 		data++;
2115:../Source Files/lpc17xx_uart.c **** 
2116:../Source Files/lpc17xx_uart.c **** 		/* Update tail pointer */
2117:../Source Files/lpc17xx_uart.c **** 		__BUF_INCR(rb.rx_tail);
 2795              		.loc 1 2117 0
 2796 0aca DA68     		ldr	r2, [r3, #12]
2118:../Source Files/lpc17xx_uart.c **** 
2119:../Source Files/lpc17xx_uart.c **** 		/* Increment data count and decrement buffer size count */
2120:../Source Files/lpc17xx_uart.c **** 		bytes++;
 2797              		.loc 1 2120 0
 2798 0acc 0134     		adds	r4, r4, #1
 2799              	.LVL278:
2117:../Source Files/lpc17xx_uart.c **** 		__BUF_INCR(rb.rx_tail);
 2800              		.loc 1 2117 0
 2801 0ace 511C     		adds	r1, r2, #1
 2802 0ad0 C8B2     		uxtb	r0, r1
 2803 0ad2 D860     		str	r0, [r3, #12]
 2804 0ad4 EAE7     		b	.L338
 2805              	.L341:
2121:../Source Files/lpc17xx_uart.c **** 		buflen--;
2122:../Source Files/lpc17xx_uart.c **** 	}
2123:../Source Files/lpc17xx_uart.c **** 
2124:../Source Files/lpc17xx_uart.c **** 	/* Re-enable UART interrupts */
2125:../Source Files/lpc17xx_uart.c **** 	UART_IntConfig(UARTx, UART_INTCFG_RBR, ENABLE);
 2806              		.loc 1 2125 0
 2807 0ad6 2846     		mov	r0, r5
 2808 0ad8 0021     		movs	r1, #0
 2809 0ada 0122     		movs	r2, #1
 2810 0adc FFF7FEFF 		bl	UART_IntConfig
 2811              	.LVL279:
2126:../Source Files/lpc17xx_uart.c **** 
2127:../Source Files/lpc17xx_uart.c ****     return bytes;
2128:../Source Files/lpc17xx_uart.c **** }
 2812              		.loc 1 2128 0
 2813 0ae0 2046     		mov	r0, r4
 2814 0ae2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2815              	.L344:
 2816              		.align	2
 2817              	.L343:
 2818 0ae4 00000000 		.word	rb
 2819              		.cfi_endproc
 2820              	.LFE91:
 2822              		.align	1
 2823              		.global	getche
 2824              		.thumb
 2825              		.thumb_func
 2827              	getche:
 2828              	.LFB64:
 898:../Source Files/lpc17xx_uart.c **** {
 2829              		.loc 1 898 0
 2830              		.cfi_startproc
 2831              		@ args = 0, pretend = 0, frame = 8
 2832              		@ frame_needed = 0, uses_anonymous_args = 0
 2833              	.LVL280:
 2834 0ae8 73B5     		push	{r0, r1, r4, r5, r6, lr}
 2835              	.LCFI16:
 2836              		.cfi_def_cfa_offset 24
 2837              		.cfi_offset 0, -24
 2838              		.cfi_offset 1, -20
 2839              		.cfi_offset 4, -16
 2840              		.cfi_offset 5, -12
 2841              		.cfi_offset 6, -8
 2842              		.cfi_offset 14, -4
 2843 0aea 0546     		mov	r5, r0
 2844              	.LVL281:
 2845              	.L366:
 903:../Source Files/lpc17xx_uart.c **** 	    if(UARTx == LPC_UART0)
 2846              		.loc 1 903 0
 2847 0aec 1A4B     		ldr	r3, .L368
 2848 0aee 9D42     		cmp	r5, r3
 2849 0af0 21D1     		bne	.L367
 905:../Source Files/lpc17xx_uart.c **** 		    len = UART_Receive(UARTx, key, 1, BLOCKING);
 2850              		.loc 1 905 0
 2851 0af2 2846     		mov	r0, r5
 2852 0af4 01A9     		add	r1, sp, #4
 2853 0af6 0122     		movs	r2, #1
 2854 0af8 0223     		movs	r3, #2
 2855 0afa FFF7FEFF 		bl	UART_Receive
 2856              	.LVL282:
 907:../Source Files/lpc17xx_uart.c **** 		    idx = 0;
 2857              		.loc 1 907 0
 2858 0afe 0024     		movs	r4, #0
 905:../Source Files/lpc17xx_uart.c **** 		    len = UART_Receive(UARTx, key, 1, BLOCKING);
 2859              		.loc 1 905 0
 2860 0b00 0646     		mov	r6, r0
 2861              	.LVL283:
 2862              	.L349:
 908:../Source Files/lpc17xx_uart.c **** 		    while (idx < len)
 2863              		.loc 1 908 0 discriminator 1
 2864 0b02 B442     		cmp	r4, r6
 2865 0b04 F2D0     		beq	.L366
 2866              	.L355:
 910:../Source Files/lpc17xx_uart.c **** 		        if ( key[idx] == In_CR )
 2867              		.loc 1 910 0
 2868 0b06 01A9     		add	r1, sp, #4
 2869 0b08 635C     		ldrb	r3, [r4, r1]	@ zero_extendqisi2
 2870 0b0a 0D2B     		cmp	r3, #13
 2871 0b0c 21D0     		beq	.L357
 914:../Source Files/lpc17xx_uart.c **** 	            else if ( key[idx] == In_DELETE || key[idx] == In_BACKSPACE )
 2872              		.loc 1 914 0
 2873 0b0e 7F2B     		cmp	r3, #127
 2874 0b10 1FD0     		beq	.L357
 914:../Source Files/lpc17xx_uart.c **** 	            else if ( key[idx] == In_DELETE || key[idx] == In_BACKSPACE )
 2875              		.loc 1 914 0 is_stmt 0 discriminator 1
 2876 0b12 082B     		cmp	r3, #8
 2877 0b14 1DD0     		beq	.L357
 2878              	.L352:
 918:../Source Files/lpc17xx_uart.c **** 	            else if ( key[idx] == In_ESC )
 2879              		.loc 1 918 0 is_stmt 1
 2880 0b16 1B2B     		cmp	r3, #27
 2881 0b18 03D1     		bne	.L353
 920:../Source Files/lpc17xx_uart.c **** 	    	        EscFlag = 1;
 2882              		.loc 1 920 0
 2883 0b1a 104A     		ldr	r2, .L368+4
 2884 0b1c 0120     		movs	r0, #1
 2885 0b1e 1080     		strh	r0, [r2, #0]	@ movhi
 2886 0b20 17E0     		b	.L357
 2887              	.L353:
 923:../Source Files/lpc17xx_uart.c **** 	            else if ( key[idx] >= ' ' )
 2888              		.loc 1 923 0
 2889 0b22 1F2B     		cmp	r3, #31
 2890 0b24 15D8     		bhi	.L357
 2891              	.L354:
 929:../Source Files/lpc17xx_uart.c **** 	    	        UART_Send(UARTx,&key[idx],1,BLOCKING);
 2892              		.loc 1 929 0
 2893 0b26 0919     		adds	r1, r1, r4
 2894 0b28 0B48     		ldr	r0, .L368
 2895 0b2a 0122     		movs	r2, #1
 2896 0b2c 0223     		movs	r3, #2
 2897 0b2e FFF7FEFF 		bl	UART_Send
 2898              	.LVL284:
 931:../Source Files/lpc17xx_uart.c **** 		        idx++;
 2899              		.loc 1 931 0
 2900 0b32 0134     		adds	r4, r4, #1
 2901              	.LVL285:
 2902 0b34 E5E7     		b	.L349
 2903              	.LVL286:
 2904              	.L367:
 934:../Source Files/lpc17xx_uart.c **** 	    else if(UARTx == LPC_UART2)
 2905              		.loc 1 934 0
 2906 0b36 0A48     		ldr	r0, .L368+8
 2907 0b38 8542     		cmp	r5, r0
 2908 0b3a D7D1     		bne	.L366
 936:../Source Files/lpc17xx_uart.c **** 		    len = UART_Receive(UARTx, key, 1, BLOCKING);
 2909              		.loc 1 936 0
 2910 0b3c 2846     		mov	r0, r5
 2911 0b3e 01A9     		add	r1, sp, #4
 2912 0b40 0122     		movs	r2, #1
 2913 0b42 0223     		movs	r3, #2
 2914 0b44 FFF7FEFF 		bl	UART_Receive
 2915              	.LVL287:
 939:../Source Files/lpc17xx_uart.c **** 		    while (idx < len)
 2916              		.loc 1 939 0
 2917 0b48 0028     		cmp	r0, #0
 2918 0b4a CFD0     		beq	.L366
 941:../Source Files/lpc17xx_uart.c **** 		    	return(key[idx]);
 2919              		.loc 1 941 0
 2920 0b4c 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 2921              	.LVL288:
 2922 0b50 00E0     		b	.L350
 2923              	.LVL289:
 2924              	.L357:
 912:../Source Files/lpc17xx_uart.c **** 			        return(key[idx]);
 2925              		.loc 1 912 0
 2926 0b52 1846     		mov	r0, r3
 2927              	.LVL290:
 2928              	.L350:
 946:../Source Files/lpc17xx_uart.c **** }
 2929              		.loc 1 946 0
 2930 0b54 7CBD     		pop	{r2, r3, r4, r5, r6, pc}
 2931              	.L369:
 2932 0b56 00BF     		.align	2
 2933              	.L368:
 2934 0b58 00C00040 		.word	1073790976
 2935 0b5c 00000000 		.word	EscFlag
 2936 0b60 00800940 		.word	1074364416
 2937              		.cfi_endproc
 2938              	.LFE64:
 2940              		.align	1
 2941              		.global	get_line
 2942              		.thumb
 2943              		.thumb_func
 2945              	get_line:
 2946              	.LFB65:
 960:../Source Files/lpc17xx_uart.c **** {
 2947              		.loc 1 960 0
 2948              		.cfi_startproc
 2949              		@ args = 0, pretend = 0, frame = 8
 2950              		@ frame_needed = 0, uses_anonymous_args = 0
 2951              	.LVL291:
 2952 0b64 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 2953              	.LCFI17:
 2954              		.cfi_def_cfa_offset 40
 2955              		.cfi_offset 0, -40
 2956              		.cfi_offset 1, -36
 2957              		.cfi_offset 4, -32
 2958              		.cfi_offset 5, -28
 2959              		.cfi_offset 6, -24
 2960              		.cfi_offset 7, -20
 2961              		.cfi_offset 8, -16
 2962              		.cfi_offset 9, -12
 2963              		.cfi_offset 10, -8
 2964              		.cfi_offset 14, -4
 964:../Source Files/lpc17xx_uart.c **** 	uchar count=0;            /* character count */
 2965              		.loc 1 964 0
 2966 0b68 0025     		movs	r5, #0
 960:../Source Files/lpc17xx_uart.c **** {
 2967              		.loc 1 960 0
 2968 0b6a 0646     		mov	r6, r0
 2969 0b6c 8846     		mov	r8, r1
 2970 0b6e 9146     		mov	r9, r2
 963:../Source Files/lpc17xx_uart.c **** 	uchar pointer=0;          /* Pointer in buffer */
 2971              		.loc 1 963 0
 2972 0b70 2C46     		mov	r4, r5
 2973              	.LVL292:
 2974              	.L387:
 969:../Source Files/lpc17xx_uart.c **** 		kb = getche(UARTx);
 2975              		.loc 1 969 0
 2976 0b72 3046     		mov	r0, r6
 2977 0b74 FFF7FEFF 		bl	getche
 2978              	.LVL293:
 2979 0b78 C2B2     		uxtb	r2, r0
 2980              	.LVL294:
 971:../Source Files/lpc17xx_uart.c **** 		if (kb == In_ESC)                /* if ESCAPE pressed then exit */
 2981              		.loc 1 971 0
 2982 0b7a 53B2     		sxtb	r3, r2
 2983              	.LVL295:
 2984 0b7c 1B2B     		cmp	r3, #27
 2985              	.LVL296:
 969:../Source Files/lpc17xx_uart.c **** 		kb = getche(UARTx);
 2986              		.loc 1 969 0
 2987 0b7e 8DF80620 		strb	r2, [sp, #6]
 971:../Source Files/lpc17xx_uart.c **** 		if (kb == In_ESC)                /* if ESCAPE pressed then exit */
 2988              		.loc 1 971 0
 2989 0b82 01D1     		bne	.L372
 973:../Source Files/lpc17xx_uart.c **** 			return (kb);
 2990              		.loc 1 973 0
 2991 0b84 1546     		mov	r5, r2
 2992              	.LVL297:
 2993 0b86 43E0     		b	.L373
 2994              	.LVL298:
 2995              	.L372:
 976:../Source Files/lpc17xx_uart.c **** 		else if (kb == In_CR)            /* CARRIAGE return ? */
 2996              		.loc 1 976 0
 2997 0b88 0D2B     		cmp	r3, #13
 2998 0b8a 03D1     		bne	.L374
 978:../Source Files/lpc17xx_uart.c **** 			s[pointer] = '\0';             /* put null char on last position */
 2999              		.loc 1 978 0
 3000 0b8c 0020     		movs	r0, #0
 3001 0b8e 08F80400 		strb	r0, [r8, r4]
 3002 0b92 3DE0     		b	.L373
 3003              	.L374:
 982:../Source Files/lpc17xx_uart.c **** 		else if(kb == In_DELETE || kb == In_BACKSPACE)
 3004              		.loc 1 982 0
 3005 0b94 7F2B     		cmp	r3, #127
 3006 0b96 01D0     		beq	.L375
 982:../Source Files/lpc17xx_uart.c **** 		else if(kb == In_DELETE || kb == In_BACKSPACE)
 3007              		.loc 1 982 0 is_stmt 0 discriminator 1
 3008 0b98 082B     		cmp	r3, #8
 3009 0b9a 23D1     		bne	.L376
 3010              	.L375:
 984:../Source Files/lpc17xx_uart.c **** 			if(pointer==0)                 /* any characters entered */
 3011              		.loc 1 984 0 is_stmt 1
 3012 0b9c 002C     		cmp	r4, #0
 3013 0b9e E8D0     		beq	.L387
 989:../Source Files/lpc17xx_uart.c **** 			temp = Out_BACKSPACE;
 3014              		.loc 1 989 0
 3015 0ba0 4FF0080A 		mov	sl, #8
 3016 0ba4 0DEB0A07 		add	r7, sp, sl
 3017 0ba8 07F801AD 		strb	sl, [r7, #-1]!
 3018              	.LVL299:
 990:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&temp,1,BLOCKING);   /* go back one position */
 3019              		.loc 1 990 0
 3020 0bac 3946     		mov	r1, r7
 3021 0bae 0122     		movs	r2, #1
 3022 0bb0 0223     		movs	r3, #2
 3023 0bb2 3046     		mov	r0, r6
 3024 0bb4 FFF7FEFF 		bl	UART_Send
 3025              	.LVL300:
 991:../Source Files/lpc17xx_uart.c **** 			temp = Out_SPACE;
 3026              		.loc 1 991 0
 3027 0bb8 2021     		movs	r1, #32
 3028 0bba 8DF80710 		strb	r1, [sp, #7]
 3029              	.LVL301:
 992:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&temp,1,BLOCKING);   /* erase char */
 3030              		.loc 1 992 0
 3031 0bbe 0122     		movs	r2, #1
 3032 0bc0 3946     		mov	r1, r7
 3033 0bc2 0223     		movs	r3, #2
 3034 0bc4 3046     		mov	r0, r6
 3035 0bc6 FFF7FEFF 		bl	UART_Send
 3036              	.LVL302:
 994:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&temp,1,BLOCKING);   /* go back one more position */
 3037              		.loc 1 994 0
 3038 0bca 0122     		movs	r2, #1
 3039 0bcc 0223     		movs	r3, #2
 3040 0bce 3046     		mov	r0, r6
 3041 0bd0 3946     		mov	r1, r7
 993:../Source Files/lpc17xx_uart.c **** 			temp = Out_BACKSPACE;
 3042              		.loc 1 993 0
 3043 0bd2 8DF807A0 		strb	sl, [sp, #7]
 994:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&temp,1,BLOCKING);   /* go back one more position */
 3044              		.loc 1 994 0
 3045 0bd6 FFF7FEFF 		bl	UART_Send
 3046              	.LVL303:
 996:../Source Files/lpc17xx_uart.c **** 			pointer--;                     /* decrement pointer */
 3047              		.loc 1 996 0
 3048 0bda 621E     		subs	r2, r4, #1
 997:../Source Files/lpc17xx_uart.c **** 			count--;                       /* decrement character count */
 3049              		.loc 1 997 0
 3050 0bdc 6B1E     		subs	r3, r5, #1
 996:../Source Files/lpc17xx_uart.c **** 			pointer--;                     /* decrement pointer */
 3051              		.loc 1 996 0
 3052 0bde D4B2     		uxtb	r4, r2
 3053              	.LVL304:
 997:../Source Files/lpc17xx_uart.c **** 			count--;                       /* decrement character count */
 3054              		.loc 1 997 0
 3055 0be0 DDB2     		uxtb	r5, r3
 3056              	.LVL305:
 999:../Source Files/lpc17xx_uart.c **** 			continue;
 3057              		.loc 1 999 0
 3058 0be2 C6E7     		b	.L387
 3059              	.LVL306:
 3060              	.L376:
1002:../Source Files/lpc17xx_uart.c **** 		else if(pointer < lim)
 3061              		.loc 1 1002 0
 3062 0be4 4C45     		cmp	r4, r9
 3063 0be6 09D2     		bcs	.L378
1004:../Source Files/lpc17xx_uart.c **** 			s[pointer] = kb;               /* save character and increment pointer */
 3064              		.loc 1 1004 0
 3065 0be8 08F80420 		strb	r2, [r8, r4]
1006:../Source Files/lpc17xx_uart.c **** 			count++;                       /* increment count */
 3066              		.loc 1 1006 0
 3067 0bec 0135     		adds	r5, r5, #1
 3068              	.LVL307:
1005:../Source Files/lpc17xx_uart.c **** 			pointer++;
 3069              		.loc 1 1005 0
 3070 0bee 0134     		adds	r4, r4, #1
 3071              	.LVL308:
 3072 0bf0 E4B2     		uxtb	r4, r4
 3073              	.LVL309:
1006:../Source Files/lpc17xx_uart.c **** 			count++;                       /* increment count */
 3074              		.loc 1 1006 0
 3075 0bf2 EDB2     		uxtb	r5, r5
 3076              	.LVL310:
1007:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&kb,1,BLOCKING);       /* echo character */
 3077              		.loc 1 1007 0
 3078 0bf4 3046     		mov	r0, r6
 3079 0bf6 0DF10601 		add	r1, sp, #6
 3080 0bfa 04E0     		b	.L388
 3081              	.L378:
1013:../Source Files/lpc17xx_uart.c **** 			temp = In_BELL;
 3082              		.loc 1 1013 0
 3083 0bfc 0720     		movs	r0, #7
 3084 0bfe 02A9     		add	r1, sp, #8
 3085 0c00 01F8010D 		strb	r0, [r1, #-1]!
1014:../Source Files/lpc17xx_uart.c **** 			UART_Send(UARTx,&temp,1,BLOCKING);   /* ring the bell */
 3086              		.loc 1 1014 0
 3087 0c04 3046     		mov	r0, r6
 3088              	.LVL311:
 3089              	.L388:
 3090 0c06 0122     		movs	r2, #1
 3091 0c08 0223     		movs	r3, #2
 3092 0c0a FFF7FEFF 		bl	UART_Send
 3093              	.LVL312:
 3094 0c0e B0E7     		b	.L387
 3095              	.LVL313:
 3096              	.L373:
1018:../Source Files/lpc17xx_uart.c **** }
 3097              		.loc 1 1018 0
 3098 0c10 2846     		mov	r0, r5
 3099 0c12 BDE8FC87 		pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
 3100              		.cfi_endproc
 3101              	.LFE65:
 3103              		.align	1
 3104              		.global	reset_cursor
 3105              		.thumb
 3106              		.thumb_func
 3108              	reset_cursor:
 3109              	.LFB92:
2129:../Source Files/lpc17xx_uart.c **** #endif
2130:../Source Files/lpc17xx_uart.c **** 
2131:../Source Files/lpc17xx_uart.c **** 
2132:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
2133:../Source Files/lpc17xx_uart.c ****  * @brief		VT100- code to set cursor to Home
2134:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
2135:../Source Files/lpc17xx_uart.c ****  * 				should be:
2136:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
2137:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
2138:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
2139:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
2140:../Source Files/lpc17xx_uart.c ****  * @return 		None
2141:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
2142:../Source Files/lpc17xx_uart.c **** void reset_cursor (LPC_UART_TypeDef *UARTx)
2143:../Source Files/lpc17xx_uart.c **** {
 3110              		.loc 1 2143 0
 3111              		.cfi_startproc
 3112              		@ args = 0, pretend = 0, frame = 0
 3113              		@ frame_needed = 0, uses_anonymous_args = 0
 3114              		@ link register save eliminated.
 3115              	.LVL314:
2144:../Source Files/lpc17xx_uart.c **** 	printf(UARTx,"\x1b[H");   /* escape sequence for vt220 ^[H sets cursor to Home */
 3116              		.loc 1 2144 0
 3117 0c16 0149     		ldr	r1, .L390
2145:../Source Files/lpc17xx_uart.c **** }
 3118              		.loc 1 2145 0
2144:../Source Files/lpc17xx_uart.c **** 	printf(UARTx,"\x1b[H");   /* escape sequence for vt220 ^[H sets cursor to Home */
 3119              		.loc 1 2144 0
 3120 0c18 FFF7FEBF 		b	printf
 3121              	.LVL315:
 3122              	.L391:
 3123              		.align	2
 3124              	.L390:
 3125 0c1c 11000000 		.word	.LC1
 3126              		.cfi_endproc
 3127              	.LFE92:
 3129              		.align	1
 3130              		.global	clear_screen
 3131              		.thumb
 3132              		.thumb_func
 3134              	clear_screen:
 3135              	.LFB93:
2146:../Source Files/lpc17xx_uart.c **** 
2147:../Source Files/lpc17xx_uart.c **** 
2148:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
2149:../Source Files/lpc17xx_uart.c ****  * @brief		VT100- code to Clear Screen
2150:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
2151:../Source Files/lpc17xx_uart.c ****  * 				should be:
2152:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
2153:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
2154:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
2155:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
2156:../Source Files/lpc17xx_uart.c ****  * @return 		None
2157:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
2158:../Source Files/lpc17xx_uart.c **** void clear_screen (LPC_UART_TypeDef *UARTx)
2159:../Source Files/lpc17xx_uart.c **** {
 3136              		.loc 1 2159 0
 3137              		.cfi_startproc
 3138              		@ args = 0, pretend = 0, frame = 0
 3139              		@ frame_needed = 0, uses_anonymous_args = 0
 3140              		@ link register save eliminated.
 3141              	.LVL316:
2160:../Source Files/lpc17xx_uart.c **** 	printf(UARTx,"\x1b[2J");   /* escape sequence for vt220 ESC[2J clears screen */
 3142              		.loc 1 2160 0
 3143 0c20 0149     		ldr	r1, .L393
2161:../Source Files/lpc17xx_uart.c **** }
 3144              		.loc 1 2161 0
2160:../Source Files/lpc17xx_uart.c **** 	printf(UARTx,"\x1b[2J");   /* escape sequence for vt220 ESC[2J clears screen */
 3145              		.loc 1 2160 0
 3146 0c22 FFF7FEBF 		b	printf
 3147              	.LVL317:
 3148              	.L394:
 3149 0c26 00BF     		.align	2
 3150              	.L393:
 3151 0c28 15000000 		.word	.LC2
 3152              		.cfi_endproc
 3153              	.LFE93:
 3155              		.align	1
 3156              		.global	clr_scr_rst_cur
 3157              		.thumb
 3158              		.thumb_func
 3160              	clr_scr_rst_cur:
 3161              	.LFB94:
2162:../Source Files/lpc17xx_uart.c **** 
2163:../Source Files/lpc17xx_uart.c **** 
2164:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
2165:../Source Files/lpc17xx_uart.c ****  * @brief		VT100- code to Clear Screen and Reset Cursor
2166:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
2167:../Source Files/lpc17xx_uart.c ****  * 				should be:
2168:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
2169:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
2170:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
2171:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
2172:../Source Files/lpc17xx_uart.c ****  * @return 		None
2173:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
2174:../Source Files/lpc17xx_uart.c **** void clr_scr_rst_cur (LPC_UART_TypeDef *UARTx)
2175:../Source Files/lpc17xx_uart.c **** {
 3162              		.loc 1 2175 0
 3163              		.cfi_startproc
 3164              		@ args = 0, pretend = 0, frame = 0
 3165              		@ frame_needed = 0, uses_anonymous_args = 0
 3166              	.LVL318:
 3167 0c2c 10B5     		push	{r4, lr}
 3168              	.LCFI18:
 3169              		.cfi_def_cfa_offset 8
 3170              		.cfi_offset 4, -8
 3171              		.cfi_offset 14, -4
 3172              		.loc 1 2175 0
 3173 0c2e 0446     		mov	r4, r0
2176:../Source Files/lpc17xx_uart.c **** 	clear_screen(UARTx);
 3174              		.loc 1 2176 0
 3175 0c30 FFF7FEFF 		bl	clear_screen
 3176              	.LVL319:
2177:../Source Files/lpc17xx_uart.c **** 	reset_cursor(UARTx);
 3177              		.loc 1 2177 0
 3178 0c34 2046     		mov	r0, r4
2178:../Source Files/lpc17xx_uart.c **** }
 3179              		.loc 1 2178 0
 3180 0c36 BDE81040 		pop	{r4, lr}
2177:../Source Files/lpc17xx_uart.c **** 	reset_cursor(UARTx);
 3181              		.loc 1 2177 0
 3182 0c3a FFF7FEBF 		b	reset_cursor
 3183              	.LVL320:
 3184              		.cfi_endproc
 3185              	.LFE94:
 3187              		.align	1
 3188              		.global	Erase_Char
 3189              		.thumb
 3190              		.thumb_func
 3192              	Erase_Char:
 3193              	.LFB95:
2179:../Source Files/lpc17xx_uart.c **** 
2180:../Source Files/lpc17xx_uart.c **** 
2181:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
2182:../Source Files/lpc17xx_uart.c ****  * @brief		Erase Character
2183:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
2184:../Source Files/lpc17xx_uart.c ****  * 				should be:
2185:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
2186:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
2187:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
2188:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
2189:../Source Files/lpc17xx_uart.c ****  * @return 		None
2190:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
2191:../Source Files/lpc17xx_uart.c **** void Erase_Char (LPC_UART_TypeDef *UARTx)
2192:../Source Files/lpc17xx_uart.c **** {
 3194              		.loc 1 2192 0
 3195              		.cfi_startproc
 3196              		@ args = 0, pretend = 0, frame = 0
 3197              		@ frame_needed = 0, uses_anonymous_args = 0
 3198              	.LVL321:
 3199 0c3e 38B5     		push	{r3, r4, r5, lr}
 3200              	.LCFI19:
 3201              		.cfi_def_cfa_offset 16
 3202              		.cfi_offset 3, -16
 3203              		.cfi_offset 4, -12
 3204              		.cfi_offset 5, -8
 3205              		.cfi_offset 14, -4
2193:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);
 3206              		.loc 1 2193 0
 3207 0c40 084C     		ldr	r4, .L397
2192:../Source Files/lpc17xx_uart.c **** {
 3208              		.loc 1 2192 0
 3209 0c42 0546     		mov	r5, r0
 3210              		.loc 1 2193 0
 3211 0c44 2146     		mov	r1, r4
 3212 0c46 0822     		movs	r2, #8
 3213 0c48 FFF7FEFF 		bl	printf
 3214              	.LVL322:
2194:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_SPACE);
 3215              		.loc 1 2194 0
 3216 0c4c 2146     		mov	r1, r4
 3217 0c4e 2022     		movs	r2, #32
 3218 0c50 2846     		mov	r0, r5
 3219 0c52 FFF7FEFF 		bl	printf
 3220              	.LVL323:
2195:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);
 3221              		.loc 1 2195 0
 3222 0c56 2846     		mov	r0, r5
 3223 0c58 2146     		mov	r1, r4
 3224 0c5a 0822     		movs	r2, #8
2196:../Source Files/lpc17xx_uart.c **** }
 3225              		.loc 1 2196 0
 3226 0c5c BDE83840 		pop	{r3, r4, r5, lr}
2195:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);
 3227              		.loc 1 2195 0
 3228 0c60 FFF7FEBF 		b	printf
 3229              	.LVL324:
 3230              	.L398:
 3231              		.align	2
 3232              	.L397:
 3233 0c64 1A000000 		.word	.LC3
 3234              		.cfi_endproc
 3235              	.LFE95:
 3237              		.align	1
 3238              		.global	Erase_Char_With_UnderScore
 3239              		.thumb
 3240              		.thumb_func
 3242              	Erase_Char_With_UnderScore:
 3243              	.LFB96:
2197:../Source Files/lpc17xx_uart.c **** 
2198:../Source Files/lpc17xx_uart.c **** 
2199:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
2200:../Source Files/lpc17xx_uart.c ****  * @brief		Erase Character with Underscore '_'
2201:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
2202:../Source Files/lpc17xx_uart.c ****  * 				should be:
2203:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
2204:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
2205:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
2206:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
2207:../Source Files/lpc17xx_uart.c ****  * @return 		None
2208:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
2209:../Source Files/lpc17xx_uart.c **** void Erase_Char_With_UnderScore (LPC_UART_TypeDef *UARTx)
2210:../Source Files/lpc17xx_uart.c **** {
 3244              		.loc 1 2210 0
 3245              		.cfi_startproc
 3246              		@ args = 0, pretend = 0, frame = 0
 3247              		@ frame_needed = 0, uses_anonymous_args = 0
 3248              	.LVL325:
 3249 0c68 38B5     		push	{r3, r4, r5, lr}
 3250              	.LCFI20:
 3251              		.cfi_def_cfa_offset 16
 3252              		.cfi_offset 3, -16
 3253              		.cfi_offset 4, -12
 3254              		.cfi_offset 5, -8
 3255              		.cfi_offset 14, -4
2211:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3256              		.loc 1 2211 0
 3257 0c6a 084D     		ldr	r5, .L400
2210:../Source Files/lpc17xx_uart.c **** {
 3258              		.loc 1 2210 0
 3259 0c6c 0446     		mov	r4, r0
 3260              		.loc 1 2211 0
 3261 0c6e 0822     		movs	r2, #8
 3262 0c70 2946     		mov	r1, r5
 3263 0c72 FFF7FEFF 		bl	printf
 3264              	.LVL326:
2212:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "_");                   /* and write '_' on the screen */
 3265              		.loc 1 2212 0
 3266 0c76 2046     		mov	r0, r4
 3267 0c78 0549     		ldr	r1, .L400+4
 3268 0c7a FFF7FEFF 		bl	printf
 3269              	.LVL327:
2213:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3270              		.loc 1 2213 0
 3271 0c7e 2046     		mov	r0, r4
 3272 0c80 2946     		mov	r1, r5
 3273 0c82 0822     		movs	r2, #8
2214:../Source Files/lpc17xx_uart.c **** }
 3274              		.loc 1 2214 0
 3275 0c84 BDE83840 		pop	{r3, r4, r5, lr}
2213:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3276              		.loc 1 2213 0
 3277 0c88 FFF7FEBF 		b	printf
 3278              	.LVL328:
 3279              	.L401:
 3280              		.align	2
 3281              	.L400:
 3282 0c8c 1A000000 		.word	.LC3
 3283 0c90 1D000000 		.word	.LC4
 3284              		.cfi_endproc
 3285              	.LFE96:
 3287              		.align	1
 3288              		.global	Erase_BackLash
 3289              		.thumb
 3290              		.thumb_func
 3292              	Erase_BackLash:
 3293              	.LFB97:
2215:../Source Files/lpc17xx_uart.c **** 
2216:../Source Files/lpc17xx_uart.c **** 
2217:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
2218:../Source Files/lpc17xx_uart.c ****  * @brief		Erase BackLash
2219:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
2220:../Source Files/lpc17xx_uart.c ****  * 				should be:
2221:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
2222:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
2223:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
2224:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
2225:../Source Files/lpc17xx_uart.c ****  * @return 		None
2226:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
2227:../Source Files/lpc17xx_uart.c **** void Erase_BackLash (LPC_UART_TypeDef *UARTx)
2228:../Source Files/lpc17xx_uart.c **** {
 3294              		.loc 1 2228 0
 3295              		.cfi_startproc
 3296              		@ args = 0, pretend = 0, frame = 0
 3297              		@ frame_needed = 0, uses_anonymous_args = 0
 3298              	.LVL329:
 3299 0c94 38B5     		push	{r3, r4, r5, lr}
 3300              	.LCFI21:
 3301              		.cfi_def_cfa_offset 16
 3302              		.cfi_offset 3, -16
 3303              		.cfi_offset 4, -12
 3304              		.cfi_offset 5, -8
 3305              		.cfi_offset 14, -4
2229:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3306              		.loc 1 2229 0
 3307 0c96 0F4D     		ldr	r5, .L403
2228:../Source Files/lpc17xx_uart.c **** {
 3308              		.loc 1 2228 0
 3309 0c98 0446     		mov	r4, r0
 3310              		.loc 1 2229 0
 3311 0c9a 0822     		movs	r2, #8
 3312 0c9c 2946     		mov	r1, r5
 3313 0c9e FFF7FEFF 		bl	printf
 3314              	.LVL330:
2230:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "/");                   /* and write '/' on the screen */
 3315              		.loc 1 2230 0
 3316 0ca2 2046     		mov	r0, r4
 3317 0ca4 0C49     		ldr	r1, .L403+4
 3318 0ca6 FFF7FEFF 		bl	printf
 3319              	.LVL331:
2231:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3320              		.loc 1 2231 0
 3321 0caa 2946     		mov	r1, r5
 3322 0cac 0822     		movs	r2, #8
 3323 0cae 2046     		mov	r0, r4
 3324 0cb0 FFF7FEFF 		bl	printf
 3325              	.LVL332:
2232:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3326              		.loc 1 2232 0
 3327 0cb4 0822     		movs	r2, #8
 3328 0cb6 2946     		mov	r1, r5
 3329 0cb8 2046     		mov	r0, r4
 3330 0cba FFF7FEFF 		bl	printf
 3331              	.LVL333:
2233:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "_");                   /* and write '_' on the screen */
 3332              		.loc 1 2233 0
 3333 0cbe 2046     		mov	r0, r4
 3334 0cc0 0649     		ldr	r1, .L403+8
 3335 0cc2 FFF7FEFF 		bl	printf
 3336              	.LVL334:
2234:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3337              		.loc 1 2234 0
 3338 0cc6 2046     		mov	r0, r4
 3339 0cc8 2946     		mov	r1, r5
 3340 0cca 0822     		movs	r2, #8
2235:../Source Files/lpc17xx_uart.c **** }
 3341              		.loc 1 2235 0
 3342 0ccc BDE83840 		pop	{r3, r4, r5, lr}
2234:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3343              		.loc 1 2234 0
 3344 0cd0 FFF7FEBF 		b	printf
 3345              	.LVL335:
 3346              	.L404:
 3347              		.align	2
 3348              	.L403:
 3349 0cd4 1A000000 		.word	.LC3
 3350 0cd8 1F000000 		.word	.LC5
 3351 0cdc 1D000000 		.word	.LC4
 3352              		.cfi_endproc
 3353              	.LFE97:
 3355              		.align	1
 3356              		.global	Erase_SemiColon
 3357              		.thumb
 3358              		.thumb_func
 3360              	Erase_SemiColon:
 3361              	.LFB98:
2236:../Source Files/lpc17xx_uart.c **** 
2237:../Source Files/lpc17xx_uart.c **** 
2238:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
2239:../Source Files/lpc17xx_uart.c ****  * @brief		Erase Semicolon
2240:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
2241:../Source Files/lpc17xx_uart.c ****  * 				should be:
2242:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
2243:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
2244:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
2245:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
2246:../Source Files/lpc17xx_uart.c ****  * @return 		None
2247:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
2248:../Source Files/lpc17xx_uart.c **** void Erase_SemiColon (LPC_UART_TypeDef *UARTx)
2249:../Source Files/lpc17xx_uart.c **** {
 3362              		.loc 1 2249 0
 3363              		.cfi_startproc
 3364              		@ args = 0, pretend = 0, frame = 0
 3365              		@ frame_needed = 0, uses_anonymous_args = 0
 3366              	.LVL336:
 3367 0ce0 38B5     		push	{r3, r4, r5, lr}
 3368              	.LCFI22:
 3369              		.cfi_def_cfa_offset 16
 3370              		.cfi_offset 3, -16
 3371              		.cfi_offset 4, -12
 3372              		.cfi_offset 5, -8
 3373              		.cfi_offset 14, -4
2250:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3374              		.loc 1 2250 0
 3375 0ce2 0F4D     		ldr	r5, .L406
2249:../Source Files/lpc17xx_uart.c **** {
 3376              		.loc 1 2249 0
 3377 0ce4 0446     		mov	r4, r0
 3378              		.loc 1 2250 0
 3379 0ce6 0822     		movs	r2, #8
 3380 0ce8 2946     		mov	r1, r5
 3381 0cea FFF7FEFF 		bl	printf
 3382              	.LVL337:
2251:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, ":");                   /* and write ':' on the screen */
 3383              		.loc 1 2251 0
 3384 0cee 2046     		mov	r0, r4
 3385 0cf0 0C49     		ldr	r1, .L406+4
 3386 0cf2 FFF7FEFF 		bl	printf
 3387              	.LVL338:
2252:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3388              		.loc 1 2252 0
 3389 0cf6 2946     		mov	r1, r5
 3390 0cf8 0822     		movs	r2, #8
 3391 0cfa 2046     		mov	r0, r4
 3392 0cfc FFF7FEFF 		bl	printf
 3393              	.LVL339:
2253:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3394              		.loc 1 2253 0
 3395 0d00 0822     		movs	r2, #8
 3396 0d02 2946     		mov	r1, r5
 3397 0d04 2046     		mov	r0, r4
 3398 0d06 FFF7FEFF 		bl	printf
 3399              	.LVL340:
2254:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "_");                   /* and write '_' on the screen */
 3400              		.loc 1 2254 0
 3401 0d0a 2046     		mov	r0, r4
 3402 0d0c 0649     		ldr	r1, .L406+8
 3403 0d0e FFF7FEFF 		bl	printf
 3404              	.LVL341:
2255:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3405              		.loc 1 2255 0
 3406 0d12 2046     		mov	r0, r4
 3407 0d14 2946     		mov	r1, r5
 3408 0d16 0822     		movs	r2, #8
2256:../Source Files/lpc17xx_uart.c **** }
 3409              		.loc 1 2256 0
 3410 0d18 BDE83840 		pop	{r3, r4, r5, lr}
2255:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);       /* erase character on the screen */
 3411              		.loc 1 2255 0
 3412 0d1c FFF7FEBF 		b	printf
 3413              	.LVL342:
 3414              	.L407:
 3415              		.align	2
 3416              	.L406:
 3417 0d20 1A000000 		.word	.LC3
 3418 0d24 21000000 		.word	.LC6
 3419 0d28 1D000000 		.word	.LC4
 3420              		.cfi_endproc
 3421              	.LFE98:
 3423              		.align	1
 3424              		.global	Erase_And_RingTheBell
 3425              		.thumb
 3426              		.thumb_func
 3428              	Erase_And_RingTheBell:
 3429              	.LFB99:
2257:../Source Files/lpc17xx_uart.c **** 
2258:../Source Files/lpc17xx_uart.c **** 
2259:../Source Files/lpc17xx_uart.c **** /********************************************************************//**
2260:../Source Files/lpc17xx_uart.c ****  * @brief		Erase and Ring the Bell
2261:../Source Files/lpc17xx_uart.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
2262:../Source Files/lpc17xx_uart.c ****  * 				should be:
2263:../Source Files/lpc17xx_uart.c ****  *   			- LPC_UART0: UART0 peripheral
2264:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART1: UART1 peripheral
2265:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART2: UART2 peripheral
2266:../Source Files/lpc17xx_uart.c ****  * 				- LPC_UART3: UART3 peripheral
2267:../Source Files/lpc17xx_uart.c ****  * @return 		None
2268:../Source Files/lpc17xx_uart.c ****  *********************************************************************/
2269:../Source Files/lpc17xx_uart.c **** void Erase_And_RingTheBell (LPC_UART_TypeDef *UARTx)
2270:../Source Files/lpc17xx_uart.c **** {
 3430              		.loc 1 2270 0
 3431              		.cfi_startproc
 3432              		@ args = 0, pretend = 0, frame = 0
 3433              		@ frame_needed = 0, uses_anonymous_args = 0
 3434              	.LVL343:
 3435 0d2c 70B5     		push	{r4, r5, r6, lr}
 3436              	.LCFI23:
 3437              		.cfi_def_cfa_offset 16
 3438              		.cfi_offset 4, -16
 3439              		.cfi_offset 5, -12
 3440              		.cfi_offset 6, -8
 3441              		.cfi_offset 14, -4
2271:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);         /* back space */
 3442              		.loc 1 2271 0
 3443 0d2e 0F4D     		ldr	r5, .L409
2272:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "_");                   /* erase 1st char on the screen */
 3444              		.loc 1 2272 0
 3445 0d30 0F4E     		ldr	r6, .L409+4
2270:../Source Files/lpc17xx_uart.c **** {
 3446              		.loc 1 2270 0
 3447 0d32 0446     		mov	r4, r0
2271:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);         /* back space */
 3448              		.loc 1 2271 0
 3449 0d34 0822     		movs	r2, #8
 3450 0d36 2946     		mov	r1, r5
 3451 0d38 FFF7FEFF 		bl	printf
 3452              	.LVL344:
 3453              		.loc 1 2272 0
 3454 0d3c 3146     		mov	r1, r6
 3455 0d3e 2046     		mov	r0, r4
 3456 0d40 FFF7FEFF 		bl	printf
 3457              	.LVL345:
2273:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);         /* back space */
 3458              		.loc 1 2273 0
 3459 0d44 0822     		movs	r2, #8
 3460 0d46 2946     		mov	r1, r5
 3461 0d48 2046     		mov	r0, r4
 3462 0d4a FFF7FEFF 		bl	printf
 3463              	.LVL346:
2274:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "_");                   /* erase 2nd char on the screen */
 3464              		.loc 1 2274 0
 3465 0d4e 3146     		mov	r1, r6
 3466 0d50 2046     		mov	r0, r4
 3467 0d52 FFF7FEFF 		bl	printf
 3468              	.LVL347:
2275:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "%c", Out_BACKSPACE);         /* back space */
 3469              		.loc 1 2275 0
 3470 0d56 2946     		mov	r1, r5
 3471 0d58 2046     		mov	r0, r4
 3472 0d5a 0822     		movs	r2, #8
 3473 0d5c FFF7FEFF 		bl	printf
 3474              	.LVL348:
2276:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "\7");                  /* ring the bell */
 3475              		.loc 1 2276 0
 3476 0d60 0449     		ldr	r1, .L409+8
 3477 0d62 2046     		mov	r0, r4
2277:../Source Files/lpc17xx_uart.c **** }
 3478              		.loc 1 2277 0
 3479 0d64 BDE87040 		pop	{r4, r5, r6, lr}
2276:../Source Files/lpc17xx_uart.c **** 	printf(UARTx, "\7");                  /* ring the bell */
 3480              		.loc 1 2276 0
 3481 0d68 FFF7FEBF 		b	printf
 3482              	.LVL349:
 3483              	.L410:
 3484              		.align	2
 3485              	.L409:
 3486 0d6c 1A000000 		.word	.LC3
 3487 0d70 1D000000 		.word	.LC4
 3488 0d74 23000000 		.word	.LC7
 3489              		.cfi_endproc
 3490              	.LFE99:
 3492              		.comm	TxIntStat,1,1
 3493              		.comm	rb,528,4
 3494              		.comm	EscFlag,2,2
 3495              		.section	.rodata
 3496              		.set	.LANCHOR0,. + 0
 3499              	CSWTCH.31:
 3500 0000 01       		.byte	1
 3501 0001 41       		.byte	65
 3502 0002 81       		.byte	-127
 3505              	CSWTCH.43:
 3506 0003 01       		.byte	1
 3507 0004 02       		.byte	2
 3508              		.section	.rodata.str1.1,"aMS",%progbits,1
 3509              	.LC0:
 3510 0000 30313233 		.ascii	"0123456789ABCDEF\000"
 3510      34353637 
 3510      38394142 
 3510      43444546 
 3510      00
 3511              	.LC1:
 3512 0011 1B5B4800 		.ascii	"\033[H\000"
 3513              	.LC2:
 3514 0015 1B5B324A 		.ascii	"\033[2J\000"
 3514      00
 3515              	.LC3:
 3516 001a 256300   		.ascii	"%c\000"
 3517              	.LC4:
 3518 001d 5F00     		.ascii	"_\000"
 3519              	.LC5:
 3520 001f 2F00     		.ascii	"/\000"
 3521              	.LC6:
 3522 0021 3A00     		.ascii	":\000"
 3523              	.LC7:
 3524 0023 0700     		.ascii	"\007\000"
 3525              		.text
 3526              	.Letext0:
 3527              		.file 3 "../CM3 Core/LPC17xx.h"
 3528              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q2\\bin\\../lib/gcc/arm-none-eab
 3529              		.file 5 "../Header Files/lpc_types.h"
 3530              		.file 6 "../Header Files/lpc17xx_pinsel.h"
 3531              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q2\\bin\\../lib/gcc/arm-none-eab
 3532              		.file 8 "../Header Files/lpc17xx_uart.h"
 3533              		.file 9 "../Header Files/lpc17xx_clkpwr.h"
 3534              		.file 10 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 lpc17xx_uart.c
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:19     .text:00000000 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:24     .text:00000000 UART_Init
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:543    .text:00000294 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:550    .text:000002a4 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:555    .text:000002a4 UART_ConfigStructInit
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:586    .text:000002b6 UART_SendByte
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:605    .text:000002ba UART_ReceiveByte
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:625    .text:000002c8 $d
                            *COM*:00000002 EscFlag
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:629    .text:000002cc $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:634    .text:000002cc UART_ForceBreak
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:655    .text:000002d6 UART_IntConfig
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:672    .text:000002e0 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:763    .text:00000338 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:767    .text:0000033c $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:772    .text:0000033c UART_GetLineStatus
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:793    .text:00000340 UART_GetIntId
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:816    .text:0000034a UART_CheckBusy
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:839    .text:00000356 UART_FIFOConfig
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:891    .text:0000038c $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:895    .text:00000390 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:900    .text:00000390 UART_Config
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1186   .text:000004b0 $d
                            *COM*:00000210 rb
                            *COM*:00000001 TxIntStat
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1195   .text:000004c8 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1200   .text:000004c8 UART_FIFOConfigStructInit
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1229   .text:000004d6 UART_ABCmd
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1301   .text:00000524 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1305   .text:00000528 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1310   .text:00000528 UART_ABClearIntPending
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1332   .text:00000530 UART_TxCmd
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1369   .text:00000550 UART_DeInit
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1391   .text:00000556 UART_IrDAInvtInputCmd
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1427   .text:00000574 UART_IrDACmd
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1454   .text:0000058a UART_IrDAPulseDivConfig
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1486   .text:000005a8 UART_FullModemForcePinState
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1521   .text:000005c8 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1525   .text:000005cc $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1530   .text:000005cc UART_FullModemConfigMode
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1583   .text:000005f6 UART_FullModemGetStatus
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1604   .text:000005fa UART_RS485Config
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1688   .text:00000652 UART_RS485ReceiverCmd
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1715   .text:00000668 UART_IntReceive
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1762   .text:0000069c $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1766   .text:000006a0 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1771   .text:000006a0 UART_IntTransmit
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1886   .text:00000720 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1891   .text:00000728 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1896   .text:00000728 UART2_IRQHandler
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1963   .text:00000760 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1967   .text:00000764 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:1972   .text:00000764 UART0_IRQHandler
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2039   .text:0000079c $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2043   .text:000007a0 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2048   .text:000007a0 UART_Send
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2139   .text:000007f8 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2144   .text:00000800 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2149   .text:00000800 printf
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2556   .text:00000a20 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2563   .text:00000a30 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2568   .text:00000a30 UART_RS485SendSlvAddr
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2651   .text:00000a5c UART_RS485Send
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2721   .text:00000a94 UART_RS485SendData
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2743   .text:00000a9a UART_Receive
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2818   .text:00000ae4 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2822   .text:00000ae8 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2827   .text:00000ae8 getche
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2934   .text:00000b58 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2940   .text:00000b64 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:2945   .text:00000b64 get_line
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3108   .text:00000c16 reset_cursor
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3125   .text:00000c1c $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3129   .text:00000c20 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3134   .text:00000c20 clear_screen
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3151   .text:00000c28 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3155   .text:00000c2c $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3160   .text:00000c2c clr_scr_rst_cur
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3192   .text:00000c3e Erase_Char
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3233   .text:00000c64 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3237   .text:00000c68 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3242   .text:00000c68 Erase_Char_With_UnderScore
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3282   .text:00000c8c $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3287   .text:00000c94 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3292   .text:00000c94 Erase_BackLash
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3349   .text:00000cd4 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3355   .text:00000ce0 $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3360   .text:00000ce0 Erase_SemiColon
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3417   .text:00000d20 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3423   .text:00000d2c $t
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3428   .text:00000d2c Erase_And_RingTheBell
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3486   .text:00000d6c $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3499   .rodata:00000000 CSWTCH.31
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:3505   .rodata:00000003 CSWTCH.43
                     .debug_frame:00000010 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:679    .text:000002e7 $d
C:\Users\raghav\AppData\Local\Temp\ccSnWCtV.s:679    .text:000002e8 $t
                           .group:00000000 wm4.1.549b84bf9d8399e395ff8216fcbb3d69
                           .group:00000000 wm4.LPC17xx.h.27.964facdaadd4aa3f18ac78c8a78f0013
                           .group:00000000 wm4.core_cm3.h.32.3cac756d6e704b813781f82afd94fa5f
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.6beb15babd14c076008ec0890c26e21c
                           .group:00000000 wm4.core_cm3.h.83.1a3cb9afc687cf157efeddb3d5f3109e
                           .group:00000000 wm4.LPC17xx.h.953.82b7a9ed60bb594048bc8738cf1d3489
                           .group:00000000 wm4.lpc_types.h.32.72d58ce80fabd1a5430c6ec0500a090b
                           .group:00000000 wm4.lpc17xx_pinsel.h.30.a409f0915fca7a8098ca15e74d04c6ac
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832
                           .group:00000000 wm4.lpc17xx_uart.h.58.dbba6e724b29a6214e9cafbaf3ee8a9e
                           .group:00000000 wm4.lpc17xx_clkpwr.h.30.6ad069e5d9b902121622749a19395ff4

UNDEFINED SYMBOLS
__aeabi_uldivmod
CLKPWR_ConfigPPWR
CLKPWR_GetPCLK
PINSEL_ConfigPin
memset
