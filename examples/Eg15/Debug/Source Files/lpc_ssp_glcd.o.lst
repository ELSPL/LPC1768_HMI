   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"lpc_ssp_glcd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	1
  19              		.thumb
  20              		.thumb_func
  22              	wr_dat_start:
  23              	.LFB65:
  24              		.file 1 "../Source Files/lpc_ssp_glcd.c"
   1:../Source Files/lpc_ssp_glcd.c **** /**********************************************************************
   2:../Source Files/lpc_ssp_glcd.c **** * $Id$		lpc_ssp_glcd.c
   3:../Source Files/lpc_ssp_glcd.c **** *//**
   4:../Source Files/lpc_ssp_glcd.c **** * @file		lpc_ssp_glcd.c
   5:../Source Files/lpc_ssp_glcd.c **** * @brief	Contains all functions support for SSP based GLCD
   6:../Source Files/lpc_ssp_glcd.c **** *           library on LPC17xx
   7:../Source Files/lpc_ssp_glcd.c **** * @version	1.0
   8:../Source Files/lpc_ssp_glcd.c **** * @date		18. Dec. 2013
   9:../Source Files/lpc_ssp_glcd.c **** * @author	Dwijay.Edutech Learning Solutions
  10:../Source Files/lpc_ssp_glcd.c **** ***********************************************************************
  11:../Source Files/lpc_ssp_glcd.c **** * Software that is described herein is for illustrative purposes only
  12:../Source Files/lpc_ssp_glcd.c **** * which provides customers with programming information regarding the
  13:../Source Files/lpc_ssp_glcd.c **** * products. This software is supplied "AS IS" without any warranties.
  14:../Source Files/lpc_ssp_glcd.c **** * NXP Semiconductors assumes no responsibility or liability for the
  15:../Source Files/lpc_ssp_glcd.c **** * use of the software, conveys no license or title under any patent,
  16:../Source Files/lpc_ssp_glcd.c **** * copyright, or mask work right to the product. NXP Semiconductors
  17:../Source Files/lpc_ssp_glcd.c **** * reserves the right to make changes in the software without
  18:../Source Files/lpc_ssp_glcd.c **** * notification. NXP Semiconductors also make no representation or
  19:../Source Files/lpc_ssp_glcd.c **** * warranty that such application will be suitable for the specified
  20:../Source Files/lpc_ssp_glcd.c **** * use without further testing or modification.
  21:../Source Files/lpc_ssp_glcd.c **** **********************************************************************/
  22:../Source Files/lpc_ssp_glcd.c **** 
  23:../Source Files/lpc_ssp_glcd.c **** /* Peripheral group ----------------------------------------------------------- */
  24:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD
  25:../Source Files/lpc_ssp_glcd.c ****  * @{
  26:../Source Files/lpc_ssp_glcd.c ****  */
  27:../Source Files/lpc_ssp_glcd.c **** 
  28:../Source Files/lpc_ssp_glcd.c **** /* Includes ------------------------------------------------------------------- */
  29:../Source Files/lpc_ssp_glcd.c **** #include "lpc_ssp_glcd.h"
  30:../Source Files/lpc_ssp_glcd.c **** #include "math.h"
  31:../Source Files/lpc_ssp_glcd.c **** #include "Font_24x16.h"
  32:../Source Files/lpc_ssp_glcd.c **** #include "Font_5x7.h"
  33:../Source Files/lpc_ssp_glcd.c **** 
  34:../Source Files/lpc_ssp_glcd.c **** 
  35:../Source Files/lpc_ssp_glcd.c **** /* If this source file built with example, the LPC17xx FW library configuration
  36:../Source Files/lpc_ssp_glcd.c ****  * file in each example directory ("lpc17xx_libcfg.h") must be included,
  37:../Source Files/lpc_ssp_glcd.c ****  * otherwise the default FW library configuration file must be included instead
  38:../Source Files/lpc_ssp_glcd.c ****  */
  39:../Source Files/lpc_ssp_glcd.c **** 
  40:../Source Files/lpc_ssp_glcd.c **** /******************************************************************************/
  41:../Source Files/lpc_ssp_glcd.c **** static volatile uint16_t TextColor = Black, BackColor = White;
  42:../Source Files/lpc_ssp_glcd.c **** 
  43:../Source Files/lpc_ssp_glcd.c **** // Swap two bytes
  44:../Source Files/lpc_ssp_glcd.c **** #define SWAP(x,y) do { (x)=(x)^(y); (y)=(x)^(y); (x)=(x)^(y); } while(0)
  45:../Source Files/lpc_ssp_glcd.c **** #define bit_test(D,i) (D & (0x01 << i))
  46:../Source Files/lpc_ssp_glcd.c **** 
  47:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD_Public_Functions
  48:../Source Files/lpc_ssp_glcd.c ****  * @{
  49:../Source Files/lpc_ssp_glcd.c ****  */
  50:../Source Files/lpc_ssp_glcd.c **** 
  51:../Source Files/lpc_ssp_glcd.c **** /* Public Functions ----------------------------------------------------------- */
  52:../Source Files/lpc_ssp_glcd.c **** 
  53:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  54:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls Backlight
  55:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	NewState	ENABLE/DISABLE the Backlight
  56:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  57:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  58:../Source Files/lpc_ssp_glcd.c **** void GLCD_Backlight (FunctionalState NewState)
  59:../Source Files/lpc_ssp_glcd.c **** {
  60:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
  61:../Source Files/lpc_ssp_glcd.c **** 	{
  62:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
  63:../Source Files/lpc_ssp_glcd.c **** 	}
  64:../Source Files/lpc_ssp_glcd.c **** 	else
  65:../Source Files/lpc_ssp_glcd.c **** 	{
  66:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
  67:../Source Files/lpc_ssp_glcd.c **** 	}
  68:../Source Files/lpc_ssp_glcd.c **** }
  69:../Source Files/lpc_ssp_glcd.c **** 
  70:../Source Files/lpc_ssp_glcd.c **** 
  71:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  72:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function resets GLCD
  73:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
  74:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  75:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  76:../Source Files/lpc_ssp_glcd.c **** void GLCD_Reset (void)
  77:../Source Files/lpc_ssp_glcd.c **** {
  78:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
  79:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
  81:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
  82:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
  83:../Source Files/lpc_ssp_glcd.c **** }
  84:../Source Files/lpc_ssp_glcd.c **** 
  85:../Source Files/lpc_ssp_glcd.c **** 
  86:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  87:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls GLCD Output
  88:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	drv	    Output Format
  89:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_LEFT
  90:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_RIGHT
  91:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_LEFT
  92:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_RIGHT
  93:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  94:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  95:../Source Files/lpc_ssp_glcd.c **** void GLCD_Driver_OutCtrl (DRIVER_OUT_Type drv)
  96:../Source Files/lpc_ssp_glcd.c **** {
  97:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
  98:../Source Files/lpc_ssp_glcd.c **** 
  99:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
 100:../Source Files/lpc_ssp_glcd.c **** 	{
 101:../Source Files/lpc_ssp_glcd.c **** 	case TOP_LEFT:
 102:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 103:../Source Files/lpc_ssp_glcd.c **** 		break;
 104:../Source Files/lpc_ssp_glcd.c **** 
 105:../Source Files/lpc_ssp_glcd.c **** 	case TOP_RIGHT:
 106:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 107:../Source Files/lpc_ssp_glcd.c **** 		break;
 108:../Source Files/lpc_ssp_glcd.c **** 
 109:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_LEFT:
 110:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 111:../Source Files/lpc_ssp_glcd.c **** 		break;
 112:../Source Files/lpc_ssp_glcd.c **** 
 113:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_RIGHT:
 114:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 115:../Source Files/lpc_ssp_glcd.c **** 		break;
 116:../Source Files/lpc_ssp_glcd.c **** 
 117:../Source Files/lpc_ssp_glcd.c **** 	default:
 118:../Source Files/lpc_ssp_glcd.c **** 		break;
 119:../Source Files/lpc_ssp_glcd.c **** 	}
 120:../Source Files/lpc_ssp_glcd.c **** }
 121:../Source Files/lpc_ssp_glcd.c **** 
 122:../Source Files/lpc_ssp_glcd.c **** 
 123:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 124:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set draw window region to required width and height
 125:../Source Files/lpc_ssp_glcd.c ****  *              as well as location
 126:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 127:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 128:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 129:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 130:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 131:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 132:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 133:../Source Files/lpc_ssp_glcd.c **** {
 134:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 135:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 136:../Source Files/lpc_ssp_glcd.c **** 
 137:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 139:../Source Files/lpc_ssp_glcd.c **** 
 140:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 141:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 142:../Source Files/lpc_ssp_glcd.c **** 
 143:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 144:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 145:../Source Files/lpc_ssp_glcd.c **** }
 146:../Source Files/lpc_ssp_glcd.c **** 
 147:../Source Files/lpc_ssp_glcd.c **** 
 148:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 149:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to to desired location
 150:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 151:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 152:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 153:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 154:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 155:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 156:../Source Files/lpc_ssp_glcd.c **** void GLCD_Set_Loc (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 157:../Source Files/lpc_ssp_glcd.c **** {
 158:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 159:../Source Files/lpc_ssp_glcd.c **** 
 160:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 161:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 162:../Source Files/lpc_ssp_glcd.c **** 
 163:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 165:../Source Files/lpc_ssp_glcd.c **** 
 166:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 167:../Source Files/lpc_ssp_glcd.c **** }
 168:../Source Files/lpc_ssp_glcd.c **** 
 169:../Source Files/lpc_ssp_glcd.c **** 
 170:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 171:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to Home
 172:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 173:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 174:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 175:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Home (void)
 176:../Source Files/lpc_ssp_glcd.c **** {
 177:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 178:../Source Files/lpc_ssp_glcd.c **** }
 179:../Source Files/lpc_ssp_glcd.c **** 
 180:../Source Files/lpc_ssp_glcd.c **** 
 181:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 182:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Initializes GLCD
 183:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 184:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 185:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 186:../Source Files/lpc_ssp_glcd.c **** void GLCD_Init (void)
 187:../Source Files/lpc_ssp_glcd.c **** {
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 189:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 190:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 191:../Source Files/lpc_ssp_glcd.c **** 
 192:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 193:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 194:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 195:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 196:../Source Files/lpc_ssp_glcd.c **** 
 197:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 198:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 199:../Source Files/lpc_ssp_glcd.c **** 
 200:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 201:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 202:../Source Files/lpc_ssp_glcd.c **** 
 203:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 204:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 205:../Source Files/lpc_ssp_glcd.c **** 
 206:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 207:../Source Files/lpc_ssp_glcd.c **** 
 208:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 209:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 210:../Source Files/lpc_ssp_glcd.c **** 
 211:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 212:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 213:../Source Files/lpc_ssp_glcd.c **** 
 214:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 215:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 216:../Source Files/lpc_ssp_glcd.c **** 
 217:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 218:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 219:../Source Files/lpc_ssp_glcd.c **** 
 220:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 221:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 222:../Source Files/lpc_ssp_glcd.c **** 
 223:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 224:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 225:../Source Files/lpc_ssp_glcd.c **** 
 226:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 227:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 228:../Source Files/lpc_ssp_glcd.c **** 
 229:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 230:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 231:../Source Files/lpc_ssp_glcd.c **** 
 232:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 233:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 234:../Source Files/lpc_ssp_glcd.c **** 
 235:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 236:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 237:../Source Files/lpc_ssp_glcd.c **** 
 238:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 239:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 240:../Source Files/lpc_ssp_glcd.c **** 
 241:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 242:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 243:../Source Files/lpc_ssp_glcd.c **** 
 244:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 245:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 246:../Source Files/lpc_ssp_glcd.c **** 
 247:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 248:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 249:../Source Files/lpc_ssp_glcd.c **** 
 250:../Source Files/lpc_ssp_glcd.c **** 	// Gamma Control (R30h to R3Bh) -- Page 56 of SSD2119 datasheet
 251:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 252:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 253:../Source Files/lpc_ssp_glcd.c **** 
 254:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 255:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 256:../Source Files/lpc_ssp_glcd.c **** 
 257:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 258:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 259:../Source Files/lpc_ssp_glcd.c **** 
 260:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 262:../Source Files/lpc_ssp_glcd.c **** 
 263:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 264:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 265:../Source Files/lpc_ssp_glcd.c **** 
 266:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 267:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 268:../Source Files/lpc_ssp_glcd.c **** 
 269:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 270:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 271:../Source Files/lpc_ssp_glcd.c **** 
 272:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 273:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 274:../Source Files/lpc_ssp_glcd.c **** 
 275:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 276:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 277:../Source Files/lpc_ssp_glcd.c **** 
 278:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 279:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 280:../Source Files/lpc_ssp_glcd.c **** 
 281:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 282:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 283:../Source Files/lpc_ssp_glcd.c **** 
 284:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 285:../Source Files/lpc_ssp_glcd.c **** 
 286:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 287:../Source Files/lpc_ssp_glcd.c **** }
 288:../Source Files/lpc_ssp_glcd.c **** 
 289:../Source Files/lpc_ssp_glcd.c **** 
 290:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 291:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a pixel in foreground color
 292:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 293:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 294:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 295:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 296:../Source Files/lpc_ssp_glcd.c **** void GLCD_PutPixel (uint16_t x, uint16_t y, uint16_t color)
 297:../Source Files/lpc_ssp_glcd.c **** {
 298:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 299:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 300:../Source Files/lpc_ssp_glcd.c **** 
 301:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 302:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 303:../Source Files/lpc_ssp_glcd.c **** 
 304:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 305:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 306:../Source Files/lpc_ssp_glcd.c **** }
 307:../Source Files/lpc_ssp_glcd.c **** 
 308:../Source Files/lpc_ssp_glcd.c **** 
 309:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 310:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set foreground color
 311:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    foreground color
 312:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 313:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 314:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetTextColor (uint16_t color)
 315:../Source Files/lpc_ssp_glcd.c **** {
 316:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 317:../Source Files/lpc_ssp_glcd.c **** }
 318:../Source Files/lpc_ssp_glcd.c **** 
 319:../Source Files/lpc_ssp_glcd.c **** 
 320:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 321:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set background color
 322:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    background color
 323:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 324:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 325:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetBackColor (uint16_t color)
 326:../Source Files/lpc_ssp_glcd.c **** {
 327:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 328:../Source Files/lpc_ssp_glcd.c **** }
 329:../Source Files/lpc_ssp_glcd.c **** 
 330:../Source Files/lpc_ssp_glcd.c **** 
 331:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 332:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Start of data writing to LCD controller
 333:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 334:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 335:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 336:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_start (void)
 337:../Source Files/lpc_ssp_glcd.c **** {
  25              		.loc 1 337 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
 338:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);
  29              		.loc 1 338 0
  30 0000 0021     		movs	r1, #0
 337:../Source Files/lpc_ssp_glcd.c **** {
  31              		.loc 1 337 0
  32 0002 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              		.loc 1 338 0
  38 0004 0448     		ldr	r0, .L2
  39 0006 FFF7FEFF 		bl	CS_Force1
  40              	.LVL0:
 339:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  41              		.loc 1 339 0
  42 000a 0220     		movs	r0, #2
  43 000c 0121     		movs	r1, #1
 340:../Source Files/lpc_ssp_glcd.c **** }
  44              		.loc 1 340 0
  45 000e BDE80840 		pop	{r3, lr}
 339:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  46              		.loc 1 339 0
  47 0012 FFF7FEBF 		b	GPIO_SetValue
  48              	.LVL1:
  49              	.L3:
  50 0016 00BF     		.align	2
  51              	.L2:
  52 0018 00000340 		.word	1073938432
  53              		.cfi_endproc
  54              	.LFE65:
  56              		.align	1
  57              		.thumb
  58              		.thumb_func
  60              	wr_dat_stop:
  61              	.LFB66:
 341:../Source Files/lpc_ssp_glcd.c **** 
 342:../Source Files/lpc_ssp_glcd.c **** 
 343:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 344:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Stop of data writing to LCD controller
 345:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 346:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 347:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 348:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_stop (void)
 349:../Source Files/lpc_ssp_glcd.c **** {
  62              		.loc 1 349 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 350:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  67              		.loc 1 350 0
  68 001c 0148     		ldr	r0, .L5
  69 001e 0121     		movs	r1, #1
 351:../Source Files/lpc_ssp_glcd.c **** }
  70              		.loc 1 351 0
 350:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  71              		.loc 1 350 0
  72 0020 FFF7FEBF 		b	CS_Force1
  73              	.LVL2:
  74              	.L6:
  75              		.align	2
  76              	.L5:
  77 0024 00000340 		.word	1073938432
  78              		.cfi_endproc
  79              	.LFE66:
  81              		.align	1
  82              		.thumb
  83              		.thumb_func
  85              	wr_dat_only:
  86              	.LFB67:
 352:../Source Files/lpc_ssp_glcd.c **** 
 353:../Source Files/lpc_ssp_glcd.c **** 
 354:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 355:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Data writing to LCD controller
 356:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	c     data to be written
 357:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 358:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 359:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_only (uint16_t c)
 360:../Source Files/lpc_ssp_glcd.c **** {
  87              		.loc 1 360 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 24
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL3:
  92 0028 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 32
  95              		.cfi_offset 0, -32
  96              		.cfi_offset 1, -28
  97              		.cfi_offset 2, -24
  98              		.cfi_offset 3, -20
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 6, -8
 102              		.cfi_offset 14, -4
 361:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
 362:../Source Files/lpc_ssp_glcd.c **** 
 363:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 103              		.loc 1 363 0
 104 002a 074B     		ldr	r3, .L8
 105 002c 020A     		lsrs	r2, r0, #8
 364:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) c;        // 2nd byte extract
 106              		.loc 1 364 0
 107 002e 5870     		strb	r0, [r3, #1]
 365:../Source Files/lpc_ssp_glcd.c **** 
 366:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 367:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 368:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 108              		.loc 1 368 0
 109 0030 0220     		movs	r0, #2
 110              	.LVL4:
 363:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 111              		.loc 1 363 0
 112 0032 1A70     		strb	r2, [r3, #0]
 113              		.loc 1 368 0
 114 0034 0490     		str	r0, [sp, #16]
 367:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 115              		.loc 1 367 0
 116 0036 0022     		movs	r2, #0
 369:../Source Files/lpc_ssp_glcd.c **** 	SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 117              		.loc 1 369 0
 118 0038 6946     		mov	r1, sp
 119 003a 0448     		ldr	r0, .L8+4
 366:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 120              		.loc 1 366 0
 121 003c 0093     		str	r3, [sp, #0]
 367:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 122              		.loc 1 367 0
 123 003e 0292     		str	r2, [sp, #8]
 124              		.loc 1 369 0
 125 0040 FFF7FEFF 		bl	SSP_ReadWrite
 126              	.LVL5:
 370:../Source Files/lpc_ssp_glcd.c **** }
 127              		.loc 1 370 0
 128 0044 07B0     		add	sp, sp, #28
 129 0046 00BD     		pop	{pc}
 130              	.L9:
 131              		.align	2
 132              	.L8:
 133 0048 00000000 		.word	Tx_Buf1
 134 004c 00000340 		.word	1073938432
 135              		.cfi_endproc
 136              	.LFE67:
 138              		.align	1
 139              		.global	GLCD_Backlight
 140              		.thumb
 141              		.thumb_func
 143              	GLCD_Backlight:
 144              	.LFB55:
  59:../Source Files/lpc_ssp_glcd.c **** {
 145              		.loc 1 59 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150              	.LVL6:
  60:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
 151              		.loc 1 60 0
 152 0050 20B1     		cbz	r0, .L11
  62:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 153              		.loc 1 62 0
 154 0052 0220     		movs	r0, #2
 155              	.LVL7:
 156 0054 4FF48071 		mov	r1, #256
  68:../Source Files/lpc_ssp_glcd.c **** }
 157              		.loc 1 68 0
  62:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 158              		.loc 1 62 0
 159 0058 FFF7FEBF 		b	GPIO_SetValue
 160              	.LVL8:
 161              	.L11:
  66:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 162              		.loc 1 66 0
 163 005c 0220     		movs	r0, #2
 164              	.LVL9:
 165 005e 4FF48071 		mov	r1, #256
  68:../Source Files/lpc_ssp_glcd.c **** }
 166              		.loc 1 68 0
  66:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 167              		.loc 1 66 0
 168 0062 FFF7FEBF 		b	GPIO_ClearValue
 169              	.LVL10:
 170              		.cfi_endproc
 171              	.LFE55:
 173              		.align	1
 174              		.global	GLCD_Reset
 175              		.thumb
 176              		.thumb_func
 178              	GLCD_Reset:
 179              	.LFB56:
  77:../Source Files/lpc_ssp_glcd.c **** {
 180              		.loc 1 77 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0066 08B5     		push	{r3, lr}
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
  78:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
 189              		.loc 1 78 0
 190 0068 2021     		movs	r1, #32
 191 006a 0020     		movs	r0, #0
 192 006c FFF7FEFF 		bl	GPIO_SetValue
 193              	.LVL11:
  79:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 194              		.loc 1 79 0
 195 0070 0220     		movs	r0, #2
 196 0072 FFF7FEFF 		bl	delay_ms
 197              	.LVL12:
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
 198              		.loc 1 80 0
 199 0076 2021     		movs	r1, #32
 200 0078 0020     		movs	r0, #0
 201 007a FFF7FEFF 		bl	GPIO_ClearValue
 202              	.LVL13:
  81:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
 203              		.loc 1 81 0
 204 007e 0420     		movs	r0, #4
 205 0080 FFF7FEFF 		bl	delay_ms
 206              	.LVL14:
  82:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 207              		.loc 1 82 0
 208 0084 0020     		movs	r0, #0
 209 0086 2021     		movs	r1, #32
  83:../Source Files/lpc_ssp_glcd.c **** }
 210              		.loc 1 83 0
 211 0088 BDE80840 		pop	{r3, lr}
  82:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 212              		.loc 1 82 0
 213 008c FFF7FEBF 		b	GPIO_SetValue
 214              	.LVL15:
 215              		.cfi_endproc
 216              	.LFE56:
 218              		.align	1
 219              		.global	GLCD_SetTextColor
 220              		.thumb
 221              		.thumb_func
 223              	GLCD_SetTextColor:
 224              	.LFB63:
 315:../Source Files/lpc_ssp_glcd.c **** {
 225              		.loc 1 315 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL16:
 316:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 231              		.loc 1 316 0
 232 0090 014B     		ldr	r3, .L15
 233 0092 1880     		strh	r0, [r3, #0]	@ movhi
 234 0094 7047     		bx	lr
 235              	.L16:
 236 0096 00BF     		.align	2
 237              	.L15:
 238 0098 00000000 		.word	.LANCHOR0
 239              		.cfi_endproc
 240              	.LFE63:
 242              		.align	1
 243              		.global	GLCD_SetBackColor
 244              		.thumb
 245              		.thumb_func
 247              	GLCD_SetBackColor:
 248              	.LFB64:
 326:../Source Files/lpc_ssp_glcd.c **** {
 249              		.loc 1 326 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL17:
 327:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 255              		.loc 1 327 0
 256 009c 014B     		ldr	r3, .L18
 257 009e 1880     		strh	r0, [r3, #0]	@ movhi
 258 00a0 7047     		bx	lr
 259              	.L19:
 260 00a2 00BF     		.align	2
 261              	.L18:
 262 00a4 00000000 		.word	.LANCHOR1
 263              		.cfi_endproc
 264              	.LFE64:
 266              		.align	1
 267              		.global	Write_Command_Glcd
 268              		.thumb
 269              		.thumb_func
 271              	Write_Command_Glcd:
 272              	.LFB85:
 371:../Source Files/lpc_ssp_glcd.c **** 
 372:../Source Files/lpc_ssp_glcd.c **** 
 373:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 374:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear display
 375:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    display clearing color
 376:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 377:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 378:../Source Files/lpc_ssp_glcd.c **** void GLCD_Clear (uint16_t color)
 379:../Source Files/lpc_ssp_glcd.c **** {
 380:../Source Files/lpc_ssp_glcd.c **** 	unsigned int   i;
 381:../Source Files/lpc_ssp_glcd.c **** 
 382:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 383:../Source Files/lpc_ssp_glcd.c **** 
 384:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 385:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 386:../Source Files/lpc_ssp_glcd.c **** 
 387:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 388:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 389:../Source Files/lpc_ssp_glcd.c **** 
 390:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 391:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 392:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 393:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 394:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 395:../Source Files/lpc_ssp_glcd.c **** }
 396:../Source Files/lpc_ssp_glcd.c **** 
 397:../Source Files/lpc_ssp_glcd.c **** 
 398:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 399:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw character on given position
 400:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x       horizontal position
 401:../Source Files/lpc_ssp_glcd.c ****  *              y       vertical position
 402:../Source Files/lpc_ssp_glcd.c ****  *              c       pointer to character bitmap
 403:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 404:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 405:../Source Files/lpc_ssp_glcd.c **** void GLCD_Draw_Char (uint16_t x, uint16_t y, uint16_t *c)
 406:../Source Files/lpc_ssp_glcd.c **** {
 407:../Source Files/lpc_ssp_glcd.c **** 	int idx = 0, i, j;
 408:../Source Files/lpc_ssp_glcd.c **** 
 409:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 410:../Source Files/lpc_ssp_glcd.c **** 
 411:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 412:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 413:../Source Files/lpc_ssp_glcd.c **** 
 414:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 415:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 416:../Source Files/lpc_ssp_glcd.c **** 
 417:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 418:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 419:../Source Files/lpc_ssp_glcd.c **** 
 420:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 421:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 422:../Source Files/lpc_ssp_glcd.c **** 
 423:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 424:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 425:../Source Files/lpc_ssp_glcd.c **** 
 426:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 427:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 428:../Source Files/lpc_ssp_glcd.c **** 
 429:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 430:../Source Files/lpc_ssp_glcd.c **** 
 431:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 432:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 433:../Source Files/lpc_ssp_glcd.c **** 	{
 434:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 435:../Source Files/lpc_ssp_glcd.c **** 		{
 436:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 437:../Source Files/lpc_ssp_glcd.c **** 			{
 438:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 439:../Source Files/lpc_ssp_glcd.c **** 			}
 440:../Source Files/lpc_ssp_glcd.c **** 			else
 441:../Source Files/lpc_ssp_glcd.c **** 			{
 442:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 443:../Source Files/lpc_ssp_glcd.c **** 			}
 444:../Source Files/lpc_ssp_glcd.c **** 		}
 445:../Source Files/lpc_ssp_glcd.c **** 		c++;
 446:../Source Files/lpc_ssp_glcd.c **** 	}
 447:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 448:../Source Files/lpc_ssp_glcd.c **** }
 449:../Source Files/lpc_ssp_glcd.c **** 
 450:../Source Files/lpc_ssp_glcd.c **** 
 451:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 452:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply character on given line
 453:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 454:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 455:../Source Files/lpc_ssp_glcd.c ****  *              c        ascii character
 456:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 457:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 458:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Char (uint16_t ln, uint16_t col, uchar c)
 459:../Source Files/lpc_ssp_glcd.c **** {
 460:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 462:../Source Files/lpc_ssp_glcd.c **** }
 463:../Source Files/lpc_ssp_glcd.c **** 
 464:../Source Files/lpc_ssp_glcd.c **** 
 465:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 466:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply string on given line
 467:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 468:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 469:../Source Files/lpc_ssp_glcd.c ****  *              s        pointer to string
 470:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 471:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 472:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 473:../Source Files/lpc_ssp_glcd.c **** {
 474:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 476:../Source Files/lpc_ssp_glcd.c **** 	{
 477:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 478:../Source Files/lpc_ssp_glcd.c **** 	}
 479:../Source Files/lpc_ssp_glcd.c **** }
 480:../Source Files/lpc_ssp_glcd.c **** 
 481:../Source Files/lpc_ssp_glcd.c **** 
 482:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 483:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear given line
 484:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 485:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 486:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 487:../Source Files/lpc_ssp_glcd.c **** void GLCD_ClearLn (uint16_t ln)
 488:../Source Files/lpc_ssp_glcd.c **** {
 489:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 490:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 491:../Source Files/lpc_ssp_glcd.c **** }
 492:../Source Files/lpc_ssp_glcd.c **** 
 493:../Source Files/lpc_ssp_glcd.c **** 
 494:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 495:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw bargraph
 496:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 497:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 498:../Source Files/lpc_ssp_glcd.c ****  *              w        maximum width of bargraph (in pixels)
 499:../Source Files/lpc_ssp_glcd.c ****  *              val      value of active bargraph (in 1/1024)
 500:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 501:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 502:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bargraph (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t val)
 503:../Source Files/lpc_ssp_glcd.c **** {
 504:../Source Files/lpc_ssp_glcd.c **** 	int i,j;
 505:../Source Files/lpc_ssp_glcd.c **** 
 506:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 507:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 508:../Source Files/lpc_ssp_glcd.c **** 
 509:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 510:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 511:../Source Files/lpc_ssp_glcd.c **** 
 512:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 513:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 514:../Source Files/lpc_ssp_glcd.c **** 
 515:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 516:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 517:../Source Files/lpc_ssp_glcd.c **** 
 518:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 519:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 520:../Source Files/lpc_ssp_glcd.c **** 
 521:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 522:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 523:../Source Files/lpc_ssp_glcd.c **** 
 524:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 525:../Source Files/lpc_ssp_glcd.c **** 
 526:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 527:../Source Files/lpc_ssp_glcd.c **** 
 528:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 530:../Source Files/lpc_ssp_glcd.c **** 	{
 531:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 532:../Source Files/lpc_ssp_glcd.c **** 		{
 533:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 534:../Source Files/lpc_ssp_glcd.c **** 			{
 535:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 536:../Source Files/lpc_ssp_glcd.c **** 			}
 537:../Source Files/lpc_ssp_glcd.c **** 			else
 538:../Source Files/lpc_ssp_glcd.c **** 			{
 539:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 540:../Source Files/lpc_ssp_glcd.c **** 			}
 541:../Source Files/lpc_ssp_glcd.c **** 		}
 542:../Source Files/lpc_ssp_glcd.c **** 	}
 543:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 544:../Source Files/lpc_ssp_glcd.c **** }
 545:../Source Files/lpc_ssp_glcd.c **** 
 546:../Source Files/lpc_ssp_glcd.c **** 
 547:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 548:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Display graphical bitmap image at position x horizontally
 549:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 550:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 551:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 552:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 553:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 554:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 555:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 556:../Source Files/lpc_ssp_glcd.c ****  *              bitmap   address at which the bitmap data resides
 557:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 558:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 559:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 560:../Source Files/lpc_ssp_glcd.c **** {
 561:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j,k;
 562:../Source Files/lpc_ssp_glcd.c **** 
 563:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 564:../Source Files/lpc_ssp_glcd.c **** 
 565:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 566:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 568:../Source Files/lpc_ssp_glcd.c **** 	{
 569:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 570:../Source Files/lpc_ssp_glcd.c **** 		{
 571:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 572:../Source Files/lpc_ssp_glcd.c **** 		}
 573:../Source Files/lpc_ssp_glcd.c **** 	}
 574:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 575:../Source Files/lpc_ssp_glcd.c **** }
 576:../Source Files/lpc_ssp_glcd.c **** 
 577:../Source Files/lpc_ssp_glcd.c **** 
 578:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 579:../Source Files/lpc_ssp_glcd.c ****  * @brief	    F at position x horizontally
 580:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 581:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 582:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 583:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 584:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 585:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 586:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 587:../Source Files/lpc_ssp_glcd.c ****  *              color    window color
 588:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 589:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 590:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window_Fill (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color)
 591:../Source Files/lpc_ssp_glcd.c **** {
 592:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j;
 593:../Source Files/lpc_ssp_glcd.c **** 
 594:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 595:../Source Files/lpc_ssp_glcd.c **** 
 596:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 598:../Source Files/lpc_ssp_glcd.c **** 	{
 599:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 600:../Source Files/lpc_ssp_glcd.c **** 		{
 601:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 602:../Source Files/lpc_ssp_glcd.c **** 		}
 603:../Source Files/lpc_ssp_glcd.c **** 	}
 604:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 605:../Source Files/lpc_ssp_glcd.c **** }
 606:../Source Files/lpc_ssp_glcd.c **** 
 607:../Source Files/lpc_ssp_glcd.c **** 
 608:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 609:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a line on a graphic LCD using Bresenham's
 610:../Source Files/lpc_ssp_glcd.c ****  *              line drawing algorithm
 611:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)   the start coordinate
 612:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)   the end coordinate
 613:../Source Files/lpc_ssp_glcd.c ****  *              color      line color
 614:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 615:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 616:../Source Files/lpc_ssp_glcd.c **** void GLCD_Line(int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color)
 617:../Source Files/lpc_ssp_glcd.c **** {
 618:../Source Files/lpc_ssp_glcd.c **** 	int16_t  x, y, addx, addy, dx, dy;
 619:../Source Files/lpc_ssp_glcd.c **** 	int32_t P,i;
 620:../Source Files/lpc_ssp_glcd.c **** 
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 623:../Source Files/lpc_ssp_glcd.c **** 	x = x1;
 624:../Source Files/lpc_ssp_glcd.c **** 	y = y1;
 625:../Source Files/lpc_ssp_glcd.c **** 
 626:../Source Files/lpc_ssp_glcd.c **** 	if(x1 > x2)
 627:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 628:../Source Files/lpc_ssp_glcd.c **** 	else
 629:../Source Files/lpc_ssp_glcd.c **** 		addx = 1;
 630:../Source Files/lpc_ssp_glcd.c **** 	if(y1 > y2)
 631:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 632:../Source Files/lpc_ssp_glcd.c **** 	else
 633:../Source Files/lpc_ssp_glcd.c **** 		addy = 1;
 634:../Source Files/lpc_ssp_glcd.c **** 
 635:../Source Files/lpc_ssp_glcd.c **** 
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 637:../Source Files/lpc_ssp_glcd.c **** 	{
 638:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 639:../Source Files/lpc_ssp_glcd.c **** 
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 641:../Source Files/lpc_ssp_glcd.c **** 		{
 642:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 643:../Source Files/lpc_ssp_glcd.c **** 
 644:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 645:../Source Files/lpc_ssp_glcd.c **** 			{
 646:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 647:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 648:../Source Files/lpc_ssp_glcd.c **** 			}
 649:../Source Files/lpc_ssp_glcd.c **** 			else
 650:../Source Files/lpc_ssp_glcd.c **** 			{
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 652:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 653:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 654:../Source Files/lpc_ssp_glcd.c **** 			}
 655:../Source Files/lpc_ssp_glcd.c **** 		}
 656:../Source Files/lpc_ssp_glcd.c **** 	}
 657:../Source Files/lpc_ssp_glcd.c **** 	else
 658:../Source Files/lpc_ssp_glcd.c **** 	{
 659:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 660:../Source Files/lpc_ssp_glcd.c **** 
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 662:../Source Files/lpc_ssp_glcd.c **** 		{
 663:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 664:../Source Files/lpc_ssp_glcd.c **** 
 665:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 666:../Source Files/lpc_ssp_glcd.c **** 			{
 667:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 668:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 669:../Source Files/lpc_ssp_glcd.c **** 			}
 670:../Source Files/lpc_ssp_glcd.c **** 			else
 671:../Source Files/lpc_ssp_glcd.c **** 			{
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 673:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 674:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 675:../Source Files/lpc_ssp_glcd.c **** 			}
 676:../Source Files/lpc_ssp_glcd.c **** 		}
 677:../Source Files/lpc_ssp_glcd.c **** 	}
 678:../Source Files/lpc_ssp_glcd.c **** }
 679:../Source Files/lpc_ssp_glcd.c **** 
 680:../Source Files/lpc_ssp_glcd.c **** 
 681:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 682:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Rectangle on a graphic LCD
 683:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 684:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 685:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Rectangle TRUE/FALSE or ON/OFF
 686:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 687:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   fill color
 688:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 689:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 690:../Source Files/lpc_ssp_glcd.c **** void GLCD_Rect(COORDINATE_Type *p1, COORDINATE_Type *p2, Bool fill, uint16_t color, uint16_t fill_c
 691:../Source Files/lpc_ssp_glcd.c **** {
 692:../Source Files/lpc_ssp_glcd.c **** 	int16_t  width,height;                          // Find the y min and max
 693:../Source Files/lpc_ssp_glcd.c **** 
 694:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 695:../Source Files/lpc_ssp_glcd.c **** 	{
 696:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 697:../Source Files/lpc_ssp_glcd.c **** 		{
 698:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 699:../Source Files/lpc_ssp_glcd.c **** 			{
 700:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 701:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 702:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 703:../Source Files/lpc_ssp_glcd.c **** 			}
 704:../Source Files/lpc_ssp_glcd.c **** 			else
 705:../Source Files/lpc_ssp_glcd.c **** 			{
 706:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 707:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 708:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 709:../Source Files/lpc_ssp_glcd.c **** 			}
 710:../Source Files/lpc_ssp_glcd.c **** 		}
 711:../Source Files/lpc_ssp_glcd.c **** 		else
 712:../Source Files/lpc_ssp_glcd.c **** 		{
 713:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 714:../Source Files/lpc_ssp_glcd.c **** 			{
 715:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 716:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 717:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 718:../Source Files/lpc_ssp_glcd.c **** 			}
 719:../Source Files/lpc_ssp_glcd.c **** 			else
 720:../Source Files/lpc_ssp_glcd.c **** 			{
 721:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 722:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 723:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 724:../Source Files/lpc_ssp_glcd.c **** 			}
 725:../Source Files/lpc_ssp_glcd.c **** 		}
 726:../Source Files/lpc_ssp_glcd.c **** 		fill = NO;
 727:../Source Files/lpc_ssp_glcd.c **** 	}
 728:../Source Files/lpc_ssp_glcd.c **** 	if(!fill)
 729:../Source Files/lpc_ssp_glcd.c **** 	{
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 732:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 733:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 734:../Source Files/lpc_ssp_glcd.c **** 	}
 735:../Source Files/lpc_ssp_glcd.c **** }
 736:../Source Files/lpc_ssp_glcd.c **** 
 737:../Source Files/lpc_ssp_glcd.c **** 
 738:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 739:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a frame on a graphic LCD
 740:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 741:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 742:../Source Files/lpc_ssp_glcd.c ****  *              frame_width  Total Width of Frame
 743:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 744:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Frame fill color
 745:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 746:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 747:../Source Files/lpc_ssp_glcd.c **** void GLCD_Frame(COORDINATE_Type *p1, COORDINATE_Type *p2, int16_t frame_width, uint16_t color, uint
 748:../Source Files/lpc_ssp_glcd.c **** {
 749:../Source Files/lpc_ssp_glcd.c **** 	int16_t fw;                          // Find the y min and max
 750:../Source Files/lpc_ssp_glcd.c **** 
 751:../Source Files/lpc_ssp_glcd.c **** 	fw = frame_width;
 752:../Source Files/lpc_ssp_glcd.c **** 
 753:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 754:../Source Files/lpc_ssp_glcd.c **** 	{
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 756:../Source Files/lpc_ssp_glcd.c **** 		{
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 759:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 760:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 761:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 762:../Source Files/lpc_ssp_glcd.c **** 		}
 763:../Source Files/lpc_ssp_glcd.c **** 		else
 764:../Source Files/lpc_ssp_glcd.c **** 		{
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 767:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 768:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 769:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 770:../Source Files/lpc_ssp_glcd.c **** 		}
 771:../Source Files/lpc_ssp_glcd.c **** 	}
 772:../Source Files/lpc_ssp_glcd.c **** 
 773:../Source Files/lpc_ssp_glcd.c **** 	if(!fw)
 774:../Source Files/lpc_ssp_glcd.c **** 	{
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 777:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 778:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 779:../Source Files/lpc_ssp_glcd.c **** 	}
 780:../Source Files/lpc_ssp_glcd.c **** }
 781:../Source Files/lpc_ssp_glcd.c **** 
 782:../Source Files/lpc_ssp_glcd.c **** 
 783:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 784:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a rectangle/frame on a graphic LCD
 785:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 786:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 787:../Source Files/lpc_ssp_glcd.c ****  *              (x3, y3)     the end coordinate
 788:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Triangle TRUE/FALSE or ON/OFF
 789:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 790:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Triangle Fill Color
 791:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 792:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 794:../Source Files/lpc_ssp_glcd.c **** {
 795:../Source Files/lpc_ssp_glcd.c ****     if(cfg->fill)
 796:../Source Files/lpc_ssp_glcd.c ****     {
 797:../Source Files/lpc_ssp_glcd.c ****     	uint16_t t1x,t2x,y,minx,maxx,t1xp,t2xp;
 798:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 799:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 800:../Source Files/lpc_ssp_glcd.c ****     	int16_t signx1,signx2,dx1,dy1,dx2,dy2;
 801:../Source Files/lpc_ssp_glcd.c ****     	uint16_t e1,e2;
 802:../Source Files/lpc_ssp_glcd.c ****         // Sort vertices
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 805:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 806:../Source Files/lpc_ssp_glcd.c **** 
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 808:../Source Files/lpc_ssp_glcd.c **** 
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 811:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 812:../Source Files/lpc_ssp_glcd.c **** 
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 816:../Source Files/lpc_ssp_glcd.c **** 
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 818:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 819:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 820:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 821:../Source Files/lpc_ssp_glcd.c ****     	}
 822:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 823:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 824:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 825:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 826:../Source Files/lpc_ssp_glcd.c ****     	}
 827:../Source Files/lpc_ssp_glcd.c **** 
 828:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 829:../Source Files/lpc_ssp_glcd.c ****         // Flat top, just process the second half
 830:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 831:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 832:../Source Files/lpc_ssp_glcd.c **** 
 833:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 834:../Source Files/lpc_ssp_glcd.c ****     	{
 835:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 836:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 837:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 838:../Source Files/lpc_ssp_glcd.c ****             // process first line until y value is about to change
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 840:../Source Files/lpc_ssp_glcd.c ****     		{
 841:../Source Files/lpc_ssp_glcd.c ****     			i++;
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 843:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 844:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 845:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 847:../Source Files/lpc_ssp_glcd.c ****     				else          goto next1;
 848:../Source Files/lpc_ssp_glcd.c ****     			}
 849:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 850:../Source Files/lpc_ssp_glcd.c ****     			else t1x += signx1;
 851:../Source Files/lpc_ssp_glcd.c ****     		}
 852:../Source Files/lpc_ssp_glcd.c ****     	// Move line
 853:../Source Files/lpc_ssp_glcd.c ****     	next1:
 854:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 855:../Source Files/lpc_ssp_glcd.c ****     		while (1)
 856:../Source Files/lpc_ssp_glcd.c ****     		{
 857:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 858:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 859:../Source Files/lpc_ssp_glcd.c ****     			{
 860:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 862:../Source Files/lpc_ssp_glcd.c ****     				else          goto next2;
 863:../Source Files/lpc_ssp_glcd.c ****     			}
 864:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 865:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 866:../Source Files/lpc_ssp_glcd.c ****     		}
 867:../Source Files/lpc_ssp_glcd.c ****     	next2:
 868:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 869:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 870:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 871:../Source Files/lpc_ssp_glcd.c **** 
 872:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 874:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 876:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 878:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 879:../Source Files/lpc_ssp_glcd.c ****        }
 880:../Source Files/lpc_ssp_glcd.c ****     	next:
 881:../Source Files/lpc_ssp_glcd.c ****     	// Second half
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 883:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 884:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 885:../Source Files/lpc_ssp_glcd.c **** 
 886:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 887:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 888:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 889:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 890:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 891:../Source Files/lpc_ssp_glcd.c **** 
 892:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 893:../Source Files/lpc_ssp_glcd.c **** 
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 895:../Source Files/lpc_ssp_glcd.c ****     	{
 896:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 897:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 898:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 899:../Source Files/lpc_ssp_glcd.c ****     	    // process first line until y value is about to change
 900:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 901:../Source Files/lpc_ssp_glcd.c ****     		{
 902:../Source Files/lpc_ssp_glcd.c ****         		e1 += dy1;
 903:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 904:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 905:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 907:../Source Files/lpc_ssp_glcd.c ****     				else          goto next3;
 908:../Source Files/lpc_ssp_glcd.c ****     			}
 909:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 910:../Source Files/lpc_ssp_glcd.c ****     			else   	   	  t1x += signx1;
 911:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 912:../Source Files/lpc_ssp_glcd.c ****     		}
 913:../Source Files/lpc_ssp_glcd.c ****     	next3:
 914:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 915:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 916:../Source Files/lpc_ssp_glcd.c ****     		{
 917:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 918:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 919:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 920:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 921:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 922:../Source Files/lpc_ssp_glcd.c ****     				else          goto next4;
 923:../Source Files/lpc_ssp_glcd.c ****     			}
 924:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 925:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 926:../Source Files/lpc_ssp_glcd.c ****     		}
 927:../Source Files/lpc_ssp_glcd.c ****     	next4:
 928:../Source Files/lpc_ssp_glcd.c **** 
 929:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 930:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 931:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 932:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 934:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 936:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 938:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 939:../Source Files/lpc_ssp_glcd.c ****     	}
 940:../Source Files/lpc_ssp_glcd.c ****     	cfg->fill = NO;
 941:../Source Files/lpc_ssp_glcd.c ****     }
 942:../Source Files/lpc_ssp_glcd.c **** 
 943:../Source Files/lpc_ssp_glcd.c **** 
 944:../Source Files/lpc_ssp_glcd.c **** 	if(!cfg->fill && cfg->bndry)
 945:../Source Files/lpc_ssp_glcd.c **** 	{
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, cfg->bcolor);
 947:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, cfg->bcolor);
 948:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, cfg->bcolor);
 949:../Source Files/lpc_ssp_glcd.c **** 	}
 950:../Source Files/lpc_ssp_glcd.c **** }
 951:../Source Files/lpc_ssp_glcd.c **** 
 952:../Source Files/lpc_ssp_glcd.c **** 
 953:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 954:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Circle with given Center and Radius
 955:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x, y)     the center of the circle
 956:../Source Files/lpc_ssp_glcd.c ****  *              radius     the radius of the circle
 957:../Source Files/lpc_ssp_glcd.c ****  *              fill       YES or NO
 958:../Source Files/lpc_ssp_glcd.c ****  *              color      Boundary color
 959:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 960:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 962:../Source Files/lpc_ssp_glcd.c **** {
 963:../Source Files/lpc_ssp_glcd.c **** 	int16_t a, b, P;
 964:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 965:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 967:../Source Files/lpc_ssp_glcd.c **** 
 968:../Source Files/lpc_ssp_glcd.c **** 	do
 969:../Source Files/lpc_ssp_glcd.c **** 	{
 970:../Source Files/lpc_ssp_glcd.c **** 		if(cfg->fill)
 971:../Source Files/lpc_ssp_glcd.c **** 		{
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, cfg->fill_color);
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, cfg->fill_color);
 975:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, cfg->fill_color);
 976:../Source Files/lpc_ssp_glcd.c **** 		}
 977:../Source Files/lpc_ssp_glcd.c **** 
 978:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 980:../Source Files/lpc_ssp_glcd.c **** 		else
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 982:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 983:../Source Files/lpc_ssp_glcd.c **** 
 984:../Source Files/lpc_ssp_glcd.c **** 	cfg->fill = NO;
 985:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 986:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 987:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 988:../Source Files/lpc_ssp_glcd.c **** 	do
 989:../Source Files/lpc_ssp_glcd.c **** 	{
 990:../Source Files/lpc_ssp_glcd.c **** 		if(!cfg->fill && cfg->bndry)
 991:../Source Files/lpc_ssp_glcd.c **** 		{
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, cfg->bcolor);
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, cfg->bcolor);
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 998:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, cfg->bcolor);
 999:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, cfg->bcolor);
1000:../Source Files/lpc_ssp_glcd.c **** 		}
1001:../Source Files/lpc_ssp_glcd.c **** 
1002:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
1004:../Source Files/lpc_ssp_glcd.c **** 		else
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
1006:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
1007:../Source Files/lpc_ssp_glcd.c **** }
1008:../Source Files/lpc_ssp_glcd.c **** 
1009:../Source Files/lpc_ssp_glcd.c **** 
1010:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1011:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Write text on a graphic LCD
1012:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x,y)      The upper left coordinate of the first letter
1013:../Source Files/lpc_ssp_glcd.c ****  *              textptr    A pointer to an array of text to display
1014:../Source Files/lpc_ssp_glcd.c ****  *              row        Number of rows of pixels
1015:../Source Files/lpc_ssp_glcd.c ****  *              col        Number of Colums of pixels
1016:../Source Files/lpc_ssp_glcd.c ****  *              font       font 2 dimentional array
1017:../Source Files/lpc_ssp_glcd.c ****  *              size       The size of the text: 1 = 5x7, 2 = 10x14, ...
1018:../Source Files/lpc_ssp_glcd.c ****  *              color      font color
1019:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1020:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
1022:../Source Files/lpc_ssp_glcd.c **** {
1023:../Source Files/lpc_ssp_glcd.c ****    int16_t i, j, k, l, m;                     // Loop counters
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
1025:../Source Files/lpc_ssp_glcd.c **** 
1026:../Source Files/lpc_ssp_glcd.c ****    for(i=0; textptr[i] != '\0'; ++i, ++x) // Loop through the passed string
1027:../Source Files/lpc_ssp_glcd.c ****    {
1028:../Source Files/lpc_ssp_glcd.c ****       memcpy(pixelData, font[textptr[i]-' '], row);
1029:../Source Files/lpc_ssp_glcd.c **** 
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
1031:../Source Files/lpc_ssp_glcd.c ****       {
1032:../Source Files/lpc_ssp_glcd.c ****          x = 0;                           // Set x at far left position
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
1034:../Source Files/lpc_ssp_glcd.c ****       }
1035:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
1036:../Source Files/lpc_ssp_glcd.c ****       {
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
1038:../Source Files/lpc_ssp_glcd.c ****          {
1039:../Source Files/lpc_ssp_glcd.c ****             if(bit_test(pixelData[j], k)) // Check if the pixel should be set
1040:../Source Files/lpc_ssp_glcd.c ****             {
1041:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
1042:../Source Files/lpc_ssp_glcd.c ****                {                          // character's size
1043:../Source Files/lpc_ssp_glcd.c ****                   for(m=0; m<size; ++m)
1044:../Source Files/lpc_ssp_glcd.c ****                   {
1045:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
1046:../Source Files/lpc_ssp_glcd.c ****                   }
1047:../Source Files/lpc_ssp_glcd.c ****                }
1048:../Source Files/lpc_ssp_glcd.c ****             }
1049:../Source Files/lpc_ssp_glcd.c ****          }
1050:../Source Files/lpc_ssp_glcd.c ****       }
1051:../Source Files/lpc_ssp_glcd.c ****    }
1052:../Source Files/lpc_ssp_glcd.c **** }
1053:../Source Files/lpc_ssp_glcd.c **** 
1054:../Source Files/lpc_ssp_glcd.c **** 
1055:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1056:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw Bar for Bar Graph (Dependent on Bar Graph Test)
1057:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	index      Bar Number (from 1 to 10)
1058:../Source Files/lpc_ssp_glcd.c ****  *              width      Bar width
1059:../Source Files/lpc_ssp_glcd.c ****  *              per        Percentage height
1060:../Source Files/lpc_ssp_glcd.c ****  *              color      Bar Color
1061:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1062:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1063:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bar(int16_t index,uint8_t width,int16_t per,uint16_t color)
1064:../Source Files/lpc_ssp_glcd.c **** {
1065:../Source Files/lpc_ssp_glcd.c **** 	/**************************************************************************
1066:../Source Files/lpc_ssp_glcd.c **** 	 * Par1 : const 30 indicates  ref distance line. 28 indicates spacing between
1067:../Source Files/lpc_ssp_glcd.c **** 	 * two bar graphs at multiples of 28, now as the center of bar is located
1068:../Source Files/lpc_ssp_glcd.c **** 	 * half of width should be left and other half on right, so after subracting
1069:../Source Files/lpc_ssp_glcd.c **** 	 * half width from center we get x point of bar.
1070:../Source Files/lpc_ssp_glcd.c **** 	 * Par2 : 220 is Y ref line so (220 - bar heigth) will give y point of bar.
1071:../Source Files/lpc_ssp_glcd.c **** 	 * Par4 : per*2 is scaling for 200 pixels for 100 percentage heigth.
1072:../Source Files/lpc_ssp_glcd.c **** 	 **************************************************************************/
1073:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
1074:../Source Files/lpc_ssp_glcd.c **** 	{
1075:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Window_Fill(30+(index*26)-(width-(width/2)),220-(per*2),width,per*2,color);
1076:../Source Files/lpc_ssp_glcd.c **** 	}
1077:../Source Files/lpc_ssp_glcd.c **** }
1078:../Source Files/lpc_ssp_glcd.c **** 
1079:../Source Files/lpc_ssp_glcd.c **** 
1080:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1081:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw Line Bar for Bar Graph (Dependent on Bar Graph Test)
1082:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	index      Bar Number (from 1 to 10)
1083:../Source Files/lpc_ssp_glcd.c ****  *              width      Bar width
1084:../Source Files/lpc_ssp_glcd.c ****  *              y          y_reference for bar
1085:../Source Files/lpc_ssp_glcd.c ****  *              per        Percentage height
1086:../Source Files/lpc_ssp_glcd.c ****  *              dec        decrement bar YES/NO or TRUE/FALSE
1087:../Source Files/lpc_ssp_glcd.c ****  *              color      Bar Color
1088:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1089:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1090:../Source Files/lpc_ssp_glcd.c **** void GLCD_LBar(int16_t index, uint8_t width, int16_t y, int16_t per, Bool dec,uint16_t color)
1091:../Source Files/lpc_ssp_glcd.c **** {
1092:../Source Files/lpc_ssp_glcd.c **** 	int16_t x1,x2,h,y_diff;
1093:../Source Files/lpc_ssp_glcd.c **** 
1094:../Source Files/lpc_ssp_glcd.c **** 	if(dec)
1095:../Source Files/lpc_ssp_glcd.c **** 	{
1096:../Source Files/lpc_ssp_glcd.c **** 		y_diff=y+(per);
1097:../Source Files/lpc_ssp_glcd.c **** 	}
1098:../Source Files/lpc_ssp_glcd.c **** 	else
1099:../Source Files/lpc_ssp_glcd.c **** 	{
1100:../Source Files/lpc_ssp_glcd.c **** 		y_diff=y-(per);
1101:../Source Files/lpc_ssp_glcd.c **** 	}
1102:../Source Files/lpc_ssp_glcd.c **** 
1103:../Source Files/lpc_ssp_glcd.c **** 	if((y_diff>=20) && (index<=10) && !dec)
1104:../Source Files/lpc_ssp_glcd.c **** 	{
1105:../Source Files/lpc_ssp_glcd.c **** 		for(h=0;h<=per;h++)
1106:../Source Files/lpc_ssp_glcd.c **** 		{
1107:../Source Files/lpc_ssp_glcd.c **** 			x1 = 30+(index*26)-(width-(width/2));
1108:../Source Files/lpc_ssp_glcd.c **** 			x2 = x1+width;
1109:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x1,y-h,x2,y-h,color);
1110:../Source Files/lpc_ssp_glcd.c **** 		}
1111:../Source Files/lpc_ssp_glcd.c **** 	}
1112:../Source Files/lpc_ssp_glcd.c **** 	else if(dec && (y_diff<=219) && (index<=10))
1113:../Source Files/lpc_ssp_glcd.c **** 	{
1114:../Source Files/lpc_ssp_glcd.c **** 		for(h=0;h<=per;h++)
1115:../Source Files/lpc_ssp_glcd.c **** 		{
1116:../Source Files/lpc_ssp_glcd.c **** 			x1 = 30+(index*26)-(width-(width/2));
1117:../Source Files/lpc_ssp_glcd.c **** 			x2 = x1+width;
1118:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x1,y+h,x2,y+h,color);
1119:../Source Files/lpc_ssp_glcd.c **** 		}
1120:../Source Files/lpc_ssp_glcd.c **** 	}
1121:../Source Files/lpc_ssp_glcd.c **** }
1122:../Source Files/lpc_ssp_glcd.c **** 
1123:../Source Files/lpc_ssp_glcd.c **** 
1124:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1125:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Display Bar Graph function
1126:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
1127:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1128:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1129:../Source Files/lpc_ssp_glcd.c **** void Show_BarGraph(void)
1130:../Source Files/lpc_ssp_glcd.c **** {
1131:../Source Files/lpc_ssp_glcd.c **** 	COORDINATE_Type point1,point2,point3;
1132:../Source Files/lpc_ssp_glcd.c **** 	COLORCFG_Type tricfg;
1133:../Source Files/lpc_ssp_glcd.c ****     uint8_t x_name[10][3]={"1","2","3","4","5","6","7","8","9","10"};
1134:../Source Files/lpc_ssp_glcd.c ****     uint8_t y_name[10][4]={"10","20","30","40","50","60","70","80","90","100"};
1135:../Source Files/lpc_ssp_glcd.c ****     uint16_t y_scale,x_scale,i;
1136:../Source Files/lpc_ssp_glcd.c **** 
1137:../Source Files/lpc_ssp_glcd.c **** 	/* X and Y lines */
1138:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(30,5,30,238,Black);
1139:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(1,220,315,220,Black);
1140:../Source Files/lpc_ssp_glcd.c **** 
1141:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(22,5,"Y",5,7,default5x7,1,Black);
1142:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(310,225,"X",5,7,default5x7,1,Black);
1143:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(50,5,"X=ADC-CH  Y=VAL  Y-MAX=4095  Y-UNIT=40.95",5,7,default5x7,1,Black);
1144:../Source Files/lpc_ssp_glcd.c **** 
1145:../Source Files/lpc_ssp_glcd.c **** 	/* Y Line Arrows Top and Bottom */
1146:../Source Files/lpc_ssp_glcd.c **** 	/* Top arrow coordinates */
1147:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
1148:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 5;
1149:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
1150:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 10;
1151:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
1152:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 10;
1153:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1154:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1155:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1156:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1157:../Source Files/lpc_ssp_glcd.c **** 
1158:../Source Files/lpc_ssp_glcd.c **** 	/* Bottom arrow coordinates */
1159:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
1160:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 238;
1161:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
1162:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 233;
1163:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
1164:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 233;
1165:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1166:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1167:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1168:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1169:../Source Files/lpc_ssp_glcd.c **** 
1170:../Source Files/lpc_ssp_glcd.c **** 	/* X Line Arrows Left and Right */
1171:../Source Files/lpc_ssp_glcd.c **** 	/* Left arrow coordinates */
1172:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 1;
1173:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
1174:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 6;
1175:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
1176:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 6;
1177:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
1178:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1179:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1180:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1181:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1182:../Source Files/lpc_ssp_glcd.c **** 
1183:../Source Files/lpc_ssp_glcd.c **** 	/* Right arrow coordinates */
1184:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 315;
1185:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
1186:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 310;
1187:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
1188:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 310;
1189:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
1190:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1191:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1192:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1193:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1194:../Source Files/lpc_ssp_glcd.c **** 
1195:../Source Files/lpc_ssp_glcd.c **** 	/* X and Y scaling */
1196:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(0,225,"(0,0)",5,7,default5x7,1,Black);
1197:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=0; y_scale>=20; y_scale=y_scale-20,i++)
1198:../Source Files/lpc_ssp_glcd.c **** 	{
1199:../Source Files/lpc_ssp_glcd.c **** 		if(y_scale!=20)
1200:../Source Files/lpc_ssp_glcd.c **** 		{
1201:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(14,y_scale,y_name[i],5,7,default5x7,1,Black);
1202:../Source Files/lpc_ssp_glcd.c **** 		}
1203:../Source Files/lpc_ssp_glcd.c **** 		else
1204:../Source Files/lpc_ssp_glcd.c **** 		{
1205:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(10,y_scale,y_name[i],5,7,default5x7,1,Black);
1206:../Source Files/lpc_ssp_glcd.c **** 		}
1207:../Source Files/lpc_ssp_glcd.c **** 
1208:../Source Files/lpc_ssp_glcd.c **** 	}
1209:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=0; x_scale<=300; x_scale=x_scale+26,i++)
1210:../Source Files/lpc_ssp_glcd.c **** 	{
1211:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Text(x_scale,225,x_name[i],5,7,default5x7,1,Black);
1212:../Source Files/lpc_ssp_glcd.c **** 	}
1213:../Source Files/lpc_ssp_glcd.c **** }
1214:../Source Files/lpc_ssp_glcd.c **** 
1215:../Source Files/lpc_ssp_glcd.c **** 
1216:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1217:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes commands to the GLCD
1218:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	Command		command to be written on GLCD
1219:../Source Files/lpc_ssp_glcd.c ****  * @return 		status
1220:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1221:../Source Files/lpc_ssp_glcd.c **** uchar Write_Command_Glcd (uint8_t Command)
1222:../Source Files/lpc_ssp_glcd.c **** {
 273              		.loc 1 1222 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 40
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL18:
 278 00a8 10B5     		push	{r4, lr}
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 283 00aa 8AB0     		sub	sp, sp, #40
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 48
 286              		.loc 1 1222 0
 287 00ac 0AAC     		add	r4, sp, #40
 288 00ae 04F8210D 		strb	r0, [r4, #-33]!
1223:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1224:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1225:../Source Files/lpc_ssp_glcd.c **** 	__IO uint32_t i;
1226:../Source Files/lpc_ssp_glcd.c **** 
1227:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(2, LCD_RS);  //select command mode
 289              		.loc 1 1227 0
 290 00b2 0121     		movs	r1, #1
 291 00b4 0220     		movs	r0, #2
 292              	.LVL19:
 293 00b6 FFF7FEFF 		bl	GPIO_ClearValue
 294              	.LVL20:
1228:../Source Files/lpc_ssp_glcd.c **** 
1229:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 295              		.loc 1 1229 0
 296 00ba 1148     		ldr	r0, .L27
 297 00bc 0021     		movs	r1, #0
 298 00be FFF7FEFF 		bl	CS_Force1
 299              	.LVL21:
1230:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = &Command;               /* Send Instruction Byte    */
 300              		.loc 1 1230 0
 301 00c2 0494     		str	r4, [sp, #16]
1231:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 302              		.loc 1 1231 0
 303 00c4 0022     		movs	r2, #0
1232:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 304              		.loc 1 1232 0
 305 00c6 0124     		movs	r4, #1
1233:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 306              		.loc 1 1233 0
 307 00c8 0D48     		ldr	r0, .L27
 308 00ca 04A9     		add	r1, sp, #16
1231:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 309              		.loc 1 1231 0
 310 00cc 0692     		str	r2, [sp, #24]
1232:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 311              		.loc 1 1232 0
 312 00ce 0894     		str	r4, [sp, #32]
 313              		.loc 1 1233 0
 314 00d0 FFF7FEFF 		bl	SSP_ReadWrite
 315              	.LVL22:
1234:../Source Files/lpc_ssp_glcd.c **** 
1235:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 316              		.loc 1 1235 0
 317 00d4 C0B2     		uxtb	r0, r0
 318 00d6 80B1     		cbz	r0, .L21
 319              	.LBB4:
 320              	.LBB5:
1236:../Source Files/lpc_ssp_glcd.c **** 	{
1237:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 321              		.loc 1 1237 0
 322 00d8 2146     		mov	r1, r4
 323 00da 0948     		ldr	r0, .L27
 324              	.LVL23:
 325 00dc FFF7FEFF 		bl	CS_Force1
 326              	.LVL24:
1238:../Source Files/lpc_ssp_glcd.c **** 		for(i=925; i>0; i--);
 327              		.loc 1 1238 0
 328 00e0 40F29D31 		movw	r1, #925
 329              	.L25:
 330              	.LVL25:
 331 00e4 0391     		str	r1, [sp, #12]
 332 00e6 039B     		ldr	r3, [sp, #12]
 333 00e8 13B1     		cbz	r3, .L26
 334              	.L23:
 335 00ea 0398     		ldr	r0, [sp, #12]
 336 00ec 411E     		subs	r1, r0, #1
 337              	.LVL26:
 338 00ee F9E7     		b	.L25
 339              	.LVL27:
 340              	.L26:
1239:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_RS);  // select data mode
 341              		.loc 1 1239 0
 342 00f0 0220     		movs	r0, #2
 343 00f2 0121     		movs	r1, #1
 344 00f4 FFF7FEFF 		bl	GPIO_SetValue
 345              	.LVL28:
 346 00f8 0120     		movs	r0, #1
 347              	.L21:
 348              	.LBE5:
 349              	.LBE4:
1240:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1241:../Source Files/lpc_ssp_glcd.c **** 	}
1242:../Source Files/lpc_ssp_glcd.c **** 	else
1243:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1244:../Source Files/lpc_ssp_glcd.c **** }
 350              		.loc 1 1244 0
 351 00fa 0AB0     		add	sp, sp, #40
 352 00fc 10BD     		pop	{r4, pc}
 353              	.L28:
 354 00fe 00BF     		.align	2
 355              	.L27:
 356 0100 00000340 		.word	1073938432
 357              		.cfi_endproc
 358              	.LFE85:
 360              		.align	1
 361              		.global	Write_Data_Glcd
 362              		.thumb
 363              		.thumb_func
 365              	Write_Data_Glcd:
 366              	.LFB86:
1245:../Source Files/lpc_ssp_glcd.c **** 
1246:../Source Files/lpc_ssp_glcd.c **** 
1247:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1248:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes data to the GLCD
1249:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	data	data to be written on GLCD
1250:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1251:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1252:../Source Files/lpc_ssp_glcd.c **** uchar Write_Data_Glcd (uint16_t data)
1253:../Source Files/lpc_ssp_glcd.c **** {
 367              		.loc 1 1253 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 24
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL29:
 372 0104 10B5     		push	{r4, lr}
 373              	.LCFI5:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
1254:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1255:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1256:../Source Files/lpc_ssp_glcd.c **** 
1257:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 377              		.loc 1 1257 0
 378 0106 0F4C     		ldr	r4, .L32
1253:../Source Files/lpc_ssp_glcd.c **** {
 379              		.loc 1 1253 0
 380 0108 86B0     		sub	sp, sp, #24
 381              	.LCFI6:
 382              		.cfi_def_cfa_offset 32
 383              		.loc 1 1257 0
 384 010a 030A     		lsrs	r3, r0, #8
1258:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) data;        // 2nd byte extract
 385              		.loc 1 1258 0
 386 010c 6070     		strb	r0, [r4, #1]
1259:../Source Files/lpc_ssp_glcd.c **** 
1260:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
 387              		.loc 1 1260 0
 388 010e 0121     		movs	r1, #1
 389 0110 0220     		movs	r0, #2
 390              	.LVL30:
1257:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 391              		.loc 1 1257 0
 392 0112 2370     		strb	r3, [r4, #0]
 393              		.loc 1 1260 0
 394 0114 FFF7FEFF 		bl	GPIO_SetValue
 395              	.LVL31:
1261:../Source Files/lpc_ssp_glcd.c **** 
1262:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 396              		.loc 1 1262 0
 397 0118 0B48     		ldr	r0, .L32+4
 398 011a 0021     		movs	r1, #0
 399 011c FFF7FEFF 		bl	CS_Force1
 400              	.LVL32:
1263:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
1264:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
1265:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 401              		.loc 1 1265 0
 402 0120 0220     		movs	r0, #2
1264:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 403              		.loc 1 1264 0
 404 0122 0022     		movs	r2, #0
 405              		.loc 1 1265 0
 406 0124 0490     		str	r0, [sp, #16]
1266:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 407              		.loc 1 1266 0
 408 0126 6946     		mov	r1, sp
 409 0128 0748     		ldr	r0, .L32+4
1263:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 410              		.loc 1 1263 0
 411 012a 0094     		str	r4, [sp, #0]
1264:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 412              		.loc 1 1264 0
 413 012c 0292     		str	r2, [sp, #8]
 414              		.loc 1 1266 0
 415 012e FFF7FEFF 		bl	SSP_ReadWrite
 416              	.LVL33:
1267:../Source Files/lpc_ssp_glcd.c **** 
1268:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 417              		.loc 1 1268 0
 418 0132 C0B2     		uxtb	r0, r0
 419 0134 20B1     		cbz	r0, .L30
 420              	.LBB8:
 421              	.LBB9:
1269:../Source Files/lpc_ssp_glcd.c **** 	{
1270:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 422              		.loc 1 1270 0
 423 0136 0448     		ldr	r0, .L32+4
 424              	.LVL34:
 425 0138 0121     		movs	r1, #1
 426 013a FFF7FEFF 		bl	CS_Force1
 427              	.LVL35:
 428 013e 0120     		movs	r0, #1
 429              	.L30:
 430              	.LBE9:
 431              	.LBE8:
1271:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1272:../Source Files/lpc_ssp_glcd.c **** 	}
1273:../Source Files/lpc_ssp_glcd.c **** 	else
1274:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1275:../Source Files/lpc_ssp_glcd.c **** }
 432              		.loc 1 1275 0
 433 0140 06B0     		add	sp, sp, #24
 434 0142 10BD     		pop	{r4, pc}
 435              	.L33:
 436              		.align	2
 437              	.L32:
 438 0144 00000000 		.word	Tx_Buf1
 439 0148 00000340 		.word	1073938432
 440              		.cfi_endproc
 441              	.LFE86:
 443              		.align	1
 444              		.global	GLCD_Bargraph
 445              		.thumb
 446              		.thumb_func
 448              	GLCD_Bargraph:
 449              	.LFB73:
 503:../Source Files/lpc_ssp_glcd.c **** {
 450              		.loc 1 503 0
 451              		.cfi_startproc
 452              		@ args = 4, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              	.LVL36:
 455 014c 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 456              	.LCFI7:
 457              		.cfi_def_cfa_offset 24
 458              		.cfi_offset 4, -24
 459              		.cfi_offset 5, -20
 460              		.cfi_offset 6, -16
 461              		.cfi_offset 7, -12
 462              		.cfi_offset 8, -8
 463              		.cfi_offset 14, -4
 503:../Source Files/lpc_ssp_glcd.c **** {
 464              		.loc 1 503 0
 465 0150 0646     		mov	r6, r0
 506:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 466              		.loc 1 506 0
 467 0152 4520     		movs	r0, #69
 468              	.LVL37:
 503:../Source Files/lpc_ssp_glcd.c **** {
 469              		.loc 1 503 0
 470 0154 1546     		mov	r5, r2
 471 0156 1F46     		mov	r7, r3
 472 0158 0C46     		mov	r4, r1
 473 015a BDF81880 		ldrh	r8, [sp, #24]
 506:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 474              		.loc 1 506 0
 475 015e FFF7FEFF 		bl	Write_Command_Glcd
 476              	.LVL38:
 507:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 477              		.loc 1 507 0
 478 0162 3046     		mov	r0, r6
 479 0164 FFF7FEFF 		bl	Write_Data_Glcd
 480              	.LVL39:
 509:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 481              		.loc 1 509 0
 482 0168 4620     		movs	r0, #70
 483 016a FFF7FEFF 		bl	Write_Command_Glcd
 484              	.LVL40:
 510:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 485              		.loc 1 510 0
 486 016e 701E     		subs	r0, r6, #1
 487 0170 2918     		adds	r1, r5, r0
 488 0172 88B2     		uxth	r0, r1
 489 0174 FFF7FEFF 		bl	Write_Data_Glcd
 490              	.LVL41:
 512:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 491              		.loc 1 512 0
 492 0178 4420     		movs	r0, #68
 493 017a FFF7FEFF 		bl	Write_Command_Glcd
 494              	.LVL42:
 513:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 495              		.loc 1 513 0
 496 017e 2046     		mov	r0, r4
 497 0180 FFF7FEFF 		bl	Write_Data_Glcd
 498              	.LVL43:
 515:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 499              		.loc 1 515 0
 500 0184 4420     		movs	r0, #68
 501 0186 FFF7FEFF 		bl	Write_Command_Glcd
 502              	.LVL44:
 516:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 503              		.loc 1 516 0
 504 018a 04F11702 		add	r2, r4, #23
 505 018e 1302     		lsls	r3, r2, #8
 506 0190 03F47F40 		and	r0, r3, #65280
 507 0194 FFF7FEFF 		bl	Write_Data_Glcd
 508              	.LVL45:
 518:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 509              		.loc 1 518 0
 510 0198 4E20     		movs	r0, #78
 511 019a FFF7FEFF 		bl	Write_Command_Glcd
 512              	.LVL46:
 519:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 513              		.loc 1 519 0
 514 019e 3046     		mov	r0, r6
 515 01a0 FFF7FEFF 		bl	Write_Data_Glcd
 516              	.LVL47:
 521:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 517              		.loc 1 521 0
 518 01a4 4F20     		movs	r0, #79
 519 01a6 FFF7FEFF 		bl	Write_Command_Glcd
 520              	.LVL48:
 522:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 521              		.loc 1 522 0
 522 01aa 2046     		mov	r0, r4
 523 01ac FFF7FEFF 		bl	Write_Data_Glcd
 524              	.LVL49:
 524:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 525              		.loc 1 524 0
 526 01b0 2220     		movs	r0, #34
 527 01b2 FFF7FEFF 		bl	Write_Command_Glcd
 528              	.LVL50:
 528:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 529              		.loc 1 528 0
 530 01b6 FFF723FF 		bl	wr_dat_start
 531              	.LVL51:
 526:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 532              		.loc 1 526 0
 533 01ba 05FB08F6 		mul	r6, r5, r8
 534 01be 4FEAA628 		asr	r8, r6, #10
 535              	.LVL52:
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 536              		.loc 1 529 0
 537 01c2 0026     		movs	r6, #0
 538              	.LVL53:
 539              	.L35:
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 540              		.loc 1 529 0 is_stmt 0 discriminator 1
 541 01c4 B742     		cmp	r7, r6
 542 01c6 10D0     		beq	.L42
 543              	.L40:
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 544              		.loc 1 529 0
 545 01c8 0024     		movs	r4, #0
 546              	.L39:
 547              	.LVL54:
 531:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 548              		.loc 1 531 0 is_stmt 1 discriminator 1
 549 01ca A542     		cmp	r5, r4
 550 01cc 0BDD     		ble	.L43
 551              	.L38:
 533:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 552              		.loc 1 533 0
 553 01ce 1FFA88F0 		uxth	r0, r8
 554 01d2 8442     		cmp	r4, r0
 535:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 555              		.loc 1 535 0
 556 01d4 D4BF     		ite	le
 557 01d6 0748     		ldrle	r0, .L44
 539:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 558              		.loc 1 539 0
 559 01d8 0748     		ldrgt	r0, .L44+4
 531:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 560              		.loc 1 531 0
 561 01da 0134     		adds	r4, r4, #1
 562              	.LVL55:
 539:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 563              		.loc 1 539 0
 564 01dc 0188     		ldrh	r1, [r0, #0]
 565 01de 88B2     		uxth	r0, r1
 566 01e0 FFF722FF 		bl	wr_dat_only
 567              	.LVL56:
 568 01e4 F1E7     		b	.L39
 569              	.L43:
 570 01e6 0136     		adds	r6, r6, #1
 571 01e8 ECE7     		b	.L35
 572              	.LVL57:
 573              	.L42:
 544:../Source Files/lpc_ssp_glcd.c **** }
 574              		.loc 1 544 0
 575 01ea BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 543:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 576              		.loc 1 543 0
 577 01ee FFF715BF 		b	wr_dat_stop
 578              	.LVL58:
 579              	.L45:
 580 01f2 00BF     		.align	2
 581              	.L44:
 582 01f4 00000000 		.word	.LANCHOR1
 583 01f8 00000000 		.word	.LANCHOR0
 584              		.cfi_endproc
 585              	.LFE73:
 587              		.align	1
 588              		.global	GLCD_Draw_Char
 589              		.thumb
 590              		.thumb_func
 592              	GLCD_Draw_Char:
 593              	.LFB69:
 406:../Source Files/lpc_ssp_glcd.c **** {
 594              		.loc 1 406 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              	.LVL59:
 599 01fc F8B5     		push	{r3, r4, r5, r6, r7, lr}
 600              	.LCFI8:
 601              		.cfi_def_cfa_offset 24
 602              		.cfi_offset 3, -24
 603              		.cfi_offset 4, -20
 604              		.cfi_offset 5, -16
 605              		.cfi_offset 6, -12
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 409:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 608              		.loc 1 409 0
 609 01fe A0F11005 		sub	r5, r0, #16
 610 0202 ADB2     		uxth	r5, r5
 611              	.LVL60:
 406:../Source Files/lpc_ssp_glcd.c **** {
 612              		.loc 1 406 0
 613 0204 0646     		mov	r6, r0
 411:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 614              		.loc 1 411 0
 615 0206 4520     		movs	r0, #69
 406:../Source Files/lpc_ssp_glcd.c **** {
 616              		.loc 1 406 0
 617 0208 0C46     		mov	r4, r1
 618 020a 1746     		mov	r7, r2
 411:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 619              		.loc 1 411 0
 620 020c FFF7FEFF 		bl	Write_Command_Glcd
 621              	.LVL61:
 412:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 622              		.loc 1 412 0
 623 0210 2846     		mov	r0, r5
 624 0212 FFF7FEFF 		bl	Write_Data_Glcd
 625              	.LVL62:
 414:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 626              		.loc 1 414 0
 627 0216 4620     		movs	r0, #70
 628 0218 FFF7FEFF 		bl	Write_Command_Glcd
 629              	.LVL63:
 415:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 630              		.loc 1 415 0
 631 021c 701E     		subs	r0, r6, #1
 632 021e 80B2     		uxth	r0, r0
 633 0220 FFF7FEFF 		bl	Write_Data_Glcd
 634              	.LVL64:
 417:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 635              		.loc 1 417 0
 636 0224 4420     		movs	r0, #68
 637 0226 FFF7FEFF 		bl	Write_Command_Glcd
 638              	.LVL65:
 418:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 639              		.loc 1 418 0
 640 022a 2046     		mov	r0, r4
 641 022c FFF7FEFF 		bl	Write_Data_Glcd
 642              	.LVL66:
 420:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 643              		.loc 1 420 0
 644 0230 4420     		movs	r0, #68
 645 0232 FFF7FEFF 		bl	Write_Command_Glcd
 646              	.LVL67:
 421:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 647              		.loc 1 421 0
 648 0236 04F11701 		add	r1, r4, #23
 649 023a 0A02     		lsls	r2, r1, #8
 650 023c 02F47F40 		and	r0, r2, #65280
 651 0240 FFF7FEFF 		bl	Write_Data_Glcd
 652              	.LVL68:
 423:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 653              		.loc 1 423 0
 654 0244 4E20     		movs	r0, #78
 655 0246 FFF7FEFF 		bl	Write_Command_Glcd
 656              	.LVL69:
 424:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 657              		.loc 1 424 0
 658 024a 2846     		mov	r0, r5
 659 024c FFF7FEFF 		bl	Write_Data_Glcd
 660              	.LVL70:
 426:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 661              		.loc 1 426 0
 662 0250 4F20     		movs	r0, #79
 663 0252 FFF7FEFF 		bl	Write_Command_Glcd
 664              	.LVL71:
 427:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 665              		.loc 1 427 0
 666 0256 2046     		mov	r0, r4
 667 0258 FFF7FEFF 		bl	Write_Data_Glcd
 668              	.LVL72:
 429:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 669              		.loc 1 429 0
 670 025c 2220     		movs	r0, #34
 671 025e FFF7FEFF 		bl	Write_Command_Glcd
 672              	.LVL73:
 431:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 673              		.loc 1 431 0
 674 0262 FFF7CDFE 		bl	wr_dat_start
 675              	.LVL74:
 676 0266 0025     		movs	r5, #0
 677              	.LVL75:
 678              	.L47:
 406:../Source Files/lpc_ssp_glcd.c **** {
 679              		.loc 1 406 0 discriminator 1
 680 0268 0024     		movs	r4, #0
 681              	.LVL76:
 682              	.L50:
 436:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 683              		.loc 1 436 0
 684 026a 7B5B     		ldrh	r3, [r7, r5]
 685 026c 43FA04F3 		asr	r3, r3, r4
 686 0270 D807     		lsls	r0, r3, #31
 438:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 687              		.loc 1 438 0
 688 0272 54BF     		ite	pl
 689 0274 0748     		ldrpl	r0, .L54
 442:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 690              		.loc 1 442 0
 691 0276 0848     		ldrmi	r0, .L54+4
 434:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 692              		.loc 1 434 0
 693 0278 0134     		adds	r4, r4, #1
 442:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 694              		.loc 1 442 0
 695 027a 0188     		ldrh	r1, [r0, #0]
 696 027c 88B2     		uxth	r0, r1
 697 027e FFF7D3FE 		bl	wr_dat_only
 698              	.LVL77:
 434:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 699              		.loc 1 434 0
 700 0282 102C     		cmp	r4, #16
 701 0284 F1D1     		bne	.L50
 702 0286 0235     		adds	r5, r5, #2
 432:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 703              		.loc 1 432 0
 704 0288 302D     		cmp	r5, #48
 705 028a EDD1     		bne	.L47
 706              	.L51:
 448:../Source Files/lpc_ssp_glcd.c **** }
 707              		.loc 1 448 0
 708 028c BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 447:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 709              		.loc 1 447 0
 710 0290 FFF7C4BE 		b	wr_dat_stop
 711              	.LVL78:
 712              	.L55:
 713              		.align	2
 714              	.L54:
 715 0294 00000000 		.word	.LANCHOR1
 716 0298 00000000 		.word	.LANCHOR0
 717              		.cfi_endproc
 718              	.LFE69:
 720              		.align	1
 721              		.global	GLCD_Display_Char
 722              		.thumb
 723              		.thumb_func
 725              	GLCD_Display_Char:
 726              	.LFB70:
 459:../Source Files/lpc_ssp_glcd.c **** {
 727              		.loc 1 459 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              	.LVL79:
 460:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 732              		.loc 1 460 0
 733 029c 203A     		subs	r2, r2, #32
 734              	.LVL80:
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 735              		.loc 1 461 0
 736 029e 1823     		movs	r3, #24
 737 02a0 D2B2     		uxtb	r2, r2
 738 02a2 5843     		muls	r0, r3, r0
 739              	.LVL81:
 459:../Source Files/lpc_ssp_glcd.c **** {
 740              		.loc 1 459 0
 741 02a4 10B5     		push	{r4, lr}
 742              	.LCFI9:
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 4, -8
 745              		.cfi_offset 14, -4
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 746              		.loc 1 461 0
 747 02a6 5343     		muls	r3, r2, r3
 748 02a8 0901     		lsls	r1, r1, #4
 749              	.LVL82:
 750 02aa 054A     		ldr	r2, .L57
 751 02ac 8CB2     		uxth	r4, r1
 752 02ae 02EB4302 		add	r2, r2, r3, lsl #1
 753 02b2 81B2     		uxth	r1, r0
 754 02b4 2046     		mov	r0, r4
 462:../Source Files/lpc_ssp_glcd.c **** }
 755              		.loc 1 462 0
 756 02b6 BDE81040 		pop	{r4, lr}
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 757              		.loc 1 461 0
 758 02ba FFF7FEBF 		b	GLCD_Draw_Char
 759              	.LVL83:
 760              	.L58:
 761 02be 00BF     		.align	2
 762              	.L57:
 763 02c0 00000000 		.word	.LANCHOR2
 764              		.cfi_endproc
 765              	.LFE70:
 767              		.align	1
 768              		.global	GLCD_PutPixel
 769              		.thumb
 770              		.thumb_func
 772              	GLCD_PutPixel:
 773              	.LFB62:
 297:../Source Files/lpc_ssp_glcd.c **** {
 774              		.loc 1 297 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              	.LVL84:
 779 02c4 70B5     		push	{r4, r5, r6, lr}
 780              	.LCFI10:
 781              		.cfi_def_cfa_offset 16
 782              		.cfi_offset 4, -16
 783              		.cfi_offset 5, -12
 784              		.cfi_offset 6, -8
 785              		.cfi_offset 14, -4
 297:../Source Files/lpc_ssp_glcd.c **** {
 786              		.loc 1 297 0
 787 02c6 0446     		mov	r4, r0
 298:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 788              		.loc 1 298 0
 789 02c8 4E20     		movs	r0, #78
 790              	.LVL85:
 297:../Source Files/lpc_ssp_glcd.c **** {
 791              		.loc 1 297 0
 792 02ca 0D46     		mov	r5, r1
 793 02cc 1646     		mov	r6, r2
 298:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 794              		.loc 1 298 0
 795 02ce FFF7FEFF 		bl	Write_Command_Glcd
 796              	.LVL86:
 299:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 797              		.loc 1 299 0
 798 02d2 2046     		mov	r0, r4
 799 02d4 FFF7FEFF 		bl	Write_Data_Glcd
 800              	.LVL87:
 301:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 801              		.loc 1 301 0
 802 02d8 4F20     		movs	r0, #79
 803 02da FFF7FEFF 		bl	Write_Command_Glcd
 804              	.LVL88:
 302:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 805              		.loc 1 302 0
 806 02de 2846     		mov	r0, r5
 807 02e0 FFF7FEFF 		bl	Write_Data_Glcd
 808              	.LVL89:
 304:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 809              		.loc 1 304 0
 810 02e4 2220     		movs	r0, #34
 811 02e6 FFF7FEFF 		bl	Write_Command_Glcd
 812              	.LVL90:
 305:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 813              		.loc 1 305 0
 814 02ea 3046     		mov	r0, r6
 306:../Source Files/lpc_ssp_glcd.c **** }
 815              		.loc 1 306 0
 816 02ec BDE87040 		pop	{r4, r5, r6, lr}
 305:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 817              		.loc 1 305 0
 818 02f0 FFF7FEBF 		b	Write_Data_Glcd
 819              	.LVL91:
 820              		.cfi_endproc
 821              	.LFE62:
 823              		.align	1
 824              		.global	GLCD_Text
 825              		.thumb
 826              		.thumb_func
 828              	GLCD_Text:
 829              	.LFB81:
1022:../Source Files/lpc_ssp_glcd.c **** {
 830              		.loc 1 1022 0
 831              		.cfi_startproc
 832              		@ args = 16, pretend = 0, frame = 56
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834              	.LVL92:
 835 02f4 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 836              	.LCFI11:
 837              		.cfi_def_cfa_offset 36
 838              		.cfi_offset 4, -36
 839              		.cfi_offset 5, -32
 840              		.cfi_offset 6, -28
 841              		.cfi_offset 7, -24
 842              		.cfi_offset 8, -20
 843              		.cfi_offset 9, -16
 844              		.cfi_offset 10, -12
 845              		.cfi_offset 11, -8
 846              		.cfi_offset 14, -4
 847 02f8 8FB0     		sub	sp, sp, #60
 848              	.LCFI12:
 849              		.cfi_def_cfa_offset 96
 850 02fa 00AF     		add	r7, sp, #0
 851              	.LCFI13:
 852              		.cfi_def_cfa_register 7
1022:../Source Files/lpc_ssp_glcd.c **** {
 853              		.loc 1 1022 0
 854 02fc 1C46     		mov	r4, r3
 855              	.LVL93:
 856 02fe 97F96880 		ldrsb	r8, [r7, #104]
 857 0302 B7F86C30 		ldrh	r3, [r7, #108]
 858              	.LVL94:
 859 0306 0546     		mov	r5, r0
 860 0308 FB60     		str	r3, [r7, #12]
 861              	.LBB10:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 862              		.loc 1 1033 0
 863 030a 1FFA88F3 		uxth	r3, r8
 864              	.LBE10:
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 865              		.loc 1 1024 0
 866 030e E01D     		adds	r0, r4, #7
 867              	.LVL95:
 868              	.LBB11:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 869              		.loc 1 1033 0
 870 0310 3B63     		str	r3, [r7, #48]
 871 0312 6343     		muls	r3, r4, r3
 872              	.LBE11:
1022:../Source Files/lpc_ssp_glcd.c **** {
 873              		.loc 1 1022 0
 874 0314 F962     		str	r1, [r7, #44]
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 875              		.loc 1 1024 0
 876 0316 00F4FC71 		and	r1, r0, #504
 877              	.LVL96:
 878              	.LBB12:
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 879              		.loc 1 1030 0
 880 031a 08FB04F0 		mul	r0, r8, r4
 881              	.LBE12:
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 882              		.loc 1 1024 0
 883 031e ADEB010D 		sub	sp, sp, r1
 884              	.LBB13:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 885              		.loc 1 1033 0
 886 0322 591C     		adds	r1, r3, #1
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 887              		.loc 1 1030 0
 888 0324 3862     		str	r0, [r7, #32]
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 889              		.loc 1 1033 0
 890 0326 88B2     		uxth	r0, r1
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 891              		.loc 1 1037 0
 892 0328 97F86010 		ldrb	r1, [r7, #96]	@ zero_extendqisi2
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 893              		.loc 1 1033 0
 894 032c F861     		str	r0, [r7, #28]
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 895              		.loc 1 1037 0
 896 032e 08FB01F0 		mul	r0, r8, r1
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 897              		.loc 1 1021 0
 898 0332 013A     		subs	r2, r2, #1
 899              	.LVL97:
 900 0334 9BB2     		uxth	r3, r3
 901              	.LBE13:
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 902              		.loc 1 1024 0
 903 0336 C7F824D0 		str	sp, [r7, #36]
 904              	.LVL98:
 905              	.LBB14:
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 906              		.loc 1 1037 0
 907 033a B861     		str	r0, [r7, #24]
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 908              		.loc 1 1021 0
 909 033c BA62     		str	r2, [r7, #40]
 910 033e 7B61     		str	r3, [r7, #20]
 911              	.LVL99:
 912              	.L61:
 913              	.LBE14:
1026:../Source Files/lpc_ssp_glcd.c ****    for(i=0; textptr[i] != '\0'; ++i, ++x) // Loop through the passed string
 914              		.loc 1 1026 0 discriminator 1
 915 0340 B96A     		ldr	r1, [r7, #40]
 916 0342 11F8010F 		ldrb	r0, [r1, #1]!	@ zero_extendqisi2
 917 0346 B962     		str	r1, [r7, #40]
 918 0348 0028     		cmp	r0, #0
 919 034a 63D0     		beq	.L73
 920              	.L70:
 921              	.LBB15:
1028:../Source Files/lpc_ssp_glcd.c ****       memcpy(pixelData, font[textptr[i]-' '], row);
 922              		.loc 1 1028 0
 923 034c 46B2     		sxtb	r6, r0
 924 034e 7B6E     		ldr	r3, [r7, #100]
 925 0350 A6F12002 		sub	r2, r6, #32
 926 0354 04FB0231 		mla	r1, r4, r2, r3
 927 0358 786A     		ldr	r0, [r7, #36]
 928 035a 2246     		mov	r2, r4
 929 035c FFF7FEFF 		bl	memcpy
 930              	.LVL100:
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 931              		.loc 1 1030 0
 932 0360 396A     		ldr	r1, [r7, #32]
 933 0362 6818     		adds	r0, r5, r1
 934 0364 B0F5A07F 		cmp	r0, #320
 935 0368 05DB     		blt	.L62
 936              	.LVL101:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 937              		.loc 1 1033 0
 938 036a FD69     		ldr	r5, [r7, #28]
 939 036c FE6A     		ldr	r6, [r7, #44]
 940 036e AA19     		adds	r2, r5, r6
 941 0370 13B2     		sxth	r3, r2
 942 0372 FB62     		str	r3, [r7, #44]
1032:../Source Files/lpc_ssp_glcd.c ****          x = 0;                           // Set x at far left position
 943              		.loc 1 1032 0
 944 0374 0025     		movs	r5, #0
 945              	.LVL102:
 946              	.L62:
1035:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
 947              		.loc 1 1035 0
 948 0376 7D63     		str	r5, [r7, #52]
 949 0378 0026     		movs	r6, #0
 950              	.LVL103:
 951              	.L63:
1035:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
 952              		.loc 1 1035 0 is_stmt 0 discriminator 1
 953 037a A642     		cmp	r6, r4
 954 037c 45DA     		bge	.L69
 955 037e FA6A     		ldr	r2, [r7, #44]
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 956              		.loc 1 1021 0 is_stmt 1
 957 0380 4FF00009 		mov	r9, #0
 958 0384 1FFA82FC 		uxth	ip, r2
 959              	.L65:
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 960              		.loc 1 1037 0 discriminator 1
 961 0388 BB69     		ldr	r3, [r7, #24]
 962 038a 9945     		cmp	r9, r3
 963 038c 36DA     		bge	.L74
 964              	.L68:
1039:../Source Files/lpc_ssp_glcd.c ****             if(bit_test(pixelData[j], k)) // Check if the pixel should be set
 965              		.loc 1 1039 0
 966 038e 786A     		ldr	r0, [r7, #36]
 967 0390 8157     		ldrsb	r1, [r0, r6]
 968 0392 41FA09F2 		asr	r2, r1, r9
 969 0396 D207     		lsls	r2, r2, #31
 970 0398 07D4     		bmi	.L71
 971              	.L67:
 972 039a 396B     		ldr	r1, [r7, #48]
 973 039c 09F10109 		add	r9, r9, #1
 974 03a0 0CEB0102 		add	r2, ip, r1
 975 03a4 1FFA82FC 		uxth	ip, r2
 976 03a8 EEE7     		b	.L65
 977              	.L71:
 978 03aa 4FF0000B 		mov	fp, #0
 979              	.L64:
 980              	.LVL104:
1041:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
 981              		.loc 1 1041 0 discriminator 1
 982 03ae 0FFA8BF3 		sxth	r3, fp
 983 03b2 1FFA88F0 		uxth	r0, r8
 984 03b6 9845     		cmp	r8, r3
 985 03b8 3861     		str	r0, [r7, #16]
 986 03ba EEDD     		ble	.L67
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 987              		.loc 1 1021 0
 988 03bc 0CEB0B03 		add	r3, ip, fp
 989 03c0 9BB2     		uxth	r3, r3
 990 03c2 4FF0000A 		mov	sl, #0
 991              	.L66:
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 992              		.loc 1 1021 0 is_stmt 0 discriminator 2
 993 03c6 786B     		ldr	r0, [r7, #52]
1045:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
 994              		.loc 1 1045 0 is_stmt 1 discriminator 2
 995 03c8 FA68     		ldr	r2, [r7, #12]
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 996              		.loc 1 1021 0 discriminator 2
 997 03ca 0AEB0001 		add	r1, sl, r0
1045:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
 998              		.loc 1 1045 0 discriminator 2
 999 03ce 88B2     		uxth	r0, r1
 1000 03d0 1946     		mov	r1, r3
 1001 03d2 BB60     		str	r3, [r7, #8]
 1002 03d4 C7F804C0 		str	ip, [r7, #4]
 1003 03d8 FFF7FEFF 		bl	GLCD_PutPixel
 1004              	.LVL105:
1043:../Source Files/lpc_ssp_glcd.c ****                   for(m=0; m<size; ++m)
 1005              		.loc 1 1043 0 discriminator 2
 1006 03dc 3A69     		ldr	r2, [r7, #16]
 1007 03de 0AF1010A 		add	sl, sl, #1
 1008 03e2 0FFA8AF3 		sxth	r3, sl
 1009 03e6 10B2     		sxth	r0, r2
 1010 03e8 8342     		cmp	r3, r0
 1011 03ea D7F804C0 		ldr	ip, [r7, #4]
 1012 03ee BB68     		ldr	r3, [r7, #8]
 1013 03f0 E9DB     		blt	.L66
1041:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
 1014              		.loc 1 1041 0
 1015 03f2 0BF1010B 		add	fp, fp, #1
 1016              	.LVL106:
 1017 03f6 1FFA8BFB 		uxth	fp, fp
 1018              	.LVL107:
 1019 03fa D8E7     		b	.L64
 1020              	.LVL108:
 1021              	.L74:
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint8_t row, uint8_t col, int8_t (*font)[row]
 1022              		.loc 1 1021 0
 1023 03fc 796B     		ldr	r1, [r7, #52]
 1024 03fe 386B     		ldr	r0, [r7, #48]
 1025 0400 0136     		adds	r6, r6, #1
 1026 0402 4218     		adds	r2, r0, r1
 1027 0404 13B2     		sxth	r3, r2
 1028 0406 7B63     		str	r3, [r7, #52]
 1029 0408 B7E7     		b	.L63
 1030              	.L69:
 1031 040a 7969     		ldr	r1, [r7, #20]
 1032 040c 6818     		adds	r0, r5, r1
 1033              	.LBE15:
1026:../Source Files/lpc_ssp_glcd.c ****    for(i=0; textptr[i] != '\0'; ++i, ++x) // Loop through the passed string
 1034              		.loc 1 1026 0
 1035 040e 451C     		adds	r5, r0, #1
 1036 0410 2DB2     		sxth	r5, r5
 1037              	.LVL109:
 1038 0412 95E7     		b	.L61
 1039              	.L73:
1052:../Source Files/lpc_ssp_glcd.c **** }
 1040              		.loc 1 1052 0
 1041 0414 07F13C07 		add	r7, r7, #60
 1042 0418 BD46     		mov	sp, r7
 1043 041a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1044              		.cfi_endproc
 1045              	.LFE81:
 1047              		.align	1
 1048              		.global	GLCD_Line
 1049              		.thumb
 1050              		.thumb_func
 1052              	GLCD_Line:
 1053              	.LFB76:
 617:../Source Files/lpc_ssp_glcd.c **** {
 1054              		.loc 1 617 0
 1055              		.cfi_startproc
 1056              		@ args = 4, pretend = 0, frame = 16
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              	.LVL110:
 1059 041e 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1060              	.LCFI14:
 1061              		.cfi_def_cfa_offset 36
 1062              		.cfi_offset 4, -36
 1063              		.cfi_offset 5, -32
 1064              		.cfi_offset 6, -28
 1065              		.cfi_offset 7, -24
 1066              		.cfi_offset 8, -20
 1067              		.cfi_offset 9, -16
 1068              		.cfi_offset 10, -12
 1069              		.cfi_offset 11, -8
 1070              		.cfi_offset 14, -4
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1071              		.loc 1 621 0
 1072 0422 141A     		subs	r4, r2, r0
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1073              		.loc 1 622 0
 1074 0424 5E1A     		subs	r6, r3, r1
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1075              		.loc 1 621 0
 1076 0426 24B2     		sxth	r4, r4
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1077              		.loc 1 622 0
 1078 0428 36B2     		sxth	r6, r6
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1079              		.loc 1 621 0
 1080 042a 002C     		cmp	r4, #0
 1081 042c B8BF     		it	lt
 1082 042e 6442     		rsblt	r4, r4, #0
 1083              	.LVL111:
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1084              		.loc 1 622 0
 1085 0430 002E     		cmp	r6, #0
 1086 0432 B8BF     		it	lt
 1087 0434 7642     		rsblt	r6, r6, #0
 1088              	.LVL112:
 627:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 1089              		.loc 1 627 0
 1090 0436 4FF6FF75 		movw	r5, #65535
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1091              		.loc 1 636 0
 1092 043a 24B2     		sxth	r4, r4
 1093              	.LVL113:
 1094 043c 36B2     		sxth	r6, r6
 1095              	.LVL114:
 617:../Source Files/lpc_ssp_glcd.c **** {
 1096              		.loc 1 617 0
 1097 043e 85B0     		sub	sp, sp, #20
 1098              	.LCFI15:
 1099              		.cfi_def_cfa_offset 56
 627:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 1100              		.loc 1 627 0
 1101 0440 9042     		cmp	r0, r2
 1102 0442 CCBF     		ite	gt
 1103 0444 2F46     		movgt	r7, r5
 1104 0446 0127     		movle	r7, #1
 1105              	.LVL115:
 631:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 1106              		.loc 1 631 0
 1107 0448 9942     		cmp	r1, r3
 1108 044a CCBF     		ite	gt
 1109 044c A846     		movgt	r8, r5
 1110 044e 4FF00108 		movle	r8, #1
 1111              	.LVL116:
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1112              		.loc 1 636 0
 1113 0452 B442     		cmp	r4, r6
 617:../Source Files/lpc_ssp_glcd.c **** {
 1114              		.loc 1 617 0
 1115 0454 BDF83890 		ldrh	r9, [sp, #56]
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1116              		.loc 1 636 0
 1117 0458 29DB     		blt	.L78
 638:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 1118              		.loc 1 638 0
 1119 045a 4FEA460B 		lsl	fp, r6, #1
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1120              		.loc 1 651 0
 1121 045e 361B     		subs	r6, r6, r4
 1122 0460 7300     		lsls	r3, r6, #1
 1123              	.LVL117:
 638:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 1124              		.loc 1 638 0
 1125 0462 C4EB0B05 		rsb	r5, r4, fp
 1126              	.LVL118:
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1127              		.loc 1 651 0
 1128 0466 0393     		str	r3, [sp, #12]
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1129              		.loc 1 640 0
 1130 0468 8A46     		mov	sl, r1
 1131 046a 0026     		movs	r6, #0
 1132              	.LVL119:
 1133              	.L79:
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1134              		.loc 1 640 0 is_stmt 0 discriminator 1
 1135 046c A642     		cmp	r6, r4
 1136 046e 47DC     		bgt	.L75
 1137              	.L82:
 642:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 1138              		.loc 1 642 0 is_stmt 1
 1139 0470 1FFA8AF3 		uxth	r3, sl
 1140 0474 1FFA80FE 		uxth	lr, r0
 1141 0478 1946     		mov	r1, r3
 1142 047a 7046     		mov	r0, lr
 1143              	.LVL120:
 1144 047c 4A46     		mov	r2, r9
 1145 047e 0193     		str	r3, [sp, #4]
 1146 0480 CDF808E0 		str	lr, [sp, #8]
 1147 0484 FFF7FEFF 		bl	GLCD_PutPixel
 1148              	.LVL121:
 1149 0488 DDF808C0 		ldr	ip, [sp, #8]
 644:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 1150              		.loc 1 644 0
 1151 048c 002D     		cmp	r5, #0
 1152 048e 0CEB0701 		add	r1, ip, r7
 1153 0492 019B     		ldr	r3, [sp, #4]
 1154 0494 02DA     		bge	.L80
 646:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 1155              		.loc 1 646 0
 1156 0496 5D44     		add	r5, r5, fp
 1157              	.LVL122:
 647:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1158              		.loc 1 647 0
 1159 0498 88B2     		uxth	r0, r1
 1160              	.LVL123:
 1161 049a 06E0     		b	.L81
 1162              	.LVL124:
 1163              	.L80:
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1164              		.loc 1 651 0
 1165 049c 0398     		ldr	r0, [sp, #12]
 653:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1166              		.loc 1 653 0
 1167 049e 03EB080A 		add	sl, r3, r8
 1168              	.LVL125:
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1169              		.loc 1 651 0
 1170 04a2 2D18     		adds	r5, r5, r0
 1171              	.LVL126:
 653:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1172              		.loc 1 653 0
 1173 04a4 1FFA8AFA 		uxth	sl, sl
 652:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1174              		.loc 1 652 0
 1175 04a8 88B2     		uxth	r0, r1
 1176              	.LVL127:
 1177              	.L81:
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1178              		.loc 1 640 0
 1179 04aa 0136     		adds	r6, r6, #1
 1180              	.LVL128:
 1181 04ac DEE7     		b	.L79
 1182              	.LVL129:
 1183              	.L78:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1184              		.loc 1 672 0
 1185 04ae A21B     		subs	r2, r4, r6
 1186              	.LVL130:
 659:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 1187              		.loc 1 659 0
 1188 04b0 4FEA440A 		lsl	sl, r4, #1
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1189              		.loc 1 672 0
 1190 04b4 5300     		lsls	r3, r2, #1
 1191              	.LVL131:
 659:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 1192              		.loc 1 659 0
 1193 04b6 C6EB0A05 		rsb	r5, r6, sl
 1194              	.LVL132:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1195              		.loc 1 672 0
 1196 04ba 0393     		str	r3, [sp, #12]
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1197              		.loc 1 661 0
 1198 04bc 8346     		mov	fp, r0
 1199 04be 0024     		movs	r4, #0
 1200              	.LVL133:
 1201              	.L83:
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1202              		.loc 1 661 0 is_stmt 0 discriminator 1
 1203 04c0 B442     		cmp	r4, r6
 1204 04c2 1DDC     		bgt	.L75
 1205              	.L86:
 663:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 1206              		.loc 1 663 0 is_stmt 1
 1207 04c4 1FFA81FC 		uxth	ip, r1
 1208 04c8 1FFA8BF3 		uxth	r3, fp
 1209 04cc 6146     		mov	r1, ip
 1210              	.LVL134:
 1211 04ce 1846     		mov	r0, r3
 1212 04d0 4A46     		mov	r2, r9
 1213 04d2 CDF808C0 		str	ip, [sp, #8]
 1214 04d6 0193     		str	r3, [sp, #4]
 1215 04d8 FFF7FEFF 		bl	GLCD_PutPixel
 1216              	.LVL135:
 1217 04dc DDF808C0 		ldr	ip, [sp, #8]
 665:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 1218              		.loc 1 665 0
 1219 04e0 002D     		cmp	r5, #0
 1220 04e2 0CEB0801 		add	r1, ip, r8
 1221 04e6 0198     		ldr	r0, [sp, #4]
 1222 04e8 01DA     		bge	.L84
 667:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 1223              		.loc 1 667 0
 1224 04ea 5544     		add	r5, r5, sl
 1225              	.LVL136:
 1226 04ec 05E0     		b	.L90
 1227              	.L84:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1228              		.loc 1 672 0
 1229 04ee 039A     		ldr	r2, [sp, #12]
 673:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1230              		.loc 1 673 0
 1231 04f0 00EB070B 		add	fp, r0, r7
 1232              	.LVL137:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1233              		.loc 1 672 0
 1234 04f4 AD18     		adds	r5, r5, r2
 1235              	.LVL138:
 673:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1236              		.loc 1 673 0
 1237 04f6 1FFA8BFB 		uxth	fp, fp
 1238              	.L90:
 1239              	.LVL139:
 674:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1240              		.loc 1 674 0
 1241 04fa 89B2     		uxth	r1, r1
 1242              	.LVL140:
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1243              		.loc 1 661 0
 1244 04fc 0134     		adds	r4, r4, #1
 1245              	.LVL141:
 1246 04fe DFE7     		b	.L83
 1247              	.LVL142:
 1248              	.L75:
 678:../Source Files/lpc_ssp_glcd.c **** }
 1249              		.loc 1 678 0
 1250 0500 05B0     		add	sp, sp, #20
 1251 0502 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1252              		.cfi_endproc
 1253              	.LFE76:
 1255              		.align	1
 1256              		.global	GLCD_LBar
 1257              		.thumb
 1258              		.thumb_func
 1260              	GLCD_LBar:
 1261              	.LFB83:
1091:../Source Files/lpc_ssp_glcd.c **** {
 1262              		.loc 1 1091 0
 1263              		.cfi_startproc
 1264              		@ args = 8, pretend = 0, frame = 0
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 1266              	.LVL143:
 1267 0506 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1268              	.LCFI16:
 1269              		.cfi_def_cfa_offset 40
 1270              		.cfi_offset 0, -40
 1271              		.cfi_offset 1, -36
 1272              		.cfi_offset 2, -32
 1273              		.cfi_offset 4, -28
 1274              		.cfi_offset 5, -24
 1275              		.cfi_offset 6, -20
 1276              		.cfi_offset 7, -16
 1277              		.cfi_offset 8, -12
 1278              		.cfi_offset 9, -8
 1279              		.cfi_offset 14, -4
1091:../Source Files/lpc_ssp_glcd.c **** {
 1280              		.loc 1 1091 0
 1281 050a 9DF82860 		ldrb	r6, [sp, #40]	@ zero_extendqisi2
 1282 050e 1446     		mov	r4, r2
 1283 0510 1D46     		mov	r5, r3
 1284 0512 BDF82C70 		ldrh	r7, [sp, #44]
1094:../Source Files/lpc_ssp_glcd.c **** 	if(dec)
 1285              		.loc 1 1094 0
 1286 0516 0EB1     		cbz	r6, .L92
1096:../Source Files/lpc_ssp_glcd.c **** 		y_diff=y+(per);
 1287              		.loc 1 1096 0
 1288 0518 9B18     		adds	r3, r3, r2
 1289              	.LVL144:
 1290 051a 00E0     		b	.L105
 1291              	.LVL145:
 1292              	.L92:
1100:../Source Files/lpc_ssp_glcd.c **** 		y_diff=y-(per);
 1293              		.loc 1 1100 0
 1294 051c D31A     		subs	r3, r2, r3
 1295              	.LVL146:
 1296              	.L105:
 1297 051e 9BB2     		uxth	r3, r3
 1298              	.LVL147:
1103:../Source Files/lpc_ssp_glcd.c **** 	if((y_diff>=20) && (index<=10) && !dec)
 1299              		.loc 1 1103 0
 1300 0520 1AB2     		sxth	r2, r3
 1301              	.LVL148:
 1302 0522 132A     		cmp	r2, #19
 1303 0524 1DDD     		ble	.L94
1103:../Source Files/lpc_ssp_glcd.c **** 	if((y_diff>=20) && (index<=10) && !dec)
 1304              		.loc 1 1103 0 is_stmt 0 discriminator 1
 1305 0526 0A28     		cmp	r0, #10
 1306 0528 1BDC     		bgt	.L94
 1307 052a 002E     		cmp	r6, #0
 1308 052c 3AD1     		bne	.L95
1107:../Source Files/lpc_ssp_glcd.c **** 			x1 = 30+(index*26)-(width-(width/2));
 1309              		.loc 1 1107 0 is_stmt 1
 1310 052e 1A22     		movs	r2, #26
 1311 0530 5043     		muls	r0, r2, r0
 1312              	.LVL149:
 1313 0532 1E30     		adds	r0, r0, #30
 1314 0534 00EB5103 		add	r3, r0, r1, lsr #1
 1315              	.LVL150:
 1316 0538 98B2     		uxth	r0, r3
 1317 053a 411A     		subs	r1, r0, r1
 1318              	.LVL151:
 1319 053c 1FFA81F8 		uxth	r8, r1
1108:../Source Files/lpc_ssp_glcd.c **** 			x2 = x1+width;
 1320              		.loc 1 1108 0
 1321 0540 1FFA80F9 		uxth	r9, r0
 1322              	.L96:
1105:../Source Files/lpc_ssp_glcd.c **** 		for(h=0;h<=per;h++)
 1323              		.loc 1 1105 0 discriminator 1
 1324 0544 32B2     		sxth	r2, r6
 1325 0546 AA42     		cmp	r2, r5
 1326 0548 2EDC     		bgt	.L91
 1327              	.L97:
 1328              	.LVL152:
1090:../Source Files/lpc_ssp_glcd.c **** void GLCD_LBar(int16_t index, uint8_t width, int16_t y, int16_t per, Bool dec,uint16_t color)
 1329              		.loc 1 1090 0 discriminator 2
 1330 054a A31B     		subs	r3, r4, r6
1109:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x1,y-h,x2,y-h,color);
 1331              		.loc 1 1109 0 discriminator 2
 1332 054c 19B2     		sxth	r1, r3
 1333 054e 0097     		str	r7, [sp, #0]
 1334 0550 0FFA88F0 		sxth	r0, r8
 1335 0554 0FFA89F2 		sxth	r2, r9
 1336 0558 0B46     		mov	r3, r1
 1337 055a FFF7FEFF 		bl	GLCD_Line
 1338              	.LVL153:
 1339 055e 0136     		adds	r6, r6, #1
 1340 0560 F0E7     		b	.L96
 1341              	.LVL154:
 1342              	.L94:
1112:../Source Files/lpc_ssp_glcd.c **** 	else if(dec && (y_diff<=219) && (index<=10))
 1343              		.loc 1 1112 0
 1344 0562 0EB3     		cbz	r6, .L91
1112:../Source Files/lpc_ssp_glcd.c **** 	else if(dec && (y_diff<=219) && (index<=10))
 1345              		.loc 1 1112 0 is_stmt 0 discriminator 1
 1346 0564 1BB2     		sxth	r3, r3
 1347              	.LVL155:
 1348 0566 DB2B     		cmp	r3, #219
 1349 0568 1EDC     		bgt	.L91
 1350 056a 0A28     		cmp	r0, #10
 1351              	.L106:
 1352 056c 1CDC     		bgt	.L91
1116:../Source Files/lpc_ssp_glcd.c **** 			x1 = 30+(index*26)-(width-(width/2));
 1353              		.loc 1 1116 0 is_stmt 1 discriminator 1
 1354 056e 1A26     		movs	r6, #26
 1355 0570 7043     		muls	r0, r6, r0
 1356              	.LVL156:
 1357 0572 1E30     		adds	r0, r0, #30
 1358 0574 00EB5100 		add	r0, r0, r1, lsr #1
 1359 0578 82B2     		uxth	r2, r0
 1360 057a 511A     		subs	r1, r2, r1
 1361              	.LVL157:
 1362 057c 1FFA81F8 		uxth	r8, r1
1117:../Source Files/lpc_ssp_glcd.c **** 			x2 = x1+width;
 1363              		.loc 1 1117 0 discriminator 1
 1364 0580 1FFA82F9 		uxth	r9, r2
 1365 0584 0026     		movs	r6, #0
 1366              	.L99:
1114:../Source Files/lpc_ssp_glcd.c **** 		for(h=0;h<=per;h++)
 1367              		.loc 1 1114 0 discriminator 1
 1368 0586 33B2     		sxth	r3, r6
 1369 0588 AB42     		cmp	r3, r5
 1370 058a 0DDC     		bgt	.L91
 1371              	.L100:
1090:../Source Files/lpc_ssp_glcd.c **** void GLCD_LBar(int16_t index, uint8_t width, int16_t y, int16_t per, Bool dec,uint16_t color)
 1372              		.loc 1 1090 0 discriminator 2
 1373 058c 3019     		adds	r0, r6, r4
1118:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x1,y+h,x2,y+h,color);
 1374              		.loc 1 1118 0 discriminator 2
 1375 058e 01B2     		sxth	r1, r0
 1376 0590 0097     		str	r7, [sp, #0]
 1377 0592 0FFA88F0 		sxth	r0, r8
 1378 0596 0FFA89F2 		sxth	r2, r9
 1379 059a 0B46     		mov	r3, r1
 1380 059c FFF7FEFF 		bl	GLCD_Line
 1381              	.LVL158:
 1382 05a0 0136     		adds	r6, r6, #1
 1383 05a2 F0E7     		b	.L99
 1384              	.LVL159:
 1385              	.L95:
1112:../Source Files/lpc_ssp_glcd.c **** 	else if(dec && (y_diff<=219) && (index<=10))
 1386              		.loc 1 1112 0
 1387 05a4 DB2A     		cmp	r2, #219
 1388 05a6 E1E7     		b	.L106
 1389              	.LVL160:
 1390              	.L91:
1121:../Source Files/lpc_ssp_glcd.c **** }
 1391              		.loc 1 1121 0
 1392 05a8 BDE8FE83 		pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
 1393              		.cfi_endproc
 1394              	.LFE83:
 1396              		.align	1
 1397              		.global	GLCD_Triangle
 1398              		.thumb
 1399              		.thumb_func
 1401              	GLCD_Triangle:
 1402              	.LFB79:
 794:../Source Files/lpc_ssp_glcd.c **** {
 1403              		.loc 1 794 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 48
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              	.LVL161:
 1408 05ac 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1409              	.LCFI17:
 1410              		.cfi_def_cfa_offset 36
 1411              		.cfi_offset 4, -36
 1412              		.cfi_offset 5, -32
 1413              		.cfi_offset 6, -28
 1414              		.cfi_offset 7, -24
 1415              		.cfi_offset 8, -20
 1416              		.cfi_offset 9, -16
 1417              		.cfi_offset 10, -12
 1418              		.cfi_offset 11, -8
 1419              		.cfi_offset 14, -4
 1420 05b0 8FB0     		sub	sp, sp, #60
 1421              	.LCFI18:
 1422              		.cfi_def_cfa_offset 96
 794:../Source Files/lpc_ssp_glcd.c **** {
 1423              		.loc 1 794 0
 1424 05b2 0693     		str	r3, [sp, #24]
 795:../Source Files/lpc_ssp_glcd.c ****     if(cfg->fill)
 1425              		.loc 1 795 0
 1426 05b4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1427              	.LVL162:
 794:../Source Files/lpc_ssp_glcd.c **** {
 1428              		.loc 1 794 0
 1429 05b6 0746     		mov	r7, r0
 1430 05b8 0D46     		mov	r5, r1
 1431 05ba 1646     		mov	r6, r2
 795:../Source Files/lpc_ssp_glcd.c ****     if(cfg->fill)
 1432              		.loc 1 795 0
 1433 05bc 002B     		cmp	r3, #0
 1434 05be 00F03082 		beq	.L108
 1435              	.LVL163:
 1436              	.LBB16:
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 1437              		.loc 1 803 0
 1438 05c2 4488     		ldrh	r4, [r0, #2]
 1439 05c4 4A88     		ldrh	r2, [r1, #2]
 1440              	.LVL164:
 1441 05c6 20B2     		sxth	r0, r4
 1442              	.LVL165:
 1443 05c8 11B2     		sxth	r1, r2
 1444              	.LVL166:
 1445 05ca 8842     		cmp	r0, r1
 1446 05cc 14DD     		ble	.L109
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 1447              		.loc 1 803 0 is_stmt 0 discriminator 1
 1448 05ce 82EA0403 		eor	r3, r2, r4
 1449 05d2 7B80     		strh	r3, [r7, #2]	@ movhi
 1450 05d4 6C88     		ldrh	r4, [r5, #2]
 1451 05d6 2888     		ldrh	r0, [r5, #0]
 1452 05d8 6340     		eors	r3, r3, r4
 1453 05da 6B80     		strh	r3, [r5, #2]	@ movhi
 1454 05dc 7A88     		ldrh	r2, [r7, #2]
 1455 05de 3988     		ldrh	r1, [r7, #0]
 1456 05e0 5340     		eors	r3, r3, r2
 1457 05e2 7B80     		strh	r3, [r7, #2]	@ movhi
 1458 05e4 80EA0103 		eor	r3, r0, r1
 1459 05e8 9CB2     		uxth	r4, r3
 1460 05ea 3C80     		strh	r4, [r7, #0]	@ movhi
 1461 05ec 2A88     		ldrh	r2, [r5, #0]
 1462 05ee 5440     		eors	r4, r4, r2
 1463 05f0 2C80     		strh	r4, [r5, #0]	@ movhi
 1464 05f2 3888     		ldrh	r0, [r7, #0]
 1465 05f4 4440     		eors	r4, r4, r0
 1466 05f6 3C80     		strh	r4, [r7, #0]	@ movhi
 1467              	.L109:
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 1468              		.loc 1 804 0 is_stmt 1
 1469 05f8 7B88     		ldrh	r3, [r7, #2]
 1470 05fa 7488     		ldrh	r4, [r6, #2]
 1471 05fc 1AB2     		sxth	r2, r3
 1472 05fe 21B2     		sxth	r1, r4
 1473 0600 8A42     		cmp	r2, r1
 1474 0602 14DD     		ble	.L110
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 1475              		.loc 1 804 0 is_stmt 0 discriminator 1
 1476 0604 84EA0300 		eor	r0, r4, r3
 1477 0608 7880     		strh	r0, [r7, #2]	@ movhi
 1478 060a 7388     		ldrh	r3, [r6, #2]
 1479 060c 3288     		ldrh	r2, [r6, #0]
 1480 060e 5840     		eors	r0, r0, r3
 1481 0610 7080     		strh	r0, [r6, #2]	@ movhi
 1482 0612 7C88     		ldrh	r4, [r7, #2]
 1483 0614 3988     		ldrh	r1, [r7, #0]
 1484 0616 6040     		eors	r0, r0, r4
 1485 0618 7880     		strh	r0, [r7, #2]	@ movhi
 1486 061a 82EA0100 		eor	r0, r2, r1
 1487 061e 83B2     		uxth	r3, r0
 1488 0620 3B80     		strh	r3, [r7, #0]	@ movhi
 1489 0622 3488     		ldrh	r4, [r6, #0]
 1490 0624 6340     		eors	r3, r3, r4
 1491 0626 3380     		strh	r3, [r6, #0]	@ movhi
 1492 0628 3A88     		ldrh	r2, [r7, #0]
 1493 062a 5340     		eors	r3, r3, r2
 1494 062c 3B80     		strh	r3, [r7, #0]	@ movhi
 1495              	.L110:
 805:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 1496              		.loc 1 805 0 is_stmt 1
 1497 062e 6B88     		ldrh	r3, [r5, #2]
 1498 0630 7488     		ldrh	r4, [r6, #2]
 1499 0632 18B2     		sxth	r0, r3
 1500 0634 21B2     		sxth	r1, r4
 1501 0636 8842     		cmp	r0, r1
 1502 0638 13DD     		ble	.L111
 805:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 1503              		.loc 1 805 0 is_stmt 0 discriminator 1
 1504 063a 6340     		eors	r3, r3, r4
 1505 063c 6B80     		strh	r3, [r5, #2]	@ movhi
 1506 063e 7288     		ldrh	r2, [r6, #2]
 1507 0640 3088     		ldrh	r0, [r6, #0]
 1508 0642 5340     		eors	r3, r3, r2
 1509 0644 7380     		strh	r3, [r6, #2]	@ movhi
 1510 0646 6C88     		ldrh	r4, [r5, #2]
 1511 0648 2988     		ldrh	r1, [r5, #0]
 1512 064a 6340     		eors	r3, r3, r4
 1513 064c 6B80     		strh	r3, [r5, #2]	@ movhi
 1514 064e 80EA0103 		eor	r3, r0, r1
 1515 0652 9CB2     		uxth	r4, r3
 1516 0654 2C80     		strh	r4, [r5, #0]	@ movhi
 1517 0656 3288     		ldrh	r2, [r6, #0]
 1518 0658 5440     		eors	r4, r4, r2
 1519 065a 3480     		strh	r4, [r6, #0]	@ movhi
 1520 065c 2888     		ldrh	r0, [r5, #0]
 1521 065e 4440     		eors	r4, r4, r0
 1522 0660 2C80     		strh	r4, [r5, #0]	@ movhi
 1523              	.L111:
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1524              		.loc 1 807 0 is_stmt 1
 1525 0662 3988     		ldrh	r1, [r7, #0]
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1526              		.loc 1 809 0
 1527 0664 2A88     		ldrh	r2, [r5, #0]
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1528              		.loc 1 807 0
 1529 0666 8CB2     		uxth	r4, r1
 1530              	.LVL167:
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1531              		.loc 1 809 0
 1532 0668 101B     		subs	r0, r2, r4
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1533              		.loc 1 807 0
 1534 066a 7B88     		ldrh	r3, [r7, #2]
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1535              		.loc 1 809 0
 1536 066c 82B2     		uxth	r2, r0
 1537 066e 1FFA82F9 		uxth	r9, r2
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1538              		.loc 1 807 0
 1539 0672 1FFA83F8 		uxth	r8, r3
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1540              		.loc 1 810 0
 1541 0676 19F4004F 		tst	r9, #32768
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1542              		.loc 1 807 0
 1543 067a CDF81480 		str	r8, [sp, #20]
 1544              	.LVL168:
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1545              		.loc 1 810 0
 1546 067e 08D0     		beq	.L152
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1547              		.loc 1 810 0 is_stmt 0 discriminator 1
 1548 0680 C2F10009 		rsb	r9, r2, #0
 1549 0684 4FF6FF7C 		movw	ip, #65535
 1550 0688 1FFA89F9 		uxth	r9, r9
 1551              	.LVL169:
 1552 068c CDF820C0 		str	ip, [sp, #32]
 1553 0690 03E0     		b	.L112
 1554              	.LVL170:
 1555              	.L152:
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1556              		.loc 1 810 0
 1557 0692 4FF0010A 		mov	sl, #1
 1558 0696 CDF820A0 		str	sl, [sp, #32]
 1559              	.LVL171:
 1560              	.L112:
 811:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1561              		.loc 1 811 0 is_stmt 1
 1562 069a B5F802B0 		ldrh	fp, [r5, #2]
 1563 069e DDF81480 		ldr	r8, [sp, #20]
 1564 06a2 C8EB0B00 		rsb	r0, r8, fp
 1565 06a6 82B2     		uxth	r2, r0
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1566              		.loc 1 813 0
 1567 06a8 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 811:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1568              		.loc 1 811 0
 1569 06aa 0392     		str	r2, [sp, #12]
 1570              	.LVL172:
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1571              		.loc 1 813 0
 1572 06ac 411A     		subs	r1, r0, r1
 1573              	.LVL173:
 1574 06ae 4AB2     		sxtb	r2, r1
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1575              		.loc 1 814 0
 1576 06b0 11B2     		sxth	r1, r2
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1577              		.loc 1 813 0
 1578 06b2 1FFA82FA 		uxth	sl, r2
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1579              		.loc 1 814 0
 1580 06b6 0029     		cmp	r1, #0
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1581              		.loc 1 813 0
 1582 06b8 CDF810A0 		str	sl, [sp, #16]
 1583              	.LVL174:
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1584              		.loc 1 814 0
 1585 06bc 07DA     		bge	.L153
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1586              		.loc 1 814 0 is_stmt 0 discriminator 1
 1587 06be 5242     		negs	r2, r2
 1588              	.LVL175:
 1589 06c0 90B2     		uxth	r0, r2
 1590 06c2 4FF6FF78 		movw	r8, #65535
 1591 06c6 0490     		str	r0, [sp, #16]
 1592              	.LVL176:
 1593 06c8 CDF82880 		str	r8, [sp, #40]
 1594 06cc 03E0     		b	.L113
 1595              	.LVL177:
 1596              	.L153:
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1597              		.loc 1 814 0
 1598 06ce 4FF0010C 		mov	ip, #1
 1599 06d2 CDF828C0 		str	ip, [sp, #40]
 1600              	.LVL178:
 1601              	.L113:
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1602              		.loc 1 815 0 is_stmt 1
 1603 06d6 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1604              		.loc 1 817 0
 1605 06d8 DDF80CC0 		ldr	ip, [sp, #12]
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1606              		.loc 1 815 0
 1607 06dc CA1A     		subs	r2, r1, r3
 1608 06de 51B2     		sxtb	r1, r2
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1609              		.loc 1 817 0
 1610 06e0 0FFA8CF8 		sxth	r8, ip
 1611 06e4 0FFA89F2 		sxth	r2, r9
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1612              		.loc 1 815 0
 1613 06e8 1FFA81FA 		uxth	sl, r1
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1614              		.loc 1 817 0
 1615 06ec 9045     		cmp	r8, r2
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1616              		.loc 1 815 0
 1617 06ee 0846     		mov	r0, r1	@ movhi
 1618 06f0 CDF834A0 		str	sl, [sp, #52]
 1619              	.LVL179:
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1620              		.loc 1 817 0
 1621 06f4 0FDD     		ble	.L154
 819:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 1622              		.loc 1 819 0
 1623 06f6 DDF80CA0 		ldr	sl, [sp, #12]
 1624 06fa 89EA0A09 		eor	r9, r9, sl
 1625              	.LVL180:
 1626 06fe 89EA0A0C 		eor	ip, r9, sl
 1627 0702 1FFA8CF8 		uxth	r8, ip
 1628 0706 88EA0902 		eor	r2, r8, r9
 1629 070a 1FFA82F9 		uxth	r9, r2
 1630              	.LVL181:
 1631 070e CDF80C80 		str	r8, [sp, #12]
 1632              	.LVL182:
 820:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1633              		.loc 1 820 0
 1634 0712 0122     		movs	r2, #1
 1635              	.LVL183:
 1636 0714 00E0     		b	.L175
 1637              	.LVL184:
 1638              	.L154:
 798:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 1639              		.loc 1 798 0
 1640 0716 0022     		movs	r2, #0
 1641              	.LVL185:
 1642              	.L175:
 822:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 1643              		.loc 1 822 0
 1644 0718 DDF810A0 		ldr	sl, [sp, #16]
 1645 071c 00B2     		sxth	r0, r0
 1646              	.LVL186:
 1647 071e 0FFA8AFC 		sxth	ip, sl
 1648 0722 6045     		cmp	r0, ip
 798:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 1649              		.loc 1 798 0
 1650 0724 0792     		str	r2, [sp, #28]
 1651              	.LVL187:
 822:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 1652              		.loc 1 822 0
 1653 0726 0DDD     		ble	.L155
 824:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 1654              		.loc 1 824 0
 1655 0728 8AEA0100 		eor	r0, sl, r1
 1656 072c 81B2     		uxth	r1, r0
 1657              	.LVL188:
 1658 072e 81EA0A08 		eor	r8, r1, sl
 1659 0732 88EA0100 		eor	r0, r8, r1
 1660              	.LVL189:
 1661 0736 81B2     		uxth	r1, r0
 1662              	.LVL190:
 825:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 1663              		.loc 1 825 0
 1664 0738 0120     		movs	r0, #1
 824:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 1665              		.loc 1 824 0
 1666 073a CDF81080 		str	r8, [sp, #16]
 1667 073e 0D91     		str	r1, [sp, #52]
 1668              	.LVL191:
 825:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 1669              		.loc 1 825 0
 1670 0740 0990     		str	r0, [sp, #36]
 1671 0742 01E0     		b	.L115
 1672              	.LVL192:
 1673              	.L155:
 799:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 1674              		.loc 1 799 0
 1675 0744 0021     		movs	r1, #0
 1676              	.LVL193:
 1677 0746 0991     		str	r1, [sp, #36]
 1678              	.LVL194:
 1679              	.L115:
 828:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 1680              		.loc 1 828 0
 1681 0748 DDF810A0 		ldr	sl, [sp, #16]
 830:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 1682              		.loc 1 830 0
 1683 074c 9B45     		cmp	fp, r3
 828:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 1684              		.loc 1 828 0
 1685 074e 4AF34E01 		sbfx	r1, sl, #1, #15
 1686 0752 1FFA81FC 		uxth	ip, r1
 1687              	.LVL195:
 830:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 1688              		.loc 1 830 0
 1689 0756 00F09580 		beq	.L116
 831:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 1690              		.loc 1 831 0
 1691 075a 49F34E03 		sbfx	r3, r9, #1, #15
 1692 075e 1FFA83FA 		uxth	sl, r3
 1693              	.LVL196:
 1694              	.LBB17:
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1695              		.loc 1 807 0
 1696 0762 A046     		mov	r8, r4
 833:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 1697              		.loc 1 833 0
 1698 0764 4FF0000B 		mov	fp, #0
 1699              	.LVL197:
 1700              	.L117:
 833:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 1701              		.loc 1 833 0 is_stmt 0 discriminator 1
 1702 0768 0FFA89F3 		sxth	r3, r9
 1703 076c 9B45     		cmp	fp, r3
 1704 076e 80F28980 		bge	.L116
 1705              	.L131:
 1706              	.LVL198:
 836:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1707              		.loc 1 836 0 is_stmt 1
 1708 0772 A045     		cmp	r8, r4
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1709              		.loc 1 839 0
 1710 0774 4FF0000E 		mov	lr, #0
 836:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1711              		.loc 1 836 0
 1712 0778 39BF     		ittee	cc
 1713 077a 2246     		movcc	r2, r4
 1714 077c 4146     		movcc	r1, r8
 1715 077e 4246     		movcs	r2, r8
 1716 0780 2146     		movcs	r1, r4
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1717              		.loc 1 839 0
 1718 0782 CDF82CE0 		str	lr, [sp, #44]
 1719              	.LVL199:
 1720              	.L119:
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1721              		.loc 1 839 0 is_stmt 0 discriminator 1
 1722 0786 9B45     		cmp	fp, r3
 1723 0788 08DA     		bge	.L122
 1724              	.L125:
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1725              		.loc 1 842 0 is_stmt 1
 1726 078a 0398     		ldr	r0, [sp, #12]
 841:../Source Files/lpc_ssp_glcd.c ****     			i++;
 1727              		.loc 1 841 0
 1728 078c 0BF1010B 		add	fp, fp, #1
 1729              	.LVL200:
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1730              		.loc 1 842 0
 1731 0790 8244     		add	sl, sl, r0
 1732              	.LVL201:
 841:../Source Files/lpc_ssp_glcd.c ****     			i++;
 1733              		.loc 1 841 0
 1734 0792 5FFA8BFB 		uxtb	fp, fp
 1735              	.LVL202:
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1736              		.loc 1 842 0
 1737 0796 1FFA8AFA 		uxth	sl, sl
 1738              	.LVL203:
 843:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1739              		.loc 1 843 0
 1740 079a 0FE0     		b	.L120
 1741              	.LVL204:
 1742              	.L122:
 1743 079c 0023     		movs	r3, #0
 1744 079e 0C93     		str	r3, [sp, #48]
 1745 07a0 2DE0     		b	.L123
 1746              	.LVL205:
 1747              	.L124:
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1748              		.loc 1 846 0
 1749 07a2 0798     		ldr	r0, [sp, #28]
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1750              		.loc 1 793 0
 1751 07a4 C9EB0A0A 		rsb	sl, r9, sl
 1752              	.LVL206:
 1753 07a8 1FFA8AFA 		uxth	sl, sl
 1754              	.LVL207:
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1755              		.loc 1 846 0
 1756 07ac 0028     		cmp	r0, #0
 1757 07ae F5D0     		beq	.L122
 1758              	.L121:
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1759              		.loc 1 846 0 is_stmt 0 discriminator 1
 1760 07b0 DDF820E0 		ldr	lr, [sp, #32]
 1761 07b4 1FFA8EFE 		uxth	lr, lr
 1762 07b8 CDF82CE0 		str	lr, [sp, #44]
 1763              	.LVL208:
 1764              	.L120:
 843:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1765              		.loc 1 843 0 is_stmt 1 discriminator 1
 1766 07bc 9A45     		cmp	sl, r3
 1767 07be F0DA     		bge	.L124
 849:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 1768              		.loc 1 849 0
 1769 07c0 0798     		ldr	r0, [sp, #28]
 1770 07c2 0028     		cmp	r0, #0
 1771 07c4 EAD1     		bne	.L122
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1772              		.loc 1 793 0
 1773 07c6 DDF820E0 		ldr	lr, [sp, #32]
 1774 07ca F044     		add	r8, r8, lr
 1775              	.LVL209:
 1776 07cc 1FFA88F8 		uxth	r8, r8
 1777              	.LVL210:
 1778 07d0 D9E7     		b	.L119
 1779              	.LVL211:
 1780              	.L128:
 1781 07d2 DDF810E0 		ldr	lr, [sp, #16]
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1782              		.loc 1 861 0
 1783 07d6 0998     		ldr	r0, [sp, #36]
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1784              		.loc 1 793 0
 1785 07d8 CEEB0C03 		rsb	r3, lr, ip
 1786 07dc 1FFA83FC 		uxth	ip, r3
 1787              	.LVL212:
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1788              		.loc 1 861 0
 1789 07e0 98B1     		cbz	r0, .L127
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1790              		.loc 1 861 0 is_stmt 0 discriminator 1
 1791 07e2 0A98     		ldr	r0, [sp, #40]
 1792 07e4 83B2     		uxth	r3, r0
 1793              	.LVL213:
 1794 07e6 0C93     		str	r3, [sp, #48]
 1795              	.LVL214:
 1796              	.L126:
 858:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 1797              		.loc 1 858 0 is_stmt 1 discriminator 1
 1798 07e8 DDF810E0 		ldr	lr, [sp, #16]
 1799 07ec 0FFA8EF0 		sxth	r0, lr
 1800 07f0 8445     		cmp	ip, r0
 1801 07f2 EEDA     		bge	.L128
 864:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 1802              		.loc 1 864 0
 1803 07f4 099B     		ldr	r3, [sp, #36]
 1804 07f6 43B9     		cbnz	r3, .L127
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1805              		.loc 1 793 0
 1806 07f8 0A98     		ldr	r0, [sp, #40]
 1807 07fa 2418     		adds	r4, r4, r0
 1808              	.LVL215:
 1809 07fc A4B2     		uxth	r4, r4
 1810              	.LVL216:
 1811              	.L123:
 857:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 1812              		.loc 1 857 0
 1813 07fe 0D98     		ldr	r0, [sp, #52]
 1814 0800 0CEB0003 		add	r3, ip, r0
 1815 0804 1FFA83FC 		uxth	ip, r3
 1816              	.LVL217:
 858:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 1817              		.loc 1 858 0
 1818 0808 EEE7     		b	.L126
 1819              	.LVL218:
 1820              	.L127:
 870:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 1821              		.loc 1 870 0
 1822 080a DDF814E0 		ldr	lr, [sp, #20]
 1823 080e 069B     		ldr	r3, [sp, #24]
 1824 0810 8845     		cmp	r8, r1
 1825 0812 38BF     		it	cc
 1826 0814 4146     		movcc	r1, r8
 1827 0816 9045     		cmp	r8, r2
 1828 0818 28BF     		it	cs
 1829 081a 4246     		movcs	r2, r8
 1830 081c 88B2     		uxth	r0, r1
 1831              	.LVL219:
 1832 081e 92B2     		uxth	r2, r2
 1833              	.LVL220:
 1834 0820 0FFA8EF1 		sxth	r1, lr
 1835 0824 B3F804E0 		ldrh	lr, [r3, #4]
 1836 0828 A042     		cmp	r0, r4
 1837 082a 28BF     		it	cs
 1838 082c 2046     		movcs	r0, r4
 1839              	.LVL221:
 1840 082e A242     		cmp	r2, r4
 1841 0830 38BF     		it	cc
 1842 0832 2246     		movcc	r2, r4
 1843              	.LVL222:
 1844 0834 0B46     		mov	r3, r1
 1845 0836 CDF800E0 		str	lr, [sp, #0]
 1846 083a 00B2     		sxth	r0, r0
 1847 083c 12B2     		sxth	r2, r2
 1848 083e CDF808C0 		str	ip, [sp, #8]
 1849 0842 FFF7FEFF 		bl	GLCD_Line
 1850              	.LVL223:
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1851              		.loc 1 873 0
 1852 0846 0799     		ldr	r1, [sp, #28]
 1853 0848 DDF808C0 		ldr	ip, [sp, #8]
 1854 084c 19B9     		cbnz	r1, .L129
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1855              		.loc 1 873 0 is_stmt 0 discriminator 1
 1856 084e 0898     		ldr	r0, [sp, #32]
 1857 0850 8044     		add	r8, r8, r0
 1858              	.LVL224:
 1859 0852 1FFA88F8 		uxth	r8, r8
 1860              	.LVL225:
 1861              	.L129:
 874:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1862              		.loc 1 874 0 is_stmt 1
 1863 0856 0B9A     		ldr	r2, [sp, #44]
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1864              		.loc 1 875 0
 1865 0858 0999     		ldr	r1, [sp, #36]
 874:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1866              		.loc 1 874 0
 1867 085a 08EB0203 		add	r3, r8, r2
 1868 085e 1FFA83F8 		uxth	r8, r3
 1869              	.LVL226:
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1870              		.loc 1 875 0
 1871 0862 11B9     		cbnz	r1, .L130
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1872              		.loc 1 875 0 is_stmt 0 discriminator 1
 1873 0864 0A98     		ldr	r0, [sp, #40]
 1874 0866 2418     		adds	r4, r4, r0
 1875              	.LVL227:
 1876 0868 A4B2     		uxth	r4, r4
 1877              	.LVL228:
 1878              	.L130:
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1879              		.loc 1 877 0 is_stmt 1
 1880 086a 059B     		ldr	r3, [sp, #20]
 1881              	.LVL229:
 876:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1882              		.loc 1 876 0
 1883 086c 0C99     		ldr	r1, [sp, #48]
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1884              		.loc 1 877 0
 1885 086e 581C     		adds	r0, r3, #1
 876:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1886              		.loc 1 876 0
 1887 0870 6218     		adds	r2, r4, r1
 1888 0872 94B2     		uxth	r4, r2
 1889              	.LVL230:
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1890              		.loc 1 877 0
 1891 0874 82B2     		uxth	r2, r0
 1892              	.LVL231:
 1893 0876 0592     		str	r2, [sp, #20]
 878:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 1894              		.loc 1 878 0
 1895 0878 B5F90230 		ldrsh	r3, [r5, #2]
 1896 087c 059A     		ldr	r2, [sp, #20]
 1897 087e 9A42     		cmp	r2, r3
 1898 0880 7FF472AF 		bne	.L117
 1899              	.LVL232:
 1900              	.L116:
 1901              	.LBE17:
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1902              		.loc 1 882 0
 1903 0884 3178     		ldrb	r1, [r6, #0]	@ zero_extendqisi2
 1904 0886 B5F800A0 		ldrh	sl, [r5, #0]
 1905 088a CAEB0102 		rsb	r2, sl, r1
 1906 088e 50B2     		sxtb	r0, r2
 1907 0890 01B2     		sxth	r1, r0
 1908 0892 0029     		cmp	r1, #0
 1909 0894 1FFA80F9 		uxth	r9, r0
 1910              	.LVL233:
 1911 0898 07DA     		bge	.L160
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1912              		.loc 1 882 0 is_stmt 0 discriminator 1
 1913 089a C0F10009 		rsb	r9, r0, #0
 1914 089e 4FF6FF70 		movw	r0, #65535
 1915              	.LVL234:
 1916 08a2 1FFA89F9 		uxth	r9, r9
 1917              	.LVL235:
 1918 08a6 0790     		str	r0, [sp, #28]
 1919 08a8 01E0     		b	.L132
 1920              	.LVL236:
 1921              	.L160:
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1922              		.loc 1 882 0
 1923 08aa 0122     		movs	r2, #1
 1924 08ac 0792     		str	r2, [sp, #28]
 1925              	.LVL237:
 1926              	.L132:
 883:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1927              		.loc 1 883 0 is_stmt 1
 1928 08ae B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 1929 08b0 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 884:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 1930              		.loc 1 884 0
 1931 08b2 1FFA8AF8 		uxth	r8, sl
 883:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1932              		.loc 1 883 0
 1933 08b6 CA1A     		subs	r2, r1, r3
 1934 08b8 50B2     		sxtb	r0, r2
 1935 08ba 81B2     		uxth	r1, r0
 1936 08bc 0C91     		str	r1, [sp, #48]
 1937              	.LVL238:
 886:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1938              		.loc 1 886 0
 1939 08be 02B2     		sxth	r2, r0
 1940 08c0 0FFA89F1 		sxth	r1, r9
 1941 08c4 8A42     		cmp	r2, r1
 1942 08c6 0BDD     		ble	.L161
 888:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 1943              		.loc 1 888 0
 1944 08c8 89EA0002 		eor	r2, r9, r0
 1945 08cc 93B2     		uxth	r3, r2
 1946              	.LVL239:
 1947 08ce 83EA0909 		eor	r9, r3, r9
 1948              	.LVL240:
 1949 08d2 89EA0300 		eor	r0, r9, r3
 1950 08d6 82B2     		uxth	r2, r0
 1951              	.LVL241:
 1952 08d8 0C92     		str	r2, [sp, #48]
 1953              	.LVL242:
 889:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1954              		.loc 1 889 0
 1955 08da 0122     		movs	r2, #1
 1956 08dc 0392     		str	r2, [sp, #12]
 1957 08de 01E0     		b	.L133
 1958              	.LVL243:
 1959              	.L161:
 890:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 1960              		.loc 1 890 0
 1961 08e0 0020     		movs	r0, #0
 1962              	.LVL244:
 1963 08e2 0390     		str	r0, [sp, #12]
 1964              	.LVL245:
 1965              	.L133:
 892:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 1966              		.loc 1 892 0
 1967 08e4 C9F3470B 		ubfx	fp, r9, #1, #8
 1968              	.LVL246:
 1969              	.LBB18:
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1970              		.loc 1 894 0
 1971 08e8 4FF0000A 		mov	sl, #0
 1972              	.LVL247:
 1973              	.L134:
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1974              		.loc 1 894 0 is_stmt 0 discriminator 1
 1975 08ec 0FFA89F3 		sxth	r3, r9
 1976 08f0 9A45     		cmp	sl, r3
 1977 08f2 00F38D80 		bgt	.L150
 1978              	.L149:
 1979              	.LVL248:
 897:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1980              		.loc 1 897 0 is_stmt 1
 1981 08f6 A045     		cmp	r8, r4
 1982 08f8 39BF     		ittee	cc
 1983 08fa 2246     		movcc	r2, r4
 1984 08fc 4146     		movcc	r1, r8
 1985 08fe 4246     		movcs	r2, r8
 1986 0900 2146     		movcs	r1, r4
 1987              	.LVL249:
 1988              	.L174:
 900:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1989              		.loc 1 900 0 discriminator 1
 1990 0902 9A45     		cmp	sl, r3
 1991 0904 12DA     		bge	.L177
 1992              	.L141:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 1993              		.loc 1 793 0
 1994 0906 DDF830E0 		ldr	lr, [sp, #48]
 1995 090a 0BEB0E00 		add	r0, fp, lr
 1996 090e 1FFA80FB 		uxth	fp, r0
 1997              	.LVL250:
 903:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1998              		.loc 1 903 0
 1999 0912 9B45     		cmp	fp, r3
 2000 0914 08DB     		blt	.L137
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 2001              		.loc 1 906 0
 2002 0916 039B     		ldr	r3, [sp, #12]
 905:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 2003              		.loc 1 905 0
 2004 0918 C9EB0B00 		rsb	r0, r9, fp
 2005              	.LVL251:
 2006 091c 1FFA80FB 		uxth	fp, r0
 2007              	.LVL252:
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 2008              		.loc 1 906 0
 2009 0920 3BB1     		cbz	r3, .L163
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 2010              		.loc 1 906 0 is_stmt 0 discriminator 1
 2011 0922 079B     		ldr	r3, [sp, #28]
 2012 0924 9BB2     		uxth	r3, r3
 2013 0926 02E0     		b	.L176
 2014              	.L137:
 2015              	.LVL253:
 909:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 2016              		.loc 1 909 0 is_stmt 1
 2017 0928 0398     		ldr	r0, [sp, #12]
 2018 092a 58B1     		cbz	r0, .L139
 2019              	.LVL254:
 2020              	.L177:
 2021 092c 0023     		movs	r3, #0
 2022              	.L176:
 2023 092e 0893     		str	r3, [sp, #32]
 2024 0930 01E0     		b	.L138
 2025              	.LVL255:
 2026              	.L163:
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 2027              		.loc 1 906 0
 2028 0932 0398     		ldr	r0, [sp, #12]
 2029              	.LVL256:
 2030 0934 0890     		str	r0, [sp, #32]
 2031              	.LVL257:
 2032              	.L138:
 915:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 2033              		.loc 1 915 0 discriminator 1
 2034 0936 4FF0000E 		mov	lr, #0
 2035 093a B6F90030 		ldrsh	r3, [r6, #0]
 2036 093e CDF82CE0 		str	lr, [sp, #44]
 2037 0942 22E0     		b	.L140
 2038              	.LVL258:
 2039              	.L139:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2040              		.loc 1 793 0
 2041 0944 0798     		ldr	r0, [sp, #28]
 911:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 2042              		.loc 1 911 0
 2043 0946 0AF1010A 		add	sl, sl, #1
 2044              	.LVL259:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2045              		.loc 1 793 0
 2046 094a 8044     		add	r8, r8, r0
 2047              	.LVL260:
 2048 094c 1FFA88F8 		uxth	r8, r8
 2049              	.LVL261:
 911:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 2050              		.loc 1 911 0
 2051 0950 5FFA8AFA 		uxtb	sl, sl
 2052              	.LVL262:
 2053 0954 D5E7     		b	.L174
 2054              	.LVL263:
 2055              	.L144:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2056              		.loc 1 793 0
 2057 0956 DDF810E0 		ldr	lr, [sp, #16]
 2058 095a CEEB0C00 		rsb	r0, lr, ip
 2059 095e 1FFA80FC 		uxth	ip, r0
 2060              	.LVL264:
 921:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 2061              		.loc 1 921 0
 2062 0962 0998     		ldr	r0, [sp, #36]
 2063              	.LVL265:
 2064 0964 D0B1     		cbz	r0, .L143
 921:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 2065              		.loc 1 921 0 is_stmt 0 discriminator 1
 2066 0966 DDF828E0 		ldr	lr, [sp, #40]
 2067 096a 1FFA8EFE 		uxth	lr, lr
 2068 096e CDF82CE0 		str	lr, [sp, #44]
 2069              	.LVL266:
 2070              	.L142:
 918:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 2071              		.loc 1 918 0 is_stmt 1 discriminator 1
 2072 0972 DDF810E0 		ldr	lr, [sp, #16]
 2073 0976 0FFA8EF0 		sxth	r0, lr
 2074 097a 8445     		cmp	ip, r0
 2075 097c EBDA     		bge	.L144
 924:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 2076              		.loc 1 924 0
 2077 097e 0998     		ldr	r0, [sp, #36]
 2078 0980 60B9     		cbnz	r0, .L143
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2079              		.loc 1 793 0
 2080 0982 DDF828E0 		ldr	lr, [sp, #40]
 2081 0986 7444     		add	r4, r4, lr
 2082              	.LVL267:
 2083 0988 A4B2     		uxth	r4, r4
 2084              	.LVL268:
 2085              	.L140:
 915:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 2086              		.loc 1 915 0 discriminator 1
 2087 098a 9C42     		cmp	r4, r3
 2088 098c 06D0     		beq	.L143
 2089              	.L145:
 917:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 2090              		.loc 1 917 0
 2091 098e DDF834E0 		ldr	lr, [sp, #52]
 2092 0992 0CEB0E00 		add	r0, ip, lr
 2093 0996 1FFA80FC 		uxth	ip, r0
 2094              	.LVL269:
 918:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 2095              		.loc 1 918 0
 2096 099a EAE7     		b	.L142
 2097              	.LVL270:
 2098              	.L143:
 931:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 2099              		.loc 1 931 0
 2100 099c 059B     		ldr	r3, [sp, #20]
 2101 099e 8845     		cmp	r8, r1
 2102 09a0 38BF     		it	cc
 2103 09a2 4146     		movcc	r1, r8
 2104 09a4 88B2     		uxth	r0, r1
 2105              	.LVL271:
 2106 09a6 19B2     		sxth	r1, r3
 2107 09a8 069B     		ldr	r3, [sp, #24]
 2108 09aa 9045     		cmp	r8, r2
 2109 09ac 28BF     		it	cs
 2110 09ae 4246     		movcs	r2, r8
 2111 09b0 B3F804E0 		ldrh	lr, [r3, #4]
 2112 09b4 92B2     		uxth	r2, r2
 2113              	.LVL272:
 2114 09b6 A042     		cmp	r0, r4
 2115 09b8 28BF     		it	cs
 2116 09ba 2046     		movcs	r0, r4
 2117              	.LVL273:
 2118 09bc A242     		cmp	r2, r4
 2119 09be 38BF     		it	cc
 2120 09c0 2246     		movcc	r2, r4
 2121              	.LVL274:
 2122 09c2 0B46     		mov	r3, r1
 2123 09c4 CDF800E0 		str	lr, [sp, #0]
 2124 09c8 00B2     		sxth	r0, r0
 2125 09ca 12B2     		sxth	r2, r2
 2126 09cc CDF808C0 		str	ip, [sp, #8]
 2127 09d0 FFF7FEFF 		bl	GLCD_Line
 2128              	.LVL275:
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 2129              		.loc 1 933 0
 2130 09d4 0399     		ldr	r1, [sp, #12]
 2131 09d6 DDF808C0 		ldr	ip, [sp, #8]
 2132 09da 19B9     		cbnz	r1, .L146
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 2133              		.loc 1 933 0 is_stmt 0 discriminator 1
 2134 09dc 0798     		ldr	r0, [sp, #28]
 2135 09de 8044     		add	r8, r8, r0
 2136              	.LVL276:
 2137 09e0 1FFA88F8 		uxth	r8, r8
 2138              	.LVL277:
 2139              	.L146:
 934:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 2140              		.loc 1 934 0 is_stmt 1
 2141 09e4 089A     		ldr	r2, [sp, #32]
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2142              		.loc 1 935 0
 2143 09e6 0999     		ldr	r1, [sp, #36]
 934:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 2144              		.loc 1 934 0
 2145 09e8 08EB0203 		add	r3, r8, r2
 2146 09ec 1FFA83F8 		uxth	r8, r3
 2147              	.LVL278:
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2148              		.loc 1 935 0
 2149 09f0 11B9     		cbnz	r1, .L147
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2150              		.loc 1 935 0 is_stmt 0 discriminator 1
 2151 09f2 0A98     		ldr	r0, [sp, #40]
 2152 09f4 2418     		adds	r4, r4, r0
 2153              	.LVL279:
 2154 09f6 A4B2     		uxth	r4, r4
 2155              	.LVL280:
 2156              	.L147:
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2157              		.loc 1 937 0 is_stmt 1
 2158 09f8 059B     		ldr	r3, [sp, #20]
 2159              	.LVL281:
 936:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 2160              		.loc 1 936 0
 2161 09fa 0B99     		ldr	r1, [sp, #44]
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2162              		.loc 1 937 0
 2163 09fc 581C     		adds	r0, r3, #1
 936:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 2164              		.loc 1 936 0
 2165 09fe 6218     		adds	r2, r4, r1
 2166 0a00 94B2     		uxth	r4, r2
 2167              	.LVL282:
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2168              		.loc 1 937 0
 2169 0a02 82B2     		uxth	r2, r0
 2170              	.LVL283:
 2171 0a04 0592     		str	r2, [sp, #20]
 938:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 2172              		.loc 1 938 0
 2173 0a06 B6F90230 		ldrsh	r3, [r6, #2]
 2174 0a0a 059A     		ldr	r2, [sp, #20]
 2175 0a0c 9A42     		cmp	r2, r3
 2176 0a0e 03DD     		ble	.L148
 2177              	.LVL284:
 2178              	.L150:
 2179              	.LBE18:
 940:../Source Files/lpc_ssp_glcd.c ****     	cfg->fill = NO;
 2180              		.loc 1 940 0
 2181 0a10 069C     		ldr	r4, [sp, #24]
 2182 0a12 0021     		movs	r1, #0
 2183 0a14 2170     		strb	r1, [r4, #0]
 2184 0a16 04E0     		b	.L108
 2185              	.LVL285:
 2186              	.L148:
 2187              	.LBB19:
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 2188              		.loc 1 894 0
 2189 0a18 0AF1010A 		add	sl, sl, #1
 2190              	.LVL286:
 2191 0a1c 5FFA8AFA 		uxtb	sl, sl
 2192              	.LVL287:
 2193 0a20 64E7     		b	.L134
 2194              	.LVL288:
 2195              	.L108:
 2196              	.LBE19:
 2197              	.LBE16:
 944:../Source Files/lpc_ssp_glcd.c **** 	if(!cfg->fill && cfg->bndry)
 2198              		.loc 1 944 0
 2199 0a22 069C     		ldr	r4, [sp, #24]
 2200 0a24 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 2201 0a26 40BB     		cbnz	r0, .L107
 944:../Source Files/lpc_ssp_glcd.c **** 	if(!cfg->fill && cfg->bndry)
 2202              		.loc 1 944 0 is_stmt 0 discriminator 1
 2203 0a28 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 2204 0a2a 33B3     		cbz	r3, .L107
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, cfg->bcolor);
 2205              		.loc 1 946 0 is_stmt 1
 2206 0a2c B4F802E0 		ldrh	lr, [r4, #2]
 2207 0a30 B7F90000 		ldrsh	r0, [r7, #0]
 2208 0a34 B7F90210 		ldrsh	r1, [r7, #2]
 2209 0a38 B5F90020 		ldrsh	r2, [r5, #0]
 2210 0a3c B5F90230 		ldrsh	r3, [r5, #2]
 2211 0a40 CDF800E0 		str	lr, [sp, #0]
 2212 0a44 FFF7FEFF 		bl	GLCD_Line
 2213              	.LVL289:
 947:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, cfg->bcolor);
 2214              		.loc 1 947 0
 2215 0a48 B7F90000 		ldrsh	r0, [r7, #0]
 2216 0a4c B7F90210 		ldrsh	r1, [r7, #2]
 2217 0a50 069F     		ldr	r7, [sp, #24]
 2218              	.LVL290:
 2219 0a52 B6F90020 		ldrsh	r2, [r6, #0]
 2220 0a56 7C88     		ldrh	r4, [r7, #2]
 2221 0a58 B6F90230 		ldrsh	r3, [r6, #2]
 2222 0a5c 0094     		str	r4, [sp, #0]
 2223 0a5e FFF7FEFF 		bl	GLCD_Line
 2224              	.LVL291:
 948:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, cfg->bcolor);
 2225              		.loc 1 948 0
 2226 0a62 7C88     		ldrh	r4, [r7, #2]
 2227 0a64 B5F90000 		ldrsh	r0, [r5, #0]
 2228 0a68 B5F90210 		ldrsh	r1, [r5, #2]
 2229 0a6c B6F90020 		ldrsh	r2, [r6, #0]
 2230 0a70 B6F90230 		ldrsh	r3, [r6, #2]
 2231 0a74 0094     		str	r4, [sp, #0]
 2232 0a76 FFF7FEFF 		bl	GLCD_Line
 2233              	.LVL292:
 2234              	.L107:
 950:../Source Files/lpc_ssp_glcd.c **** }
 2235              		.loc 1 950 0
 2236 0a7a 0FB0     		add	sp, sp, #60
 2237 0a7c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2238              		.cfi_endproc
 2239              	.LFE79:
 2241              		.align	1
 2242              		.global	Show_BarGraph
 2243              		.thumb
 2244              		.thumb_func
 2246              	Show_BarGraph:
 2247              	.LFB84:
1130:../Source Files/lpc_ssp_glcd.c **** {
 2248              		.loc 1 1130 0
 2249              		.cfi_startproc
 2250              		@ args = 0, pretend = 0, frame = 104
 2251              		@ frame_needed = 0, uses_anonymous_args = 0
 2252 0a80 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2253              	.LCFI19:
 2254              		.cfi_def_cfa_offset 36
 2255              		.cfi_offset 4, -36
 2256              		.cfi_offset 5, -32
 2257              		.cfi_offset 6, -28
 2258              		.cfi_offset 7, -24
 2259              		.cfi_offset 8, -20
 2260              		.cfi_offset 9, -16
 2261              		.cfi_offset 10, -12
 2262              		.cfi_offset 11, -8
 2263              		.cfi_offset 14, -4
1133:../Source Files/lpc_ssp_glcd.c ****     uint8_t x_name[10][3]={"1","2","3","4","5","6","7","8","9","10"};
 2264              		.loc 1 1133 0
 2265 0a84 8A4B     		ldr	r3, .L190
1130:../Source Files/lpc_ssp_glcd.c **** {
 2266              		.loc 1 1130 0
 2267 0a86 9FB0     		sub	sp, sp, #124
 2268              	.LCFI20:
 2269              		.cfi_def_cfa_offset 160
1133:../Source Files/lpc_ssp_glcd.c ****     uint8_t x_name[10][3]={"1","2","3","4","5","6","7","8","9","10"};
 2270              		.loc 1 1133 0
 2271 0a88 0CAA     		add	r2, sp, #48
 2272 0a8a 03F11805 		add	r5, r3, #24
 2273              	.L179:
 2274 0a8e 1868     		ldr	r0, [r3, #0]	@ unaligned
 2275 0a90 5968     		ldr	r1, [r3, #4]	@ unaligned
 2276 0a92 1446     		mov	r4, r2
 2277 0a94 03C4     		stmia	r4!, {r0, r1}
 2278 0a96 0833     		adds	r3, r3, #8
 2279 0a98 AB42     		cmp	r3, r5
 2280 0a9a 2246     		mov	r2, r4
 2281 0a9c F7D1     		bne	.L179
 2282 0a9e 1868     		ldr	r0, [r3, #0]	@ unaligned
 2283 0aa0 9988     		ldrh	r1, [r3, #4]	@ unaligned
1134:../Source Files/lpc_ssp_glcd.c ****     uint8_t y_name[10][4]={"10","20","30","40","50","60","70","80","90","100"};
 2284              		.loc 1 1134 0
 2285 0aa2 844E     		ldr	r6, .L190+4
1133:../Source Files/lpc_ssp_glcd.c ****     uint8_t x_name[10][3]={"1","2","3","4","5","6","7","8","9","10"};
 2286              		.loc 1 1133 0
 2287 0aa4 2060     		str	r0, [r4, #0]	@ unaligned
 2288 0aa6 A180     		strh	r1, [r4, #4]	@ unaligned
1134:../Source Files/lpc_ssp_glcd.c ****     uint8_t y_name[10][4]={"10","20","30","40","50","60","70","80","90","100"};
 2289              		.loc 1 1134 0
 2290 0aa8 14AD     		add	r5, sp, #80
 2291 0aaa 06F12807 		add	r7, r6, #40
 2292              	.L180:
 2293 0aae 3068     		ldr	r0, [r6, #0]	@ unaligned
 2294 0ab0 7168     		ldr	r1, [r6, #4]	@ unaligned
 2295 0ab2 2B46     		mov	r3, r5
 2296 0ab4 03C3     		stmia	r3!, {r0, r1}
 2297 0ab6 0836     		adds	r6, r6, #8
 2298 0ab8 BE42     		cmp	r6, r7
 2299 0aba 1D46     		mov	r5, r3
 2300 0abc F7D1     		bne	.L180
1138:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(30,5,30,238,Black);
 2301              		.loc 1 1138 0
 2302 0abe 0024     		movs	r4, #0
 2303 0ac0 1E20     		movs	r0, #30
 2304 0ac2 0246     		mov	r2, r0
 2305 0ac4 0521     		movs	r1, #5
 2306 0ac6 EE23     		movs	r3, #238
 2307 0ac8 0094     		str	r4, [sp, #0]
 2308 0aca FFF7FEFF 		bl	GLCD_Line
 2309              	.LVL293:
1139:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(1,220,315,220,Black);
 2310              		.loc 1 1139 0
 2311 0ace DC21     		movs	r1, #220
1141:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(22,5,"Y",5,7,default5x7,1,Black);
 2312              		.loc 1 1141 0
 2313 0ad0 794E     		ldr	r6, .L190+8
1139:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(1,220,315,220,Black);
 2314              		.loc 1 1139 0
 2315 0ad2 0B46     		mov	r3, r1
 2316 0ad4 0120     		movs	r0, #1
 2317 0ad6 40F23B12 		movw	r2, #315
 2318 0ada 0094     		str	r4, [sp, #0]
 2319 0adc FFF7FEFF 		bl	GLCD_Line
 2320              	.LVL294:
1141:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(22,5,"Y",5,7,default5x7,1,Black);
 2321              		.loc 1 1141 0
 2322 0ae0 0125     		movs	r5, #1
 2323 0ae2 0727     		movs	r7, #7
 2324 0ae4 0521     		movs	r1, #5
 2325 0ae6 0B46     		mov	r3, r1
 2326 0ae8 0295     		str	r5, [sp, #8]
 2327 0aea 1620     		movs	r0, #22
 2328 0aec 734A     		ldr	r2, .L190+12
 2329 0aee 0097     		str	r7, [sp, #0]
 2330 0af0 0196     		str	r6, [sp, #4]
 2331 0af2 0394     		str	r4, [sp, #12]
 2332 0af4 FFF7FEFF 		bl	GLCD_Text
 2333              	.LVL295:
1142:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(310,225,"X",5,7,default5x7,1,Black);
 2334              		.loc 1 1142 0
 2335 0af8 0295     		str	r5, [sp, #8]
 2336 0afa 4FF49B70 		mov	r0, #310
 2337 0afe E121     		movs	r1, #225
 2338 0b00 6F4A     		ldr	r2, .L190+16
 2339 0b02 0523     		movs	r3, #5
 2340 0b04 0097     		str	r7, [sp, #0]
 2341 0b06 0196     		str	r6, [sp, #4]
 2342 0b08 0394     		str	r4, [sp, #12]
 2343 0b0a FFF7FEFF 		bl	GLCD_Text
 2344              	.LVL296:
1143:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(50,5,"X=ADC-CH  Y=VAL  Y-MAX=4095  Y-UNIT=40.95",5,7,default5x7,1,Black);
 2345              		.loc 1 1143 0
 2346 0b0e 0521     		movs	r1, #5
 2347 0b10 0B46     		mov	r3, r1
 2348 0b12 0295     		str	r5, [sp, #8]
 2349 0b14 3220     		movs	r0, #50
 2350 0b16 6B4A     		ldr	r2, .L190+20
 2351 0b18 0097     		str	r7, [sp, #0]
 2352 0b1a 0196     		str	r6, [sp, #4]
 2353 0b1c 0394     		str	r4, [sp, #12]
 2354 0b1e FFF7FEFF 		bl	GLCD_Text
 2355              	.LVL297:
1149:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
 2356              		.loc 1 1149 0
 2357 0b22 4FF01C0B 		mov	fp, #28
1151:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
 2358              		.loc 1 1151 0
 2359 0b26 4FF0200A 		mov	sl, #32
1150:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 10;
 2360              		.loc 1 1150 0
 2361 0b2a 0A22     		movs	r2, #10
1147:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
 2362              		.loc 1 1147 0
 2363 0b2c 4FF01E0C 		mov	ip, #30
1156:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2364              		.loc 1 1156 0
 2365 0b30 0DEB0B00 		add	r0, sp, fp
 2366 0b34 0DEB0A01 		add	r1, sp, sl
1148:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 5;
 2367              		.loc 1 1148 0
 2368 0b38 4FF00509 		mov	r9, #5
1150:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 10;
 2369              		.loc 1 1150 0
 2370 0b3c ADF82220 		strh	r2, [sp, #34]	@ movhi
1152:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 10;
 2371              		.loc 1 1152 0
 2372 0b40 ADF82620 		strh	r2, [sp, #38]	@ movhi
1156:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2373              		.loc 1 1156 0
 2374 0b44 0AAB     		add	r3, sp, #40
 2375 0b46 09AA     		add	r2, sp, #36
1147:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
 2376              		.loc 1 1147 0
 2377 0b48 ADF81CC0 		strh	ip, [sp, #28]	@ movhi
1149:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
 2378              		.loc 1 1149 0
 2379 0b4c ADF820B0 		strh	fp, [sp, #32]	@ movhi
1151:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
 2380              		.loc 1 1151 0
 2381 0b50 ADF824A0 		strh	sl, [sp, #36]	@ movhi
1153:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 2382              		.loc 1 1153 0
 2383 0b54 8DF82850 		strb	r5, [sp, #40]
1156:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2384              		.loc 1 1156 0
 2385 0b58 CDF814C0 		str	ip, [sp, #20]
1148:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 5;
 2386              		.loc 1 1148 0
 2387 0b5c ADF81E90 		strh	r9, [sp, #30]	@ movhi
1154:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 2388              		.loc 1 1154 0
 2389 0b60 8DF82940 		strb	r4, [sp, #41]
1155:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 2390              		.loc 1 1155 0
 2391 0b64 ADF82C40 		strh	r4, [sp, #44]	@ movhi
1156:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2392              		.loc 1 1156 0
 2393 0b68 FFF7FEFF 		bl	GLCD_Triangle
 2394              	.LVL298:
1159:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
 2395              		.loc 1 1159 0
 2396 0b6c DDF814C0 		ldr	ip, [sp, #20]
1162:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 233;
 2397              		.loc 1 1162 0
 2398 0b70 E921     		movs	r1, #233
1160:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 238;
 2399              		.loc 1 1160 0
 2400 0b72 EE20     		movs	r0, #238
 2401 0b74 ADF81E00 		strh	r0, [sp, #30]	@ movhi
1162:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 233;
 2402              		.loc 1 1162 0
 2403 0b78 ADF82210 		strh	r1, [sp, #34]	@ movhi
1168:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2404              		.loc 1 1168 0
 2405 0b7c 0DEB0B00 		add	r0, sp, fp
1164:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 233;
 2406              		.loc 1 1164 0
 2407 0b80 ADF82610 		strh	r1, [sp, #38]	@ movhi
1168:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2408              		.loc 1 1168 0
 2409 0b84 09AA     		add	r2, sp, #36
 2410 0b86 0DEB0A01 		add	r1, sp, sl
 2411 0b8a 0AAB     		add	r3, sp, #40
1159:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
 2412              		.loc 1 1159 0
 2413 0b8c ADF81CC0 		strh	ip, [sp, #28]	@ movhi
1161:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
 2414              		.loc 1 1161 0
 2415 0b90 ADF820B0 		strh	fp, [sp, #32]	@ movhi
1163:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
 2416              		.loc 1 1163 0
 2417 0b94 ADF824A0 		strh	sl, [sp, #36]	@ movhi
1165:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 2418              		.loc 1 1165 0
 2419 0b98 8DF82850 		strb	r5, [sp, #40]
1166:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 2420              		.loc 1 1166 0
 2421 0b9c 8DF82940 		strb	r4, [sp, #41]
1167:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 2422              		.loc 1 1167 0
 2423 0ba0 ADF82C40 		strh	r4, [sp, #44]	@ movhi
1168:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2424              		.loc 1 1168 0
 2425 0ba4 FFF7FEFF 		bl	GLCD_Triangle
 2426              	.LVL299:
1174:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 6;
 2427              		.loc 1 1174 0
 2428 0ba8 0623     		movs	r3, #6
1173:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
 2429              		.loc 1 1173 0
 2430 0baa 4FF0DC0C 		mov	ip, #220
1174:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 6;
 2431              		.loc 1 1174 0
 2432 0bae ADF82030 		strh	r3, [sp, #32]	@ movhi
1175:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
 2433              		.loc 1 1175 0
 2434 0bb2 4FF0DA0B 		mov	fp, #218
1176:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 6;
 2435              		.loc 1 1176 0
 2436 0bb6 ADF82430 		strh	r3, [sp, #36]	@ movhi
1177:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
 2437              		.loc 1 1177 0
 2438 0bba 4FF0DE0A 		mov	sl, #222
1181:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2439              		.loc 1 1181 0
 2440 0bbe 07A8     		add	r0, sp, #28
 2441 0bc0 08A9     		add	r1, sp, #32
 2442 0bc2 09AA     		add	r2, sp, #36
 2443 0bc4 0AAB     		add	r3, sp, #40
1172:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 1;
 2444              		.loc 1 1172 0
 2445 0bc6 ADF81C50 		strh	r5, [sp, #28]	@ movhi
1173:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
 2446              		.loc 1 1173 0
 2447 0bca ADF81EC0 		strh	ip, [sp, #30]	@ movhi
1178:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 2448              		.loc 1 1178 0
 2449 0bce 8DF82850 		strb	r5, [sp, #40]
1181:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2450              		.loc 1 1181 0
 2451 0bd2 CDF814C0 		str	ip, [sp, #20]
1175:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
 2452              		.loc 1 1175 0
 2453 0bd6 ADF822B0 		strh	fp, [sp, #34]	@ movhi
1177:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
 2454              		.loc 1 1177 0
 2455 0bda ADF826A0 		strh	sl, [sp, #38]	@ movhi
1179:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 2456              		.loc 1 1179 0
 2457 0bde 8DF82940 		strb	r4, [sp, #41]
1180:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 2458              		.loc 1 1180 0
 2459 0be2 ADF82C40 		strh	r4, [sp, #44]	@ movhi
1181:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2460              		.loc 1 1181 0
 2461 0be6 FFF7FEFF 		bl	GLCD_Triangle
 2462              	.LVL300:
1185:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
 2463              		.loc 1 1185 0
 2464 0bea DDF814C0 		ldr	ip, [sp, #20]
1186:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 310;
 2465              		.loc 1 1186 0
 2466 0bee 4FF49B70 		mov	r0, #310
1184:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 315;
 2467              		.loc 1 1184 0
 2468 0bf2 40F23B12 		movw	r2, 315	@ movhi
 2469 0bf6 ADF81C20 		strh	r2, [sp, #28]	@ movhi
1186:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 310;
 2470              		.loc 1 1186 0
 2471 0bfa ADF82000 		strh	r0, [sp, #32]	@ movhi
1188:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 310;
 2472              		.loc 1 1188 0
 2473 0bfe ADF82400 		strh	r0, [sp, #36]	@ movhi
1193:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2474              		.loc 1 1193 0
 2475 0c02 08A9     		add	r1, sp, #32
 2476 0c04 07A8     		add	r0, sp, #28
 2477 0c06 09AA     		add	r2, sp, #36
 2478 0c08 0AAB     		add	r3, sp, #40
1185:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
 2479              		.loc 1 1185 0
 2480 0c0a ADF81EC0 		strh	ip, [sp, #30]	@ movhi
1190:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 2481              		.loc 1 1190 0
 2482 0c0e 8DF82850 		strb	r5, [sp, #40]
1187:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
 2483              		.loc 1 1187 0
 2484 0c12 ADF822B0 		strh	fp, [sp, #34]	@ movhi
1189:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
 2485              		.loc 1 1189 0
 2486 0c16 ADF826A0 		strh	sl, [sp, #38]	@ movhi
1191:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 2487              		.loc 1 1191 0
 2488 0c1a 8DF82940 		strb	r4, [sp, #41]
1192:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 2489              		.loc 1 1192 0
 2490 0c1e ADF82C40 		strh	r4, [sp, #44]	@ movhi
1193:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 2491              		.loc 1 1193 0
 2492 0c22 FFF7FEFF 		bl	GLCD_Triangle
 2493              	.LVL301:
1196:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Text(0,225,"(0,0)",5,7,default5x7,1,Black);
 2494              		.loc 1 1196 0
 2495 0c26 0295     		str	r5, [sp, #8]
 2496 0c28 0097     		str	r7, [sp, #0]
 2497 0c2a 0196     		str	r6, [sp, #4]
 2498 0c2c 0394     		str	r4, [sp, #12]
 2499 0c2e 2046     		mov	r0, r4
 2500 0c30 E121     		movs	r1, #225
 2501 0c32 254A     		ldr	r2, .L190+24
 2502 0c34 4B46     		mov	r3, r9
 2503 0c36 FFF7FEFF 		bl	GLCD_Text
 2504              	.LVL302:
1155:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 2505              		.loc 1 1155 0
 2506 0c3a A046     		mov	r8, r4	@ movhi
1197:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=0; y_scale>=20; y_scale=y_scale-20,i++)
 2507              		.loc 1 1197 0
 2508 0c3c C825     		movs	r5, #200
 2509              	.LVL303:
 2510              	.L183:
1201:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(14,y_scale,y_name[i],5,7,default5x7,1,Black);
 2511              		.loc 1 1201 0
 2512 0c3e 0721     		movs	r1, #7
 2513 0c40 1D4B     		ldr	r3, .L190+8
 2514 0c42 0091     		str	r1, [sp, #0]
 2515 0c44 4FF00100 		mov	r0, #1
 2516 0c48 4FF00001 		mov	r1, #0
1199:../Source Files/lpc_ssp_glcd.c **** 		if(y_scale!=20)
 2517              		.loc 1 1199 0
 2518 0c4c 142D     		cmp	r5, #20
 2519 0c4e 4FEA8402 		lsl	r2, r4, #2
1201:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(14,y_scale,y_name[i],5,7,default5x7,1,Black);
 2520              		.loc 1 1201 0
 2521 0c52 0193     		str	r3, [sp, #4]
 2522 0c54 0290     		str	r0, [sp, #8]
 2523 0c56 0391     		str	r1, [sp, #12]
1199:../Source Files/lpc_ssp_glcd.c **** 		if(y_scale!=20)
 2524              		.loc 1 1199 0
 2525 0c58 02D0     		beq	.L181
1201:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(14,y_scale,y_name[i],5,7,default5x7,1,Black);
 2526              		.loc 1 1201 0
 2527 0c5a 0E20     		movs	r0, #14
 2528 0c5c 29B2     		sxth	r1, r5
 2529 0c5e 01E0     		b	.L189
 2530              	.L181:
1205:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(10,y_scale,y_name[i],5,7,default5x7,1,Black);
 2531              		.loc 1 1205 0
 2532 0c60 0A20     		movs	r0, #10
 2533 0c62 2946     		mov	r1, r5
 2534              	.L189:
 2535 0c64 14AB     		add	r3, sp, #80
1197:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=0; y_scale>=20; y_scale=y_scale-20,i++)
 2536              		.loc 1 1197 0
 2537 0c66 143D     		subs	r5, r5, #20
1205:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(10,y_scale,y_name[i],5,7,default5x7,1,Black);
 2538              		.loc 1 1205 0
 2539 0c68 9A18     		adds	r2, r3, r2
1197:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=0; y_scale>=20; y_scale=y_scale-20,i++)
 2540              		.loc 1 1197 0
 2541 0c6a ADB2     		uxth	r5, r5
1205:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(10,y_scale,y_name[i],5,7,default5x7,1,Black);
 2542              		.loc 1 1205 0
 2543 0c6c 0523     		movs	r3, #5
 2544 0c6e FFF7FEFF 		bl	GLCD_Text
 2545              	.LVL304:
 2546 0c72 0134     		adds	r4, r4, #1
1197:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=0; y_scale>=20; y_scale=y_scale-20,i++)
 2547              		.loc 1 1197 0
 2548 0c74 002D     		cmp	r5, #0
 2549 0c76 E2D1     		bne	.L183
 2550 0c78 3824     		movs	r4, #56
 2551              	.LVL305:
 2552              	.L184:
1211:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Text(x_scale,225,x_name[i],5,7,default5x7,1,Black);
 2553              		.loc 1 1211 0 discriminator 2
 2554 0c7a 0F48     		ldr	r0, .L190+8
 2555 0c7c 0722     		movs	r2, #7
 2556 0c7e 0023     		movs	r3, #0
 2557 0c80 0121     		movs	r1, #1
 2558 0c82 0092     		str	r2, [sp, #0]
 2559 0c84 0190     		str	r0, [sp, #4]
 2560 0c86 0393     		str	r3, [sp, #12]
 2561 0c88 20B2     		sxth	r0, r4
 2562 0c8a 0322     		movs	r2, #3
 2563 0c8c 0CAB     		add	r3, sp, #48
1209:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=0; x_scale<=300; x_scale=x_scale+26,i++)
 2564              		.loc 1 1209 0 discriminator 2
 2565 0c8e 1A34     		adds	r4, r4, #26
1211:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Text(x_scale,225,x_name[i],5,7,default5x7,1,Black);
 2566              		.loc 1 1211 0 discriminator 2
 2567 0c90 02FB0532 		mla	r2, r2, r5, r3
 2568 0c94 0291     		str	r1, [sp, #8]
 2569 0c96 0523     		movs	r3, #5
 2570 0c98 E121     		movs	r1, #225
1209:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=0; x_scale<=300; x_scale=x_scale+26,i++)
 2571              		.loc 1 1209 0 discriminator 2
 2572 0c9a A4B2     		uxth	r4, r4
1211:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Text(x_scale,225,x_name[i],5,7,default5x7,1,Black);
 2573              		.loc 1 1211 0 discriminator 2
 2574 0c9c FFF7FEFF 		bl	GLCD_Text
 2575              	.LVL306:
 2576 0ca0 0135     		adds	r5, r5, #1
1209:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=0; x_scale<=300; x_scale=x_scale+26,i++)
 2577              		.loc 1 1209 0 discriminator 2
 2578 0ca2 B4F59E7F 		cmp	r4, #316
 2579 0ca6 E8D1     		bne	.L184
1213:../Source Files/lpc_ssp_glcd.c **** }
 2580              		.loc 1 1213 0
 2581 0ca8 1FB0     		add	sp, sp, #124
 2582 0caa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2583              	.L191:
 2584 0cae 00BF     		.align	2
 2585              	.L190:
 2586 0cb0 00150000 		.word	.LANCHOR3+1032
 2587 0cb4 1E150000 		.word	.LANCHOR3+1062
 2588 0cb8 46150000 		.word	.LANCHOR3+1102
 2589 0cbc 00000000 		.word	.LC2
 2590 0cc0 02000000 		.word	.LC3
 2591 0cc4 04000000 		.word	.LC4
 2592 0cc8 2E000000 		.word	.LC5
 2593              		.cfi_endproc
 2594              	.LFE84:
 2596              		.align	1
 2597              		.global	GLCD_Frame
 2598              		.thumb
 2599              		.thumb_func
 2601              	GLCD_Frame:
 2602              	.LFB78:
 748:../Source Files/lpc_ssp_glcd.c **** {
 2603              		.loc 1 748 0
 2604              		.cfi_startproc
 2605              		@ args = 4, pretend = 0, frame = 0
 2606              		@ frame_needed = 0, uses_anonymous_args = 0
 2607              	.LVL307:
 2608 0ccc 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 2609              	.LCFI21:
 2610              		.cfi_def_cfa_offset 40
 2611              		.cfi_offset 0, -40
 2612              		.cfi_offset 1, -36
 2613              		.cfi_offset 2, -32
 2614              		.cfi_offset 4, -28
 2615              		.cfi_offset 5, -24
 2616              		.cfi_offset 6, -20
 2617              		.cfi_offset 7, -16
 2618              		.cfi_offset 8, -12
 2619              		.cfi_offset 9, -8
 2620              		.cfi_offset 14, -4
 748:../Source Files/lpc_ssp_glcd.c **** {
 2621              		.loc 1 748 0
 2622 0cd0 BDF82880 		ldrh	r8, [sp, #40]
 2623 0cd4 0546     		mov	r5, r0
 2624 0cd6 0C46     		mov	r4, r1
 2625 0cd8 9146     		mov	r9, r2
 2626 0cda 1F46     		mov	r7, r3
 2627 0cdc 96B2     		uxth	r6, r2
 2628              	.LVL308:
 2629              	.L193:
 753:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 2630              		.loc 1 753 0 discriminator 1
 2631 0cde 002E     		cmp	r6, #0
 2632 0ce0 58D0     		beq	.L198
 2633              	.L196:
 2634 0ce2 6988     		ldrh	r1, [r5, #2]
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 2635              		.loc 1 755 0
 2636 0ce4 33B2     		sxth	r3, r6
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 2637              		.loc 1 757 0
 2638 0ce6 7218     		adds	r2, r6, r1
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 2639              		.loc 1 755 0
 2640 0ce8 4B45     		cmp	r3, r9
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 2641              		.loc 1 757 0
 2642 0cea 11B2     		sxth	r1, r2
 2643 0cec B5F90000 		ldrsh	r0, [r5, #0]
 2644 0cf0 B4F90020 		ldrsh	r2, [r4, #0]
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 2645              		.loc 1 755 0
 2646 0cf4 26DA     		bge	.L194
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 2647              		.loc 1 757 0
 2648 0cf6 0B46     		mov	r3, r1
 2649 0cf8 CDF80080 		str	r8, [sp, #0]
 2650 0cfc FFF7FEFF 		bl	GLCD_Line
 2651              	.LVL309:
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 2652              		.loc 1 758 0
 2653 0d00 6188     		ldrh	r1, [r4, #2]
 2654 0d02 B5F90000 		ldrsh	r0, [r5, #0]
 2655 0d06 8A1B     		subs	r2, r1, r6
 2656 0d08 11B2     		sxth	r1, r2
 2657 0d0a 0B46     		mov	r3, r1
 2658 0d0c B4F90020 		ldrsh	r2, [r4, #0]
 2659 0d10 CDF80080 		str	r8, [sp, #0]
 2660 0d14 FFF7FEFF 		bl	GLCD_Line
 2661              	.LVL310:
 759:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 2662              		.loc 1 759 0
 2663 0d18 2888     		ldrh	r0, [r5, #0]
 2664 0d1a B5F90210 		ldrsh	r1, [r5, #2]
 2665 0d1e 3318     		adds	r3, r6, r0
 2666 0d20 18B2     		sxth	r0, r3
 2667 0d22 0246     		mov	r2, r0
 2668 0d24 B4F90230 		ldrsh	r3, [r4, #2]
 2669 0d28 CDF80080 		str	r8, [sp, #0]
 2670 0d2c FFF7FEFF 		bl	GLCD_Line
 2671              	.LVL311:
 760:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 2672              		.loc 1 760 0
 2673 0d30 2188     		ldrh	r1, [r4, #0]
 2674 0d32 B4F90230 		ldrsh	r3, [r4, #2]
 2675 0d36 8A1B     		subs	r2, r1, r6
 2676 0d38 10B2     		sxth	r0, r2
 2677 0d3a B5F90210 		ldrsh	r1, [r5, #2]
 2678 0d3e CDF80080 		str	r8, [sp, #0]
 2679 0d42 21E0     		b	.L197
 2680              	.L194:
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 2681              		.loc 1 765 0
 2682 0d44 0B46     		mov	r3, r1
 2683 0d46 0097     		str	r7, [sp, #0]
 2684 0d48 FFF7FEFF 		bl	GLCD_Line
 2685              	.LVL312:
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 2686              		.loc 1 766 0
 2687 0d4c 6088     		ldrh	r0, [r4, #2]
 2688 0d4e B4F90020 		ldrsh	r2, [r4, #0]
 2689 0d52 831B     		subs	r3, r0, r6
 2690 0d54 19B2     		sxth	r1, r3
 2691 0d56 0B46     		mov	r3, r1
 2692 0d58 B5F90000 		ldrsh	r0, [r5, #0]
 2693 0d5c 0097     		str	r7, [sp, #0]
 2694 0d5e FFF7FEFF 		bl	GLCD_Line
 2695              	.LVL313:
 767:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 2696              		.loc 1 767 0
 2697 0d62 2988     		ldrh	r1, [r5, #0]
 2698 0d64 B4F90230 		ldrsh	r3, [r4, #2]
 2699 0d68 7218     		adds	r2, r6, r1
 2700 0d6a 10B2     		sxth	r0, r2
 2701 0d6c B5F90210 		ldrsh	r1, [r5, #2]
 2702 0d70 0246     		mov	r2, r0
 2703 0d72 0097     		str	r7, [sp, #0]
 2704 0d74 FFF7FEFF 		bl	GLCD_Line
 2705              	.LVL314:
 768:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 2706              		.loc 1 768 0
 2707 0d78 2088     		ldrh	r0, [r4, #0]
 2708 0d7a B5F90210 		ldrsh	r1, [r5, #2]
 2709 0d7e 831B     		subs	r3, r0, r6
 2710 0d80 18B2     		sxth	r0, r3
 2711 0d82 B4F90230 		ldrsh	r3, [r4, #2]
 2712 0d86 0097     		str	r7, [sp, #0]
 2713              	.L197:
 2714 0d88 0246     		mov	r2, r0
 2715 0d8a 013E     		subs	r6, r6, #1
 2716 0d8c FFF7FEFF 		bl	GLCD_Line
 2717              	.LVL315:
 2718 0d90 B6B2     		uxth	r6, r6
 2719 0d92 A4E7     		b	.L193
 2720              	.L198:
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 2721              		.loc 1 775 0
 2722 0d94 B5F90210 		ldrsh	r1, [r5, #2]
 2723 0d98 B5F90000 		ldrsh	r0, [r5, #0]
 2724 0d9c B4F90020 		ldrsh	r2, [r4, #0]
 2725 0da0 0B46     		mov	r3, r1
 2726 0da2 0097     		str	r7, [sp, #0]
 2727 0da4 FFF7FEFF 		bl	GLCD_Line
 2728              	.LVL316:
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 2729              		.loc 1 776 0
 2730 0da8 B4F90210 		ldrsh	r1, [r4, #2]
 2731 0dac B5F90000 		ldrsh	r0, [r5, #0]
 2732 0db0 B4F90020 		ldrsh	r2, [r4, #0]
 2733 0db4 0B46     		mov	r3, r1
 2734 0db6 0097     		str	r7, [sp, #0]
 2735 0db8 FFF7FEFF 		bl	GLCD_Line
 2736              	.LVL317:
 777:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 2737              		.loc 1 777 0
 2738 0dbc B5F90000 		ldrsh	r0, [r5, #0]
 2739 0dc0 B5F90210 		ldrsh	r1, [r5, #2]
 2740 0dc4 B4F90230 		ldrsh	r3, [r4, #2]
 2741 0dc8 0246     		mov	r2, r0
 2742 0dca 0097     		str	r7, [sp, #0]
 2743 0dcc FFF7FEFF 		bl	GLCD_Line
 2744              	.LVL318:
 778:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2745              		.loc 1 778 0
 2746 0dd0 B4F90000 		ldrsh	r0, [r4, #0]
 2747 0dd4 B5F90210 		ldrsh	r1, [r5, #2]
 2748 0dd8 B4F90230 		ldrsh	r3, [r4, #2]
 2749 0ddc 0246     		mov	r2, r0
 2750 0dde 0A97     		str	r7, [sp, #40]
 780:../Source Files/lpc_ssp_glcd.c **** }
 2751              		.loc 1 780 0
 2752 0de0 03B0     		add	sp, sp, #12
 2753 0de2 BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 778:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2754              		.loc 1 778 0
 2755 0de6 FFF7FEBF 		b	GLCD_Line
 2756              	.LVL319:
 2757              		.cfi_endproc
 2758              	.LFE78:
 2760              		.align	1
 2761              		.global	GLCD_Circle
 2762              		.thumb
 2763              		.thumb_func
 2765              	GLCD_Circle:
 2766              	.LFB80:
 962:../Source Files/lpc_ssp_glcd.c **** {
 2767              		.loc 1 962 0
 2768              		.cfi_startproc
 2769              		@ args = 0, pretend = 0, frame = 32
 2770              		@ frame_needed = 0, uses_anonymous_args = 0
 2771              	.LVL320:
 2772 0dea 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2773              	.LCFI22:
 2774              		.cfi_def_cfa_offset 36
 2775              		.cfi_offset 4, -36
 2776              		.cfi_offset 5, -32
 2777              		.cfi_offset 6, -28
 2778              		.cfi_offset 7, -24
 2779              		.cfi_offset 8, -20
 2780              		.cfi_offset 9, -16
 2781              		.cfi_offset 10, -12
 2782              		.cfi_offset 11, -8
 2783              		.cfi_offset 14, -4
 2784 0dee 1C46     		mov	r4, r3
 2785 0df0 8BB0     		sub	sp, sp, #44
 2786              	.LCFI23:
 2787              		.cfi_def_cfa_offset 80
 2788              	.LVL321:
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2789              		.loc 1 966 0
 2790 0df2 C2F10103 		rsb	r3, r2, #1
 2791              	.LVL322:
 962:../Source Files/lpc_ssp_glcd.c **** {
 2792              		.loc 1 962 0
 2793 0df6 0890     		str	r0, [sp, #32]
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2794              		.loc 1 966 0
 2795 0df8 98B2     		uxth	r0, r3
 2796              	.LVL323:
 962:../Source Files/lpc_ssp_glcd.c **** {
 2797              		.loc 1 962 0
 2798 0dfa 0991     		str	r1, [sp, #36]
 2799 0dfc 0792     		str	r2, [sp, #28]
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2800              		.loc 1 966 0
 2801 0dfe 0690     		str	r0, [sp, #24]
 2802              	.LVL324:
 2803 0e00 0746     		mov	r7, r0
 965:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 2804              		.loc 1 965 0
 2805 0e02 1646     		mov	r6, r2
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2806              		.loc 1 966 0
 2807 0e04 0025     		movs	r5, #0
 2808              	.LVL325:
 2809              	.L203:
 970:../Source Files/lpc_ssp_glcd.c **** 		if(cfg->fill)
 2810              		.loc 1 970 0
 2811 0e06 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 2812 0e08 0029     		cmp	r1, #0
 2813 0e0a 47D0     		beq	.L200
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 2814              		.loc 1 972 0
 2815 0e0c 089A     		ldr	r2, [sp, #32]
 2816 0e0e 0998     		ldr	r0, [sp, #36]
 2817 0e10 1FFA82F9 		uxth	r9, r2
 2818 0e14 1FFA80F8 		uxth	r8, r0
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2819              		.loc 1 961 0
 2820 0e18 ABB2     		uxth	r3, r5
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 2821              		.loc 1 972 0
 2822 0e1a 1FFA86FA 		uxth	sl, r6
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2823              		.loc 1 961 0
 2824 0e1e C3EB090C 		rsb	ip, r3, r9
 2825 0e22 03EB090B 		add	fp, r3, r9
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 2826              		.loc 1 972 0
 2827 0e26 A288     		ldrh	r2, [r4, #4]
 2828 0e28 0AEB0801 		add	r1, sl, r8
 2829 0e2c 0FFA8CFE 		sxth	lr, ip
 2830 0e30 09B2     		sxth	r1, r1
 2831 0e32 0FFA8BFB 		sxth	fp, fp
 2832 0e36 7046     		mov	r0, lr
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2833              		.loc 1 961 0
 2834 0e38 0593     		str	r3, [sp, #20]
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 2835              		.loc 1 972 0
 2836 0e3a 0092     		str	r2, [sp, #0]
 2837 0e3c 0B46     		mov	r3, r1
 2838 0e3e 5A46     		mov	r2, fp
 2839 0e40 CDF80CE0 		str	lr, [sp, #12]
 2840 0e44 FFF7FEFF 		bl	GLCD_Line
 2841              	.LVL326:
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, cfg->fill_color);
 2842              		.loc 1 973 0
 2843 0e48 CAEB0803 		rsb	r3, sl, r8
 2844 0e4c A088     		ldrh	r0, [r4, #4]
 2845 0e4e DDF80CC0 		ldr	ip, [sp, #12]
 2846 0e52 19B2     		sxth	r1, r3
 2847 0e54 5A46     		mov	r2, fp
 2848 0e56 0B46     		mov	r3, r1
 2849 0e58 0090     		str	r0, [sp, #0]
 2850 0e5a 6046     		mov	r0, ip
 2851 0e5c FFF7FEFF 		bl	GLCD_Line
 2852              	.LVL327:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2853              		.loc 1 961 0
 2854 0e60 0599     		ldr	r1, [sp, #20]
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, cfg->fill_color);
 2855              		.loc 1 974 0
 2856 0e62 A388     		ldrh	r3, [r4, #4]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2857              		.loc 1 961 0
 2858 0e64 01EB0802 		add	r2, r1, r8
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, cfg->fill_color);
 2859              		.loc 1 974 0
 2860 0e68 CAEB090B 		rsb	fp, sl, r9
 2861 0e6c D144     		add	r9, sl, r9
 2862 0e6e 11B2     		sxth	r1, r2
 2863 0e70 0FFA8BFB 		sxth	fp, fp
 2864 0e74 0FFA89F9 		sxth	r9, r9
 2865 0e78 0093     		str	r3, [sp, #0]
 2866 0e7a 5846     		mov	r0, fp
 2867 0e7c 0B46     		mov	r3, r1
 2868 0e7e 4A46     		mov	r2, r9
 2869 0e80 FFF7FEFF 		bl	GLCD_Line
 2870              	.LVL328:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2871              		.loc 1 961 0
 2872 0e84 0598     		ldr	r0, [sp, #20]
 975:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, cfg->fill_color);
 2873              		.loc 1 975 0
 2874 0e86 A288     		ldrh	r2, [r4, #4]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2875              		.loc 1 961 0
 2876 0e88 C0EB0808 		rsb	r8, r0, r8
 975:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, cfg->fill_color);
 2877              		.loc 1 975 0
 2878 0e8c 0FFA88F1 		sxth	r1, r8
 2879 0e90 0092     		str	r2, [sp, #0]
 2880 0e92 5846     		mov	r0, fp
 2881 0e94 4A46     		mov	r2, r9
 2882 0e96 0B46     		mov	r3, r1
 2883 0e98 FFF7FEFF 		bl	GLCD_Line
 2884              	.LVL329:
 2885              	.L200:
 978:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 2886              		.loc 1 978 0
 2887 0e9c 3804     		lsls	r0, r7, #16
 2888 0e9e 07D5     		bpl	.L201
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2889              		.loc 1 961 0
 2890 0ea0 ABB2     		uxth	r3, r5
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2891              		.loc 1 979 0
 2892 0ea2 0337     		adds	r7, r7, #3
 2893              	.LVL330:
 2894 0ea4 07EB4300 		add	r0, r7, r3, lsl #1
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2895              		.loc 1 961 0
 2896 0ea8 5A1C     		adds	r2, r3, #1
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2897              		.loc 1 979 0
 2898 0eaa 87B2     		uxth	r7, r0
 2899              	.LVL331:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2900              		.loc 1 961 0
 2901 0eac 91B2     		uxth	r1, r2
 2902              	.LVL332:
 2903 0eae 09E0     		b	.L202
 2904              	.LVL333:
 2905              	.L201:
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2906              		.loc 1 981 0
 2907 0eb0 31B2     		sxth	r1, r6
 2908 0eb2 0537     		adds	r7, r7, #5
 2909              	.LVL334:
 2910 0eb4 6B1A     		subs	r3, r5, r1
 2911 0eb6 07EB4300 		add	r0, r7, r3, lsl #1
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2912              		.loc 1 961 0
 2913 0eba 6A1C     		adds	r2, r5, #1
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2914              		.loc 1 981 0
 2915 0ebc 013E     		subs	r6, r6, #1
 2916              	.LVL335:
 2917 0ebe 87B2     		uxth	r7, r0
 2918              	.LVL336:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2919              		.loc 1 961 0
 2920 0ec0 91B2     		uxth	r1, r2
 2921              	.LVL337:
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2922              		.loc 1 981 0
 2923 0ec2 B6B2     		uxth	r6, r6
 2924              	.LVL338:
 2925              	.L202:
 982:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 2926              		.loc 1 982 0
 2927 0ec4 09B2     		sxth	r1, r1
 2928              	.LVL339:
 2929 0ec6 33B2     		sxth	r3, r6
 2930 0ec8 0135     		adds	r5, r5, #1
 2931 0eca 9942     		cmp	r1, r3
 2932 0ecc 9BDD     		ble	.L203
 984:../Source Files/lpc_ssp_glcd.c **** 	cfg->fill = NO;
 2933              		.loc 1 984 0
 2934 0ece 0025     		movs	r5, #0
 986:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 2935              		.loc 1 986 0
 2936 0ed0 079E     		ldr	r6, [sp, #28]
 2937              	.LVL340:
 984:../Source Files/lpc_ssp_glcd.c **** 	cfg->fill = NO;
 2938              		.loc 1 984 0
 2939 0ed2 2570     		strb	r5, [r4, #0]
 2940              	.LVL341:
 2941              	.L207:
 990:../Source Files/lpc_ssp_glcd.c **** 		if(!cfg->fill && cfg->bndry)
 2942              		.loc 1 990 0
 2943 0ed4 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 2944 0ed6 0028     		cmp	r0, #0
 2945 0ed8 57D1     		bne	.L204
 990:../Source Files/lpc_ssp_glcd.c **** 		if(!cfg->fill && cfg->bndry)
 2946              		.loc 1 990 0 is_stmt 0 discriminator 1
 2947 0eda 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 2948 0edc 002A     		cmp	r2, #0
 2949 0ede 54D0     		beq	.L204
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 2950              		.loc 1 992 0 is_stmt 1
 2951 0ee0 089F     		ldr	r7, [sp, #32]
 2952 0ee2 0998     		ldr	r0, [sp, #36]
 2953 0ee4 1FFA87FA 		uxth	sl, r7
 2954 0ee8 1FFA80F8 		uxth	r8, r0
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2955              		.loc 1 961 0
 2956 0eec 1FFA85F9 		uxth	r9, r5
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 2957              		.loc 1 992 0
 2958 0ef0 B7B2     		uxth	r7, r6
 2959 0ef2 07EB080E 		add	lr, r7, r8
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2960              		.loc 1 961 0
 2961 0ef6 09EB0A01 		add	r1, r9, sl
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 2962              		.loc 1 992 0
 2963 0efa 1FFA8EFC 		uxth	ip, lr
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2964              		.loc 1 961 0
 2965 0efe 8BB2     		uxth	r3, r1
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 2966              		.loc 1 992 0
 2967 0f00 1846     		mov	r0, r3
 2968 0f02 6146     		mov	r1, ip
 2969 0f04 6288     		ldrh	r2, [r4, #2]
 2970 0f06 CDF80CC0 		str	ip, [sp, #12]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2971              		.loc 1 961 0
 2972 0f0a 0793     		str	r3, [sp, #28]
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 2973              		.loc 1 992 0
 2974 0f0c FFF7FEFF 		bl	GLCD_PutPixel
 2975              	.LVL342:
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 2976              		.loc 1 993 0
 2977 0f10 07EB0A02 		add	r2, r7, sl
 2978 0f14 91B2     		uxth	r1, r2
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2979              		.loc 1 961 0
 2980 0f16 09EB0803 		add	r3, r9, r8
 2981 0f1a 9BB2     		uxth	r3, r3
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 2982              		.loc 1 993 0
 2983 0f1c 0591     		str	r1, [sp, #20]
 2984 0f1e 0598     		ldr	r0, [sp, #20]
 2985 0f20 1946     		mov	r1, r3
 2986 0f22 6288     		ldrh	r2, [r4, #2]
 2987 0f24 0493     		str	r3, [sp, #16]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2988              		.loc 1 961 0
 2989 0f26 C9EB0A0B 		rsb	fp, r9, sl
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 2990              		.loc 1 993 0
 2991 0f2a FFF7FEFF 		bl	GLCD_PutPixel
 2992              	.LVL343:
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, cfg->bcolor);
 2993              		.loc 1 994 0
 2994 0f2e DDF80CC0 		ldr	ip, [sp, #12]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 2995              		.loc 1 961 0
 2996 0f32 1FFA8BFB 		uxth	fp, fp
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, cfg->bcolor);
 2997              		.loc 1 994 0
 2998 0f36 6146     		mov	r1, ip
 2999 0f38 5846     		mov	r0, fp
 3000 0f3a 6288     		ldrh	r2, [r4, #2]
 3001 0f3c FFF7FEFF 		bl	GLCD_PutPixel
 3002              	.LVL344:
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 3003              		.loc 1 995 0
 3004 0f40 C7EB0A0A 		rsb	sl, r7, sl
 3005 0f44 049A     		ldr	r2, [sp, #16]
 3006 0f46 1FFA8AFA 		uxth	sl, sl
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3007              		.loc 1 961 0
 3008 0f4a C9EB0809 		rsb	r9, r9, r8
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 3009              		.loc 1 995 0
 3010 0f4e 1146     		mov	r1, r2
 3011 0f50 5046     		mov	r0, sl
 3012 0f52 6288     		ldrh	r2, [r4, #2]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3013              		.loc 1 961 0
 3014 0f54 1FFA89F9 		uxth	r9, r9
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 3015              		.loc 1 997 0
 3016 0f58 C7EB0807 		rsb	r7, r7, r8
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 3017              		.loc 1 995 0
 3018 0f5c FFF7FEFF 		bl	GLCD_PutPixel
 3019              	.LVL345:
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 3020              		.loc 1 997 0
 3021 0f60 BFB2     		uxth	r7, r7
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, cfg->bcolor);
 3022              		.loc 1 996 0
 3023 0f62 0598     		ldr	r0, [sp, #20]
 3024 0f64 4946     		mov	r1, r9
 3025 0f66 6288     		ldrh	r2, [r4, #2]
 3026 0f68 FFF7FEFF 		bl	GLCD_PutPixel
 3027              	.LVL346:
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 3028              		.loc 1 997 0
 3029 0f6c 0798     		ldr	r0, [sp, #28]
 3030 0f6e 3946     		mov	r1, r7
 3031 0f70 6288     		ldrh	r2, [r4, #2]
 3032 0f72 FFF7FEFF 		bl	GLCD_PutPixel
 3033              	.LVL347:
 998:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, cfg->bcolor);
 3034              		.loc 1 998 0
 3035 0f76 5846     		mov	r0, fp
 3036 0f78 3946     		mov	r1, r7
 3037 0f7a 6288     		ldrh	r2, [r4, #2]
 3038 0f7c FFF7FEFF 		bl	GLCD_PutPixel
 3039              	.LVL348:
 999:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, cfg->bcolor);
 3040              		.loc 1 999 0
 3041 0f80 5046     		mov	r0, sl
 3042 0f82 4946     		mov	r1, r9
 3043 0f84 6288     		ldrh	r2, [r4, #2]
 3044 0f86 FFF7FEFF 		bl	GLCD_PutPixel
 3045              	.LVL349:
 3046              	.L204:
1002:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 3047              		.loc 1 1002 0
 3048 0f8a 0698     		ldr	r0, [sp, #24]
 3049 0f8c 0104     		lsls	r1, r0, #16
 3050 0f8e 09D5     		bpl	.L205
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 3051              		.loc 1 1003 0
 3052 0f90 069A     		ldr	r2, [sp, #24]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3053              		.loc 1 961 0
 3054 0f92 A9B2     		uxth	r1, r5
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 3055              		.loc 1 1003 0
 3056 0f94 D31C     		adds	r3, r2, #3
 3057 0f96 03EB4100 		add	r0, r3, r1, lsl #1
 3058 0f9a 82B2     		uxth	r2, r0
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3059              		.loc 1 961 0
 3060 0f9c 0131     		adds	r1, r1, #1
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 3061              		.loc 1 1003 0
 3062 0f9e 0692     		str	r2, [sp, #24]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3063              		.loc 1 961 0
 3064 0fa0 88B2     		uxth	r0, r1
 3065              	.LVL350:
 3066 0fa2 0BE0     		b	.L206
 3067              	.LVL351:
 3068              	.L205:
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 3069              		.loc 1 1005 0
 3070 0fa4 0699     		ldr	r1, [sp, #24]
 3071 0fa6 33B2     		sxth	r3, r6
 3072 0fa8 E81A     		subs	r0, r5, r3
 3073 0faa 4A1D     		adds	r2, r1, #5
 3074 0fac 02EB4001 		add	r1, r2, r0, lsl #1
 3075 0fb0 8AB2     		uxth	r2, r1
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3076              		.loc 1 961 0
 3077 0fb2 6B1C     		adds	r3, r5, #1
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 3078              		.loc 1 1005 0
 3079 0fb4 013E     		subs	r6, r6, #1
 3080              	.LVL352:
 3081 0fb6 0692     		str	r2, [sp, #24]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3082              		.loc 1 961 0
 3083 0fb8 98B2     		uxth	r0, r3
 3084              	.LVL353:
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 3085              		.loc 1 1005 0
 3086 0fba B6B2     		uxth	r6, r6
 3087              	.LVL354:
 3088              	.L206:
1006:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 3089              		.loc 1 1006 0
 3090 0fbc 03B2     		sxth	r3, r0
 3091 0fbe 30B2     		sxth	r0, r6
 3092              	.LVL355:
 3093 0fc0 0135     		adds	r5, r5, #1
 3094 0fc2 8342     		cmp	r3, r0
 3095 0fc4 86DD     		ble	.L207
1007:../Source Files/lpc_ssp_glcd.c **** }
 3096              		.loc 1 1007 0
 3097 0fc6 0BB0     		add	sp, sp, #44
 3098 0fc8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 3099              		.cfi_endproc
 3100              	.LFE80:
 3102              		.align	1
 3103              		.global	GLCD_Window
 3104              		.thumb
 3105              		.thumb_func
 3107              	GLCD_Window:
 3108              	.LFB58:
 133:../Source Files/lpc_ssp_glcd.c **** {
 3109              		.loc 1 133 0
 3110              		.cfi_startproc
 3111              		@ args = 0, pretend = 0, frame = 0
 3112              		@ frame_needed = 0, uses_anonymous_args = 0
 3113              	.LVL356:
 3114 0fcc F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3115              	.LCFI24:
 3116              		.cfi_def_cfa_offset 24
 3117              		.cfi_offset 3, -24
 3118              		.cfi_offset 4, -20
 3119              		.cfi_offset 5, -16
 3120              		.cfi_offset 6, -12
 3121              		.cfi_offset 7, -8
 3122              		.cfi_offset 14, -4
 133:../Source Files/lpc_ssp_glcd.c **** {
 3123              		.loc 1 133 0
 3124 0fce 0546     		mov	r5, r0
 134:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 3125              		.loc 1 134 0
 3126 0fd0 4520     		movs	r0, #69
 3127              	.LVL357:
 133:../Source Files/lpc_ssp_glcd.c **** {
 3128              		.loc 1 133 0
 3129 0fd2 0C46     		mov	r4, r1
 3130 0fd4 1646     		mov	r6, r2
 3131 0fd6 1F46     		mov	r7, r3
 134:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 3132              		.loc 1 134 0
 3133 0fd8 FFF7FEFF 		bl	Write_Command_Glcd
 3134              	.LVL358:
 135:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 3135              		.loc 1 135 0
 3136 0fdc 2846     		mov	r0, r5
 3137 0fde FFF7FEFF 		bl	Write_Data_Glcd
 3138              	.LVL359:
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 3139              		.loc 1 138 0
 3140 0fe2 013D     		subs	r5, r5, #1
 137:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 3141              		.loc 1 137 0
 3142 0fe4 4620     		movs	r0, #70
 3143 0fe6 FFF7FEFF 		bl	Write_Command_Glcd
 3144              	.LVL360:
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 3145              		.loc 1 138 0
 3146 0fea 7019     		adds	r0, r6, r5
 3147 0fec 80B2     		uxth	r0, r0
 3148 0fee FFF7FEFF 		bl	Write_Data_Glcd
 3149              	.LVL361:
 140:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 3150              		.loc 1 140 0
 3151 0ff2 4420     		movs	r0, #68
 3152 0ff4 FFF7FEFF 		bl	Write_Command_Glcd
 3153              	.LVL362:
 141:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 3154              		.loc 1 141 0
 3155 0ff8 2046     		mov	r0, r4
 3156 0ffa FFF7FEFF 		bl	Write_Data_Glcd
 3157              	.LVL363:
 143:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 3158              		.loc 1 143 0
 3159 0ffe 4420     		movs	r0, #68
 3160 1000 FFF7FEFF 		bl	Write_Command_Glcd
 3161              	.LVL364:
 144:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 3162              		.loc 1 144 0
 3163 1004 013C     		subs	r4, r4, #1
 3164 1006 3F19     		adds	r7, r7, r4
 3165 1008 3902     		lsls	r1, r7, #8
 3166 100a 01F47F40 		and	r0, r1, #65280
 145:../Source Files/lpc_ssp_glcd.c **** }
 3167              		.loc 1 145 0
 3168 100e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 144:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 3169              		.loc 1 144 0
 3170 1012 FFF7FEBF 		b	Write_Data_Glcd
 3171              	.LVL365:
 3172              		.cfi_endproc
 3173              	.LFE58:
 3175              		.align	1
 3176              		.global	GLCD_Display_String
 3177              		.thumb
 3178              		.thumb_func
 3180              	GLCD_Display_String:
 3181              	.LFB71:
 473:../Source Files/lpc_ssp_glcd.c **** {
 3182              		.loc 1 473 0
 3183              		.cfi_startproc
 3184              		@ args = 0, pretend = 0, frame = 0
 3185              		@ frame_needed = 0, uses_anonymous_args = 0
 3186              	.LVL366:
 3187 1016 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3188              	.LCFI25:
 3189              		.cfi_def_cfa_offset 24
 3190              		.cfi_offset 3, -24
 3191              		.cfi_offset 4, -20
 3192              		.cfi_offset 5, -16
 3193              		.cfi_offset 6, -12
 3194              		.cfi_offset 7, -8
 3195              		.cfi_offset 14, -4
 473:../Source Files/lpc_ssp_glcd.c **** {
 3196              		.loc 1 473 0
 3197 1018 0746     		mov	r7, r0
 474:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 3198              		.loc 1 474 0
 3199 101a 0020     		movs	r0, #0
 3200              	.LVL367:
 473:../Source Files/lpc_ssp_glcd.c **** {
 3201              		.loc 1 473 0
 3202 101c 0E46     		mov	r6, r1
 3203 101e 1546     		mov	r5, r2
 474:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 3204              		.loc 1 474 0
 3205 1020 0146     		mov	r1, r0
 3206              	.LVL368:
 3207 1022 4FF4A072 		mov	r2, #320
 3208              	.LVL369:
 3209 1026 F023     		movs	r3, #240
 3210 1028 FFF7FEFF 		bl	GLCD_Window
 3211              	.LVL370:
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 3212              		.loc 1 475 0
 3213 102c 0024     		movs	r4, #0
 3214              	.LVL371:
 3215              	.L218:
 472:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 3216              		.loc 1 472 0 discriminator 1
 3217 102e 3119     		adds	r1, r6, r4
 3218 1030 0134     		adds	r4, r4, #1
 3219 1032 2B19     		adds	r3, r5, r4
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 3220              		.loc 1 475 0 discriminator 1
 3221 1034 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
 472:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 3222              		.loc 1 472 0 discriminator 1
 3223 1038 89B2     		uxth	r1, r1
 3224              	.LVL372:
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 3225              		.loc 1 475 0 discriminator 1
 3226 103a 1AB1     		cbz	r2, .L220
 3227              	.L219:
 3228              	.LVL373:
 477:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 3229              		.loc 1 477 0
 3230 103c 3846     		mov	r0, r7
 3231 103e FFF7FEFF 		bl	GLCD_Display_Char
 3232              	.LVL374:
 3233 1042 F4E7     		b	.L218
 3234              	.LVL375:
 3235              	.L220:
 479:../Source Files/lpc_ssp_glcd.c **** }
 3236              		.loc 1 479 0
 3237 1044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3238              		.cfi_endproc
 3239              	.LFE71:
 3241              		.align	1
 3242              		.global	GLCD_ClearLn
 3243              		.thumb
 3244              		.thumb_func
 3246              	GLCD_ClearLn:
 3247              	.LFB72:
 488:../Source Files/lpc_ssp_glcd.c **** {
 3248              		.loc 1 488 0
 3249              		.cfi_startproc
 3250              		@ args = 0, pretend = 0, frame = 0
 3251              		@ frame_needed = 0, uses_anonymous_args = 0
 3252              	.LVL376:
 3253 1046 10B5     		push	{r4, lr}
 3254              	.LCFI26:
 3255              		.cfi_def_cfa_offset 8
 3256              		.cfi_offset 4, -8
 3257              		.cfi_offset 14, -4
 488:../Source Files/lpc_ssp_glcd.c **** {
 3258              		.loc 1 488 0
 3259 1048 0446     		mov	r4, r0
 489:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 3260              		.loc 1 489 0
 3261 104a 0020     		movs	r0, #0
 3262              	.LVL377:
 3263 104c 0146     		mov	r1, r0
 3264 104e 4FF4A072 		mov	r2, #320
 3265 1052 F023     		movs	r3, #240
 3266 1054 FFF7FEFF 		bl	GLCD_Window
 3267              	.LVL378:
 490:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 3268              		.loc 1 490 0
 3269 1058 034A     		ldr	r2, .L222
 3270 105a 2046     		mov	r0, r4
 3271 105c 0021     		movs	r1, #0
 491:../Source Files/lpc_ssp_glcd.c **** }
 3272              		.loc 1 491 0
 3273 105e BDE81040 		pop	{r4, lr}
 490:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 3274              		.loc 1 490 0
 3275 1062 FFF7FEBF 		b	GLCD_Display_String
 3276              	.LVL379:
 3277              	.L223:
 3278 1066 00BF     		.align	2
 3279              	.L222:
 3280 1068 34000000 		.word	.LC6
 3281              		.cfi_endproc
 3282              	.LFE72:
 3284              		.align	1
 3285              		.global	GLCD_Clear
 3286              		.thumb
 3287              		.thumb_func
 3289              	GLCD_Clear:
 3290              	.LFB68:
 379:../Source Files/lpc_ssp_glcd.c **** {
 3291              		.loc 1 379 0
 3292              		.cfi_startproc
 3293              		@ args = 0, pretend = 0, frame = 0
 3294              		@ frame_needed = 0, uses_anonymous_args = 0
 3295              	.LVL380:
 3296 106c 38B5     		push	{r3, r4, r5, lr}
 3297              	.LCFI27:
 3298              		.cfi_def_cfa_offset 16
 3299              		.cfi_offset 3, -16
 3300              		.cfi_offset 4, -12
 3301              		.cfi_offset 5, -8
 3302              		.cfi_offset 14, -4
 379:../Source Files/lpc_ssp_glcd.c **** {
 3303              		.loc 1 379 0
 3304 106e 0546     		mov	r5, r0
 382:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 3305              		.loc 1 382 0
 3306 1070 0020     		movs	r0, #0
 3307              	.LVL381:
 3308 1072 0146     		mov	r1, r0
 3309 1074 4FF4A072 		mov	r2, #320
 3310 1078 F023     		movs	r3, #240
 3311 107a FFF7FEFF 		bl	GLCD_Window
 3312              	.LVL382:
 384:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 3313              		.loc 1 384 0
 3314 107e 4E20     		movs	r0, #78
 3315 1080 FFF7FEFF 		bl	Write_Command_Glcd
 3316              	.LVL383:
 385:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 3317              		.loc 1 385 0
 3318 1084 0020     		movs	r0, #0
 3319 1086 FFF7FEFF 		bl	Write_Data_Glcd
 3320              	.LVL384:
 387:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 3321              		.loc 1 387 0
 3322 108a 4F20     		movs	r0, #79
 3323 108c FFF7FEFF 		bl	Write_Command_Glcd
 3324              	.LVL385:
 388:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 3325              		.loc 1 388 0
 3326 1090 0020     		movs	r0, #0
 3327 1092 FFF7FEFF 		bl	Write_Data_Glcd
 3328              	.LVL386:
 390:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 3329              		.loc 1 390 0
 3330 1096 2220     		movs	r0, #34
 3331 1098 FFF7FEFF 		bl	Write_Command_Glcd
 3332              	.LVL387:
 391:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 3333              		.loc 1 391 0
 3334 109c FEF7B0FF 		bl	wr_dat_start
 3335              	.LVL388:
 3336 10a0 4FF49634 		mov	r4, #76800
 3337              	.LVL389:
 3338              	.L225:
 393:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 3339              		.loc 1 393 0 discriminator 2
 3340 10a4 2846     		mov	r0, r5
 3341 10a6 FEF7BFFF 		bl	wr_dat_only
 3342              	.LVL390:
 392:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 3343              		.loc 1 392 0 discriminator 2
 3344 10aa 013C     		subs	r4, r4, #1
 3345 10ac FAD1     		bne	.L225
 395:../Source Files/lpc_ssp_glcd.c **** }
 3346              		.loc 1 395 0
 3347 10ae BDE83840 		pop	{r3, r4, r5, lr}
 394:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 3348              		.loc 1 394 0
 3349 10b2 FEF7B3BF 		b	wr_dat_stop
 3350              	.LVL391:
 3351              		.cfi_endproc
 3352              	.LFE68:
 3354              		.align	1
 3355              		.global	GLCD_Set_Loc
 3356              		.thumb
 3357              		.thumb_func
 3359              	GLCD_Set_Loc:
 3360              	.LFB59:
 157:../Source Files/lpc_ssp_glcd.c **** {
 3361              		.loc 1 157 0
 3362              		.cfi_startproc
 3363              		@ args = 0, pretend = 0, frame = 0
 3364              		@ frame_needed = 0, uses_anonymous_args = 0
 3365              	.LVL392:
 3366 10b6 38B5     		push	{r3, r4, r5, lr}
 3367              	.LCFI28:
 3368              		.cfi_def_cfa_offset 16
 3369              		.cfi_offset 3, -16
 3370              		.cfi_offset 4, -12
 3371              		.cfi_offset 5, -8
 3372              		.cfi_offset 14, -4
 157:../Source Files/lpc_ssp_glcd.c **** {
 3373              		.loc 1 157 0
 3374 10b8 0C46     		mov	r4, r1
 3375 10ba 0546     		mov	r5, r0
 158:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 3376              		.loc 1 158 0
 3377 10bc FFF7FEFF 		bl	GLCD_Window
 3378              	.LVL393:
 160:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 3379              		.loc 1 160 0
 3380 10c0 4E20     		movs	r0, #78
 3381 10c2 FFF7FEFF 		bl	Write_Command_Glcd
 3382              	.LVL394:
 161:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 3383              		.loc 1 161 0
 3384 10c6 2846     		mov	r0, r5
 3385 10c8 FFF7FEFF 		bl	Write_Data_Glcd
 3386              	.LVL395:
 163:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 3387              		.loc 1 163 0
 3388 10cc 4F20     		movs	r0, #79
 3389 10ce FFF7FEFF 		bl	Write_Command_Glcd
 3390              	.LVL396:
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 3391              		.loc 1 164 0
 3392 10d2 2046     		mov	r0, r4
 3393 10d4 FFF7FEFF 		bl	Write_Data_Glcd
 3394              	.LVL397:
 166:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 3395              		.loc 1 166 0
 3396 10d8 2220     		movs	r0, #34
 167:../Source Files/lpc_ssp_glcd.c **** }
 3397              		.loc 1 167 0
 3398 10da BDE83840 		pop	{r3, r4, r5, lr}
 166:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 3399              		.loc 1 166 0
 3400 10de FFF7FEBF 		b	Write_Command_Glcd
 3401              	.LVL398:
 3402              		.cfi_endproc
 3403              	.LFE59:
 3405              		.align	1
 3406              		.global	GLCD_Window_Fill
 3407              		.thumb
 3408              		.thumb_func
 3410              	GLCD_Window_Fill:
 3411              	.LFB75:
 591:../Source Files/lpc_ssp_glcd.c **** {
 3412              		.loc 1 591 0
 3413              		.cfi_startproc
 3414              		@ args = 4, pretend = 0, frame = 0
 3415              		@ frame_needed = 0, uses_anonymous_args = 0
 3416              	.LVL399:
 3417 10e2 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3418              	.LCFI29:
 3419              		.cfi_def_cfa_offset 24
 3420              		.cfi_offset 4, -24
 3421              		.cfi_offset 5, -20
 3422              		.cfi_offset 6, -16
 3423              		.cfi_offset 7, -12
 3424              		.cfi_offset 8, -8
 3425              		.cfi_offset 14, -4
 591:../Source Files/lpc_ssp_glcd.c **** {
 3426              		.loc 1 591 0
 3427 10e6 1746     		mov	r7, r2
 3428 10e8 1E46     		mov	r6, r3
 3429 10ea BDF81880 		ldrh	r8, [sp, #24]
 594:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 3430              		.loc 1 594 0
 3431 10ee FFF7FEFF 		bl	GLCD_Set_Loc
 3432              	.LVL400:
 596:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 3433              		.loc 1 596 0
 3434 10f2 FEF785FF 		bl	wr_dat_start
 3435              	.LVL401:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3436              		.loc 1 597 0
 3437 10f6 0024     		movs	r4, #0
 3438              	.LVL402:
 3439              	.L229:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3440              		.loc 1 597 0 is_stmt 0 discriminator 1
 3441 10f8 B442     		cmp	r4, r6
 3442 10fa 09D2     		bcs	.L233
 3443              	.L232:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3444              		.loc 1 597 0
 3445 10fc 0025     		movs	r5, #0
 3446              	.L231:
 3447              	.LVL403:
 599:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 3448              		.loc 1 599 0 is_stmt 1 discriminator 1
 3449 10fe BD42     		cmp	r5, r7
 3450 1100 04D2     		bcs	.L234
 3451              	.L230:
 601:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 3452              		.loc 1 601 0 discriminator 2
 3453 1102 4046     		mov	r0, r8
 3454 1104 FEF790FF 		bl	wr_dat_only
 3455              	.LVL404:
 599:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 3456              		.loc 1 599 0 discriminator 2
 3457 1108 0135     		adds	r5, r5, #1
 3458              	.LVL405:
 3459 110a F8E7     		b	.L231
 3460              	.L234:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3461              		.loc 1 597 0
 3462 110c 0134     		adds	r4, r4, #1
 3463              	.LVL406:
 3464 110e F3E7     		b	.L229
 3465              	.LVL407:
 3466              	.L233:
 605:../Source Files/lpc_ssp_glcd.c **** }
 3467              		.loc 1 605 0
 3468 1110 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 604:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 3469              		.loc 1 604 0
 3470 1114 FEF782BF 		b	wr_dat_stop
 3471              	.LVL408:
 3472              		.cfi_endproc
 3473              	.LFE75:
 3475              		.align	1
 3476              		.global	GLCD_Bar
 3477              		.thumb
 3478              		.thumb_func
 3480              	GLCD_Bar:
 3481              	.LFB82:
1064:../Source Files/lpc_ssp_glcd.c **** {
 3482              		.loc 1 1064 0
 3483              		.cfi_startproc
 3484              		@ args = 0, pretend = 0, frame = 0
 3485              		@ frame_needed = 0, uses_anonymous_args = 0
 3486              	.LVL409:
1073:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
 3487              		.loc 1 1073 0
 3488 1118 642A     		cmp	r2, #100
1064:../Source Files/lpc_ssp_glcd.c **** {
 3489              		.loc 1 1064 0
 3490 111a 37B5     		push	{r0, r1, r2, r4, r5, lr}
 3491              	.LCFI30:
 3492              		.cfi_def_cfa_offset 24
 3493              		.cfi_offset 0, -24
 3494              		.cfi_offset 1, -20
 3495              		.cfi_offset 2, -16
 3496              		.cfi_offset 4, -12
 3497              		.cfi_offset 5, -8
 3498              		.cfi_offset 14, -4
1064:../Source Files/lpc_ssp_glcd.c **** {
 3499              		.loc 1 1064 0
 3500 111c 0C46     		mov	r4, r1
 3501 111e 1D46     		mov	r5, r3
1073:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
 3502              		.loc 1 1073 0
 3503 1120 12DC     		bgt	.L235
1073:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
 3504              		.loc 1 1073 0 is_stmt 0 discriminator 1
 3505 1122 0A28     		cmp	r0, #10
 3506 1124 10DC     		bgt	.L235
1075:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Window_Fill(30+(index*26)-(width-(width/2)),220-(per*2),width,per*2,color);
 3507              		.loc 1 1075 0 is_stmt 1
 3508 1126 1A23     		movs	r3, #26
 3509              	.LVL410:
 3510 1128 5843     		muls	r0, r3, r0
 3511              	.LVL411:
 3512 112a 1E30     		adds	r0, r0, #30
 3513 112c 00EB5100 		add	r0, r0, r1, lsr #1
 3514 1130 401A     		subs	r0, r0, r1
 3515 1132 C2F16E01 		rsb	r1, r2, #110
 3516              	.LVL412:
 3517 1136 4B00     		lsls	r3, r1, #1
 3518 1138 5200     		lsls	r2, r2, #1
 3519              	.LVL413:
 3520 113a 99B2     		uxth	r1, r3
 3521 113c 0095     		str	r5, [sp, #0]
 3522 113e 93B2     		uxth	r3, r2
 3523 1140 80B2     		uxth	r0, r0
 3524 1142 2246     		mov	r2, r4
 3525 1144 FFF7FEFF 		bl	GLCD_Window_Fill
 3526              	.LVL414:
 3527              	.L235:
1077:../Source Files/lpc_ssp_glcd.c **** }
 3528              		.loc 1 1077 0
 3529 1148 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 3530              		.cfi_endproc
 3531              	.LFE82:
 3533              		.align	1
 3534              		.global	GLCD_Rect
 3535              		.thumb
 3536              		.thumb_func
 3538              	GLCD_Rect:
 3539              	.LFB77:
 691:../Source Files/lpc_ssp_glcd.c **** {
 3540              		.loc 1 691 0
 3541              		.cfi_startproc
 3542              		@ args = 4, pretend = 0, frame = 0
 3543              		@ frame_needed = 0, uses_anonymous_args = 0
 3544              	.LVL415:
 3545 114a 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3546              	.LCFI31:
 3547              		.cfi_def_cfa_offset 32
 3548              		.cfi_offset 0, -32
 3549              		.cfi_offset 1, -28
 3550              		.cfi_offset 4, -24
 3551              		.cfi_offset 5, -20
 3552              		.cfi_offset 6, -16
 3553              		.cfi_offset 7, -12
 3554              		.cfi_offset 8, -8
 3555              		.cfi_offset 14, -4
 691:../Source Files/lpc_ssp_glcd.c **** {
 3556              		.loc 1 691 0
 3557 114e 0C46     		mov	r4, r1
 3558 1150 0546     		mov	r5, r0
 3559 1152 9846     		mov	r8, r3
 3560 1154 BDF82010 		ldrh	r1, [sp, #32]
 3561              	.LVL416:
 694:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 3562              		.loc 1 694 0
 3563 1158 002A     		cmp	r2, #0
 3564 115a 41D0     		beq	.L238
 696:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 3565              		.loc 1 696 0
 3566 115c B0F800E0 		ldrh	lr, [r0, #0]
 3567 1160 2288     		ldrh	r2, [r4, #0]
 3568              	.LVL417:
 3569 1162 0FFA8EF3 		sxth	r3, lr
 3570              	.LVL418:
 3571 1166 10B2     		sxth	r0, r2
 3572              	.LVL419:
 3573 1168 6788     		ldrh	r7, [r4, #2]
 3574 116a 6E88     		ldrh	r6, [r5, #2]
 3575 116c 9842     		cmp	r0, r3
 698:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 3576              		.loc 1 698 0
 3577 116e 38B2     		sxth	r0, r7
 3578 1170 33B2     		sxth	r3, r6
 696:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 3579              		.loc 1 696 0
 3580 1172 13DD     		ble	.L239
 698:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 3581              		.loc 1 698 0
 3582 1174 9842     		cmp	r0, r3
 3583 1176 1FFA8EFC 		uxth	ip, lr
 3584 117a 07DD     		ble	.L240
 3585              	.LVL420:
 701:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 3586              		.loc 1 701 0
 3587 117c B6B2     		uxth	r6, r6
 3588              	.LVL421:
 700:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 3589              		.loc 1 700 0
 3590 117e 013A     		subs	r2, r2, #1
 3591              	.LVL422:
 702:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 3592              		.loc 1 702 0
 3593 1180 0CF10100 		add	r0, ip, #1
 3594 1184 731C     		adds	r3, r6, #1
 3595 1186 CCEB0202 		rsb	r2, ip, r2
 3596              	.LVL423:
 3597 118a 11E0     		b	.L247
 3598              	.LVL424:
 3599              	.L240:
 707:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 3600              		.loc 1 707 0
 3601 118c BFB2     		uxth	r7, r7
 3602              	.LVL425:
 706:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 3603              		.loc 1 706 0
 3604 118e 013A     		subs	r2, r2, #1
 3605              	.LVL426:
 708:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 3606              		.loc 1 708 0
 3607 1190 0CF10100 		add	r0, ip, #1
 3608 1194 7B1C     		adds	r3, r7, #1
 3609 1196 CCEB0202 		rsb	r2, ip, r2
 3610 119a 18E0     		b	.L245
 3611              	.LVL427:
 3612              	.L239:
 713:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 3613              		.loc 1 713 0
 3614 119c 9842     		cmp	r0, r3
 3615 119e 92B2     		uxth	r2, r2
 3616 11a0 0EDD     		ble	.L241
 3617              	.LVL428:
 716:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 3618              		.loc 1 716 0
 3619 11a2 B6B2     		uxth	r6, r6
 3620              	.LVL429:
 715:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 3621              		.loc 1 715 0
 3622 11a4 0EF1FF3E 		add	lr, lr, #-1
 3623              	.LVL430:
 717:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 3624              		.loc 1 717 0
 3625 11a8 501C     		adds	r0, r2, #1
 3626 11aa 731C     		adds	r3, r6, #1
 3627 11ac C2EB0E02 		rsb	r2, r2, lr
 3628              	.LVL431:
 3629              	.L247:
 716:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 3630              		.loc 1 716 0
 3631 11b0 013F     		subs	r7, r7, #1
 717:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 3632              		.loc 1 717 0
 3633 11b2 BE1B     		subs	r6, r7, r6
 3634 11b4 0091     		str	r1, [sp, #0]
 3635 11b6 80B2     		uxth	r0, r0
 3636 11b8 99B2     		uxth	r1, r3
 3637 11ba 92B2     		uxth	r2, r2
 3638 11bc B3B2     		uxth	r3, r6
 3639 11be 0DE0     		b	.L246
 3640              	.L241:
 3641              	.LVL432:
 722:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 3642              		.loc 1 722 0
 3643 11c0 BFB2     		uxth	r7, r7
 3644              	.LVL433:
 721:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 3645              		.loc 1 721 0
 3646 11c2 0EF1FF3C 		add	ip, lr, #-1
 723:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 3647              		.loc 1 723 0
 3648 11c6 501C     		adds	r0, r2, #1
 3649 11c8 7B1C     		adds	r3, r7, #1
 3650 11ca C2EB0C02 		rsb	r2, r2, ip
 3651              	.LVL434:
 3652              	.L245:
 722:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 3653              		.loc 1 722 0
 3654 11ce 013E     		subs	r6, r6, #1
 723:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 3655              		.loc 1 723 0
 3656 11d0 F71B     		subs	r7, r6, r7
 3657 11d2 0091     		str	r1, [sp, #0]
 3658 11d4 80B2     		uxth	r0, r0
 3659 11d6 99B2     		uxth	r1, r3
 3660 11d8 92B2     		uxth	r2, r2
 3661 11da BBB2     		uxth	r3, r7
 3662              	.L246:
 3663 11dc FFF7FEFF 		bl	GLCD_Window_Fill
 3664              	.LVL435:
 3665              	.L238:
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 3666              		.loc 1 730 0
 3667 11e0 B5F90210 		ldrsh	r1, [r5, #2]
 3668 11e4 B5F90000 		ldrsh	r0, [r5, #0]
 3669 11e8 B4F90020 		ldrsh	r2, [r4, #0]
 3670 11ec 0B46     		mov	r3, r1
 3671 11ee CDF80080 		str	r8, [sp, #0]
 3672 11f2 FFF7FEFF 		bl	GLCD_Line
 3673              	.LVL436:
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 3674              		.loc 1 731 0
 3675 11f6 B4F90210 		ldrsh	r1, [r4, #2]
 3676 11fa B5F90000 		ldrsh	r0, [r5, #0]
 3677 11fe B4F90020 		ldrsh	r2, [r4, #0]
 3678 1202 0B46     		mov	r3, r1
 3679 1204 CDF80080 		str	r8, [sp, #0]
 3680 1208 FFF7FEFF 		bl	GLCD_Line
 3681              	.LVL437:
 732:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 3682              		.loc 1 732 0
 3683 120c B5F90000 		ldrsh	r0, [r5, #0]
 3684 1210 B5F90210 		ldrsh	r1, [r5, #2]
 3685 1214 B4F90230 		ldrsh	r3, [r4, #2]
 3686 1218 0246     		mov	r2, r0
 3687 121a CDF80080 		str	r8, [sp, #0]
 3688 121e FFF7FEFF 		bl	GLCD_Line
 3689              	.LVL438:
 733:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 3690              		.loc 1 733 0
 3691 1222 B4F90000 		ldrsh	r0, [r4, #0]
 3692 1226 B5F90210 		ldrsh	r1, [r5, #2]
 3693 122a B4F90230 		ldrsh	r3, [r4, #2]
 3694 122e 0246     		mov	r2, r0
 3695 1230 CDF82080 		str	r8, [sp, #32]
 735:../Source Files/lpc_ssp_glcd.c **** }
 3696              		.loc 1 735 0
 3697 1234 02B0     		add	sp, sp, #8
 3698 1236 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 733:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 3699              		.loc 1 733 0
 3700 123a FFF7FEBF 		b	GLCD_Line
 3701              	.LVL439:
 3702              		.cfi_endproc
 3703              	.LFE77:
 3705              		.align	1
 3706              		.global	GLCD_Bitmap
 3707              		.thumb
 3708              		.thumb_func
 3710              	GLCD_Bitmap:
 3711              	.LFB74:
 560:../Source Files/lpc_ssp_glcd.c **** {
 3712              		.loc 1 560 0
 3713              		.cfi_startproc
 3714              		@ args = 4, pretend = 0, frame = 0
 3715              		@ frame_needed = 0, uses_anonymous_args = 0
 3716              	.LVL440:
 3717 123e 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 3718              	.LCFI32:
 3719              		.cfi_def_cfa_offset 32
 3720              		.cfi_offset 4, -32
 3721              		.cfi_offset 5, -28
 3722              		.cfi_offset 6, -24
 3723              		.cfi_offset 7, -20
 3724              		.cfi_offset 8, -16
 3725              		.cfi_offset 9, -12
 3726              		.cfi_offset 10, -8
 3727              		.cfi_offset 14, -4
 560:../Source Files/lpc_ssp_glcd.c **** {
 3728              		.loc 1 560 0
 3729 1242 DDF82080 		ldr	r8, [sp, #32]
 3730 1246 1746     		mov	r7, r2
 3731 1248 9946     		mov	r9, r3
 563:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 3732              		.loc 1 563 0
 3733 124a FFF7FEFF 		bl	GLCD_Set_Loc
 3734              	.LVL441:
 565:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 3735              		.loc 1 565 0
 3736 124e FEF7D7FE 		bl	wr_dat_start
 3737              	.LVL442:
 566:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 3738              		.loc 1 566 0
 3739 1252 1025     		movs	r5, #16
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3740              		.loc 1 567 0
 3741 1254 0026     		movs	r6, #0
 3742              	.LVL443:
 3743              	.L249:
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3744              		.loc 1 567 0 is_stmt 0 discriminator 1
 3745 1256 4E45     		cmp	r6, r9
 3746 1258 0DD2     		bcs	.L251
 559:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 3747              		.loc 1 559 0 is_stmt 1
 3748 125a 08EB450A 		add	sl, r8, r5, lsl #1
 3749 125e 0024     		movs	r4, #0
 3750              	.LVL444:
 3751              	.L252:
 569:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 3752              		.loc 1 569 0 discriminator 1
 3753 1260 BC42     		cmp	r4, r7
 3754 1262 05D2     		bcs	.L253
 3755              	.L250:
 571:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 3756              		.loc 1 571 0 discriminator 2
 3757 1264 3AF81400 		ldrh	r0, [sl, r4, lsl #1]
 3758 1268 FEF7DEFE 		bl	wr_dat_only
 3759              	.LVL445:
 569:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 3760              		.loc 1 569 0 discriminator 2
 3761 126c 0134     		adds	r4, r4, #1
 3762              	.LVL446:
 3763 126e F7E7     		b	.L252
 3764              	.L253:
 559:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 3765              		.loc 1 559 0
 3766 1270 ED19     		adds	r5, r5, r7
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 3767              		.loc 1 567 0
 3768 1272 0136     		adds	r6, r6, #1
 3769              	.LVL447:
 3770 1274 EFE7     		b	.L249
 3771              	.LVL448:
 3772              	.L251:
 575:../Source Files/lpc_ssp_glcd.c **** }
 3773              		.loc 1 575 0
 3774 1276 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 574:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 3775              		.loc 1 574 0
 3776 127a FEF7CFBE 		b	wr_dat_stop
 3777              	.LVL449:
 3778              		.cfi_endproc
 3779              	.LFE74:
 3781              		.align	1
 3782              		.global	GLCD_Display_Home
 3783              		.thumb
 3784              		.thumb_func
 3786              	GLCD_Display_Home:
 3787              	.LFB60:
 176:../Source Files/lpc_ssp_glcd.c **** {
 3788              		.loc 1 176 0
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 0
 3791              		@ frame_needed = 0, uses_anonymous_args = 0
 3792              		@ link register save eliminated.
 177:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 3793              		.loc 1 177 0
 3794 127e 0020     		movs	r0, #0
 3795 1280 0146     		mov	r1, r0
 3796 1282 4FF4A072 		mov	r2, #320
 3797 1286 F023     		movs	r3, #240
 178:../Source Files/lpc_ssp_glcd.c **** }
 3798              		.loc 1 178 0
 177:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 3799              		.loc 1 177 0
 3800 1288 FFF7FEBF 		b	GLCD_Set_Loc
 3801              	.LVL450:
 3802              		.cfi_endproc
 3803              	.LFE60:
 3805              		.align	1
 3806              		.global	GLCD_Driver_OutCtrl
 3807              		.thumb
 3808              		.thumb_func
 3810              	GLCD_Driver_OutCtrl:
 3811              	.LFB57:
  96:../Source Files/lpc_ssp_glcd.c **** {
 3812              		.loc 1 96 0
 3813              		.cfi_startproc
 3814              		@ args = 0, pretend = 0, frame = 0
 3815              		@ frame_needed = 0, uses_anonymous_args = 0
 3816              	.LVL451:
 3817 128c 10B5     		push	{r4, lr}
 3818              	.LCFI33:
 3819              		.cfi_def_cfa_offset 8
 3820              		.cfi_offset 4, -8
 3821              		.cfi_offset 14, -4
  96:../Source Files/lpc_ssp_glcd.c **** {
 3822              		.loc 1 96 0
 3823 128e 0446     		mov	r4, r0
  97:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
 3824              		.loc 1 97 0
 3825 1290 0120     		movs	r0, #1
 3826              	.LVL452:
 3827 1292 FFF7FEFF 		bl	Write_Command_Glcd
 3828              	.LVL453:
  99:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
 3829              		.loc 1 99 0
 3830 1296 032C     		cmp	r4, #3
 3831 1298 12D8     		bhi	.L255
 3832 129a DFE804F0 		tbb	[pc, r4]
 3833              	.L261:
 3834 129e 02       		.byte	(.L257-.L261)/2
 3835 129f 05       		.byte	(.L258-.L261)/2
 3836 12a0 08       		.byte	(.L259-.L261)/2
 3837 12a1 0B       		.byte	(.L260-.L261)/2
 3838              		.align	1
 3839              	.L257:
 102:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 3840              		.loc 1 102 0
 3841 12a2 47F2EF20 		movw	r0, #29423
 3842 12a6 07E0     		b	.L262
 3843              	.L258:
 106:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 3844              		.loc 1 106 0
 3845 12a8 47F2EF00 		movw	r0, #28911
 3846 12ac 04E0     		b	.L262
 3847              	.L259:
 110:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 3848              		.loc 1 110 0
 3849 12ae 43F2EF20 		movw	r0, #13039
 3850 12b2 01E0     		b	.L262
 3851              	.L260:
 114:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 3852              		.loc 1 114 0
 3853 12b4 43F2EF00 		movw	r0, #12527
 3854              	.L262:
 120:../Source Files/lpc_ssp_glcd.c **** }
 3855              		.loc 1 120 0
 3856 12b8 BDE81040 		pop	{r4, lr}
 114:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 3857              		.loc 1 114 0
 3858 12bc FFF7FEBF 		b	Write_Data_Glcd
 3859              	.LVL454:
 3860              	.L255:
 3861 12c0 10BD     		pop	{r4, pc}
 3862              		.cfi_endproc
 3863              	.LFE57:
 3865              		.align	1
 3866              		.global	GLCD_Init
 3867              		.thumb
 3868              		.thumb_func
 3870              	GLCD_Init:
 3871              	.LFB61:
 187:../Source Files/lpc_ssp_glcd.c **** {
 3872              		.loc 1 187 0
 3873              		.cfi_startproc
 3874              		@ args = 0, pretend = 0, frame = 0
 3875              		@ frame_needed = 0, uses_anonymous_args = 0
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 3876              		.loc 1 188 0
 3877 12c2 0121     		movs	r1, #1
 187:../Source Files/lpc_ssp_glcd.c **** {
 3878              		.loc 1 187 0
 3879 12c4 10B5     		push	{r4, lr}
 3880              	.LCFI34:
 3881              		.cfi_def_cfa_offset 8
 3882              		.cfi_offset 4, -8
 3883              		.cfi_offset 14, -4
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 3884              		.loc 1 188 0
 3885 12c6 0220     		movs	r0, #2
 3886 12c8 0A46     		mov	r2, r1
 3887 12ca FFF7FEFF 		bl	GPIO_SetDir
 3888              	.LVL455:
 189:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 3889              		.loc 1 189 0
 3890 12ce 0020     		movs	r0, #0
 3891 12d0 2021     		movs	r1, #32
 3892 12d2 0122     		movs	r2, #1
 3893 12d4 FFF7FEFF 		bl	GPIO_SetDir
 3894              	.LVL456:
 190:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 3895              		.loc 1 190 0
 3896 12d8 4FF48071 		mov	r1, #256
 3897 12dc 0122     		movs	r2, #1
 3898 12de 0220     		movs	r0, #2
 3899 12e0 FFF7FEFF 		bl	GPIO_SetDir
 3900              	.LVL457:
 192:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 3901              		.loc 1 192 0
 3902 12e4 0220     		movs	r0, #2
 3903 12e6 FFF7FEFF 		bl	delay_ms
 3904              	.LVL458:
 193:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 3905              		.loc 1 193 0
 3906 12ea FFF7FEFF 		bl	GLCD_Reset
 3907              	.LVL459:
 194:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 3908              		.loc 1 194 0
 3909 12ee 0120     		movs	r0, #1
 3910 12f0 FFF7FEFF 		bl	GLCD_Backlight
 3911              	.LVL460:
 195:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 3912              		.loc 1 195 0
 3913 12f4 0220     		movs	r0, #2
 3914 12f6 FFF7FEFF 		bl	delay_ms
 3915              	.LVL461:
 197:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 3916              		.loc 1 197 0
 3917 12fa 2820     		movs	r0, #40
 3918 12fc FFF7FEFF 		bl	Write_Command_Glcd
 3919              	.LVL462:
 198:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 3920              		.loc 1 198 0
 3921 1300 0620     		movs	r0, #6
 3922 1302 FFF7FEFF 		bl	Write_Data_Glcd
 3923              	.LVL463:
 200:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 3924              		.loc 1 200 0
 3925 1306 0020     		movs	r0, #0
 3926 1308 FFF7FEFF 		bl	Write_Command_Glcd
 3927              	.LVL464:
 201:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 3928              		.loc 1 201 0
 3929 130c 0120     		movs	r0, #1
 3930 130e FFF7FEFF 		bl	Write_Data_Glcd
 3931              	.LVL465:
 203:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 3932              		.loc 1 203 0
 3933 1312 1020     		movs	r0, #16
 3934 1314 FFF7FEFF 		bl	Write_Command_Glcd
 3935              	.LVL466:
 204:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 3936              		.loc 1 204 0
 3937 1318 0020     		movs	r0, #0
 3938 131a FFF7FEFF 		bl	Write_Data_Glcd
 3939              	.LVL467:
 206:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 3940              		.loc 1 206 0
 3941 131e 0020     		movs	r0, #0
 3942 1320 FFF7FEFF 		bl	GLCD_Driver_OutCtrl
 3943              	.LVL468:
 208:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 3944              		.loc 1 208 0
 3945 1324 0220     		movs	r0, #2
 3946 1326 FFF7FEFF 		bl	Write_Command_Glcd
 3947              	.LVL469:
 209:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 3948              		.loc 1 209 0
 3949 132a 4FF4C060 		mov	r0, #1536
 3950 132e FFF7FEFF 		bl	Write_Data_Glcd
 3951              	.LVL470:
 211:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 3952              		.loc 1 211 0
 3953 1332 0320     		movs	r0, #3
 3954 1334 FFF7FEFF 		bl	Write_Command_Glcd
 3955              	.LVL471:
 212:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 3956              		.loc 1 212 0
 3957 1338 46F63820 		movw	r0, #27192
 3958 133c FFF7FEFF 		bl	Write_Data_Glcd
 3959              	.LVL472:
 214:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 3960              		.loc 1 214 0
 3961 1340 1120     		movs	r0, #17
 3962 1342 FFF7FEFF 		bl	Write_Command_Glcd
 3963              	.LVL473:
 215:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 3964              		.loc 1 215 0
 3965 1346 46F67000 		movw	r0, #26736
 3966 134a FFF7FEFF 		bl	Write_Data_Glcd
 3967              	.LVL474:
 217:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 3968              		.loc 1 217 0
 3969 134e 0F20     		movs	r0, #15
 3970 1350 FFF7FEFF 		bl	Write_Command_Glcd
 3971              	.LVL475:
 218:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 3972              		.loc 1 218 0
 3973 1354 0020     		movs	r0, #0
 3974 1356 FFF7FEFF 		bl	Write_Data_Glcd
 3975              	.LVL476:
 220:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 3976              		.loc 1 220 0
 3977 135a 0B20     		movs	r0, #11
 3978 135c FFF7FEFF 		bl	Write_Command_Glcd
 3979              	.LVL477:
 221:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 3980              		.loc 1 221 0
 3981 1360 45F20830 		movw	r0, #21256
 3982 1364 FFF7FEFF 		bl	Write_Data_Glcd
 3983              	.LVL478:
 223:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 3984              		.loc 1 223 0
 3985 1368 0C20     		movs	r0, #12
 3986 136a FFF7FEFF 		bl	Write_Command_Glcd
 3987              	.LVL479:
 224:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 3988              		.loc 1 224 0
 3989 136e 0320     		movs	r0, #3
 3990 1370 FFF7FEFF 		bl	Write_Data_Glcd
 3991              	.LVL480:
 226:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 3992              		.loc 1 226 0
 3993 1374 0D20     		movs	r0, #13
 3994 1376 FFF7FEFF 		bl	Write_Command_Glcd
 3995              	.LVL481:
 227:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 3996              		.loc 1 227 0
 3997 137a 0A20     		movs	r0, #10
 3998 137c FFF7FEFF 		bl	Write_Data_Glcd
 3999              	.LVL482:
 229:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 4000              		.loc 1 229 0
 4001 1380 0E20     		movs	r0, #14
 4002 1382 FFF7FEFF 		bl	Write_Command_Glcd
 4003              	.LVL483:
 230:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 4004              		.loc 1 230 0
 4005 1386 4FF43850 		mov	r0, #11776
 4006 138a FFF7FEFF 		bl	Write_Data_Glcd
 4007              	.LVL484:
 232:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 4008              		.loc 1 232 0
 4009 138e 1E20     		movs	r0, #30
 4010 1390 FFF7FEFF 		bl	Write_Command_Glcd
 4011              	.LVL485:
 233:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 4012              		.loc 1 233 0
 4013 1394 BE20     		movs	r0, #190
 4014 1396 FFF7FEFF 		bl	Write_Data_Glcd
 4015              	.LVL486:
 235:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 4016              		.loc 1 235 0
 4017 139a 2520     		movs	r0, #37
 4018 139c FFF7FEFF 		bl	Write_Command_Glcd
 4019              	.LVL487:
 236:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 4020              		.loc 1 236 0
 4021 13a0 4FF40040 		mov	r0, #32768
 4022 13a4 FFF7FEFF 		bl	Write_Data_Glcd
 4023              	.LVL488:
 238:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 4024              		.loc 1 238 0
 4025 13a8 2620     		movs	r0, #38
 4026 13aa FFF7FEFF 		bl	Write_Command_Glcd
 4027              	.LVL489:
 239:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 4028              		.loc 1 239 0
 4029 13ae 4FF4F040 		mov	r0, #30720
 4030 13b2 FFF7FEFF 		bl	Write_Data_Glcd
 4031              	.LVL490:
 241:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 4032              		.loc 1 241 0
 4033 13b6 4E20     		movs	r0, #78
 4034 13b8 FFF7FEFF 		bl	Write_Command_Glcd
 4035              	.LVL491:
 242:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 4036              		.loc 1 242 0
 4037 13bc 0020     		movs	r0, #0
 4038 13be FFF7FEFF 		bl	Write_Data_Glcd
 4039              	.LVL492:
 244:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 4040              		.loc 1 244 0
 4041 13c2 4F20     		movs	r0, #79
 4042 13c4 FFF7FEFF 		bl	Write_Command_Glcd
 4043              	.LVL493:
 245:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 4044              		.loc 1 245 0
 4045 13c8 0020     		movs	r0, #0
 4046 13ca FFF7FEFF 		bl	Write_Data_Glcd
 4047              	.LVL494:
 247:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 4048              		.loc 1 247 0
 4049 13ce 1220     		movs	r0, #18
 4050 13d0 FFF7FEFF 		bl	Write_Command_Glcd
 4051              	.LVL495:
 248:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 4052              		.loc 1 248 0
 4053 13d4 40F6D900 		movw	r0, #2265
 4054 13d8 FFF7FEFF 		bl	Write_Data_Glcd
 4055              	.LVL496:
 251:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 4056              		.loc 1 251 0
 4057 13dc 3020     		movs	r0, #48
 4058 13de FFF7FEFF 		bl	Write_Command_Glcd
 4059              	.LVL497:
 252:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 4060              		.loc 1 252 0
 4061 13e2 0020     		movs	r0, #0
 4062 13e4 FFF7FEFF 		bl	Write_Data_Glcd
 4063              	.LVL498:
 254:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 4064              		.loc 1 254 0
 4065 13e8 3120     		movs	r0, #49
 4066 13ea FFF7FEFF 		bl	Write_Command_Glcd
 4067              	.LVL499:
 255:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 4068              		.loc 1 255 0
 4069 13ee 4FF48270 		mov	r0, #260
 4070 13f2 FFF7FEFF 		bl	Write_Data_Glcd
 4071              	.LVL500:
 257:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 4072              		.loc 1 257 0
 4073 13f6 3220     		movs	r0, #50
 4074 13f8 FFF7FEFF 		bl	Write_Command_Glcd
 4075              	.LVL501:
 258:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 4076              		.loc 1 258 0
 4077 13fc 4FF48070 		mov	r0, #256
 4078 1400 FFF7FEFF 		bl	Write_Data_Glcd
 4079              	.LVL502:
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 4080              		.loc 1 261 0
 4081 1404 40F20534 		movw	r4, #773
 260:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 4082              		.loc 1 260 0
 4083 1408 3320     		movs	r0, #51
 4084 140a FFF7FEFF 		bl	Write_Command_Glcd
 4085              	.LVL503:
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 4086              		.loc 1 261 0
 4087 140e 2046     		mov	r0, r4
 4088 1410 FFF7FEFF 		bl	Write_Data_Glcd
 4089              	.LVL504:
 263:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 4090              		.loc 1 263 0
 4091 1414 3420     		movs	r0, #52
 4092 1416 FFF7FEFF 		bl	Write_Command_Glcd
 4093              	.LVL505:
 264:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 4094              		.loc 1 264 0
 4095 141a 40F20550 		movw	r0, #1285
 4096 141e FFF7FEFF 		bl	Write_Data_Glcd
 4097              	.LVL506:
 266:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 4098              		.loc 1 266 0
 4099 1422 3520     		movs	r0, #53
 4100 1424 FFF7FEFF 		bl	Write_Command_Glcd
 4101              	.LVL507:
 267:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 4102              		.loc 1 267 0
 4103 1428 2046     		mov	r0, r4
 4104 142a FFF7FEFF 		bl	Write_Data_Glcd
 4105              	.LVL508:
 269:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 4106              		.loc 1 269 0
 4107 142e 3620     		movs	r0, #54
 4108 1430 FFF7FEFF 		bl	Write_Command_Glcd
 4109              	.LVL509:
 270:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 4110              		.loc 1 270 0
 4111 1434 40F20770 		movw	r0, #1799
 4112 1438 FFF7FEFF 		bl	Write_Data_Glcd
 4113              	.LVL510:
 272:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 4114              		.loc 1 272 0
 4115 143c 3720     		movs	r0, #55
 4116 143e FFF7FEFF 		bl	Write_Command_Glcd
 4117              	.LVL511:
 273:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 4118              		.loc 1 273 0
 4119 1442 4FF44070 		mov	r0, #768
 4120 1446 FFF7FEFF 		bl	Write_Data_Glcd
 4121              	.LVL512:
 275:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 4122              		.loc 1 275 0
 4123 144a 3A20     		movs	r0, #58
 4124 144c FFF7FEFF 		bl	Write_Command_Glcd
 4125              	.LVL513:
 276:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 4126              		.loc 1 276 0
 4127 1450 4FF49050 		mov	r0, #4608
 4128 1454 FFF7FEFF 		bl	Write_Data_Glcd
 4129              	.LVL514:
 278:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 4130              		.loc 1 278 0
 4131 1458 3B20     		movs	r0, #59
 4132 145a FFF7FEFF 		bl	Write_Command_Glcd
 4133              	.LVL515:
 279:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 4134              		.loc 1 279 0
 4135 145e 4FF40060 		mov	r0, #2048
 4136 1462 FFF7FEFF 		bl	Write_Data_Glcd
 4137              	.LVL516:
 281:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 4138              		.loc 1 281 0
 4139 1466 0720     		movs	r0, #7
 4140 1468 FFF7FEFF 		bl	Write_Command_Glcd
 4141              	.LVL517:
 282:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 4142              		.loc 1 282 0
 4143 146c 3320     		movs	r0, #51
 4144 146e FFF7FEFF 		bl	Write_Data_Glcd
 4145              	.LVL518:
 284:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 4146              		.loc 1 284 0
 4147 1472 0520     		movs	r0, #5
 4148 1474 FFF7FEFF 		bl	delay_ms
 4149              	.LVL519:
 286:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 4150              		.loc 1 286 0
 4151 1478 2220     		movs	r0, #34
 287:../Source Files/lpc_ssp_glcd.c **** }
 4152              		.loc 1 287 0
 4153 147a BDE81040 		pop	{r4, lr}
 286:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 4154              		.loc 1 286 0
 4155 147e FFF7FEBF 		b	Write_Command_Glcd
 4156              	.LVL520:
 4157              		.cfi_endproc
 4158              	.LFE61:
 4160              		.global	default5x7
 4161              		.global	Font_24x16
 4162              		.comm	I2C_Rx_Buf,64,1
 4163              		.comm	I2C_Tx_Buf,64,1
 4164              		.comm	Rx_Buf1,64,1
 4165              		.comm	Tx_Buf1,64,1
 4166              		.comm	TxIntStat,1,1
 4167              		.comm	rb,528,4
 4168              		.comm	EscFlag,2,2
 4169              		.section	.rodata
 4170              		.align	1
 4171              		.set	.LANCHOR2,. + 0
 4172              		.set	.LANCHOR3,. + 4344
 4175              	Font_24x16:
 4176 0000 0000     		.short	0
 4177 0002 0000     		.short	0
 4178 0004 0000     		.short	0
 4179 0006 0000     		.short	0
 4180 0008 0000     		.short	0
 4181 000a 0000     		.short	0
 4182 000c 0000     		.short	0
 4183 000e 0000     		.short	0
 4184 0010 0000     		.short	0
 4185 0012 0000     		.short	0
 4186 0014 0000     		.short	0
 4187 0016 0000     		.short	0
 4188 0018 0000     		.short	0
 4189 001a 0000     		.short	0
 4190 001c 0000     		.short	0
 4191 001e 0000     		.short	0
 4192 0020 0000     		.short	0
 4193 0022 0000     		.short	0
 4194 0024 0000     		.short	0
 4195 0026 0000     		.short	0
 4196 0028 0000     		.short	0
 4197 002a 0000     		.short	0
 4198 002c 0000     		.short	0
 4199 002e 0000     		.short	0
 4200 0030 0000     		.short	0
 4201 0032 8001     		.short	384
 4202 0034 8001     		.short	384
 4203 0036 8001     		.short	384
 4204 0038 8001     		.short	384
 4205 003a 8001     		.short	384
 4206 003c 8001     		.short	384
 4207 003e 8001     		.short	384
 4208 0040 8001     		.short	384
 4209 0042 8001     		.short	384
 4210 0044 8001     		.short	384
 4211 0046 8001     		.short	384
 4212 0048 8001     		.short	384
 4213 004a 8001     		.short	384
 4214 004c 0000     		.short	0
 4215 004e 0000     		.short	0
 4216 0050 8001     		.short	384
 4217 0052 8001     		.short	384
 4218 0054 0000     		.short	0
 4219 0056 0000     		.short	0
 4220 0058 0000     		.short	0
 4221 005a 0000     		.short	0
 4222 005c 0000     		.short	0
 4223 005e 0000     		.short	0
 4224 0060 0000     		.short	0
 4225 0062 0000     		.short	0
 4226 0064 CC00     		.short	204
 4227 0066 CC00     		.short	204
 4228 0068 CC00     		.short	204
 4229 006a CC00     		.short	204
 4230 006c CC00     		.short	204
 4231 006e CC00     		.short	204
 4232 0070 0000     		.short	0
 4233 0072 0000     		.short	0
 4234 0074 0000     		.short	0
 4235 0076 0000     		.short	0
 4236 0078 0000     		.short	0
 4237 007a 0000     		.short	0
 4238 007c 0000     		.short	0
 4239 007e 0000     		.short	0
 4240 0080 0000     		.short	0
 4241 0082 0000     		.short	0
 4242 0084 0000     		.short	0
 4243 0086 0000     		.short	0
 4244 0088 0000     		.short	0
 4245 008a 0000     		.short	0
 4246 008c 0000     		.short	0
 4247 008e 0000     		.short	0
 4248 0090 0000     		.short	0
 4249 0092 0000     		.short	0
 4250 0094 0000     		.short	0
 4251 0096 0000     		.short	0
 4252 0098 0000     		.short	0
 4253 009a 0000     		.short	0
 4254 009c 600C     		.short	3168
 4255 009e 600C     		.short	3168
 4256 00a0 600C     		.short	3168
 4257 00a2 3006     		.short	1584
 4258 00a4 3006     		.short	1584
 4259 00a6 FE1F     		.short	8190
 4260 00a8 FE1F     		.short	8190
 4261 00aa 3006     		.short	1584
 4262 00ac 3807     		.short	1848
 4263 00ae 1803     		.short	792
 4264 00b0 FE1F     		.short	8190
 4265 00b2 FE1F     		.short	8190
 4266 00b4 1803     		.short	792
 4267 00b6 1803     		.short	792
 4268 00b8 8C01     		.short	396
 4269 00ba 8C01     		.short	396
 4270 00bc 8C01     		.short	396
 4271 00be 0000     		.short	0
 4272 00c0 0000     		.short	0
 4273 00c2 8000     		.short	128
 4274 00c4 E003     		.short	992
 4275 00c6 F80F     		.short	4088
 4276 00c8 9C0E     		.short	3740
 4277 00ca 8C1C     		.short	7308
 4278 00cc 8C18     		.short	6284
 4279 00ce 8C00     		.short	140
 4280 00d0 9800     		.short	152
 4281 00d2 F801     		.short	504
 4282 00d4 E007     		.short	2016
 4283 00d6 800E     		.short	3712
 4284 00d8 801C     		.short	7296
 4285 00da 8C18     		.short	6284
 4286 00dc 8C18     		.short	6284
 4287 00de 9C18     		.short	6300
 4288 00e0 B80C     		.short	3256
 4289 00e2 F00F     		.short	4080
 4290 00e4 E003     		.short	992
 4291 00e6 8000     		.short	128
 4292 00e8 8000     		.short	128
 4293 00ea 0000     		.short	0
 4294 00ec 0000     		.short	0
 4295 00ee 0000     		.short	0
 4296 00f0 0000     		.short	0
 4297 00f2 0000     		.short	0
 4298 00f4 0000     		.short	0
 4299 00f6 0E18     		.short	6158
 4300 00f8 1B0C     		.short	3099
 4301 00fa 110C     		.short	3089
 4302 00fc 1106     		.short	1553
 4303 00fe 1106     		.short	1553
 4304 0100 1103     		.short	785
 4305 0102 1103     		.short	785
 4306 0104 9B01     		.short	411
 4307 0106 8E01     		.short	398
 4308 0108 C038     		.short	14528
 4309 010a C06C     		.short	27840
 4310 010c 6044     		.short	17504
 4311 010e 6044     		.short	17504
 4312 0110 3044     		.short	17456
 4313 0112 3044     		.short	17456
 4314 0114 1844     		.short	17432
 4315 0116 186C     		.short	27672
 4316 0118 0C38     		.short	14348
 4317 011a 0000     		.short	0
 4318 011c 0000     		.short	0
 4319 011e 0000     		.short	0
 4320 0120 0000     		.short	0
 4321 0122 E001     		.short	480
 4322 0124 F003     		.short	1008
 4323 0126 3807     		.short	1848
 4324 0128 1806     		.short	1560
 4325 012a 1806     		.short	1560
 4326 012c 3003     		.short	816
 4327 012e F001     		.short	496
 4328 0130 F000     		.short	240
 4329 0132 F800     		.short	248
 4330 0134 9C31     		.short	12700
 4331 0136 0E33     		.short	13070
 4332 0138 061E     		.short	7686
 4333 013a 061C     		.short	7174
 4334 013c 061C     		.short	7174
 4335 013e 063F     		.short	16134
 4336 0140 FC73     		.short	29692
 4337 0142 F021     		.short	8688
 4338 0144 0000     		.short	0
 4339 0146 0000     		.short	0
 4340 0148 0000     		.short	0
 4341 014a 0000     		.short	0
 4342 014c 0000     		.short	0
 4343 014e 0000     		.short	0
 4344 0150 0000     		.short	0
 4345 0152 0000     		.short	0
 4346 0154 0C00     		.short	12
 4347 0156 0C00     		.short	12
 4348 0158 0C00     		.short	12
 4349 015a 0C00     		.short	12
 4350 015c 0C00     		.short	12
 4351 015e 0C00     		.short	12
 4352 0160 0000     		.short	0
 4353 0162 0000     		.short	0
 4354 0164 0000     		.short	0
 4355 0166 0000     		.short	0
 4356 0168 0000     		.short	0
 4357 016a 0000     		.short	0
 4358 016c 0000     		.short	0
 4359 016e 0000     		.short	0
 4360 0170 0000     		.short	0
 4361 0172 0000     		.short	0
 4362 0174 0000     		.short	0
 4363 0176 0000     		.short	0
 4364 0178 0000     		.short	0
 4365 017a 0000     		.short	0
 4366 017c 0000     		.short	0
 4367 017e 0000     		.short	0
 4368 0180 0000     		.short	0
 4369 0182 0002     		.short	512
 4370 0184 0003     		.short	768
 4371 0186 8001     		.short	384
 4372 0188 C000     		.short	192
 4373 018a C000     		.short	192
 4374 018c 6000     		.short	96
 4375 018e 6000     		.short	96
 4376 0190 3000     		.short	48
 4377 0192 3000     		.short	48
 4378 0194 3000     		.short	48
 4379 0196 3000     		.short	48
 4380 0198 3000     		.short	48
 4381 019a 3000     		.short	48
 4382 019c 3000     		.short	48
 4383 019e 3000     		.short	48
 4384 01a0 6000     		.short	96
 4385 01a2 6000     		.short	96
 4386 01a4 C000     		.short	192
 4387 01a6 C000     		.short	192
 4388 01a8 8001     		.short	384
 4389 01aa 0003     		.short	768
 4390 01ac 0002     		.short	512
 4391 01ae 0000     		.short	0
 4392 01b0 0000     		.short	0
 4393 01b2 2000     		.short	32
 4394 01b4 6000     		.short	96
 4395 01b6 C000     		.short	192
 4396 01b8 8001     		.short	384
 4397 01ba 8001     		.short	384
 4398 01bc 0003     		.short	768
 4399 01be 0003     		.short	768
 4400 01c0 0006     		.short	1536
 4401 01c2 0006     		.short	1536
 4402 01c4 0006     		.short	1536
 4403 01c6 0006     		.short	1536
 4404 01c8 0006     		.short	1536
 4405 01ca 0006     		.short	1536
 4406 01cc 0006     		.short	1536
 4407 01ce 0006     		.short	1536
 4408 01d0 0003     		.short	768
 4409 01d2 0003     		.short	768
 4410 01d4 8001     		.short	384
 4411 01d6 8001     		.short	384
 4412 01d8 C000     		.short	192
 4413 01da 6000     		.short	96
 4414 01dc 2000     		.short	32
 4415 01de 0000     		.short	0
 4416 01e0 0000     		.short	0
 4417 01e2 0000     		.short	0
 4418 01e4 0000     		.short	0
 4419 01e6 0000     		.short	0
 4420 01e8 0000     		.short	0
 4421 01ea 0000     		.short	0
 4422 01ec C000     		.short	192
 4423 01ee C000     		.short	192
 4424 01f0 D806     		.short	1752
 4425 01f2 F807     		.short	2040
 4426 01f4 E001     		.short	480
 4427 01f6 3003     		.short	816
 4428 01f8 3807     		.short	1848
 4429 01fa 0000     		.short	0
 4430 01fc 0000     		.short	0
 4431 01fe 0000     		.short	0
 4432 0200 0000     		.short	0
 4433 0202 0000     		.short	0
 4434 0204 0000     		.short	0
 4435 0206 0000     		.short	0
 4436 0208 0000     		.short	0
 4437 020a 0000     		.short	0
 4438 020c 0000     		.short	0
 4439 020e 0000     		.short	0
 4440 0210 0000     		.short	0
 4441 0212 0000     		.short	0
 4442 0214 0000     		.short	0
 4443 0216 0000     		.short	0
 4444 0218 0000     		.short	0
 4445 021a 0000     		.short	0
 4446 021c 8001     		.short	384
 4447 021e 8001     		.short	384
 4448 0220 8001     		.short	384
 4449 0222 8001     		.short	384
 4450 0224 8001     		.short	384
 4451 0226 FC3F     		.short	16380
 4452 0228 FC3F     		.short	16380
 4453 022a 8001     		.short	384
 4454 022c 8001     		.short	384
 4455 022e 8001     		.short	384
 4456 0230 8001     		.short	384
 4457 0232 8001     		.short	384
 4458 0234 0000     		.short	0
 4459 0236 0000     		.short	0
 4460 0238 0000     		.short	0
 4461 023a 0000     		.short	0
 4462 023c 0000     		.short	0
 4463 023e 0000     		.short	0
 4464 0240 0000     		.short	0
 4465 0242 0000     		.short	0
 4466 0244 0000     		.short	0
 4467 0246 0000     		.short	0
 4468 0248 0000     		.short	0
 4469 024a 0000     		.short	0
 4470 024c 0000     		.short	0
 4471 024e 0000     		.short	0
 4472 0250 0000     		.short	0
 4473 0252 0000     		.short	0
 4474 0254 0000     		.short	0
 4475 0256 0000     		.short	0
 4476 0258 0000     		.short	0
 4477 025a 0000     		.short	0
 4478 025c 0000     		.short	0
 4479 025e 0000     		.short	0
 4480 0260 0000     		.short	0
 4481 0262 8001     		.short	384
 4482 0264 8001     		.short	384
 4483 0266 0001     		.short	256
 4484 0268 0001     		.short	256
 4485 026a 8000     		.short	128
 4486 026c 0000     		.short	0
 4487 026e 0000     		.short	0
 4488 0270 0000     		.short	0
 4489 0272 0000     		.short	0
 4490 0274 0000     		.short	0
 4491 0276 0000     		.short	0
 4492 0278 0000     		.short	0
 4493 027a 0000     		.short	0
 4494 027c 0000     		.short	0
 4495 027e 0000     		.short	0
 4496 0280 0000     		.short	0
 4497 0282 0000     		.short	0
 4498 0284 0000     		.short	0
 4499 0286 0000     		.short	0
 4500 0288 E007     		.short	2016
 4501 028a E007     		.short	2016
 4502 028c 0000     		.short	0
 4503 028e 0000     		.short	0
 4504 0290 0000     		.short	0
 4505 0292 0000     		.short	0
 4506 0294 0000     		.short	0
 4507 0296 0000     		.short	0
 4508 0298 0000     		.short	0
 4509 029a 0000     		.short	0
 4510 029c 0000     		.short	0
 4511 029e 0000     		.short	0
 4512 02a0 0000     		.short	0
 4513 02a2 0000     		.short	0
 4514 02a4 0000     		.short	0
 4515 02a6 0000     		.short	0
 4516 02a8 0000     		.short	0
 4517 02aa 0000     		.short	0
 4518 02ac 0000     		.short	0
 4519 02ae 0000     		.short	0
 4520 02b0 0000     		.short	0
 4521 02b2 0000     		.short	0
 4522 02b4 0000     		.short	0
 4523 02b6 0000     		.short	0
 4524 02b8 0000     		.short	0
 4525 02ba 0000     		.short	0
 4526 02bc 0000     		.short	0
 4527 02be 0000     		.short	0
 4528 02c0 0000     		.short	0
 4529 02c2 C000     		.short	192
 4530 02c4 C000     		.short	192
 4531 02c6 0000     		.short	0
 4532 02c8 0000     		.short	0
 4533 02ca 0000     		.short	0
 4534 02cc 0000     		.short	0
 4535 02ce 0000     		.short	0
 4536 02d0 0000     		.short	0
 4537 02d2 000C     		.short	3072
 4538 02d4 000C     		.short	3072
 4539 02d6 0006     		.short	1536
 4540 02d8 0006     		.short	1536
 4541 02da 0006     		.short	1536
 4542 02dc 0003     		.short	768
 4543 02de 0003     		.short	768
 4544 02e0 0003     		.short	768
 4545 02e2 8003     		.short	896
 4546 02e4 8001     		.short	384
 4547 02e6 8001     		.short	384
 4548 02e8 8001     		.short	384
 4549 02ea C000     		.short	192
 4550 02ec C000     		.short	192
 4551 02ee C000     		.short	192
 4552 02f0 6000     		.short	96
 4553 02f2 6000     		.short	96
 4554 02f4 0000     		.short	0
 4555 02f6 0000     		.short	0
 4556 02f8 0000     		.short	0
 4557 02fa 0000     		.short	0
 4558 02fc 0000     		.short	0
 4559 02fe 0000     		.short	0
 4560 0300 0000     		.short	0
 4561 0302 E003     		.short	992
 4562 0304 F007     		.short	2032
 4563 0306 380E     		.short	3640
 4564 0308 180C     		.short	3096
 4565 030a 0C18     		.short	6156
 4566 030c 0C18     		.short	6156
 4567 030e 0C18     		.short	6156
 4568 0310 0C18     		.short	6156
 4569 0312 0C18     		.short	6156
 4570 0314 0C18     		.short	6156
 4571 0316 0C18     		.short	6156
 4572 0318 0C18     		.short	6156
 4573 031a 0C18     		.short	6156
 4574 031c 180C     		.short	3096
 4575 031e 380E     		.short	3640
 4576 0320 F007     		.short	2032
 4577 0322 E003     		.short	992
 4578 0324 0000     		.short	0
 4579 0326 0000     		.short	0
 4580 0328 0000     		.short	0
 4581 032a 0000     		.short	0
 4582 032c 0000     		.short	0
 4583 032e 0000     		.short	0
 4584 0330 0000     		.short	0
 4585 0332 0001     		.short	256
 4586 0334 8001     		.short	384
 4587 0336 C001     		.short	448
 4588 0338 F001     		.short	496
 4589 033a 9801     		.short	408
 4590 033c 8801     		.short	392
 4591 033e 8001     		.short	384
 4592 0340 8001     		.short	384
 4593 0342 8001     		.short	384
 4594 0344 8001     		.short	384
 4595 0346 8001     		.short	384
 4596 0348 8001     		.short	384
 4597 034a 8001     		.short	384
 4598 034c 8001     		.short	384
 4599 034e 8001     		.short	384
 4600 0350 8001     		.short	384
 4601 0352 8001     		.short	384
 4602 0354 0000     		.short	0
 4603 0356 0000     		.short	0
 4604 0358 0000     		.short	0
 4605 035a 0000     		.short	0
 4606 035c 0000     		.short	0
 4607 035e 0000     		.short	0
 4608 0360 0000     		.short	0
 4609 0362 E003     		.short	992
 4610 0364 F80F     		.short	4088
 4611 0366 180C     		.short	3096
 4612 0368 0C18     		.short	6156
 4613 036a 0C18     		.short	6156
 4614 036c 0018     		.short	6144
 4615 036e 0018     		.short	6144
 4616 0370 000C     		.short	3072
 4617 0372 0006     		.short	1536
 4618 0374 0003     		.short	768
 4619 0376 8001     		.short	384
 4620 0378 C000     		.short	192
 4621 037a 6000     		.short	96
 4622 037c 3000     		.short	48
 4623 037e 1800     		.short	24
 4624 0380 FC1F     		.short	8188
 4625 0382 FC1F     		.short	8188
 4626 0384 0000     		.short	0
 4627 0386 0000     		.short	0
 4628 0388 0000     		.short	0
 4629 038a 0000     		.short	0
 4630 038c 0000     		.short	0
 4631 038e 0000     		.short	0
 4632 0390 0000     		.short	0
 4633 0392 E001     		.short	480
 4634 0394 F807     		.short	2040
 4635 0396 180E     		.short	3608
 4636 0398 0C0C     		.short	3084
 4637 039a 0C0C     		.short	3084
 4638 039c 000C     		.short	3072
 4639 039e 0006     		.short	1536
 4640 03a0 C003     		.short	960
 4641 03a2 C007     		.short	1984
 4642 03a4 000C     		.short	3072
 4643 03a6 0018     		.short	6144
 4644 03a8 0018     		.short	6144
 4645 03aa 0C18     		.short	6156
 4646 03ac 0C18     		.short	6156
 4647 03ae 180C     		.short	3096
 4648 03b0 F807     		.short	2040
 4649 03b2 E003     		.short	992
 4650 03b4 0000     		.short	0
 4651 03b6 0000     		.short	0
 4652 03b8 0000     		.short	0
 4653 03ba 0000     		.short	0
 4654 03bc 0000     		.short	0
 4655 03be 0000     		.short	0
 4656 03c0 0000     		.short	0
 4657 03c2 000C     		.short	3072
 4658 03c4 000E     		.short	3584
 4659 03c6 000F     		.short	3840
 4660 03c8 000F     		.short	3840
 4661 03ca 800D     		.short	3456
 4662 03cc C00C     		.short	3264
 4663 03ce 600C     		.short	3168
 4664 03d0 600C     		.short	3168
 4665 03d2 300C     		.short	3120
 4666 03d4 180C     		.short	3096
 4667 03d6 0C0C     		.short	3084
 4668 03d8 FC3F     		.short	16380
 4669 03da FC3F     		.short	16380
 4670 03dc 000C     		.short	3072
 4671 03de 000C     		.short	3072
 4672 03e0 000C     		.short	3072
 4673 03e2 000C     		.short	3072
 4674 03e4 0000     		.short	0
 4675 03e6 0000     		.short	0
 4676 03e8 0000     		.short	0
 4677 03ea 0000     		.short	0
 4678 03ec 0000     		.short	0
 4679 03ee 0000     		.short	0
 4680 03f0 0000     		.short	0
 4681 03f2 F80F     		.short	4088
 4682 03f4 F80F     		.short	4088
 4683 03f6 1800     		.short	24
 4684 03f8 1800     		.short	24
 4685 03fa 0C00     		.short	12
 4686 03fc EC03     		.short	1004
 4687 03fe FC07     		.short	2044
 4688 0400 1C0E     		.short	3612
 4689 0402 001C     		.short	7168
 4690 0404 0018     		.short	6144
 4691 0406 0018     		.short	6144
 4692 0408 0018     		.short	6144
 4693 040a 0C18     		.short	6156
 4694 040c 1C0C     		.short	3100
 4695 040e 180E     		.short	3608
 4696 0410 F807     		.short	2040
 4697 0412 E003     		.short	992
 4698 0414 0000     		.short	0
 4699 0416 0000     		.short	0
 4700 0418 0000     		.short	0
 4701 041a 0000     		.short	0
 4702 041c 0000     		.short	0
 4703 041e 0000     		.short	0
 4704 0420 0000     		.short	0
 4705 0422 C007     		.short	1984
 4706 0424 F00F     		.short	4080
 4707 0426 381C     		.short	7224
 4708 0428 1818     		.short	6168
 4709 042a 1800     		.short	24
 4710 042c 0C00     		.short	12
 4711 042e CC03     		.short	972
 4712 0430 EC0F     		.short	4076
 4713 0432 3C0E     		.short	3644
 4714 0434 1C1C     		.short	7196
 4715 0436 0C18     		.short	6156
 4716 0438 0C18     		.short	6156
 4717 043a 0C18     		.short	6156
 4718 043c 181C     		.short	7192
 4719 043e 380E     		.short	3640
 4720 0440 F007     		.short	2032
 4721 0442 E003     		.short	992
 4722 0444 0000     		.short	0
 4723 0446 0000     		.short	0
 4724 0448 0000     		.short	0
 4725 044a 0000     		.short	0
 4726 044c 0000     		.short	0
 4727 044e 0000     		.short	0
 4728 0450 0000     		.short	0
 4729 0452 FC1F     		.short	8188
 4730 0454 FC1F     		.short	8188
 4731 0456 000C     		.short	3072
 4732 0458 0006     		.short	1536
 4733 045a 0006     		.short	1536
 4734 045c 0003     		.short	768
 4735 045e 8003     		.short	896
 4736 0460 8001     		.short	384
 4737 0462 C001     		.short	448
 4738 0464 C000     		.short	192
 4739 0466 E000     		.short	224
 4740 0468 6000     		.short	96
 4741 046a 6000     		.short	96
 4742 046c 7000     		.short	112
 4743 046e 3000     		.short	48
 4744 0470 3000     		.short	48
 4745 0472 3000     		.short	48
 4746 0474 0000     		.short	0
 4747 0476 0000     		.short	0
 4748 0478 0000     		.short	0
 4749 047a 0000     		.short	0
 4750 047c 0000     		.short	0
 4751 047e 0000     		.short	0
 4752 0480 0000     		.short	0
 4753 0482 E003     		.short	992
 4754 0484 F007     		.short	2032
 4755 0486 380E     		.short	3640
 4756 0488 180C     		.short	3096
 4757 048a 180C     		.short	3096
 4758 048c 180C     		.short	3096
 4759 048e 3806     		.short	1592
 4760 0490 F007     		.short	2032
 4761 0492 F007     		.short	2032
 4762 0494 180C     		.short	3096
 4763 0496 0C18     		.short	6156
 4764 0498 0C18     		.short	6156
 4765 049a 0C18     		.short	6156
 4766 049c 0C18     		.short	6156
 4767 049e 380C     		.short	3128
 4768 04a0 F80F     		.short	4088
 4769 04a2 E003     		.short	992
 4770 04a4 0000     		.short	0
 4771 04a6 0000     		.short	0
 4772 04a8 0000     		.short	0
 4773 04aa 0000     		.short	0
 4774 04ac 0000     		.short	0
 4775 04ae 0000     		.short	0
 4776 04b0 0000     		.short	0
 4777 04b2 E003     		.short	992
 4778 04b4 F007     		.short	2032
 4779 04b6 380E     		.short	3640
 4780 04b8 1C0C     		.short	3100
 4781 04ba 0C18     		.short	6156
 4782 04bc 0C18     		.short	6156
 4783 04be 0C18     		.short	6156
 4784 04c0 1C1C     		.short	7196
 4785 04c2 381E     		.short	7736
 4786 04c4 F81B     		.short	7160
 4787 04c6 E019     		.short	6624
 4788 04c8 0018     		.short	6144
 4789 04ca 000C     		.short	3072
 4790 04cc 000C     		.short	3072
 4791 04ce 1C0E     		.short	3612
 4792 04d0 F807     		.short	2040
 4793 04d2 F001     		.short	496
 4794 04d4 0000     		.short	0
 4795 04d6 0000     		.short	0
 4796 04d8 0000     		.short	0
 4797 04da 0000     		.short	0
 4798 04dc 0000     		.short	0
 4799 04de 0000     		.short	0
 4800 04e0 0000     		.short	0
 4801 04e2 0000     		.short	0
 4802 04e4 0000     		.short	0
 4803 04e6 0000     		.short	0
 4804 04e8 0000     		.short	0
 4805 04ea 0000     		.short	0
 4806 04ec 8001     		.short	384
 4807 04ee 8001     		.short	384
 4808 04f0 0000     		.short	0
 4809 04f2 0000     		.short	0
 4810 04f4 0000     		.short	0
 4811 04f6 0000     		.short	0
 4812 04f8 0000     		.short	0
 4813 04fa 0000     		.short	0
 4814 04fc 0000     		.short	0
 4815 04fe 0000     		.short	0
 4816 0500 8001     		.short	384
 4817 0502 8001     		.short	384
 4818 0504 0000     		.short	0
 4819 0506 0000     		.short	0
 4820 0508 0000     		.short	0
 4821 050a 0000     		.short	0
 4822 050c 0000     		.short	0
 4823 050e 0000     		.short	0
 4824 0510 0000     		.short	0
 4825 0512 0000     		.short	0
 4826 0514 0000     		.short	0
 4827 0516 0000     		.short	0
 4828 0518 0000     		.short	0
 4829 051a 0000     		.short	0
 4830 051c 8001     		.short	384
 4831 051e 8001     		.short	384
 4832 0520 0000     		.short	0
 4833 0522 0000     		.short	0
 4834 0524 0000     		.short	0
 4835 0526 0000     		.short	0
 4836 0528 0000     		.short	0
 4837 052a 0000     		.short	0
 4838 052c 0000     		.short	0
 4839 052e 0000     		.short	0
 4840 0530 8001     		.short	384
 4841 0532 8001     		.short	384
 4842 0534 0001     		.short	256
 4843 0536 0001     		.short	256
 4844 0538 8000     		.short	128
 4845 053a 0000     		.short	0
 4846 053c 0000     		.short	0
 4847 053e 0000     		.short	0
 4848 0540 0000     		.short	0
 4849 0542 0000     		.short	0
 4850 0544 0000     		.short	0
 4851 0546 0000     		.short	0
 4852 0548 0000     		.short	0
 4853 054a 0000     		.short	0
 4854 054c 0000     		.short	0
 4855 054e 0000     		.short	0
 4856 0550 0010     		.short	4096
 4857 0552 001C     		.short	7168
 4858 0554 800F     		.short	3968
 4859 0556 E003     		.short	992
 4860 0558 F800     		.short	248
 4861 055a 1800     		.short	24
 4862 055c F800     		.short	248
 4863 055e E003     		.short	992
 4864 0560 800F     		.short	3968
 4865 0562 001C     		.short	7168
 4866 0564 0010     		.short	4096
 4867 0566 0000     		.short	0
 4868 0568 0000     		.short	0
 4869 056a 0000     		.short	0
 4870 056c 0000     		.short	0
 4871 056e 0000     		.short	0
 4872 0570 0000     		.short	0
 4873 0572 0000     		.short	0
 4874 0574 0000     		.short	0
 4875 0576 0000     		.short	0
 4876 0578 0000     		.short	0
 4877 057a 0000     		.short	0
 4878 057c 0000     		.short	0
 4879 057e 0000     		.short	0
 4880 0580 F81F     		.short	8184
 4881 0582 0000     		.short	0
 4882 0584 0000     		.short	0
 4883 0586 0000     		.short	0
 4884 0588 F81F     		.short	8184
 4885 058a 0000     		.short	0
 4886 058c 0000     		.short	0
 4887 058e 0000     		.short	0
 4888 0590 0000     		.short	0
 4889 0592 0000     		.short	0
 4890 0594 0000     		.short	0
 4891 0596 0000     		.short	0
 4892 0598 0000     		.short	0
 4893 059a 0000     		.short	0
 4894 059c 0000     		.short	0
 4895 059e 0000     		.short	0
 4896 05a0 0000     		.short	0
 4897 05a2 0000     		.short	0
 4898 05a4 0000     		.short	0
 4899 05a6 0000     		.short	0
 4900 05a8 0000     		.short	0
 4901 05aa 0000     		.short	0
 4902 05ac 0000     		.short	0
 4903 05ae 0000     		.short	0
 4904 05b0 0800     		.short	8
 4905 05b2 3800     		.short	56
 4906 05b4 F001     		.short	496
 4907 05b6 C007     		.short	1984
 4908 05b8 001F     		.short	7936
 4909 05ba 0018     		.short	6144
 4910 05bc 001F     		.short	7936
 4911 05be C007     		.short	1984
 4912 05c0 F001     		.short	496
 4913 05c2 3800     		.short	56
 4914 05c4 0800     		.short	8
 4915 05c6 0000     		.short	0
 4916 05c8 0000     		.short	0
 4917 05ca 0000     		.short	0
 4918 05cc 0000     		.short	0
 4919 05ce 0000     		.short	0
 4920 05d0 0000     		.short	0
 4921 05d2 E003     		.short	992
 4922 05d4 F80F     		.short	4088
 4923 05d6 180C     		.short	3096
 4924 05d8 0C18     		.short	6156
 4925 05da 0C18     		.short	6156
 4926 05dc 0018     		.short	6144
 4927 05de 000C     		.short	3072
 4928 05e0 0006     		.short	1536
 4929 05e2 0003     		.short	768
 4930 05e4 8001     		.short	384
 4931 05e6 C000     		.short	192
 4932 05e8 C000     		.short	192
 4933 05ea C000     		.short	192
 4934 05ec 0000     		.short	0
 4935 05ee 0000     		.short	0
 4936 05f0 C000     		.short	192
 4937 05f2 C000     		.short	192
 4938 05f4 0000     		.short	0
 4939 05f6 0000     		.short	0
 4940 05f8 0000     		.short	0
 4941 05fa 0000     		.short	0
 4942 05fc 0000     		.short	0
 4943 05fe 0000     		.short	0
 4944 0600 0000     		.short	0
 4945 0602 0000     		.short	0
 4946 0604 E007     		.short	2016
 4947 0606 1818     		.short	6168
 4948 0608 0420     		.short	8196
 4949 060a C229     		.short	10690
 4950 060c 224A     		.short	18978
 4951 060e 1144     		.short	17425
 4952 0610 0944     		.short	17417
 4953 0612 0944     		.short	17417
 4954 0614 0944     		.short	17417
 4955 0616 0922     		.short	8713
 4956 0618 1113     		.short	4881
 4957 061a E20C     		.short	3298
 4958 061c 0240     		.short	16386
 4959 061e 0420     		.short	8196
 4960 0620 1818     		.short	6168
 4961 0622 E007     		.short	2016
 4962 0624 0000     		.short	0
 4963 0626 0000     		.short	0
 4964 0628 0000     		.short	0
 4965 062a 0000     		.short	0
 4966 062c 0000     		.short	0
 4967 062e 0000     		.short	0
 4968 0630 0000     		.short	0
 4969 0632 8003     		.short	896
 4970 0634 8003     		.short	896
 4971 0636 C006     		.short	1728
 4972 0638 C006     		.short	1728
 4973 063a C006     		.short	1728
 4974 063c 600C     		.short	3168
 4975 063e 600C     		.short	3168
 4976 0640 3018     		.short	6192
 4977 0642 3018     		.short	6192
 4978 0644 3018     		.short	6192
 4979 0646 F83F     		.short	16376
 4980 0648 F83F     		.short	16376
 4981 064a 1C70     		.short	28700
 4982 064c 0C60     		.short	24588
 4983 064e 0C60     		.short	24588
 4984 0650 06C0     		.short	-16378
 4985 0652 06C0     		.short	-16378
 4986 0654 0000     		.short	0
 4987 0656 0000     		.short	0
 4988 0658 0000     		.short	0
 4989 065a 0000     		.short	0
 4990 065c 0000     		.short	0
 4991 065e 0000     		.short	0
 4992 0660 0000     		.short	0
 4993 0662 FC03     		.short	1020
 4994 0664 FC0F     		.short	4092
 4995 0666 0C0C     		.short	3084
 4996 0668 0C18     		.short	6156
 4997 066a 0C18     		.short	6156
 4998 066c 0C18     		.short	6156
 4999 066e 0C0C     		.short	3084
 5000 0670 FC07     		.short	2044
 5001 0672 FC0F     		.short	4092
 5002 0674 0C18     		.short	6156
 5003 0676 0C30     		.short	12300
 5004 0678 0C30     		.short	12300
 5005 067a 0C30     		.short	12300
 5006 067c 0C30     		.short	12300
 5007 067e 0C18     		.short	6156
 5008 0680 FC1F     		.short	8188
 5009 0682 FC07     		.short	2044
 5010 0684 0000     		.short	0
 5011 0686 0000     		.short	0
 5012 0688 0000     		.short	0
 5013 068a 0000     		.short	0
 5014 068c 0000     		.short	0
 5015 068e 0000     		.short	0
 5016 0690 0000     		.short	0
 5017 0692 C007     		.short	1984
 5018 0694 F01F     		.short	8176
 5019 0696 3838     		.short	14392
 5020 0698 1C30     		.short	12316
 5021 069a 0C70     		.short	28684
 5022 069c 0660     		.short	24582
 5023 069e 0600     		.short	6
 5024 06a0 0600     		.short	6
 5025 06a2 0600     		.short	6
 5026 06a4 0600     		.short	6
 5027 06a6 0600     		.short	6
 5028 06a8 0600     		.short	6
 5029 06aa 0660     		.short	24582
 5030 06ac 0C70     		.short	28684
 5031 06ae 1C30     		.short	12316
 5032 06b0 F01F     		.short	8176
 5033 06b2 E007     		.short	2016
 5034 06b4 0000     		.short	0
 5035 06b6 0000     		.short	0
 5036 06b8 0000     		.short	0
 5037 06ba 0000     		.short	0
 5038 06bc 0000     		.short	0
 5039 06be 0000     		.short	0
 5040 06c0 0000     		.short	0
 5041 06c2 FE03     		.short	1022
 5042 06c4 FE0F     		.short	4094
 5043 06c6 060E     		.short	3590
 5044 06c8 0618     		.short	6150
 5045 06ca 0618     		.short	6150
 5046 06cc 0630     		.short	12294
 5047 06ce 0630     		.short	12294
 5048 06d0 0630     		.short	12294
 5049 06d2 0630     		.short	12294
 5050 06d4 0630     		.short	12294
 5051 06d6 0630     		.short	12294
 5052 06d8 0630     		.short	12294
 5053 06da 0618     		.short	6150
 5054 06dc 0618     		.short	6150
 5055 06de 060E     		.short	3590
 5056 06e0 FE0F     		.short	4094
 5057 06e2 FE03     		.short	1022
 5058 06e4 0000     		.short	0
 5059 06e6 0000     		.short	0
 5060 06e8 0000     		.short	0
 5061 06ea 0000     		.short	0
 5062 06ec 0000     		.short	0
 5063 06ee 0000     		.short	0
 5064 06f0 0000     		.short	0
 5065 06f2 FC3F     		.short	16380
 5066 06f4 FC3F     		.short	16380
 5067 06f6 0C00     		.short	12
 5068 06f8 0C00     		.short	12
 5069 06fa 0C00     		.short	12
 5070 06fc 0C00     		.short	12
 5071 06fe 0C00     		.short	12
 5072 0700 FC1F     		.short	8188
 5073 0702 FC1F     		.short	8188
 5074 0704 0C00     		.short	12
 5075 0706 0C00     		.short	12
 5076 0708 0C00     		.short	12
 5077 070a 0C00     		.short	12
 5078 070c 0C00     		.short	12
 5079 070e 0C00     		.short	12
 5080 0710 FC3F     		.short	16380
 5081 0712 FC3F     		.short	16380
 5082 0714 0000     		.short	0
 5083 0716 0000     		.short	0
 5084 0718 0000     		.short	0
 5085 071a 0000     		.short	0
 5086 071c 0000     		.short	0
 5087 071e 0000     		.short	0
 5088 0720 0000     		.short	0
 5089 0722 F83F     		.short	16376
 5090 0724 F83F     		.short	16376
 5091 0726 1800     		.short	24
 5092 0728 1800     		.short	24
 5093 072a 1800     		.short	24
 5094 072c 1800     		.short	24
 5095 072e 1800     		.short	24
 5096 0730 F81F     		.short	8184
 5097 0732 F81F     		.short	8184
 5098 0734 1800     		.short	24
 5099 0736 1800     		.short	24
 5100 0738 1800     		.short	24
 5101 073a 1800     		.short	24
 5102 073c 1800     		.short	24
 5103 073e 1800     		.short	24
 5104 0740 1800     		.short	24
 5105 0742 1800     		.short	24
 5106 0744 0000     		.short	0
 5107 0746 0000     		.short	0
 5108 0748 0000     		.short	0
 5109 074a 0000     		.short	0
 5110 074c 0000     		.short	0
 5111 074e 0000     		.short	0
 5112 0750 0000     		.short	0
 5113 0752 E00F     		.short	4064
 5114 0754 F83F     		.short	16376
 5115 0756 3C78     		.short	30780
 5116 0758 0E60     		.short	24590
 5117 075a 06E0     		.short	-8186
 5118 075c 07C0     		.short	-16377
 5119 075e 0300     		.short	3
 5120 0760 0300     		.short	3
 5121 0762 03FE     		.short	-509
 5122 0764 03FE     		.short	-509
 5123 0766 03C0     		.short	-16381
 5124 0768 07C0     		.short	-16377
 5125 076a 06C0     		.short	-16378
 5126 076c 0EC0     		.short	-16370
 5127 076e 3CF0     		.short	-4036
 5128 0770 F83F     		.short	16376
 5129 0772 E00F     		.short	4064
 5130 0774 0000     		.short	0
 5131 0776 0000     		.short	0
 5132 0778 0000     		.short	0
 5133 077a 0000     		.short	0
 5134 077c 0000     		.short	0
 5135 077e 0000     		.short	0
 5136 0780 0000     		.short	0
 5137 0782 0C30     		.short	12300
 5138 0784 0C30     		.short	12300
 5139 0786 0C30     		.short	12300
 5140 0788 0C30     		.short	12300
 5141 078a 0C30     		.short	12300
 5142 078c 0C30     		.short	12300
 5143 078e 0C30     		.short	12300
 5144 0790 FC3F     		.short	16380
 5145 0792 FC3F     		.short	16380
 5146 0794 0C30     		.short	12300
 5147 0796 0C30     		.short	12300
 5148 0798 0C30     		.short	12300
 5149 079a 0C30     		.short	12300
 5150 079c 0C30     		.short	12300
 5151 079e 0C30     		.short	12300
 5152 07a0 0C30     		.short	12300
 5153 07a2 0C30     		.short	12300
 5154 07a4 0000     		.short	0
 5155 07a6 0000     		.short	0
 5156 07a8 0000     		.short	0
 5157 07aa 0000     		.short	0
 5158 07ac 0000     		.short	0
 5159 07ae 0000     		.short	0
 5160 07b0 0000     		.short	0
 5161 07b2 8001     		.short	384
 5162 07b4 8001     		.short	384
 5163 07b6 8001     		.short	384
 5164 07b8 8001     		.short	384
 5165 07ba 8001     		.short	384
 5166 07bc 8001     		.short	384
 5167 07be 8001     		.short	384
 5168 07c0 8001     		.short	384
 5169 07c2 8001     		.short	384
 5170 07c4 8001     		.short	384
 5171 07c6 8001     		.short	384
 5172 07c8 8001     		.short	384
 5173 07ca 8001     		.short	384
 5174 07cc 8001     		.short	384
 5175 07ce 8001     		.short	384
 5176 07d0 8001     		.short	384
 5177 07d2 8001     		.short	384
 5178 07d4 0000     		.short	0
 5179 07d6 0000     		.short	0
 5180 07d8 0000     		.short	0
 5181 07da 0000     		.short	0
 5182 07dc 0000     		.short	0
 5183 07de 0000     		.short	0
 5184 07e0 0000     		.short	0
 5185 07e2 0006     		.short	1536
 5186 07e4 0006     		.short	1536
 5187 07e6 0006     		.short	1536
 5188 07e8 0006     		.short	1536
 5189 07ea 0006     		.short	1536
 5190 07ec 0006     		.short	1536
 5191 07ee 0006     		.short	1536
 5192 07f0 0006     		.short	1536
 5193 07f2 0006     		.short	1536
 5194 07f4 0006     		.short	1536
 5195 07f6 0006     		.short	1536
 5196 07f8 0006     		.short	1536
 5197 07fa 1806     		.short	1560
 5198 07fc 1806     		.short	1560
 5199 07fe 3807     		.short	1848
 5200 0800 F003     		.short	1008
 5201 0802 E001     		.short	480
 5202 0804 0000     		.short	0
 5203 0806 0000     		.short	0
 5204 0808 0000     		.short	0
 5205 080a 0000     		.short	0
 5206 080c 0000     		.short	0
 5207 080e 0000     		.short	0
 5208 0810 0000     		.short	0
 5209 0812 0630     		.short	12294
 5210 0814 0618     		.short	6150
 5211 0816 060C     		.short	3078
 5212 0818 0606     		.short	1542
 5213 081a 0603     		.short	774
 5214 081c 8601     		.short	390
 5215 081e C600     		.short	198
 5216 0820 6600     		.short	102
 5217 0822 7600     		.short	118
 5218 0824 DE00     		.short	222
 5219 0826 8E01     		.short	398
 5220 0828 0603     		.short	774
 5221 082a 0606     		.short	1542
 5222 082c 060C     		.short	3078
 5223 082e 0618     		.short	6150
 5224 0830 0630     		.short	12294
 5225 0832 0660     		.short	24582
 5226 0834 0000     		.short	0
 5227 0836 0000     		.short	0
 5228 0838 0000     		.short	0
 5229 083a 0000     		.short	0
 5230 083c 0000     		.short	0
 5231 083e 0000     		.short	0
 5232 0840 0000     		.short	0
 5233 0842 1800     		.short	24
 5234 0844 1800     		.short	24
 5235 0846 1800     		.short	24
 5236 0848 1800     		.short	24
 5237 084a 1800     		.short	24
 5238 084c 1800     		.short	24
 5239 084e 1800     		.short	24
 5240 0850 1800     		.short	24
 5241 0852 1800     		.short	24
 5242 0854 1800     		.short	24
 5243 0856 1800     		.short	24
 5244 0858 1800     		.short	24
 5245 085a 1800     		.short	24
 5246 085c 1800     		.short	24
 5247 085e 1800     		.short	24
 5248 0860 F81F     		.short	8184
 5249 0862 F81F     		.short	8184
 5250 0864 0000     		.short	0
 5251 0866 0000     		.short	0
 5252 0868 0000     		.short	0
 5253 086a 0000     		.short	0
 5254 086c 0000     		.short	0
 5255 086e 0000     		.short	0
 5256 0870 0000     		.short	0
 5257 0872 0EE0     		.short	-8178
 5258 0874 1EF0     		.short	-4066
 5259 0876 1EF0     		.short	-4066
 5260 0878 1EF0     		.short	-4066
 5261 087a 36D8     		.short	-10186
 5262 087c 36D8     		.short	-10186
 5263 087e 36D8     		.short	-10186
 5264 0880 36D8     		.short	-10186
 5265 0882 66CC     		.short	-13210
 5266 0884 66CC     		.short	-13210
 5267 0886 66CC     		.short	-13210
 5268 0888 C6C6     		.short	-14650
 5269 088a C6C6     		.short	-14650
 5270 088c C6C6     		.short	-14650
 5271 088e C6C6     		.short	-14650
 5272 0890 86C3     		.short	-15482
 5273 0892 86C3     		.short	-15482
 5274 0894 0000     		.short	0
 5275 0896 0000     		.short	0
 5276 0898 0000     		.short	0
 5277 089a 0000     		.short	0
 5278 089c 0000     		.short	0
 5279 089e 0000     		.short	0
 5280 08a0 0000     		.short	0
 5281 08a2 0C30     		.short	12300
 5282 08a4 1C30     		.short	12316
 5283 08a6 3C30     		.short	12348
 5284 08a8 3C30     		.short	12348
 5285 08aa 6C30     		.short	12396
 5286 08ac 6C30     		.short	12396
 5287 08ae CC30     		.short	12492
 5288 08b0 CC30     		.short	12492
 5289 08b2 8C31     		.short	12684
 5290 08b4 0C33     		.short	13068
 5291 08b6 0C33     		.short	13068
 5292 08b8 0C36     		.short	13836
 5293 08ba 0C36     		.short	13836
 5294 08bc 0C3C     		.short	15372
 5295 08be 0C3C     		.short	15372
 5296 08c0 0C38     		.short	14348
 5297 08c2 0C30     		.short	12300
 5298 08c4 0000     		.short	0
 5299 08c6 0000     		.short	0
 5300 08c8 0000     		.short	0
 5301 08ca 0000     		.short	0
 5302 08cc 0000     		.short	0
 5303 08ce 0000     		.short	0
 5304 08d0 0000     		.short	0
 5305 08d2 E007     		.short	2016
 5306 08d4 F81F     		.short	8184
 5307 08d6 1C38     		.short	14364
 5308 08d8 0E70     		.short	28686
 5309 08da 0660     		.short	24582
 5310 08dc 03C0     		.short	-16381
 5311 08de 03C0     		.short	-16381
 5312 08e0 03C0     		.short	-16381
 5313 08e2 03C0     		.short	-16381
 5314 08e4 03C0     		.short	-16381
 5315 08e6 03C0     		.short	-16381
 5316 08e8 03C0     		.short	-16381
 5317 08ea 0660     		.short	24582
 5318 08ec 0E70     		.short	28686
 5319 08ee 1C38     		.short	14364
 5320 08f0 F81F     		.short	8184
 5321 08f2 E007     		.short	2016
 5322 08f4 0000     		.short	0
 5323 08f6 0000     		.short	0
 5324 08f8 0000     		.short	0
 5325 08fa 0000     		.short	0
 5326 08fc 0000     		.short	0
 5327 08fe 0000     		.short	0
 5328 0900 0000     		.short	0
 5329 0902 FC0F     		.short	4092
 5330 0904 FC1F     		.short	8188
 5331 0906 0C38     		.short	14348
 5332 0908 0C30     		.short	12300
 5333 090a 0C30     		.short	12300
 5334 090c 0C30     		.short	12300
 5335 090e 0C30     		.short	12300
 5336 0910 0C18     		.short	6156
 5337 0912 FC1F     		.short	8188
 5338 0914 FC07     		.short	2044
 5339 0916 0C00     		.short	12
 5340 0918 0C00     		.short	12
 5341 091a 0C00     		.short	12
 5342 091c 0C00     		.short	12
 5343 091e 0C00     		.short	12
 5344 0920 0C00     		.short	12
 5345 0922 0C00     		.short	12
 5346 0924 0000     		.short	0
 5347 0926 0000     		.short	0
 5348 0928 0000     		.short	0
 5349 092a 0000     		.short	0
 5350 092c 0000     		.short	0
 5351 092e 0000     		.short	0
 5352 0930 0000     		.short	0
 5353 0932 E007     		.short	2016
 5354 0934 F81F     		.short	8184
 5355 0936 1C38     		.short	14364
 5356 0938 0E70     		.short	28686
 5357 093a 0660     		.short	24582
 5358 093c 03E0     		.short	-8189
 5359 093e 03C0     		.short	-16381
 5360 0940 03C0     		.short	-16381
 5361 0942 03C0     		.short	-16381
 5362 0944 03C0     		.short	-16381
 5363 0946 03C0     		.short	-16381
 5364 0948 07E0     		.short	-8185
 5365 094a 0663     		.short	25350
 5366 094c 0E3F     		.short	16142
 5367 094e 1C3C     		.short	15388
 5368 0950 F83F     		.short	16376
 5369 0952 E0F7     		.short	-2080
 5370 0954 00C0     		.short	-16384
 5371 0956 0000     		.short	0
 5372 0958 0000     		.short	0
 5373 095a 0000     		.short	0
 5374 095c 0000     		.short	0
 5375 095e 0000     		.short	0
 5376 0960 0000     		.short	0
 5377 0962 FE0F     		.short	4094
 5378 0964 FE1F     		.short	8190
 5379 0966 0638     		.short	14342
 5380 0968 0630     		.short	12294
 5381 096a 0630     		.short	12294
 5382 096c 0630     		.short	12294
 5383 096e 0638     		.short	14342
 5384 0970 FE1F     		.short	8190
 5385 0972 FE07     		.short	2046
 5386 0974 0603     		.short	774
 5387 0976 0606     		.short	1542
 5388 0978 060C     		.short	3078
 5389 097a 0618     		.short	6150
 5390 097c 0618     		.short	6150
 5391 097e 0630     		.short	12294
 5392 0980 0630     		.short	12294
 5393 0982 0660     		.short	24582
 5394 0984 0000     		.short	0
 5395 0986 0000     		.short	0
 5396 0988 0000     		.short	0
 5397 098a 0000     		.short	0
 5398 098c 0000     		.short	0
 5399 098e 0000     		.short	0
 5400 0990 0000     		.short	0
 5401 0992 E003     		.short	992
 5402 0994 F80F     		.short	4088
 5403 0996 1C0C     		.short	3100
 5404 0998 0C18     		.short	6156
 5405 099a 0C18     		.short	6156
 5406 099c 0C00     		.short	12
 5407 099e 1C00     		.short	28
 5408 09a0 F803     		.short	1016
 5409 09a2 E00F     		.short	4064
 5410 09a4 001E     		.short	7680
 5411 09a6 0038     		.short	14336
 5412 09a8 0630     		.short	12294
 5413 09aa 0630     		.short	12294
 5414 09ac 0E30     		.short	12302
 5415 09ae 1C1C     		.short	7196
 5416 09b0 F80F     		.short	4088
 5417 09b2 E007     		.short	2016
 5418 09b4 0000     		.short	0
 5419 09b6 0000     		.short	0
 5420 09b8 0000     		.short	0
 5421 09ba 0000     		.short	0
 5422 09bc 0000     		.short	0
 5423 09be 0000     		.short	0
 5424 09c0 0000     		.short	0
 5425 09c2 FE7F     		.short	32766
 5426 09c4 FE7F     		.short	32766
 5427 09c6 8001     		.short	384
 5428 09c8 8001     		.short	384
 5429 09ca 8001     		.short	384
 5430 09cc 8001     		.short	384
 5431 09ce 8001     		.short	384
 5432 09d0 8001     		.short	384
 5433 09d2 8001     		.short	384
 5434 09d4 8001     		.short	384
 5435 09d6 8001     		.short	384
 5436 09d8 8001     		.short	384
 5437 09da 8001     		.short	384
 5438 09dc 8001     		.short	384
 5439 09de 8001     		.short	384
 5440 09e0 8001     		.short	384
 5441 09e2 8001     		.short	384
 5442 09e4 0000     		.short	0
 5443 09e6 0000     		.short	0
 5444 09e8 0000     		.short	0
 5445 09ea 0000     		.short	0
 5446 09ec 0000     		.short	0
 5447 09ee 0000     		.short	0
 5448 09f0 0000     		.short	0
 5449 09f2 0C30     		.short	12300
 5450 09f4 0C30     		.short	12300
 5451 09f6 0C30     		.short	12300
 5452 09f8 0C30     		.short	12300
 5453 09fa 0C30     		.short	12300
 5454 09fc 0C30     		.short	12300
 5455 09fe 0C30     		.short	12300
 5456 0a00 0C30     		.short	12300
 5457 0a02 0C30     		.short	12300
 5458 0a04 0C30     		.short	12300
 5459 0a06 0C30     		.short	12300
 5460 0a08 0C30     		.short	12300
 5461 0a0a 0C30     		.short	12300
 5462 0a0c 0C30     		.short	12300
 5463 0a0e 1818     		.short	6168
 5464 0a10 F81F     		.short	8184
 5465 0a12 E007     		.short	2016
 5466 0a14 0000     		.short	0
 5467 0a16 0000     		.short	0
 5468 0a18 0000     		.short	0
 5469 0a1a 0000     		.short	0
 5470 0a1c 0000     		.short	0
 5471 0a1e 0000     		.short	0
 5472 0a20 0000     		.short	0
 5473 0a22 0360     		.short	24579
 5474 0a24 0630     		.short	12294
 5475 0a26 0630     		.short	12294
 5476 0a28 0630     		.short	12294
 5477 0a2a 0C18     		.short	6156
 5478 0a2c 0C18     		.short	6156
 5479 0a2e 0C18     		.short	6156
 5480 0a30 180C     		.short	3096
 5481 0a32 180C     		.short	3096
 5482 0a34 380E     		.short	3640
 5483 0a36 3006     		.short	1584
 5484 0a38 3006     		.short	1584
 5485 0a3a 7007     		.short	1904
 5486 0a3c 6003     		.short	864
 5487 0a3e 6003     		.short	864
 5488 0a40 C001     		.short	448
 5489 0a42 C001     		.short	448
 5490 0a44 0000     		.short	0
 5491 0a46 0000     		.short	0
 5492 0a48 0000     		.short	0
 5493 0a4a 0000     		.short	0
 5494 0a4c 0000     		.short	0
 5495 0a4e 0000     		.short	0
 5496 0a50 0000     		.short	0
 5497 0a52 0360     		.short	24579
 5498 0a54 C361     		.short	25027
 5499 0a56 C361     		.short	25027
 5500 0a58 C361     		.short	25027
 5501 0a5a 6633     		.short	13158
 5502 0a5c 6633     		.short	13158
 5503 0a5e 6633     		.short	13158
 5504 0a60 6633     		.short	13158
 5505 0a62 6633     		.short	13158
 5506 0a64 6633     		.short	13158
 5507 0a66 6C1B     		.short	7020
 5508 0a68 6C1B     		.short	7020
 5509 0a6a 6C1B     		.short	7020
 5510 0a6c 2C1A     		.short	6700
 5511 0a6e 3C1E     		.short	7740
 5512 0a70 380E     		.short	3640
 5513 0a72 380E     		.short	3640
 5514 0a74 0000     		.short	0
 5515 0a76 0000     		.short	0
 5516 0a78 0000     		.short	0
 5517 0a7a 0000     		.short	0
 5518 0a7c 0000     		.short	0
 5519 0a7e 0000     		.short	0
 5520 0a80 0000     		.short	0
 5521 0a82 0FE0     		.short	-8177
 5522 0a84 0C70     		.short	28684
 5523 0a86 1830     		.short	12312
 5524 0a88 3018     		.short	6192
 5525 0a8a 700C     		.short	3184
 5526 0a8c 600E     		.short	3680
 5527 0a8e C007     		.short	1984
 5528 0a90 8003     		.short	896
 5529 0a92 8003     		.short	896
 5530 0a94 C003     		.short	960
 5531 0a96 E006     		.short	1760
 5532 0a98 700C     		.short	3184
 5533 0a9a 301C     		.short	7216
 5534 0a9c 1818     		.short	6168
 5535 0a9e 0C30     		.short	12300
 5536 0aa0 0E60     		.short	24590
 5537 0aa2 07E0     		.short	-8185
 5538 0aa4 0000     		.short	0
 5539 0aa6 0000     		.short	0
 5540 0aa8 0000     		.short	0
 5541 0aaa 0000     		.short	0
 5542 0aac 0000     		.short	0
 5543 0aae 0000     		.short	0
 5544 0ab0 0000     		.short	0
 5545 0ab2 03C0     		.short	-16381
 5546 0ab4 0660     		.short	24582
 5547 0ab6 0C30     		.short	12300
 5548 0ab8 1C38     		.short	14364
 5549 0aba 3818     		.short	6200
 5550 0abc 300C     		.short	3120
 5551 0abe 6006     		.short	1632
 5552 0ac0 E007     		.short	2016
 5553 0ac2 C003     		.short	960
 5554 0ac4 8001     		.short	384
 5555 0ac6 8001     		.short	384
 5556 0ac8 8001     		.short	384
 5557 0aca 8001     		.short	384
 5558 0acc 8001     		.short	384
 5559 0ace 8001     		.short	384
 5560 0ad0 8001     		.short	384
 5561 0ad2 8001     		.short	384
 5562 0ad4 0000     		.short	0
 5563 0ad6 0000     		.short	0
 5564 0ad8 0000     		.short	0
 5565 0ada 0000     		.short	0
 5566 0adc 0000     		.short	0
 5567 0ade 0000     		.short	0
 5568 0ae0 0000     		.short	0
 5569 0ae2 FC7F     		.short	32764
 5570 0ae4 FC7F     		.short	32764
 5571 0ae6 0060     		.short	24576
 5572 0ae8 0030     		.short	12288
 5573 0aea 0018     		.short	6144
 5574 0aec 000C     		.short	3072
 5575 0aee 0006     		.short	1536
 5576 0af0 0003     		.short	768
 5577 0af2 8001     		.short	384
 5578 0af4 C000     		.short	192
 5579 0af6 6000     		.short	96
 5580 0af8 3000     		.short	48
 5581 0afa 1800     		.short	24
 5582 0afc 0C00     		.short	12
 5583 0afe 0600     		.short	6
 5584 0b00 FE7F     		.short	32766
 5585 0b02 FE7F     		.short	32766
 5586 0b04 0000     		.short	0
 5587 0b06 0000     		.short	0
 5588 0b08 0000     		.short	0
 5589 0b0a 0000     		.short	0
 5590 0b0c 0000     		.short	0
 5591 0b0e 0000     		.short	0
 5592 0b10 0000     		.short	0
 5593 0b12 E003     		.short	992
 5594 0b14 E003     		.short	992
 5595 0b16 6000     		.short	96
 5596 0b18 6000     		.short	96
 5597 0b1a 6000     		.short	96
 5598 0b1c 6000     		.short	96
 5599 0b1e 6000     		.short	96
 5600 0b20 6000     		.short	96
 5601 0b22 6000     		.short	96
 5602 0b24 6000     		.short	96
 5603 0b26 6000     		.short	96
 5604 0b28 6000     		.short	96
 5605 0b2a 6000     		.short	96
 5606 0b2c 6000     		.short	96
 5607 0b2e 6000     		.short	96
 5608 0b30 6000     		.short	96
 5609 0b32 6000     		.short	96
 5610 0b34 6000     		.short	96
 5611 0b36 6000     		.short	96
 5612 0b38 6000     		.short	96
 5613 0b3a E003     		.short	992
 5614 0b3c E003     		.short	992
 5615 0b3e 0000     		.short	0
 5616 0b40 0000     		.short	0
 5617 0b42 3000     		.short	48
 5618 0b44 3000     		.short	48
 5619 0b46 6000     		.short	96
 5620 0b48 6000     		.short	96
 5621 0b4a 6000     		.short	96
 5622 0b4c C000     		.short	192
 5623 0b4e C000     		.short	192
 5624 0b50 C000     		.short	192
 5625 0b52 C001     		.short	448
 5626 0b54 8001     		.short	384
 5627 0b56 8001     		.short	384
 5628 0b58 8001     		.short	384
 5629 0b5a 0003     		.short	768
 5630 0b5c 0003     		.short	768
 5631 0b5e 0003     		.short	768
 5632 0b60 0006     		.short	1536
 5633 0b62 0006     		.short	1536
 5634 0b64 0000     		.short	0
 5635 0b66 0000     		.short	0
 5636 0b68 0000     		.short	0
 5637 0b6a 0000     		.short	0
 5638 0b6c 0000     		.short	0
 5639 0b6e 0000     		.short	0
 5640 0b70 0000     		.short	0
 5641 0b72 E003     		.short	992
 5642 0b74 E003     		.short	992
 5643 0b76 0003     		.short	768
 5644 0b78 0003     		.short	768
 5645 0b7a 0003     		.short	768
 5646 0b7c 0003     		.short	768
 5647 0b7e 0003     		.short	768
 5648 0b80 0003     		.short	768
 5649 0b82 0003     		.short	768
 5650 0b84 0003     		.short	768
 5651 0b86 0003     		.short	768
 5652 0b88 0003     		.short	768
 5653 0b8a 0003     		.short	768
 5654 0b8c 0003     		.short	768
 5655 0b8e 0003     		.short	768
 5656 0b90 0003     		.short	768
 5657 0b92 0003     		.short	768
 5658 0b94 0003     		.short	768
 5659 0b96 0003     		.short	768
 5660 0b98 0003     		.short	768
 5661 0b9a E003     		.short	992
 5662 0b9c E003     		.short	992
 5663 0b9e 0000     		.short	0
 5664 0ba0 0000     		.short	0
 5665 0ba2 0000     		.short	0
 5666 0ba4 C001     		.short	448
 5667 0ba6 C001     		.short	448
 5668 0ba8 6003     		.short	864
 5669 0baa 6003     		.short	864
 5670 0bac 6003     		.short	864
 5671 0bae 3006     		.short	1584
 5672 0bb0 3006     		.short	1584
 5673 0bb2 180C     		.short	3096
 5674 0bb4 180C     		.short	3096
 5675 0bb6 0000     		.short	0
 5676 0bb8 0000     		.short	0
 5677 0bba 0000     		.short	0
 5678 0bbc 0000     		.short	0
 5679 0bbe 0000     		.short	0
 5680 0bc0 0000     		.short	0
 5681 0bc2 0000     		.short	0
 5682 0bc4 0000     		.short	0
 5683 0bc6 0000     		.short	0
 5684 0bc8 0000     		.short	0
 5685 0bca 0000     		.short	0
 5686 0bcc 0000     		.short	0
 5687 0bce 0000     		.short	0
 5688 0bd0 0000     		.short	0
 5689 0bd2 0000     		.short	0
 5690 0bd4 0000     		.short	0
 5691 0bd6 0000     		.short	0
 5692 0bd8 0000     		.short	0
 5693 0bda 0000     		.short	0
 5694 0bdc 0000     		.short	0
 5695 0bde 0000     		.short	0
 5696 0be0 0000     		.short	0
 5697 0be2 0000     		.short	0
 5698 0be4 0000     		.short	0
 5699 0be6 0000     		.short	0
 5700 0be8 0000     		.short	0
 5701 0bea 0000     		.short	0
 5702 0bec 0000     		.short	0
 5703 0bee 0000     		.short	0
 5704 0bf0 0000     		.short	0
 5705 0bf2 FFFF     		.short	-1
 5706 0bf4 FFFF     		.short	-1
 5707 0bf6 0000     		.short	0
 5708 0bf8 0000     		.short	0
 5709 0bfa 0000     		.short	0
 5710 0bfc 0000     		.short	0
 5711 0bfe 0000     		.short	0
 5712 0c00 0000     		.short	0
 5713 0c02 0C00     		.short	12
 5714 0c04 0C00     		.short	12
 5715 0c06 0C00     		.short	12
 5716 0c08 0C00     		.short	12
 5717 0c0a 0C00     		.short	12
 5718 0c0c 0C00     		.short	12
 5719 0c0e 0000     		.short	0
 5720 0c10 0000     		.short	0
 5721 0c12 0000     		.short	0
 5722 0c14 0000     		.short	0
 5723 0c16 0000     		.short	0
 5724 0c18 0000     		.short	0
 5725 0c1a 0000     		.short	0
 5726 0c1c 0000     		.short	0
 5727 0c1e 0000     		.short	0
 5728 0c20 0000     		.short	0
 5729 0c22 0000     		.short	0
 5730 0c24 0000     		.short	0
 5731 0c26 0000     		.short	0
 5732 0c28 0000     		.short	0
 5733 0c2a 0000     		.short	0
 5734 0c2c 0000     		.short	0
 5735 0c2e 0000     		.short	0
 5736 0c30 0000     		.short	0
 5737 0c32 0000     		.short	0
 5738 0c34 0000     		.short	0
 5739 0c36 0000     		.short	0
 5740 0c38 0000     		.short	0
 5741 0c3a 0000     		.short	0
 5742 0c3c F003     		.short	1008
 5743 0c3e F807     		.short	2040
 5744 0c40 1C0C     		.short	3100
 5745 0c42 0C0C     		.short	3084
 5746 0c44 000F     		.short	3840
 5747 0c46 F00F     		.short	4080
 5748 0c48 F80C     		.short	3320
 5749 0c4a 0C0C     		.short	3084
 5750 0c4c 0C0C     		.short	3084
 5751 0c4e 1C0F     		.short	3868
 5752 0c50 F80F     		.short	4088
 5753 0c52 F018     		.short	6384
 5754 0c54 0000     		.short	0
 5755 0c56 0000     		.short	0
 5756 0c58 0000     		.short	0
 5757 0c5a 0000     		.short	0
 5758 0c5c 0000     		.short	0
 5759 0c5e 0000     		.short	0
 5760 0c60 0000     		.short	0
 5761 0c62 1800     		.short	24
 5762 0c64 1800     		.short	24
 5763 0c66 1800     		.short	24
 5764 0c68 1800     		.short	24
 5765 0c6a 1800     		.short	24
 5766 0c6c D803     		.short	984
 5767 0c6e F80F     		.short	4088
 5768 0c70 380C     		.short	3128
 5769 0c72 1818     		.short	6168
 5770 0c74 1818     		.short	6168
 5771 0c76 1818     		.short	6168
 5772 0c78 1818     		.short	6168
 5773 0c7a 1818     		.short	6168
 5774 0c7c 1818     		.short	6168
 5775 0c7e 380C     		.short	3128
 5776 0c80 F80F     		.short	4088
 5777 0c82 D803     		.short	984
 5778 0c84 0000     		.short	0
 5779 0c86 0000     		.short	0
 5780 0c88 0000     		.short	0
 5781 0c8a 0000     		.short	0
 5782 0c8c 0000     		.short	0
 5783 0c8e 0000     		.short	0
 5784 0c90 0000     		.short	0
 5785 0c92 0000     		.short	0
 5786 0c94 0000     		.short	0
 5787 0c96 0000     		.short	0
 5788 0c98 0000     		.short	0
 5789 0c9a 0000     		.short	0
 5790 0c9c C003     		.short	960
 5791 0c9e F007     		.short	2032
 5792 0ca0 300E     		.short	3632
 5793 0ca2 180C     		.short	3096
 5794 0ca4 1800     		.short	24
 5795 0ca6 1800     		.short	24
 5796 0ca8 1800     		.short	24
 5797 0caa 1800     		.short	24
 5798 0cac 180C     		.short	3096
 5799 0cae 300E     		.short	3632
 5800 0cb0 F007     		.short	2032
 5801 0cb2 C003     		.short	960
 5802 0cb4 0000     		.short	0
 5803 0cb6 0000     		.short	0
 5804 0cb8 0000     		.short	0
 5805 0cba 0000     		.short	0
 5806 0cbc 0000     		.short	0
 5807 0cbe 0000     		.short	0
 5808 0cc0 0000     		.short	0
 5809 0cc2 0018     		.short	6144
 5810 0cc4 0018     		.short	6144
 5811 0cc6 0018     		.short	6144
 5812 0cc8 0018     		.short	6144
 5813 0cca 0018     		.short	6144
 5814 0ccc C01B     		.short	7104
 5815 0cce F01F     		.short	8176
 5816 0cd0 301C     		.short	7216
 5817 0cd2 1818     		.short	6168
 5818 0cd4 1818     		.short	6168
 5819 0cd6 1818     		.short	6168
 5820 0cd8 1818     		.short	6168
 5821 0cda 1818     		.short	6168
 5822 0cdc 1818     		.short	6168
 5823 0cde 301C     		.short	7216
 5824 0ce0 F01F     		.short	8176
 5825 0ce2 C01B     		.short	7104
 5826 0ce4 0000     		.short	0
 5827 0ce6 0000     		.short	0
 5828 0ce8 0000     		.short	0
 5829 0cea 0000     		.short	0
 5830 0cec 0000     		.short	0
 5831 0cee 0000     		.short	0
 5832 0cf0 0000     		.short	0
 5833 0cf2 0000     		.short	0
 5834 0cf4 0000     		.short	0
 5835 0cf6 0000     		.short	0
 5836 0cf8 0000     		.short	0
 5837 0cfa 0000     		.short	0
 5838 0cfc C003     		.short	960
 5839 0cfe F00F     		.short	4080
 5840 0d00 300C     		.short	3120
 5841 0d02 1818     		.short	6168
 5842 0d04 F81F     		.short	8184
 5843 0d06 F81F     		.short	8184
 5844 0d08 1800     		.short	24
 5845 0d0a 1800     		.short	24
 5846 0d0c 3818     		.short	6200
 5847 0d0e 301C     		.short	7216
 5848 0d10 F00F     		.short	4080
 5849 0d12 C007     		.short	1984
 5850 0d14 0000     		.short	0
 5851 0d16 0000     		.short	0
 5852 0d18 0000     		.short	0
 5853 0d1a 0000     		.short	0
 5854 0d1c 0000     		.short	0
 5855 0d1e 0000     		.short	0
 5856 0d20 0000     		.short	0
 5857 0d22 800F     		.short	3968
 5858 0d24 C00F     		.short	4032
 5859 0d26 C000     		.short	192
 5860 0d28 C000     		.short	192
 5861 0d2a C000     		.short	192
 5862 0d2c F007     		.short	2032
 5863 0d2e F007     		.short	2032
 5864 0d30 C000     		.short	192
 5865 0d32 C000     		.short	192
 5866 0d34 C000     		.short	192
 5867 0d36 C000     		.short	192
 5868 0d38 C000     		.short	192
 5869 0d3a C000     		.short	192
 5870 0d3c C000     		.short	192
 5871 0d3e C000     		.short	192
 5872 0d40 C000     		.short	192
 5873 0d42 C000     		.short	192
 5874 0d44 0000     		.short	0
 5875 0d46 0000     		.short	0
 5876 0d48 0000     		.short	0
 5877 0d4a 0000     		.short	0
 5878 0d4c 0000     		.short	0
 5879 0d4e 0000     		.short	0
 5880 0d50 0000     		.short	0
 5881 0d52 0000     		.short	0
 5882 0d54 0000     		.short	0
 5883 0d56 0000     		.short	0
 5884 0d58 0000     		.short	0
 5885 0d5a 0000     		.short	0
 5886 0d5c E00D     		.short	3552
 5887 0d5e F80F     		.short	4088
 5888 0d60 180E     		.short	3608
 5889 0d62 0C0C     		.short	3084
 5890 0d64 0C0C     		.short	3084
 5891 0d66 0C0C     		.short	3084
 5892 0d68 0C0C     		.short	3084
 5893 0d6a 0C0C     		.short	3084
 5894 0d6c 0C0C     		.short	3084
 5895 0d6e 180E     		.short	3608
 5896 0d70 F80F     		.short	4088
 5897 0d72 E00D     		.short	3552
 5898 0d74 000C     		.short	3072
 5899 0d76 0C0C     		.short	3084
 5900 0d78 1C06     		.short	1564
 5901 0d7a F807     		.short	2040
 5902 0d7c F001     		.short	496
 5903 0d7e 0000     		.short	0
 5904 0d80 0000     		.short	0
 5905 0d82 1800     		.short	24
 5906 0d84 1800     		.short	24
 5907 0d86 1800     		.short	24
 5908 0d88 1800     		.short	24
 5909 0d8a 1800     		.short	24
 5910 0d8c D807     		.short	2008
 5911 0d8e F80F     		.short	4088
 5912 0d90 381C     		.short	7224
 5913 0d92 1818     		.short	6168
 5914 0d94 1818     		.short	6168
 5915 0d96 1818     		.short	6168
 5916 0d98 1818     		.short	6168
 5917 0d9a 1818     		.short	6168
 5918 0d9c 1818     		.short	6168
 5919 0d9e 1818     		.short	6168
 5920 0da0 1818     		.short	6168
 5921 0da2 1818     		.short	6168
 5922 0da4 0000     		.short	0
 5923 0da6 0000     		.short	0
 5924 0da8 0000     		.short	0
 5925 0daa 0000     		.short	0
 5926 0dac 0000     		.short	0
 5927 0dae 0000     		.short	0
 5928 0db0 0000     		.short	0
 5929 0db2 C000     		.short	192
 5930 0db4 C000     		.short	192
 5931 0db6 0000     		.short	0
 5932 0db8 0000     		.short	0
 5933 0dba 0000     		.short	0
 5934 0dbc C000     		.short	192
 5935 0dbe C000     		.short	192
 5936 0dc0 C000     		.short	192
 5937 0dc2 C000     		.short	192
 5938 0dc4 C000     		.short	192
 5939 0dc6 C000     		.short	192
 5940 0dc8 C000     		.short	192
 5941 0dca C000     		.short	192
 5942 0dcc C000     		.short	192
 5943 0dce C000     		.short	192
 5944 0dd0 C000     		.short	192
 5945 0dd2 C000     		.short	192
 5946 0dd4 0000     		.short	0
 5947 0dd6 0000     		.short	0
 5948 0dd8 0000     		.short	0
 5949 0dda 0000     		.short	0
 5950 0ddc 0000     		.short	0
 5951 0dde 0000     		.short	0
 5952 0de0 0000     		.short	0
 5953 0de2 C000     		.short	192
 5954 0de4 C000     		.short	192
 5955 0de6 0000     		.short	0
 5956 0de8 0000     		.short	0
 5957 0dea 0000     		.short	0
 5958 0dec C000     		.short	192
 5959 0dee C000     		.short	192
 5960 0df0 C000     		.short	192
 5961 0df2 C000     		.short	192
 5962 0df4 C000     		.short	192
 5963 0df6 C000     		.short	192
 5964 0df8 C000     		.short	192
 5965 0dfa C000     		.short	192
 5966 0dfc C000     		.short	192
 5967 0dfe C000     		.short	192
 5968 0e00 C000     		.short	192
 5969 0e02 C000     		.short	192
 5970 0e04 C000     		.short	192
 5971 0e06 C000     		.short	192
 5972 0e08 C000     		.short	192
 5973 0e0a F800     		.short	248
 5974 0e0c 7800     		.short	120
 5975 0e0e 0000     		.short	0
 5976 0e10 0000     		.short	0
 5977 0e12 0C00     		.short	12
 5978 0e14 0C00     		.short	12
 5979 0e16 0C00     		.short	12
 5980 0e18 0C00     		.short	12
 5981 0e1a 0C00     		.short	12
 5982 0e1c 0C0C     		.short	3084
 5983 0e1e 0C06     		.short	1548
 5984 0e20 0C03     		.short	780
 5985 0e22 8C01     		.short	396
 5986 0e24 CC00     		.short	204
 5987 0e26 6C00     		.short	108
 5988 0e28 FC00     		.short	252
 5989 0e2a 9C01     		.short	412
 5990 0e2c 8C03     		.short	908
 5991 0e2e 0C03     		.short	780
 5992 0e30 0C06     		.short	1548
 5993 0e32 0C0C     		.short	3084
 5994 0e34 0000     		.short	0
 5995 0e36 0000     		.short	0
 5996 0e38 0000     		.short	0
 5997 0e3a 0000     		.short	0
 5998 0e3c 0000     		.short	0
 5999 0e3e 0000     		.short	0
 6000 0e40 0000     		.short	0
 6001 0e42 C000     		.short	192
 6002 0e44 C000     		.short	192
 6003 0e46 C000     		.short	192
 6004 0e48 C000     		.short	192
 6005 0e4a C000     		.short	192
 6006 0e4c C000     		.short	192
 6007 0e4e C000     		.short	192
 6008 0e50 C000     		.short	192
 6009 0e52 C000     		.short	192
 6010 0e54 C000     		.short	192
 6011 0e56 C000     		.short	192
 6012 0e58 C000     		.short	192
 6013 0e5a C000     		.short	192
 6014 0e5c C000     		.short	192
 6015 0e5e C000     		.short	192
 6016 0e60 C000     		.short	192
 6017 0e62 C000     		.short	192
 6018 0e64 0000     		.short	0
 6019 0e66 0000     		.short	0
 6020 0e68 0000     		.short	0
 6021 0e6a 0000     		.short	0
 6022 0e6c 0000     		.short	0
 6023 0e6e 0000     		.short	0
 6024 0e70 0000     		.short	0
 6025 0e72 0000     		.short	0
 6026 0e74 0000     		.short	0
 6027 0e76 0000     		.short	0
 6028 0e78 0000     		.short	0
 6029 0e7a 0000     		.short	0
 6030 0e7c 7C3C     		.short	15484
 6031 0e7e FF7E     		.short	32511
 6032 0e80 C7E3     		.short	-7225
 6033 0e82 83C1     		.short	-15997
 6034 0e84 83C1     		.short	-15997
 6035 0e86 83C1     		.short	-15997
 6036 0e88 83C1     		.short	-15997
 6037 0e8a 83C1     		.short	-15997
 6038 0e8c 83C1     		.short	-15997
 6039 0e8e 83C1     		.short	-15997
 6040 0e90 83C1     		.short	-15997
 6041 0e92 83C1     		.short	-15997
 6042 0e94 0000     		.short	0
 6043 0e96 0000     		.short	0
 6044 0e98 0000     		.short	0
 6045 0e9a 0000     		.short	0
 6046 0e9c 0000     		.short	0
 6047 0e9e 0000     		.short	0
 6048 0ea0 0000     		.short	0
 6049 0ea2 0000     		.short	0
 6050 0ea4 0000     		.short	0
 6051 0ea6 0000     		.short	0
 6052 0ea8 0000     		.short	0
 6053 0eaa 0000     		.short	0
 6054 0eac 9807     		.short	1944
 6055 0eae F80F     		.short	4088
 6056 0eb0 381C     		.short	7224
 6057 0eb2 1818     		.short	6168
 6058 0eb4 1818     		.short	6168
 6059 0eb6 1818     		.short	6168
 6060 0eb8 1818     		.short	6168
 6061 0eba 1818     		.short	6168
 6062 0ebc 1818     		.short	6168
 6063 0ebe 1818     		.short	6168
 6064 0ec0 1818     		.short	6168
 6065 0ec2 1818     		.short	6168
 6066 0ec4 0000     		.short	0
 6067 0ec6 0000     		.short	0
 6068 0ec8 0000     		.short	0
 6069 0eca 0000     		.short	0
 6070 0ecc 0000     		.short	0
 6071 0ece 0000     		.short	0
 6072 0ed0 0000     		.short	0
 6073 0ed2 0000     		.short	0
 6074 0ed4 0000     		.short	0
 6075 0ed6 0000     		.short	0
 6076 0ed8 0000     		.short	0
 6077 0eda 0000     		.short	0
 6078 0edc C003     		.short	960
 6079 0ede F00F     		.short	4080
 6080 0ee0 300C     		.short	3120
 6081 0ee2 1818     		.short	6168
 6082 0ee4 1818     		.short	6168
 6083 0ee6 1818     		.short	6168
 6084 0ee8 1818     		.short	6168
 6085 0eea 1818     		.short	6168
 6086 0eec 1818     		.short	6168
 6087 0eee 300C     		.short	3120
 6088 0ef0 F00F     		.short	4080
 6089 0ef2 C003     		.short	960
 6090 0ef4 0000     		.short	0
 6091 0ef6 0000     		.short	0
 6092 0ef8 0000     		.short	0
 6093 0efa 0000     		.short	0
 6094 0efc 0000     		.short	0
 6095 0efe 0000     		.short	0
 6096 0f00 0000     		.short	0
 6097 0f02 0000     		.short	0
 6098 0f04 0000     		.short	0
 6099 0f06 0000     		.short	0
 6100 0f08 0000     		.short	0
 6101 0f0a 0000     		.short	0
 6102 0f0c D803     		.short	984
 6103 0f0e F80F     		.short	4088
 6104 0f10 380C     		.short	3128
 6105 0f12 1818     		.short	6168
 6106 0f14 1818     		.short	6168
 6107 0f16 1818     		.short	6168
 6108 0f18 1818     		.short	6168
 6109 0f1a 1818     		.short	6168
 6110 0f1c 1818     		.short	6168
 6111 0f1e 380C     		.short	3128
 6112 0f20 F80F     		.short	4088
 6113 0f22 D803     		.short	984
 6114 0f24 1800     		.short	24
 6115 0f26 1800     		.short	24
 6116 0f28 1800     		.short	24
 6117 0f2a 1800     		.short	24
 6118 0f2c 1800     		.short	24
 6119 0f2e 0000     		.short	0
 6120 0f30 0000     		.short	0
 6121 0f32 0000     		.short	0
 6122 0f34 0000     		.short	0
 6123 0f36 0000     		.short	0
 6124 0f38 0000     		.short	0
 6125 0f3a 0000     		.short	0
 6126 0f3c C01B     		.short	7104
 6127 0f3e F01F     		.short	8176
 6128 0f40 301C     		.short	7216
 6129 0f42 1818     		.short	6168
 6130 0f44 1818     		.short	6168
 6131 0f46 1818     		.short	6168
 6132 0f48 1818     		.short	6168
 6133 0f4a 1818     		.short	6168
 6134 0f4c 1818     		.short	6168
 6135 0f4e 301C     		.short	7216
 6136 0f50 F01F     		.short	8176
 6137 0f52 C01B     		.short	7104
 6138 0f54 0018     		.short	6144
 6139 0f56 0018     		.short	6144
 6140 0f58 0018     		.short	6144
 6141 0f5a 0018     		.short	6144
 6142 0f5c 0018     		.short	6144
 6143 0f5e 0000     		.short	0
 6144 0f60 0000     		.short	0
 6145 0f62 0000     		.short	0
 6146 0f64 0000     		.short	0
 6147 0f66 0000     		.short	0
 6148 0f68 0000     		.short	0
 6149 0f6a 0000     		.short	0
 6150 0f6c B007     		.short	1968
 6151 0f6e F003     		.short	1008
 6152 0f70 7000     		.short	112
 6153 0f72 3000     		.short	48
 6154 0f74 3000     		.short	48
 6155 0f76 3000     		.short	48
 6156 0f78 3000     		.short	48
 6157 0f7a 3000     		.short	48
 6158 0f7c 3000     		.short	48
 6159 0f7e 3000     		.short	48
 6160 0f80 3000     		.short	48
 6161 0f82 3000     		.short	48
 6162 0f84 0000     		.short	0
 6163 0f86 0000     		.short	0
 6164 0f88 0000     		.short	0
 6165 0f8a 0000     		.short	0
 6166 0f8c 0000     		.short	0
 6167 0f8e 0000     		.short	0
 6168 0f90 0000     		.short	0
 6169 0f92 0000     		.short	0
 6170 0f94 0000     		.short	0
 6171 0f96 0000     		.short	0
 6172 0f98 0000     		.short	0
 6173 0f9a 0000     		.short	0
 6174 0f9c E003     		.short	992
 6175 0f9e F003     		.short	1008
 6176 0fa0 380E     		.short	3640
 6177 0fa2 180C     		.short	3096
 6178 0fa4 3800     		.short	56
 6179 0fa6 F003     		.short	1008
 6180 0fa8 C007     		.short	1984
 6181 0faa 000C     		.short	3072
 6182 0fac 180C     		.short	3096
 6183 0fae 380E     		.short	3640
 6184 0fb0 F007     		.short	2032
 6185 0fb2 E003     		.short	992
 6186 0fb4 0000     		.short	0
 6187 0fb6 0000     		.short	0
 6188 0fb8 0000     		.short	0
 6189 0fba 0000     		.short	0
 6190 0fbc 0000     		.short	0
 6191 0fbe 0000     		.short	0
 6192 0fc0 0000     		.short	0
 6193 0fc2 0000     		.short	0
 6194 0fc4 8000     		.short	128
 6195 0fc6 C000     		.short	192
 6196 0fc8 C000     		.short	192
 6197 0fca C000     		.short	192
 6198 0fcc F007     		.short	2032
 6199 0fce F007     		.short	2032
 6200 0fd0 C000     		.short	192
 6201 0fd2 C000     		.short	192
 6202 0fd4 C000     		.short	192
 6203 0fd6 C000     		.short	192
 6204 0fd8 C000     		.short	192
 6205 0fda C000     		.short	192
 6206 0fdc C000     		.short	192
 6207 0fde C000     		.short	192
 6208 0fe0 C007     		.short	1984
 6209 0fe2 8007     		.short	1920
 6210 0fe4 0000     		.short	0
 6211 0fe6 0000     		.short	0
 6212 0fe8 0000     		.short	0
 6213 0fea 0000     		.short	0
 6214 0fec 0000     		.short	0
 6215 0fee 0000     		.short	0
 6216 0ff0 0000     		.short	0
 6217 0ff2 0000     		.short	0
 6218 0ff4 0000     		.short	0
 6219 0ff6 0000     		.short	0
 6220 0ff8 0000     		.short	0
 6221 0ffa 0000     		.short	0
 6222 0ffc 1818     		.short	6168
 6223 0ffe 1818     		.short	6168
 6224 1000 1818     		.short	6168
 6225 1002 1818     		.short	6168
 6226 1004 1818     		.short	6168
 6227 1006 1818     		.short	6168
 6228 1008 1818     		.short	6168
 6229 100a 1818     		.short	6168
 6230 100c 1818     		.short	6168
 6231 100e 381C     		.short	7224
 6232 1010 F01F     		.short	8176
 6233 1012 E019     		.short	6624
 6234 1014 0000     		.short	0
 6235 1016 0000     		.short	0
 6236 1018 0000     		.short	0
 6237 101a 0000     		.short	0
 6238 101c 0000     		.short	0
 6239 101e 0000     		.short	0
 6240 1020 0000     		.short	0
 6241 1022 0000     		.short	0
 6242 1024 0000     		.short	0
 6243 1026 0000     		.short	0
 6244 1028 0000     		.short	0
 6245 102a 0000     		.short	0
 6246 102c 0C18     		.short	6156
 6247 102e 180C     		.short	3096
 6248 1030 180C     		.short	3096
 6249 1032 180C     		.short	3096
 6250 1034 3006     		.short	1584
 6251 1036 3006     		.short	1584
 6252 1038 3006     		.short	1584
 6253 103a 6003     		.short	864
 6254 103c 6003     		.short	864
 6255 103e 6003     		.short	864
 6256 1040 C001     		.short	448
 6257 1042 C001     		.short	448
 6258 1044 0000     		.short	0
 6259 1046 0000     		.short	0
 6260 1048 0000     		.short	0
 6261 104a 0000     		.short	0
 6262 104c 0000     		.short	0
 6263 104e 0000     		.short	0
 6264 1050 0000     		.short	0
 6265 1052 0000     		.short	0
 6266 1054 0000     		.short	0
 6267 1056 0000     		.short	0
 6268 1058 0000     		.short	0
 6269 105a 0000     		.short	0
 6270 105c C141     		.short	16833
 6271 105e C141     		.short	16833
 6272 1060 C361     		.short	25027
 6273 1062 6363     		.short	25443
 6274 1064 6363     		.short	25443
 6275 1066 6363     		.short	25443
 6276 1068 3636     		.short	13878
 6277 106a 3636     		.short	13878
 6278 106c 3636     		.short	13878
 6279 106e 1C1C     		.short	7196
 6280 1070 1C1C     		.short	7196
 6281 1072 1C1C     		.short	7196
 6282 1074 0000     		.short	0
 6283 1076 0000     		.short	0
 6284 1078 0000     		.short	0
 6285 107a 0000     		.short	0
 6286 107c 0000     		.short	0
 6287 107e 0000     		.short	0
 6288 1080 0000     		.short	0
 6289 1082 0000     		.short	0
 6290 1084 0000     		.short	0
 6291 1086 0000     		.short	0
 6292 1088 0000     		.short	0
 6293 108a 0000     		.short	0
 6294 108c 1C38     		.short	14364
 6295 108e 381C     		.short	7224
 6296 1090 300C     		.short	3120
 6297 1092 6006     		.short	1632
 6298 1094 C003     		.short	960
 6299 1096 C003     		.short	960
 6300 1098 C003     		.short	960
 6301 109a C003     		.short	960
 6302 109c 6006     		.short	1632
 6303 109e 300C     		.short	3120
 6304 10a0 381C     		.short	7224
 6305 10a2 1C38     		.short	14364
 6306 10a4 0000     		.short	0
 6307 10a6 0000     		.short	0
 6308 10a8 0000     		.short	0
 6309 10aa 0000     		.short	0
 6310 10ac 0000     		.short	0
 6311 10ae 0000     		.short	0
 6312 10b0 0000     		.short	0
 6313 10b2 0000     		.short	0
 6314 10b4 0000     		.short	0
 6315 10b6 0000     		.short	0
 6316 10b8 0000     		.short	0
 6317 10ba 0000     		.short	0
 6318 10bc 1830     		.short	12312
 6319 10be 3018     		.short	6192
 6320 10c0 3018     		.short	6192
 6321 10c2 7018     		.short	6256
 6322 10c4 600C     		.short	3168
 6323 10c6 600C     		.short	3168
 6324 10c8 E00C     		.short	3296
 6325 10ca C006     		.short	1728
 6326 10cc C006     		.short	1728
 6327 10ce 8003     		.short	896
 6328 10d0 8003     		.short	896
 6329 10d2 8003     		.short	896
 6330 10d4 8001     		.short	384
 6331 10d6 8001     		.short	384
 6332 10d8 C001     		.short	448
 6333 10da F000     		.short	240
 6334 10dc 7000     		.short	112
 6335 10de 0000     		.short	0
 6336 10e0 0000     		.short	0
 6337 10e2 0000     		.short	0
 6338 10e4 0000     		.short	0
 6339 10e6 0000     		.short	0
 6340 10e8 0000     		.short	0
 6341 10ea 0000     		.short	0
 6342 10ec FC1F     		.short	8188
 6343 10ee FC1F     		.short	8188
 6344 10f0 000C     		.short	3072
 6345 10f2 0006     		.short	1536
 6346 10f4 0003     		.short	768
 6347 10f6 8001     		.short	384
 6348 10f8 C000     		.short	192
 6349 10fa 6000     		.short	96
 6350 10fc 3000     		.short	48
 6351 10fe 1800     		.short	24
 6352 1100 FC1F     		.short	8188
 6353 1102 FC1F     		.short	8188
 6354 1104 0000     		.short	0
 6355 1106 0000     		.short	0
 6356 1108 0000     		.short	0
 6357 110a 0000     		.short	0
 6358 110c 0000     		.short	0
 6359 110e 0000     		.short	0
 6360 1110 0000     		.short	0
 6361 1112 0003     		.short	768
 6362 1114 8001     		.short	384
 6363 1116 C000     		.short	192
 6364 1118 C000     		.short	192
 6365 111a C000     		.short	192
 6366 111c C000     		.short	192
 6367 111e C000     		.short	192
 6368 1120 C000     		.short	192
 6369 1122 6000     		.short	96
 6370 1124 6000     		.short	96
 6371 1126 3000     		.short	48
 6372 1128 6000     		.short	96
 6373 112a 4000     		.short	64
 6374 112c C000     		.short	192
 6375 112e C000     		.short	192
 6376 1130 C000     		.short	192
 6377 1132 C000     		.short	192
 6378 1134 C000     		.short	192
 6379 1136 C000     		.short	192
 6380 1138 8001     		.short	384
 6381 113a 0003     		.short	768
 6382 113c 0000     		.short	0
 6383 113e 0000     		.short	0
 6384 1140 0000     		.short	0
 6385 1142 8001     		.short	384
 6386 1144 8001     		.short	384
 6387 1146 8001     		.short	384
 6388 1148 8001     		.short	384
 6389 114a 8001     		.short	384
 6390 114c 8001     		.short	384
 6391 114e 8001     		.short	384
 6392 1150 8001     		.short	384
 6393 1152 8001     		.short	384
 6394 1154 8001     		.short	384
 6395 1156 8001     		.short	384
 6396 1158 8001     		.short	384
 6397 115a 8001     		.short	384
 6398 115c 8001     		.short	384
 6399 115e 8001     		.short	384
 6400 1160 8001     		.short	384
 6401 1162 8001     		.short	384
 6402 1164 8001     		.short	384
 6403 1166 8001     		.short	384
 6404 1168 8001     		.short	384
 6405 116a 8001     		.short	384
 6406 116c 8001     		.short	384
 6407 116e 0000     		.short	0
 6408 1170 0000     		.short	0
 6409 1172 6000     		.short	96
 6410 1174 C000     		.short	192
 6411 1176 C001     		.short	448
 6412 1178 8001     		.short	384
 6413 117a 8001     		.short	384
 6414 117c 8001     		.short	384
 6415 117e 8001     		.short	384
 6416 1180 8001     		.short	384
 6417 1182 0003     		.short	768
 6418 1184 0003     		.short	768
 6419 1186 0006     		.short	1536
 6420 1188 0003     		.short	768
 6421 118a 0001     		.short	256
 6422 118c 8001     		.short	384
 6423 118e 8001     		.short	384
 6424 1190 8001     		.short	384
 6425 1192 8001     		.short	384
 6426 1194 8001     		.short	384
 6427 1196 8001     		.short	384
 6428 1198 C000     		.short	192
 6429 119a 6000     		.short	96
 6430 119c 0000     		.short	0
 6431 119e 0000     		.short	0
 6432 11a0 0000     		.short	0
 6433 11a2 0000     		.short	0
 6434 11a4 0000     		.short	0
 6435 11a6 0000     		.short	0
 6436 11a8 0000     		.short	0
 6437 11aa 0000     		.short	0
 6438 11ac 0000     		.short	0
 6439 11ae 0000     		.short	0
 6440 11b0 F010     		.short	4336
 6441 11b2 F81F     		.short	8184
 6442 11b4 080F     		.short	3848
 6443 11b6 0000     		.short	0
 6444 11b8 0000     		.short	0
 6445 11ba 0000     		.short	0
 6446 11bc 0000     		.short	0
 6447 11be 0000     		.short	0
 6448 11c0 0000     		.short	0
 6449 11c2 0000     		.short	0
 6450 11c4 0000     		.short	0
 6451 11c6 0000     		.short	0
 6452 11c8 0000     		.short	0
 6453 11ca 0000     		.short	0
 6454 11cc 0000     		.short	0
 6455 11ce 0000     		.short	0
 6456 11d0 0000     		.short	0
 6457 11d2 0000     		.short	0
 6458 11d4 0000     		.short	0
 6459 11d6 0000     		.short	0
 6460 11d8 0000     		.short	0
 6461 11da 0000     		.short	0
 6462 11dc 0000     		.short	0
 6463 11de 0000     		.short	0
 6464 11e0 0000     		.short	0
 6465 11e2 0000     		.short	0
 6466 11e4 0000     		.short	0
 6467 11e6 0000     		.short	0
 6468 11e8 0000     		.short	0
 6469 11ea 0000     		.short	0
 6470 11ec 0000     		.short	0
 6471 11ee 0000     		.short	0
 6472 11f0 0000     		.short	0
 6473 11f2 0000     		.short	0
 6474 11f4 0000     		.short	0
 6475 11f6 0000     		.short	0
 6476 11f8 0000     		.short	0
 6477 11fa 0000     		.short	0
 6478 11fc 0000     		.short	0
 6479 11fe 0000     		.short	0
 6480 1200 0000     		.short	0
 6481 1202 0000     		.short	0
 6482 1204 0000     		.short	0
 6483 1206 0000     		.short	0
 6484 1208 0000     		.short	0
 6485 120a C003     		.short	960
 6486 120c 300C     		.short	3120
 6487 120e 0810     		.short	4104
 6488 1210 0420     		.short	8196
 6489 1212 0420     		.short	8196
 6490 1214 0240     		.short	16386
 6491 1216 0240     		.short	16386
 6492 1218 0240     		.short	16386
 6493 121a 0240     		.short	16386
 6494 121c 0240     		.short	16386
 6495 121e 0420     		.short	8196
 6496 1220 0420     		.short	8196
 6497 1222 0810     		.short	4104
 6498 1224 300C     		.short	3120
 6499 1226 C003     		.short	960
 6500 1228 0000     		.short	0
 6501 122a 0000     		.short	0
 6502 122c 0000     		.short	0
 6503 122e 0000     		.short	0
 6504 1230 0000     		.short	0
 6505 1232 0000     		.short	0
 6506 1234 0000     		.short	0
 6507 1236 0000     		.short	0
 6508 1238 0000     		.short	0
 6509 123a C003     		.short	960
 6510 123c F00F     		.short	4080
 6511 123e F81F     		.short	8184
 6512 1240 FC3F     		.short	16380
 6513 1242 FC3F     		.short	16380
 6514 1244 FE7F     		.short	32766
 6515 1246 FE7F     		.short	32766
 6516 1248 FE7F     		.short	32766
 6517 124a FE7F     		.short	32766
 6518 124c FE7F     		.short	32766
 6519 124e FC3F     		.short	16380
 6520 1250 FC3F     		.short	16380
 6521 1252 F81F     		.short	8184
 6522 1254 F00F     		.short	4080
 6523 1256 C003     		.short	960
 6524 1258 0000     		.short	0
 6525 125a 0000     		.short	0
 6526 125c 0000     		.short	0
 6527 125e 0000     		.short	0
 6528 1260 0000     		.short	0
 6529 1262 0000     		.short	0
 6530 1264 0000     		.short	0
 6531 1266 0000     		.short	0
 6532 1268 0000     		.short	0
 6533 126a 0000     		.short	0
 6534 126c 0000     		.short	0
 6535 126e E007     		.short	2016
 6536 1270 F00F     		.short	4080
 6537 1272 1818     		.short	6168
 6538 1274 1818     		.short	6168
 6539 1276 1818     		.short	6168
 6540 1278 1818     		.short	6168
 6541 127a 1818     		.short	6168
 6542 127c 1818     		.short	6168
 6543 127e F00F     		.short	4080
 6544 1280 E007     		.short	2016
 6545 1282 0000     		.short	0
 6546 1284 0000     		.short	0
 6547 1286 0000     		.short	0
 6548 1288 0000     		.short	0
 6549 128a 0000     		.short	0
 6550 128c 0000     		.short	0
 6551 128e 0000     		.short	0
 6552 1290 0000     		.short	0
 6553 1292 0000     		.short	0
 6554 1294 0000     		.short	0
 6555 1296 0000     		.short	0
 6556 1298 0000     		.short	0
 6557 129a 0000     		.short	0
 6558 129c 0000     		.short	0
 6559 129e E007     		.short	2016
 6560 12a0 F00F     		.short	4080
 6561 12a2 F81F     		.short	8184
 6562 12a4 F81F     		.short	8184
 6563 12a6 F81F     		.short	8184
 6564 12a8 F81F     		.short	8184
 6565 12aa F81F     		.short	8184
 6566 12ac F81F     		.short	8184
 6567 12ae F00F     		.short	4080
 6568 12b0 E007     		.short	2016
 6569 12b2 0000     		.short	0
 6570 12b4 0000     		.short	0
 6571 12b6 0000     		.short	0
 6572 12b8 0000     		.short	0
 6573 12ba 0000     		.short	0
 6574 12bc 0000     		.short	0
 6575 12be 0000     		.short	0
 6576 12c0 0000     		.short	0
 6577 12c2 0000     		.short	0
 6578 12c4 0000     		.short	0
 6579 12c6 0000     		.short	0
 6580 12c8 0000     		.short	0
 6581 12ca 0000     		.short	0
 6582 12cc 0000     		.short	0
 6583 12ce 0000     		.short	0
 6584 12d0 0000     		.short	0
 6585 12d2 0000     		.short	0
 6586 12d4 0000     		.short	0
 6587 12d6 0000     		.short	0
 6588 12d8 8001     		.short	384
 6589 12da C003     		.short	960
 6590 12dc 6006     		.short	1632
 6591 12de 300C     		.short	3120
 6592 12e0 1818     		.short	6168
 6593 12e2 1818     		.short	6168
 6594 12e4 F81F     		.short	8184
 6595 12e6 F81F     		.short	8184
 6596 12e8 0000     		.short	0
 6597 12ea 0000     		.short	0
 6598 12ec 0000     		.short	0
 6599 12ee 0000     		.short	0
 6600 12f0 0000     		.short	0
 6601 12f2 0000     		.short	0
 6602 12f4 0000     		.short	0
 6603 12f6 0000     		.short	0
 6604 12f8 0000     		.short	0
 6605 12fa 0000     		.short	0
 6606 12fc 0000     		.short	0
 6607 12fe 0000     		.short	0
 6608 1300 0000     		.short	0
 6609 1302 0000     		.short	0
 6610 1304 0000     		.short	0
 6611 1306 0000     		.short	0
 6612 1308 8001     		.short	384
 6613 130a C003     		.short	960
 6614 130c E007     		.short	2016
 6615 130e F00F     		.short	4080
 6616 1310 F81F     		.short	8184
 6617 1312 F81F     		.short	8184
 6618 1314 F81F     		.short	8184
 6619 1316 F81F     		.short	8184
 6620 1318 0000     		.short	0
 6621 131a 0000     		.short	0
 6622 131c 0000     		.short	0
 6623 131e 0000     		.short	0
 6624 1320 0000     		.short	0
 6625 1322 0000     		.short	0
 6626 1324 0000     		.short	0
 6627 1326 0000     		.short	0
 6628 1328 F81F     		.short	8184
 6629 132a F81F     		.short	8184
 6630 132c 1818     		.short	6168
 6631 132e 1818     		.short	6168
 6632 1330 300C     		.short	3120
 6633 1332 6006     		.short	1632
 6634 1334 C003     		.short	960
 6635 1336 8001     		.short	384
 6636 1338 0000     		.short	0
 6637 133a 0000     		.short	0
 6638 133c 0000     		.short	0
 6639 133e 0000     		.short	0
 6640 1340 0000     		.short	0
 6641 1342 0000     		.short	0
 6642 1344 0000     		.short	0
 6643 1346 0000     		.short	0
 6644 1348 0000     		.short	0
 6645 134a 0000     		.short	0
 6646 134c 0000     		.short	0
 6647 134e 0000     		.short	0
 6648 1350 0000     		.short	0
 6649 1352 0000     		.short	0
 6650 1354 0000     		.short	0
 6651 1356 0000     		.short	0
 6652 1358 F81F     		.short	8184
 6653 135a F81F     		.short	8184
 6654 135c F81F     		.short	8184
 6655 135e F81F     		.short	8184
 6656 1360 F00F     		.short	4080
 6657 1362 E007     		.short	2016
 6658 1364 C003     		.short	960
 6659 1366 8001     		.short	384
 6660 1368 0000     		.short	0
 6661 136a 0000     		.short	0
 6662 136c 0000     		.short	0
 6663 136e 0000     		.short	0
 6664 1370 0000     		.short	0
 6665 1372 0000     		.short	0
 6666 1374 0000     		.short	0
 6667 1376 0000     		.short	0
 6668 1378 0000     		.short	0
 6669 137a 0000     		.short	0
 6670 137c 0000     		.short	0
 6671 137e 0000     		.short	0
 6672 1380 0000     		.short	0
 6673 1382 0000     		.short	0
 6674 1384 0000     		.short	0
 6675 1386 0000     		.short	0
 6676 1388 0000     		.short	0
 6677 138a 0000     		.short	0
 6678 138c 0000     		.short	0
 6679 138e E001     		.short	480
 6680 1390 F001     		.short	496
 6681 1392 9801     		.short	408
 6682 1394 8C01     		.short	396
 6683 1396 8601     		.short	390
 6684 1398 8601     		.short	390
 6685 139a 8C01     		.short	396
 6686 139c 9801     		.short	408
 6687 139e F001     		.short	496
 6688 13a0 E001     		.short	480
 6689 13a2 0000     		.short	0
 6690 13a4 0000     		.short	0
 6691 13a6 0000     		.short	0
 6692 13a8 0000     		.short	0
 6693 13aa 0000     		.short	0
 6694 13ac 0000     		.short	0
 6695 13ae 0000     		.short	0
 6696 13b0 0000     		.short	0
 6697 13b2 0000     		.short	0
 6698 13b4 0000     		.short	0
 6699 13b6 0000     		.short	0
 6700 13b8 0000     		.short	0
 6701 13ba 0000     		.short	0
 6702 13bc 0000     		.short	0
 6703 13be E001     		.short	480
 6704 13c0 F001     		.short	496
 6705 13c2 F801     		.short	504
 6706 13c4 FC01     		.short	508
 6707 13c6 FE01     		.short	510
 6708 13c8 FE01     		.short	510
 6709 13ca FC01     		.short	508
 6710 13cc F801     		.short	504
 6711 13ce F001     		.short	496
 6712 13d0 E001     		.short	480
 6713 13d2 0000     		.short	0
 6714 13d4 0000     		.short	0
 6715 13d6 0000     		.short	0
 6716 13d8 0000     		.short	0
 6717 13da 0000     		.short	0
 6718 13dc 0000     		.short	0
 6719 13de 0000     		.short	0
 6720 13e0 0000     		.short	0
 6721 13e2 0000     		.short	0
 6722 13e4 0000     		.short	0
 6723 13e6 0000     		.short	0
 6724 13e8 0000     		.short	0
 6725 13ea 0000     		.short	0
 6726 13ec 0000     		.short	0
 6727 13ee 8007     		.short	1920
 6728 13f0 800F     		.short	3968
 6729 13f2 8019     		.short	6528
 6730 13f4 8031     		.short	12672
 6731 13f6 8061     		.short	24960
 6732 13f8 8061     		.short	24960
 6733 13fa 8031     		.short	12672
 6734 13fc 8019     		.short	6528
 6735 13fe 800F     		.short	3968
 6736 1400 8007     		.short	1920
 6737 1402 0000     		.short	0
 6738 1404 0000     		.short	0
 6739 1406 0000     		.short	0
 6740 1408 0000     		.short	0
 6741 140a 0000     		.short	0
 6742 140c 0000     		.short	0
 6743 140e 0000     		.short	0
 6744 1410 0000     		.short	0
 6745 1412 0000     		.short	0
 6746 1414 0000     		.short	0
 6747 1416 0000     		.short	0
 6748 1418 0000     		.short	0
 6749 141a 0000     		.short	0
 6750 141c 0000     		.short	0
 6751 141e 8007     		.short	1920
 6752 1420 800F     		.short	3968
 6753 1422 801F     		.short	8064
 6754 1424 803F     		.short	16256
 6755 1426 807F     		.short	32640
 6756 1428 807F     		.short	32640
 6757 142a 803F     		.short	16256
 6758 142c 801F     		.short	8064
 6759 142e 800F     		.short	3968
 6760 1430 8007     		.short	1920
 6761 1432 0000     		.short	0
 6762 1434 0000     		.short	0
 6763 1436 0000     		.short	0
 6764 1438 0000     		.short	0
 6765 143a 0000     		.short	0
 6766 143c 0000     		.short	0
 6767 143e 0000     		.short	0
 6768 1440 0000     		.short	0
 6769 1442 C001     		.short	448
 6770 1444 2002     		.short	544
 6771 1446 2002     		.short	544
 6772 1448 4001     		.short	320
 6773 144a 3006     		.short	1584
 6774 144c 0808     		.short	2056
 6775 144e 0808     		.short	2056
 6776 1450 0808     		.short	2056
 6777 1452 0808     		.short	2056
 6778 1454 0808     		.short	2056
 6779 1456 0808     		.short	2056
 6780 1458 0808     		.short	2056
 6781 145a 2002     		.short	544
 6782 145c 2002     		.short	544
 6783 145e 2002     		.short	544
 6784 1460 2002     		.short	544
 6785 1462 2002     		.short	544
 6786 1464 2002     		.short	544
 6787 1466 2002     		.short	544
 6788 1468 2002     		.short	544
 6789 146a 2002     		.short	544
 6790 146c 2002     		.short	544
 6791 146e 0000     		.short	0
 6792 1470 0000     		.short	0
 6793 1472 C001     		.short	448
 6794 1474 E003     		.short	992
 6795 1476 E003     		.short	992
 6796 1478 C001     		.short	448
 6797 147a F007     		.short	2032
 6798 147c D80D     		.short	3544
 6799 147e D80D     		.short	3544
 6800 1480 D80D     		.short	3544
 6801 1482 D80D     		.short	3544
 6802 1484 D80D     		.short	3544
 6803 1486 D80D     		.short	3544
 6804 1488 D80D     		.short	3544
 6805 148a 6003     		.short	864
 6806 148c 6003     		.short	864
 6807 148e 6003     		.short	864
 6808 1490 6003     		.short	864
 6809 1492 6003     		.short	864
 6810 1494 6003     		.short	864
 6811 1496 6003     		.short	864
 6812 1498 6003     		.short	864
 6813 149a 6003     		.short	864
 6814 149c 6003     		.short	864
 6815 149e 0000     		.short	0
 6816 14a0 0000     		.short	0
 6817 14a2 C001     		.short	448
 6818 14a4 2002     		.short	544
 6819 14a6 2002     		.short	544
 6820 14a8 4001     		.short	320
 6821 14aa 3006     		.short	1584
 6822 14ac 0808     		.short	2056
 6823 14ae 0808     		.short	2056
 6824 14b0 0808     		.short	2056
 6825 14b2 0410     		.short	4100
 6826 14b4 0220     		.short	8194
 6827 14b6 0220     		.short	8194
 6828 14b8 4001     		.short	320
 6829 14ba 2002     		.short	544
 6830 14bc 2002     		.short	544
 6831 14be 1004     		.short	1040
 6832 14c0 0808     		.short	2056
 6833 14c2 0808     		.short	2056
 6834 14c4 0410     		.short	4100
 6835 14c6 0410     		.short	4100
 6836 14c8 0420     		.short	8196
 6837 14ca 0440     		.short	16388
 6838 14cc 0000     		.short	0
 6839 14ce 0000     		.short	0
 6840 14d0 0000     		.short	0
 6841 14d2 C001     		.short	448
 6842 14d4 E003     		.short	992
 6843 14d6 E003     		.short	992
 6844 14d8 C001     		.short	448
 6845 14da F007     		.short	2032
 6846 14dc D80D     		.short	3544
 6847 14de D80D     		.short	3544
 6848 14e0 D80D     		.short	3544
 6849 14e2 CC19     		.short	6604
 6850 14e4 C631     		.short	12742
 6851 14e6 C261     		.short	25026
 6852 14e8 C001     		.short	448
 6853 14ea 6003     		.short	864
 6854 14ec 6003     		.short	864
 6855 14ee 7006     		.short	1648
 6856 14f0 380C     		.short	3128
 6857 14f2 180C     		.short	3096
 6858 14f4 0C18     		.short	6156
 6859 14f6 0C18     		.short	6156
 6860 14f8 0C30     		.short	12300
 6861 14fa 0C60     		.short	24588
 6862 14fc 0000     		.short	0
 6863 14fe 0000     		.short	0
 6864              	.LC0:
 6865 1500 3100     		.ascii	"1\000"
 6866 1502 00       		.space	1
 6867 1503 3200     		.ascii	"2\000"
 6868 1505 00       		.space	1
 6869 1506 3300     		.ascii	"3\000"
 6870 1508 00       		.space	1
 6871 1509 3400     		.ascii	"4\000"
 6872 150b 00       		.space	1
 6873 150c 3500     		.ascii	"5\000"
 6874 150e 00       		.space	1
 6875 150f 3600     		.ascii	"6\000"
 6876 1511 00       		.space	1
 6877 1512 3700     		.ascii	"7\000"
 6878 1514 00       		.space	1
 6879 1515 3800     		.ascii	"8\000"
 6880 1517 00       		.space	1
 6881 1518 3900     		.ascii	"9\000"
 6882 151a 00       		.space	1
 6883 151b 313000   		.ascii	"10\000"
 6884              	.LC1:
 6885 151e 313000   		.ascii	"10\000"
 6886 1521 00       		.space	1
 6887 1522 323000   		.ascii	"20\000"
 6888 1525 00       		.space	1
 6889 1526 333000   		.ascii	"30\000"
 6890 1529 00       		.space	1
 6891 152a 343000   		.ascii	"40\000"
 6892 152d 00       		.space	1
 6893 152e 353000   		.ascii	"50\000"
 6894 1531 00       		.space	1
 6895 1532 363000   		.ascii	"60\000"
 6896 1535 00       		.space	1
 6897 1536 373000   		.ascii	"70\000"
 6898 1539 00       		.space	1
 6899 153a 383000   		.ascii	"80\000"
 6900 153d 00       		.space	1
 6901 153e 393000   		.ascii	"90\000"
 6902 1541 00       		.space	1
 6903 1542 31303000 		.ascii	"100\000"
 6906              	default5x7:
 6907 1546 00       		.byte	0
 6908 1547 00       		.byte	0
 6909 1548 00       		.byte	0
 6910 1549 00       		.byte	0
 6911 154a 00       		.byte	0
 6912 154b 00       		.byte	0
 6913 154c 00       		.byte	0
 6914 154d 5F       		.byte	95
 6915 154e 00       		.byte	0
 6916 154f 00       		.byte	0
 6917 1550 00       		.byte	0
 6918 1551 03       		.byte	3
 6919 1552 00       		.byte	0
 6920 1553 03       		.byte	3
 6921 1554 00       		.byte	0
 6922 1555 14       		.byte	20
 6923 1556 3E       		.byte	62
 6924 1557 14       		.byte	20
 6925 1558 3E       		.byte	62
 6926 1559 14       		.byte	20
 6927 155a 24       		.byte	36
 6928 155b 2A       		.byte	42
 6929 155c 7F       		.byte	127
 6930 155d 2A       		.byte	42
 6931 155e 12       		.byte	18
 6932 155f 43       		.byte	67
 6933 1560 33       		.byte	51
 6934 1561 08       		.byte	8
 6935 1562 66       		.byte	102
 6936 1563 61       		.byte	97
 6937 1564 36       		.byte	54
 6938 1565 49       		.byte	73
 6939 1566 55       		.byte	85
 6940 1567 22       		.byte	34
 6941 1568 50       		.byte	80
 6942 1569 00       		.byte	0
 6943 156a 05       		.byte	5
 6944 156b 03       		.byte	3
 6945 156c 00       		.byte	0
 6946 156d 00       		.byte	0
 6947 156e 00       		.byte	0
 6948 156f 1C       		.byte	28
 6949 1570 22       		.byte	34
 6950 1571 41       		.byte	65
 6951 1572 00       		.byte	0
 6952 1573 00       		.byte	0
 6953 1574 41       		.byte	65
 6954 1575 22       		.byte	34
 6955 1576 1C       		.byte	28
 6956 1577 00       		.byte	0
 6957 1578 14       		.byte	20
 6958 1579 08       		.byte	8
 6959 157a 3E       		.byte	62
 6960 157b 08       		.byte	8
 6961 157c 14       		.byte	20
 6962 157d 08       		.byte	8
 6963 157e 08       		.byte	8
 6964 157f 3E       		.byte	62
 6965 1580 08       		.byte	8
 6966 1581 08       		.byte	8
 6967 1582 00       		.byte	0
 6968 1583 50       		.byte	80
 6969 1584 30       		.byte	48
 6970 1585 00       		.byte	0
 6971 1586 00       		.byte	0
 6972 1587 08       		.byte	8
 6973 1588 08       		.byte	8
 6974 1589 08       		.byte	8
 6975 158a 08       		.byte	8
 6976 158b 08       		.byte	8
 6977 158c 00       		.byte	0
 6978 158d 60       		.byte	96
 6979 158e 60       		.byte	96
 6980 158f 00       		.byte	0
 6981 1590 00       		.byte	0
 6982 1591 20       		.byte	32
 6983 1592 10       		.byte	16
 6984 1593 08       		.byte	8
 6985 1594 04       		.byte	4
 6986 1595 02       		.byte	2
 6987 1596 3E       		.byte	62
 6988 1597 51       		.byte	81
 6989 1598 49       		.byte	73
 6990 1599 45       		.byte	69
 6991 159a 3E       		.byte	62
 6992 159b 04       		.byte	4
 6993 159c 02       		.byte	2
 6994 159d 7F       		.byte	127
 6995 159e 00       		.byte	0
 6996 159f 00       		.byte	0
 6997 15a0 42       		.byte	66
 6998 15a1 61       		.byte	97
 6999 15a2 51       		.byte	81
 7000 15a3 49       		.byte	73
 7001 15a4 46       		.byte	70
 7002 15a5 22       		.byte	34
 7003 15a6 41       		.byte	65
 7004 15a7 49       		.byte	73
 7005 15a8 49       		.byte	73
 7006 15a9 36       		.byte	54
 7007 15aa 18       		.byte	24
 7008 15ab 14       		.byte	20
 7009 15ac 12       		.byte	18
 7010 15ad 7F       		.byte	127
 7011 15ae 10       		.byte	16
 7012 15af 27       		.byte	39
 7013 15b0 45       		.byte	69
 7014 15b1 45       		.byte	69
 7015 15b2 45       		.byte	69
 7016 15b3 39       		.byte	57
 7017 15b4 3E       		.byte	62
 7018 15b5 49       		.byte	73
 7019 15b6 49       		.byte	73
 7020 15b7 49       		.byte	73
 7021 15b8 32       		.byte	50
 7022 15b9 01       		.byte	1
 7023 15ba 01       		.byte	1
 7024 15bb 71       		.byte	113
 7025 15bc 09       		.byte	9
 7026 15bd 07       		.byte	7
 7027 15be 36       		.byte	54
 7028 15bf 49       		.byte	73
 7029 15c0 49       		.byte	73
 7030 15c1 49       		.byte	73
 7031 15c2 36       		.byte	54
 7032 15c3 26       		.byte	38
 7033 15c4 49       		.byte	73
 7034 15c5 49       		.byte	73
 7035 15c6 49       		.byte	73
 7036 15c7 3E       		.byte	62
 7037 15c8 00       		.byte	0
 7038 15c9 36       		.byte	54
 7039 15ca 36       		.byte	54
 7040 15cb 00       		.byte	0
 7041 15cc 00       		.byte	0
 7042 15cd 00       		.byte	0
 7043 15ce 56       		.byte	86
 7044 15cf 36       		.byte	54
 7045 15d0 00       		.byte	0
 7046 15d1 00       		.byte	0
 7047 15d2 08       		.byte	8
 7048 15d3 14       		.byte	20
 7049 15d4 22       		.byte	34
 7050 15d5 41       		.byte	65
 7051 15d6 00       		.byte	0
 7052 15d7 14       		.byte	20
 7053 15d8 14       		.byte	20
 7054 15d9 14       		.byte	20
 7055 15da 14       		.byte	20
 7056 15db 14       		.byte	20
 7057 15dc 00       		.byte	0
 7058 15dd 41       		.byte	65
 7059 15de 22       		.byte	34
 7060 15df 14       		.byte	20
 7061 15e0 08       		.byte	8
 7062 15e1 02       		.byte	2
 7063 15e2 01       		.byte	1
 7064 15e3 51       		.byte	81
 7065 15e4 09       		.byte	9
 7066 15e5 06       		.byte	6
 7067 15e6 3E       		.byte	62
 7068 15e7 41       		.byte	65
 7069 15e8 59       		.byte	89
 7070 15e9 55       		.byte	85
 7071 15ea 5E       		.byte	94
 7072 15eb 7E       		.byte	126
 7073 15ec 09       		.byte	9
 7074 15ed 09       		.byte	9
 7075 15ee 09       		.byte	9
 7076 15ef 7E       		.byte	126
 7077 15f0 7F       		.byte	127
 7078 15f1 49       		.byte	73
 7079 15f2 49       		.byte	73
 7080 15f3 49       		.byte	73
 7081 15f4 36       		.byte	54
 7082 15f5 3E       		.byte	62
 7083 15f6 41       		.byte	65
 7084 15f7 41       		.byte	65
 7085 15f8 41       		.byte	65
 7086 15f9 22       		.byte	34
 7087 15fa 7F       		.byte	127
 7088 15fb 41       		.byte	65
 7089 15fc 41       		.byte	65
 7090 15fd 41       		.byte	65
 7091 15fe 3E       		.byte	62
 7092 15ff 7F       		.byte	127
 7093 1600 49       		.byte	73
 7094 1601 49       		.byte	73
 7095 1602 49       		.byte	73
 7096 1603 41       		.byte	65
 7097 1604 7F       		.byte	127
 7098 1605 09       		.byte	9
 7099 1606 09       		.byte	9
 7100 1607 09       		.byte	9
 7101 1608 01       		.byte	1
 7102 1609 3E       		.byte	62
 7103 160a 41       		.byte	65
 7104 160b 41       		.byte	65
 7105 160c 49       		.byte	73
 7106 160d 3A       		.byte	58
 7107 160e 7F       		.byte	127
 7108 160f 08       		.byte	8
 7109 1610 08       		.byte	8
 7110 1611 08       		.byte	8
 7111 1612 7F       		.byte	127
 7112 1613 00       		.byte	0
 7113 1614 41       		.byte	65
 7114 1615 7F       		.byte	127
 7115 1616 41       		.byte	65
 7116 1617 00       		.byte	0
 7117 1618 30       		.byte	48
 7118 1619 40       		.byte	64
 7119 161a 40       		.byte	64
 7120 161b 40       		.byte	64
 7121 161c 3F       		.byte	63
 7122 161d 7F       		.byte	127
 7123 161e 08       		.byte	8
 7124 161f 14       		.byte	20
 7125 1620 22       		.byte	34
 7126 1621 41       		.byte	65
 7127 1622 7F       		.byte	127
 7128 1623 40       		.byte	64
 7129 1624 40       		.byte	64
 7130 1625 40       		.byte	64
 7131 1626 40       		.byte	64
 7132 1627 7F       		.byte	127
 7133 1628 02       		.byte	2
 7134 1629 0C       		.byte	12
 7135 162a 02       		.byte	2
 7136 162b 7F       		.byte	127
 7137 162c 7F       		.byte	127
 7138 162d 02       		.byte	2
 7139 162e 04       		.byte	4
 7140 162f 08       		.byte	8
 7141 1630 7F       		.byte	127
 7142 1631 3E       		.byte	62
 7143 1632 41       		.byte	65
 7144 1633 41       		.byte	65
 7145 1634 41       		.byte	65
 7146 1635 3E       		.byte	62
 7147 1636 7F       		.byte	127
 7148 1637 09       		.byte	9
 7149 1638 09       		.byte	9
 7150 1639 09       		.byte	9
 7151 163a 06       		.byte	6
 7152 163b 1E       		.byte	30
 7153 163c 21       		.byte	33
 7154 163d 21       		.byte	33
 7155 163e 21       		.byte	33
 7156 163f 5E       		.byte	94
 7157 1640 7F       		.byte	127
 7158 1641 09       		.byte	9
 7159 1642 09       		.byte	9
 7160 1643 09       		.byte	9
 7161 1644 76       		.byte	118
 7162 1645 26       		.byte	38
 7163 1646 49       		.byte	73
 7164 1647 49       		.byte	73
 7165 1648 49       		.byte	73
 7166 1649 32       		.byte	50
 7167 164a 01       		.byte	1
 7168 164b 01       		.byte	1
 7169 164c 7F       		.byte	127
 7170 164d 01       		.byte	1
 7171 164e 01       		.byte	1
 7172 164f 3F       		.byte	63
 7173 1650 40       		.byte	64
 7174 1651 40       		.byte	64
 7175 1652 40       		.byte	64
 7176 1653 3F       		.byte	63
 7177 1654 1F       		.byte	31
 7178 1655 20       		.byte	32
 7179 1656 40       		.byte	64
 7180 1657 20       		.byte	32
 7181 1658 1F       		.byte	31
 7182 1659 7F       		.byte	127
 7183 165a 20       		.byte	32
 7184 165b 10       		.byte	16
 7185 165c 20       		.byte	32
 7186 165d 7F       		.byte	127
 7187 165e 41       		.byte	65
 7188 165f 22       		.byte	34
 7189 1660 1C       		.byte	28
 7190 1661 22       		.byte	34
 7191 1662 41       		.byte	65
 7192 1663 07       		.byte	7
 7193 1664 08       		.byte	8
 7194 1665 70       		.byte	112
 7195 1666 08       		.byte	8
 7196 1667 07       		.byte	7
 7197 1668 61       		.byte	97
 7198 1669 51       		.byte	81
 7199 166a 49       		.byte	73
 7200 166b 45       		.byte	69
 7201 166c 43       		.byte	67
 7202 166d 00       		.byte	0
 7203 166e 7F       		.byte	127
 7204 166f 41       		.byte	65
 7205 1670 00       		.byte	0
 7206 1671 00       		.byte	0
 7207 1672 02       		.byte	2
 7208 1673 04       		.byte	4
 7209 1674 08       		.byte	8
 7210 1675 10       		.byte	16
 7211 1676 20       		.byte	32
 7212 1677 00       		.byte	0
 7213 1678 00       		.byte	0
 7214 1679 41       		.byte	65
 7215 167a 7F       		.byte	127
 7216 167b 00       		.byte	0
 7217 167c 04       		.byte	4
 7218 167d 02       		.byte	2
 7219 167e 01       		.byte	1
 7220 167f 02       		.byte	2
 7221 1680 04       		.byte	4
 7222 1681 40       		.byte	64
 7223 1682 40       		.byte	64
 7224 1683 40       		.byte	64
 7225 1684 40       		.byte	64
 7226 1685 40       		.byte	64
 7227 1686 00       		.byte	0
 7228 1687 01       		.byte	1
 7229 1688 02       		.byte	2
 7230 1689 04       		.byte	4
 7231 168a 00       		.byte	0
 7232 168b 20       		.byte	32
 7233 168c 54       		.byte	84
 7234 168d 54       		.byte	84
 7235 168e 54       		.byte	84
 7236 168f 78       		.byte	120
 7237 1690 7F       		.byte	127
 7238 1691 44       		.byte	68
 7239 1692 44       		.byte	68
 7240 1693 44       		.byte	68
 7241 1694 38       		.byte	56
 7242 1695 38       		.byte	56
 7243 1696 44       		.byte	68
 7244 1697 44       		.byte	68
 7245 1698 44       		.byte	68
 7246 1699 44       		.byte	68
 7247 169a 38       		.byte	56
 7248 169b 44       		.byte	68
 7249 169c 44       		.byte	68
 7250 169d 44       		.byte	68
 7251 169e 7F       		.byte	127
 7252 169f 38       		.byte	56
 7253 16a0 54       		.byte	84
 7254 16a1 54       		.byte	84
 7255 16a2 54       		.byte	84
 7256 16a3 18       		.byte	24
 7257 16a4 04       		.byte	4
 7258 16a5 04       		.byte	4
 7259 16a6 7E       		.byte	126
 7260 16a7 05       		.byte	5
 7261 16a8 05       		.byte	5
 7262 16a9 08       		.byte	8
 7263 16aa 54       		.byte	84
 7264 16ab 54       		.byte	84
 7265 16ac 54       		.byte	84
 7266 16ad 3C       		.byte	60
 7267 16ae 7F       		.byte	127
 7268 16af 08       		.byte	8
 7269 16b0 04       		.byte	4
 7270 16b1 04       		.byte	4
 7271 16b2 78       		.byte	120
 7272 16b3 00       		.byte	0
 7273 16b4 44       		.byte	68
 7274 16b5 7D       		.byte	125
 7275 16b6 40       		.byte	64
 7276 16b7 00       		.byte	0
 7277 16b8 20       		.byte	32
 7278 16b9 40       		.byte	64
 7279 16ba 44       		.byte	68
 7280 16bb 3D       		.byte	61
 7281 16bc 00       		.byte	0
 7282 16bd 7F       		.byte	127
 7283 16be 10       		.byte	16
 7284 16bf 28       		.byte	40
 7285 16c0 44       		.byte	68
 7286 16c1 00       		.byte	0
 7287 16c2 00       		.byte	0
 7288 16c3 41       		.byte	65
 7289 16c4 7F       		.byte	127
 7290 16c5 40       		.byte	64
 7291 16c6 00       		.byte	0
 7292 16c7 7C       		.byte	124
 7293 16c8 04       		.byte	4
 7294 16c9 78       		.byte	120
 7295 16ca 04       		.byte	4
 7296 16cb 78       		.byte	120
 7297 16cc 7C       		.byte	124
 7298 16cd 08       		.byte	8
 7299 16ce 04       		.byte	4
 7300 16cf 04       		.byte	4
 7301 16d0 78       		.byte	120
 7302 16d1 38       		.byte	56
 7303 16d2 44       		.byte	68
 7304 16d3 44       		.byte	68
 7305 16d4 44       		.byte	68
 7306 16d5 38       		.byte	56
 7307 16d6 7C       		.byte	124
 7308 16d7 14       		.byte	20
 7309 16d8 14       		.byte	20
 7310 16d9 14       		.byte	20
 7311 16da 08       		.byte	8
 7312 16db 08       		.byte	8
 7313 16dc 14       		.byte	20
 7314 16dd 14       		.byte	20
 7315 16de 14       		.byte	20
 7316 16df 7C       		.byte	124
 7317 16e0 00       		.byte	0
 7318 16e1 7C       		.byte	124
 7319 16e2 08       		.byte	8
 7320 16e3 04       		.byte	4
 7321 16e4 04       		.byte	4
 7322 16e5 48       		.byte	72
 7323 16e6 54       		.byte	84
 7324 16e7 54       		.byte	84
 7325 16e8 54       		.byte	84
 7326 16e9 20       		.byte	32
 7327 16ea 04       		.byte	4
 7328 16eb 04       		.byte	4
 7329 16ec 3F       		.byte	63
 7330 16ed 44       		.byte	68
 7331 16ee 44       		.byte	68
 7332 16ef 3C       		.byte	60
 7333 16f0 40       		.byte	64
 7334 16f1 40       		.byte	64
 7335 16f2 20       		.byte	32
 7336 16f3 7C       		.byte	124
 7337 16f4 1C       		.byte	28
 7338 16f5 20       		.byte	32
 7339 16f6 40       		.byte	64
 7340 16f7 20       		.byte	32
 7341 16f8 1C       		.byte	28
 7342 16f9 3C       		.byte	60
 7343 16fa 40       		.byte	64
 7344 16fb 30       		.byte	48
 7345 16fc 40       		.byte	64
 7346 16fd 3C       		.byte	60
 7347 16fe 44       		.byte	68
 7348 16ff 28       		.byte	40
 7349 1700 10       		.byte	16
 7350 1701 28       		.byte	40
 7351 1702 44       		.byte	68
 7352 1703 0C       		.byte	12
 7353 1704 50       		.byte	80
 7354 1705 50       		.byte	80
 7355 1706 50       		.byte	80
 7356 1707 3C       		.byte	60
 7357 1708 44       		.byte	68
 7358 1709 64       		.byte	100
 7359 170a 54       		.byte	84
 7360 170b 4C       		.byte	76
 7361 170c 44       		.byte	68
 7362 170d 00       		.byte	0
 7363 170e 08       		.byte	8
 7364 170f 36       		.byte	54
 7365 1710 41       		.byte	65
 7366 1711 41       		.byte	65
 7367 1712 00       		.byte	0
 7368 1713 00       		.byte	0
 7369 1714 7F       		.byte	127
 7370 1715 00       		.byte	0
 7371 1716 00       		.byte	0
 7372 1717 41       		.byte	65
 7373 1718 41       		.byte	65
 7374 1719 36       		.byte	54
 7375 171a 08       		.byte	8
 7376 171b 00       		.byte	0
 7377 171c 02       		.byte	2
 7378 171d 01       		.byte	1
 7379 171e 02       		.byte	2
 7380 171f 04       		.byte	4
 7381 1720 02       		.byte	2
 7382 1721 00000000 		.space	5
 7382      00
 7383              		.section	.rodata.str1.1,"aMS",%progbits,1
 7384              	.LC2:
 7385 0000 5900     		.ascii	"Y\000"
 7386              	.LC3:
 7387 0002 5800     		.ascii	"X\000"
 7388              	.LC4:
 7389 0004 583D4144 		.ascii	"X=ADC-CH  Y=VAL  Y-MAX=4095  Y-UNIT=40.95\000"
 7389      432D4348 
 7389      2020593D 
 7389      56414C20 
 7389      20592D4D 
 7390              	.LC5:
 7391 002e 28302C30 		.ascii	"(0,0)\000"
 7391      2900
 7392              	.LC6:
 7393 0034 20202020 		.ascii	"                    \000"
 7393      20202020 
 7393      20202020 
 7393      20202020 
 7393      20202020 
 7394              		.data
 7395              		.align	1
 7396              		.set	.LANCHOR1,. + 0
 7399              	BackColor:
 7400 0000 FFFF     		.short	-1
 7401              		.bss
 7402              		.align	1
 7403              		.set	.LANCHOR0,. + 0
 7406              	TextColor:
 7407 0000 0000     		.space	2
 7408              		.text
 7409              	.Letext0:
 7410              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q2\\bin\\../lib/gcc/arm-none-eab
 7411              		.file 3 "../CM3 Core/LPC17xx.h"
 7412              		.file 4 "../Header Files/lpc_types.h"
 7413              		.file 5 "../Header Files/lpc17xx_uart.h"
 7414              		.file 6 "../Header Files/lpc17xx_ssp.h"
 7415              		.file 7 "../Header Files/lpc_ssp_glcd.h"
 7416              		.file 8 "<built-in>"
 7417              		.file 9 "../CM3 Core/core_cm3.h"
 7418              		.file 10 "../Header Files/lpc17xx_i2c.h"
 7419              		.file 11 "../Header Files/Font_24x16.h"
 7420              		.file 12 "../Header Files/Font_5x7.h"
 7421              		.file 13 "../Header Files/lpc17xx_gpio.h"
 7422              		.file 14 "../Header Files/lpc17xx_systick.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lpc_ssp_glcd.c
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:18     .text:00000000 $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:22     .text:00000000 wr_dat_start
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:52     .text:00000018 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:56     .text:0000001c $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:60     .text:0000001c wr_dat_stop
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:77     .text:00000024 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:81     .text:00000028 $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:85     .text:00000028 wr_dat_only
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:133    .text:00000048 $d
                            *COM*:00000040 Tx_Buf1
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:138    .text:00000050 $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:143    .text:00000050 GLCD_Backlight
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:178    .text:00000066 GLCD_Reset
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:223    .text:00000090 GLCD_SetTextColor
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:238    .text:00000098 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:242    .text:0000009c $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:247    .text:0000009c GLCD_SetBackColor
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:262    .text:000000a4 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:266    .text:000000a8 $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:271    .text:000000a8 Write_Command_Glcd
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:356    .text:00000100 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:360    .text:00000104 $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:365    .text:00000104 Write_Data_Glcd
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:438    .text:00000144 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:443    .text:0000014c $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:448    .text:0000014c GLCD_Bargraph
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:582    .text:000001f4 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:587    .text:000001fc $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:592    .text:000001fc GLCD_Draw_Char
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:715    .text:00000294 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:720    .text:0000029c $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:725    .text:0000029c GLCD_Display_Char
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:763    .text:000002c0 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:767    .text:000002c4 $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:772    .text:000002c4 GLCD_PutPixel
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:828    .text:000002f4 GLCD_Text
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:1052   .text:0000041e GLCD_Line
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:1260   .text:00000506 GLCD_LBar
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:1401   .text:000005ac GLCD_Triangle
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:2246   .text:00000a80 Show_BarGraph
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:2586   .text:00000cb0 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:2596   .text:00000ccc $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:2601   .text:00000ccc GLCD_Frame
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:2765   .text:00000dea GLCD_Circle
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3107   .text:00000fcc GLCD_Window
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3180   .text:00001016 GLCD_Display_String
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3246   .text:00001046 GLCD_ClearLn
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3280   .text:00001068 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3284   .text:0000106c $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3289   .text:0000106c GLCD_Clear
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3359   .text:000010b6 GLCD_Set_Loc
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3410   .text:000010e2 GLCD_Window_Fill
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3480   .text:00001118 GLCD_Bar
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3538   .text:0000114a GLCD_Rect
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3710   .text:0000123e GLCD_Bitmap
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3786   .text:0000127e GLCD_Display_Home
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3810   .text:0000128c GLCD_Driver_OutCtrl
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3834   .text:0000129e $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3838   .text:000012a2 $t
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:3870   .text:000012c2 GLCD_Init
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:6906   .rodata:00001546 default5x7
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:4175   .rodata:00000000 Font_24x16
                            *COM*:00000040 I2C_Rx_Buf
                            *COM*:00000040 I2C_Tx_Buf
                            *COM*:00000040 Rx_Buf1
                            *COM*:00000001 TxIntStat
                            *COM*:00000210 rb
                            *COM*:00000002 EscFlag
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:4170   .rodata:00000000 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:7395   .data:00000000 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:7399   .data:00000000 BackColor
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:7402   .bss:00000000 $d
C:\Users\raghav\AppData\Local\Temp\cc5pX5JW.s:7406   .bss:00000000 TextColor
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.549b84bf9d8399e395ff8216fcbb3d69
                           .group:00000000 wm4.LPC17xx.h.27.964facdaadd4aa3f18ac78c8a78f0013
                           .group:00000000 wm4.core_cm3.h.32.3cac756d6e704b813781f82afd94fa5f
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.6beb15babd14c076008ec0890c26e21c
                           .group:00000000 wm4.core_cm3.h.83.1a3cb9afc687cf157efeddb3d5f3109e
                           .group:00000000 wm4.LPC17xx.h.953.82b7a9ed60bb594048bc8738cf1d3489
                           .group:00000000 wm4.lpc_types.h.32.72d58ce80fabd1a5430c6ec0500a090b
                           .group:00000000 wm4.lpc17xx_pinsel.h.30.767cda9b27a5c688cd97e5947d664047
                           .group:00000000 wm4.lpc17xx_clkpwr.h.30.8537d92ff6965961e80fda89ac5019f2
                           .group:00000000 wm4.lpc17xx_systick.h.30.9f34c15ae315a203fed1d933040ad7b9
                           .group:00000000 wm4.lpc17xx_gpio.h.30.0b884ee110dd20865784f12e1569ecf1
                           .group:00000000 wm4.lpc17xx_wdt.h.34.a2dcafab9849854019efb51f717a8129
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832
                           .group:00000000 wm4.lpc17xx_uart.h.58.dbba6e724b29a6214e9cafbaf3ee8a9e
                           .group:00000000 wm4.lpc17xx_ssp.h.48.cd045d667ab7b89d5d550d38997df61b
                           .group:00000000 wm4.lpc17xx_i2c.h.30.8ecc2351e7cba41135ba36b3ad45f764
                           .group:00000000 wm4.lpc_i2c_tsc2004.h.29.34082f268f216caa8d0bf2c0960ad4a6
                           .group:00000000 wm4.lpc17xx_adc.h.30.943bee91a8c97854e4279a602f57e741
                           .group:00000000 wm4.lpc_ssp_glcd.h.46.c050a23f7d3e575d1eafabe862fb4f95
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.Font_24x16.h.16.3819cadfc08710b0322707370d919056

UNDEFINED SYMBOLS
CS_Force1
GPIO_SetValue
SSP_ReadWrite
GPIO_ClearValue
delay_ms
memcpy
GPIO_SetDir
