   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"lpc_ssp_glcd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	1
  19              		.thumb
  20              		.thumb_func
  22              	wr_dat_start:
  23              	.LFB65:
  24              		.file 1 "../Source Files/lpc_ssp_glcd.c"
   1:../Source Files/lpc_ssp_glcd.c **** /**********************************************************************
   2:../Source Files/lpc_ssp_glcd.c **** * $Id$		lpc_ssp_glcd.c
   3:../Source Files/lpc_ssp_glcd.c **** *//**
   4:../Source Files/lpc_ssp_glcd.c **** * @file		lpc_ssp_glcd.c
   5:../Source Files/lpc_ssp_glcd.c **** * @brief	Contains all functions support for SSP based GLCD
   6:../Source Files/lpc_ssp_glcd.c **** *           library on LPC17xx
   7:../Source Files/lpc_ssp_glcd.c **** * @version	1.0
   8:../Source Files/lpc_ssp_glcd.c **** * @date		18. Dec. 2013
   9:../Source Files/lpc_ssp_glcd.c **** * @author	Dwijay.Edutech Learning Solutions
  10:../Source Files/lpc_ssp_glcd.c **** ***********************************************************************
  11:../Source Files/lpc_ssp_glcd.c **** * Software that is described herein is for illustrative purposes only
  12:../Source Files/lpc_ssp_glcd.c **** * which provides customers with programming information regarding the
  13:../Source Files/lpc_ssp_glcd.c **** * products. This software is supplied "AS IS" without any warranties.
  14:../Source Files/lpc_ssp_glcd.c **** * NXP Semiconductors assumes no responsibility or liability for the
  15:../Source Files/lpc_ssp_glcd.c **** * use of the software, conveys no license or title under any patent,
  16:../Source Files/lpc_ssp_glcd.c **** * copyright, or mask work right to the product. NXP Semiconductors
  17:../Source Files/lpc_ssp_glcd.c **** * reserves the right to make changes in the software without
  18:../Source Files/lpc_ssp_glcd.c **** * notification. NXP Semiconductors also make no representation or
  19:../Source Files/lpc_ssp_glcd.c **** * warranty that such application will be suitable for the specified
  20:../Source Files/lpc_ssp_glcd.c **** * use without further testing or modification.
  21:../Source Files/lpc_ssp_glcd.c **** **********************************************************************/
  22:../Source Files/lpc_ssp_glcd.c **** 
  23:../Source Files/lpc_ssp_glcd.c **** /* Peripheral group ----------------------------------------------------------- */
  24:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD
  25:../Source Files/lpc_ssp_glcd.c ****  * @{
  26:../Source Files/lpc_ssp_glcd.c ****  */
  27:../Source Files/lpc_ssp_glcd.c **** 
  28:../Source Files/lpc_ssp_glcd.c **** /* Includes ------------------------------------------------------------------- */
  29:../Source Files/lpc_ssp_glcd.c **** #include "lpc_ssp_glcd.h"
  30:../Source Files/lpc_ssp_glcd.c **** #include "math.h"
  31:../Source Files/lpc_ssp_glcd.c **** #include "Font_24x16.h"
  32:../Source Files/lpc_ssp_glcd.c **** 
  33:../Source Files/lpc_ssp_glcd.c **** 
  34:../Source Files/lpc_ssp_glcd.c **** /* If this source file built with example, the LPC17xx FW library configuration
  35:../Source Files/lpc_ssp_glcd.c ****  * file in each example directory ("lpc17xx_libcfg.h") must be included,
  36:../Source Files/lpc_ssp_glcd.c ****  * otherwise the default FW library configuration file must be included instead
  37:../Source Files/lpc_ssp_glcd.c ****  */
  38:../Source Files/lpc_ssp_glcd.c **** 
  39:../Source Files/lpc_ssp_glcd.c **** /******************************************************************************/
  40:../Source Files/lpc_ssp_glcd.c **** static volatile uint16_t TextColor = Green, BackColor = White;
  41:../Source Files/lpc_ssp_glcd.c **** 
  42:../Source Files/lpc_ssp_glcd.c **** // Swap two bytes
  43:../Source Files/lpc_ssp_glcd.c **** #define SWAP(x,y) do { (x)=(x)^(y); (y)=(x)^(y); (x)=(x)^(y); } while(0)
  44:../Source Files/lpc_ssp_glcd.c **** 
  45:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD_Public_Functions
  46:../Source Files/lpc_ssp_glcd.c ****  * @{
  47:../Source Files/lpc_ssp_glcd.c ****  */
  48:../Source Files/lpc_ssp_glcd.c **** 
  49:../Source Files/lpc_ssp_glcd.c **** /* Public Functions ----------------------------------------------------------- */
  50:../Source Files/lpc_ssp_glcd.c **** 
  51:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  52:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls Backlight
  53:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	NewState	ENABLE/DISABLE the Backlight
  54:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  55:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  56:../Source Files/lpc_ssp_glcd.c **** void GLCD_Backlight (FunctionalState NewState)
  57:../Source Files/lpc_ssp_glcd.c **** {
  58:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
  59:../Source Files/lpc_ssp_glcd.c **** 	{
  60:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
  61:../Source Files/lpc_ssp_glcd.c **** 	}
  62:../Source Files/lpc_ssp_glcd.c **** 	else
  63:../Source Files/lpc_ssp_glcd.c **** 	{
  64:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
  65:../Source Files/lpc_ssp_glcd.c **** 	}
  66:../Source Files/lpc_ssp_glcd.c **** }
  67:../Source Files/lpc_ssp_glcd.c **** 
  68:../Source Files/lpc_ssp_glcd.c **** 
  69:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  70:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function resets GLCD
  71:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
  72:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  73:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  74:../Source Files/lpc_ssp_glcd.c **** void GLCD_Reset (void)
  75:../Source Files/lpc_ssp_glcd.c **** {
  76:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
  77:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
  78:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
  79:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
  81:../Source Files/lpc_ssp_glcd.c **** }
  82:../Source Files/lpc_ssp_glcd.c **** 
  83:../Source Files/lpc_ssp_glcd.c **** 
  84:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  85:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls GLCD Output
  86:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	drv	    Output Format
  87:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_LEFT
  88:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_RIGHT
  89:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_LEFT
  90:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_RIGHT
  91:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  92:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  93:../Source Files/lpc_ssp_glcd.c **** void GLCD_Driver_OutCtrl (DRIVER_OUT_Type drv)
  94:../Source Files/lpc_ssp_glcd.c **** {
  95:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
  96:../Source Files/lpc_ssp_glcd.c **** 
  97:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
  98:../Source Files/lpc_ssp_glcd.c **** 	{
  99:../Source Files/lpc_ssp_glcd.c **** 	case TOP_LEFT:
 100:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 101:../Source Files/lpc_ssp_glcd.c **** 		break;
 102:../Source Files/lpc_ssp_glcd.c **** 
 103:../Source Files/lpc_ssp_glcd.c **** 	case TOP_RIGHT:
 104:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 105:../Source Files/lpc_ssp_glcd.c **** 		break;
 106:../Source Files/lpc_ssp_glcd.c **** 
 107:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_LEFT:
 108:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 109:../Source Files/lpc_ssp_glcd.c **** 		break;
 110:../Source Files/lpc_ssp_glcd.c **** 
 111:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_RIGHT:
 112:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 113:../Source Files/lpc_ssp_glcd.c **** 		break;
 114:../Source Files/lpc_ssp_glcd.c **** 
 115:../Source Files/lpc_ssp_glcd.c **** 	default:
 116:../Source Files/lpc_ssp_glcd.c **** 		break;
 117:../Source Files/lpc_ssp_glcd.c **** 	}
 118:../Source Files/lpc_ssp_glcd.c **** }
 119:../Source Files/lpc_ssp_glcd.c **** 
 120:../Source Files/lpc_ssp_glcd.c **** 
 121:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 122:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set draw window region to required width and height
 123:../Source Files/lpc_ssp_glcd.c ****  *              as well as location
 124:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 125:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 126:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 127:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 128:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 129:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 130:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 131:../Source Files/lpc_ssp_glcd.c **** {
 132:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 133:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 134:../Source Files/lpc_ssp_glcd.c **** 
 135:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 136:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 137:../Source Files/lpc_ssp_glcd.c **** 
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 139:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 140:../Source Files/lpc_ssp_glcd.c **** 
 141:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 142:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 143:../Source Files/lpc_ssp_glcd.c **** }
 144:../Source Files/lpc_ssp_glcd.c **** 
 145:../Source Files/lpc_ssp_glcd.c **** 
 146:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 147:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to to desired location
 148:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 149:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 150:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 151:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 152:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 153:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 154:../Source Files/lpc_ssp_glcd.c **** void GLCD_Set_Loc (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 155:../Source Files/lpc_ssp_glcd.c **** {
 156:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 157:../Source Files/lpc_ssp_glcd.c **** 
 158:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 159:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 160:../Source Files/lpc_ssp_glcd.c **** 
 161:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 162:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 163:../Source Files/lpc_ssp_glcd.c **** 
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 165:../Source Files/lpc_ssp_glcd.c **** }
 166:../Source Files/lpc_ssp_glcd.c **** 
 167:../Source Files/lpc_ssp_glcd.c **** 
 168:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 169:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to Home
 170:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 171:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 172:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 173:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Home (void)
 174:../Source Files/lpc_ssp_glcd.c **** {
 175:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 176:../Source Files/lpc_ssp_glcd.c **** }
 177:../Source Files/lpc_ssp_glcd.c **** 
 178:../Source Files/lpc_ssp_glcd.c **** 
 179:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 180:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Initializes GLCD
 181:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 182:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 183:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 184:../Source Files/lpc_ssp_glcd.c **** void GLCD_Init (void)
 185:../Source Files/lpc_ssp_glcd.c **** {
 186:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 187:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 189:../Source Files/lpc_ssp_glcd.c **** 
 190:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 191:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 192:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 193:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 194:../Source Files/lpc_ssp_glcd.c **** 
 195:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 196:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 197:../Source Files/lpc_ssp_glcd.c **** 
 198:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 199:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 200:../Source Files/lpc_ssp_glcd.c **** 
 201:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 202:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 203:../Source Files/lpc_ssp_glcd.c **** 
 204:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 205:../Source Files/lpc_ssp_glcd.c **** 
 206:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 207:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 208:../Source Files/lpc_ssp_glcd.c **** 
 209:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 210:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 211:../Source Files/lpc_ssp_glcd.c **** 
 212:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 213:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 214:../Source Files/lpc_ssp_glcd.c **** 
 215:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 216:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 217:../Source Files/lpc_ssp_glcd.c **** 
 218:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 219:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 220:../Source Files/lpc_ssp_glcd.c **** 
 221:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 222:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 223:../Source Files/lpc_ssp_glcd.c **** 
 224:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 225:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 226:../Source Files/lpc_ssp_glcd.c **** 
 227:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 228:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 229:../Source Files/lpc_ssp_glcd.c **** 
 230:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 231:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 232:../Source Files/lpc_ssp_glcd.c **** 
 233:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 234:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 235:../Source Files/lpc_ssp_glcd.c **** 
 236:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 237:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 238:../Source Files/lpc_ssp_glcd.c **** 
 239:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 240:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 241:../Source Files/lpc_ssp_glcd.c **** 
 242:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 243:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 244:../Source Files/lpc_ssp_glcd.c **** 
 245:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 246:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 247:../Source Files/lpc_ssp_glcd.c **** 
 248:../Source Files/lpc_ssp_glcd.c **** 	// Gamma Control (R30h to R3Bh) -- Page 56 of SSD2119 datasheet
 249:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 250:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 251:../Source Files/lpc_ssp_glcd.c **** 
 252:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 253:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 254:../Source Files/lpc_ssp_glcd.c **** 
 255:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 256:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 257:../Source Files/lpc_ssp_glcd.c **** 
 258:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 259:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 260:../Source Files/lpc_ssp_glcd.c **** 
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 262:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 263:../Source Files/lpc_ssp_glcd.c **** 
 264:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 265:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 266:../Source Files/lpc_ssp_glcd.c **** 
 267:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 268:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 269:../Source Files/lpc_ssp_glcd.c **** 
 270:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 271:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 272:../Source Files/lpc_ssp_glcd.c **** 
 273:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 274:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 275:../Source Files/lpc_ssp_glcd.c **** 
 276:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 277:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 278:../Source Files/lpc_ssp_glcd.c **** 
 279:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 280:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 281:../Source Files/lpc_ssp_glcd.c **** 
 282:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 283:../Source Files/lpc_ssp_glcd.c **** 
 284:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 285:../Source Files/lpc_ssp_glcd.c **** }
 286:../Source Files/lpc_ssp_glcd.c **** 
 287:../Source Files/lpc_ssp_glcd.c **** 
 288:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 289:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a pixel in foreground color
 290:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 291:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 292:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 293:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 294:../Source Files/lpc_ssp_glcd.c **** void GLCD_PutPixel (uint16_t x, uint16_t y, uint16_t color)
 295:../Source Files/lpc_ssp_glcd.c **** {
 296:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 297:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 298:../Source Files/lpc_ssp_glcd.c **** 
 299:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 300:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 301:../Source Files/lpc_ssp_glcd.c **** 
 302:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 303:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 304:../Source Files/lpc_ssp_glcd.c **** }
 305:../Source Files/lpc_ssp_glcd.c **** 
 306:../Source Files/lpc_ssp_glcd.c **** 
 307:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 308:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set foreground color
 309:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    foreground color
 310:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 311:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 312:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetTextColor (uint16_t color)
 313:../Source Files/lpc_ssp_glcd.c **** {
 314:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 315:../Source Files/lpc_ssp_glcd.c **** }
 316:../Source Files/lpc_ssp_glcd.c **** 
 317:../Source Files/lpc_ssp_glcd.c **** 
 318:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 319:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set background color
 320:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    background color
 321:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 322:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 323:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetBackColor (uint16_t color)
 324:../Source Files/lpc_ssp_glcd.c **** {
 325:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 326:../Source Files/lpc_ssp_glcd.c **** }
 327:../Source Files/lpc_ssp_glcd.c **** 
 328:../Source Files/lpc_ssp_glcd.c **** 
 329:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 330:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Start of data writing to LCD controller
 331:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 332:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 333:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 334:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_start (void)
 335:../Source Files/lpc_ssp_glcd.c **** {
  25              		.loc 1 335 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
 336:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);
  29              		.loc 1 336 0
  30 0000 0021     		movs	r1, #0
 335:../Source Files/lpc_ssp_glcd.c **** {
  31              		.loc 1 335 0
  32 0002 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              		.loc 1 336 0
  38 0004 0448     		ldr	r0, .L2
  39 0006 FFF7FEFF 		bl	CS_Force1
  40              	.LVL0:
 337:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  41              		.loc 1 337 0
  42 000a 0220     		movs	r0, #2
  43 000c 0121     		movs	r1, #1
 338:../Source Files/lpc_ssp_glcd.c **** }
  44              		.loc 1 338 0
  45 000e BDE80840 		pop	{r3, lr}
 337:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  46              		.loc 1 337 0
  47 0012 FFF7FEBF 		b	GPIO_SetValue
  48              	.LVL1:
  49              	.L3:
  50 0016 00BF     		.align	2
  51              	.L2:
  52 0018 00000340 		.word	1073938432
  53              		.cfi_endproc
  54              	.LFE65:
  56              		.align	1
  57              		.thumb
  58              		.thumb_func
  60              	wr_dat_stop:
  61              	.LFB66:
 339:../Source Files/lpc_ssp_glcd.c **** 
 340:../Source Files/lpc_ssp_glcd.c **** 
 341:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 342:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Stop of data writing to LCD controller
 343:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 344:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 345:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 346:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_stop (void)
 347:../Source Files/lpc_ssp_glcd.c **** {
  62              		.loc 1 347 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 348:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  67              		.loc 1 348 0
  68 001c 0148     		ldr	r0, .L5
  69 001e 0121     		movs	r1, #1
 349:../Source Files/lpc_ssp_glcd.c **** }
  70              		.loc 1 349 0
 348:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  71              		.loc 1 348 0
  72 0020 FFF7FEBF 		b	CS_Force1
  73              	.LVL2:
  74              	.L6:
  75              		.align	2
  76              	.L5:
  77 0024 00000340 		.word	1073938432
  78              		.cfi_endproc
  79              	.LFE66:
  81              		.align	1
  82              		.thumb
  83              		.thumb_func
  85              	wr_dat_only:
  86              	.LFB67:
 350:../Source Files/lpc_ssp_glcd.c **** 
 351:../Source Files/lpc_ssp_glcd.c **** 
 352:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 353:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Data writing to LCD controller
 354:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	c     data to be written
 355:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 356:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 357:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_only (uint16_t c)
 358:../Source Files/lpc_ssp_glcd.c **** {
  87              		.loc 1 358 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 24
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL3:
  92 0028 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 32
  95              		.cfi_offset 0, -32
  96              		.cfi_offset 1, -28
  97              		.cfi_offset 2, -24
  98              		.cfi_offset 3, -20
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 6, -8
 102              		.cfi_offset 14, -4
 359:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
 360:../Source Files/lpc_ssp_glcd.c **** 
 361:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 103              		.loc 1 361 0
 104 002a 074B     		ldr	r3, .L8
 105 002c 020A     		lsrs	r2, r0, #8
 362:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) c;        // 2nd byte extract
 106              		.loc 1 362 0
 107 002e 5870     		strb	r0, [r3, #1]
 363:../Source Files/lpc_ssp_glcd.c **** 
 364:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 365:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 366:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 108              		.loc 1 366 0
 109 0030 0220     		movs	r0, #2
 110              	.LVL4:
 361:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 111              		.loc 1 361 0
 112 0032 1A70     		strb	r2, [r3, #0]
 113              		.loc 1 366 0
 114 0034 0490     		str	r0, [sp, #16]
 365:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 115              		.loc 1 365 0
 116 0036 0022     		movs	r2, #0
 367:../Source Files/lpc_ssp_glcd.c **** 	SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 117              		.loc 1 367 0
 118 0038 6946     		mov	r1, sp
 119 003a 0448     		ldr	r0, .L8+4
 364:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 120              		.loc 1 364 0
 121 003c 0093     		str	r3, [sp, #0]
 365:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 122              		.loc 1 365 0
 123 003e 0292     		str	r2, [sp, #8]
 124              		.loc 1 367 0
 125 0040 FFF7FEFF 		bl	SSP_ReadWrite
 126              	.LVL5:
 368:../Source Files/lpc_ssp_glcd.c **** }
 127              		.loc 1 368 0
 128 0044 07B0     		add	sp, sp, #28
 129 0046 00BD     		pop	{pc}
 130              	.L9:
 131              		.align	2
 132              	.L8:
 133 0048 00000000 		.word	Tx_Buf1
 134 004c 00000340 		.word	1073938432
 135              		.cfi_endproc
 136              	.LFE67:
 138              		.align	1
 139              		.global	GLCD_Backlight
 140              		.thumb
 141              		.thumb_func
 143              	GLCD_Backlight:
 144              	.LFB55:
  57:../Source Files/lpc_ssp_glcd.c **** {
 145              		.loc 1 57 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150              	.LVL6:
  58:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
 151              		.loc 1 58 0
 152 0050 20B1     		cbz	r0, .L11
  60:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 153              		.loc 1 60 0
 154 0052 0220     		movs	r0, #2
 155              	.LVL7:
 156 0054 4FF48071 		mov	r1, #256
  66:../Source Files/lpc_ssp_glcd.c **** }
 157              		.loc 1 66 0
  60:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 158              		.loc 1 60 0
 159 0058 FFF7FEBF 		b	GPIO_SetValue
 160              	.LVL8:
 161              	.L11:
  64:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 162              		.loc 1 64 0
 163 005c 0220     		movs	r0, #2
 164              	.LVL9:
 165 005e 4FF48071 		mov	r1, #256
  66:../Source Files/lpc_ssp_glcd.c **** }
 166              		.loc 1 66 0
  64:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 167              		.loc 1 64 0
 168 0062 FFF7FEBF 		b	GPIO_ClearValue
 169              	.LVL10:
 170              		.cfi_endproc
 171              	.LFE55:
 173              		.align	1
 174              		.global	GLCD_Reset
 175              		.thumb
 176              		.thumb_func
 178              	GLCD_Reset:
 179              	.LFB56:
  75:../Source Files/lpc_ssp_glcd.c **** {
 180              		.loc 1 75 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0066 08B5     		push	{r3, lr}
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
  76:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
 189              		.loc 1 76 0
 190 0068 2021     		movs	r1, #32
 191 006a 0020     		movs	r0, #0
 192 006c FFF7FEFF 		bl	GPIO_SetValue
 193              	.LVL11:
  77:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 194              		.loc 1 77 0
 195 0070 0220     		movs	r0, #2
 196 0072 FFF7FEFF 		bl	delay_ms
 197              	.LVL12:
  78:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
 198              		.loc 1 78 0
 199 0076 2021     		movs	r1, #32
 200 0078 0020     		movs	r0, #0
 201 007a FFF7FEFF 		bl	GPIO_ClearValue
 202              	.LVL13:
  79:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
 203              		.loc 1 79 0
 204 007e 0420     		movs	r0, #4
 205 0080 FFF7FEFF 		bl	delay_ms
 206              	.LVL14:
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 207              		.loc 1 80 0
 208 0084 0020     		movs	r0, #0
 209 0086 2021     		movs	r1, #32
  81:../Source Files/lpc_ssp_glcd.c **** }
 210              		.loc 1 81 0
 211 0088 BDE80840 		pop	{r3, lr}
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 212              		.loc 1 80 0
 213 008c FFF7FEBF 		b	GPIO_SetValue
 214              	.LVL15:
 215              		.cfi_endproc
 216              	.LFE56:
 218              		.align	1
 219              		.global	GLCD_SetTextColor
 220              		.thumb
 221              		.thumb_func
 223              	GLCD_SetTextColor:
 224              	.LFB63:
 313:../Source Files/lpc_ssp_glcd.c **** {
 225              		.loc 1 313 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL16:
 314:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 231              		.loc 1 314 0
 232 0090 014B     		ldr	r3, .L15
 233 0092 1880     		strh	r0, [r3, #0]	@ movhi
 234 0094 7047     		bx	lr
 235              	.L16:
 236 0096 00BF     		.align	2
 237              	.L15:
 238 0098 00000000 		.word	.LANCHOR0
 239              		.cfi_endproc
 240              	.LFE63:
 242              		.align	1
 243              		.global	GLCD_SetBackColor
 244              		.thumb
 245              		.thumb_func
 247              	GLCD_SetBackColor:
 248              	.LFB64:
 324:../Source Files/lpc_ssp_glcd.c **** {
 249              		.loc 1 324 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL17:
 325:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 255              		.loc 1 325 0
 256 009c 014B     		ldr	r3, .L18
 257 009e 5880     		strh	r0, [r3, #2]	@ movhi
 258 00a0 7047     		bx	lr
 259              	.L19:
 260 00a2 00BF     		.align	2
 261              	.L18:
 262 00a4 00000000 		.word	.LANCHOR0
 263              		.cfi_endproc
 264              	.LFE64:
 266              		.align	1
 267              		.global	Write_Command_Glcd
 268              		.thumb
 269              		.thumb_func
 271              	Write_Command_Glcd:
 272              	.LFB81:
 369:../Source Files/lpc_ssp_glcd.c **** 
 370:../Source Files/lpc_ssp_glcd.c **** 
 371:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 372:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear display
 373:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    display clearing color
 374:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 375:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 376:../Source Files/lpc_ssp_glcd.c **** void GLCD_Clear (uint16_t color)
 377:../Source Files/lpc_ssp_glcd.c **** {
 378:../Source Files/lpc_ssp_glcd.c **** 	unsigned int   i;
 379:../Source Files/lpc_ssp_glcd.c **** 
 380:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 381:../Source Files/lpc_ssp_glcd.c **** 
 382:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 383:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 384:../Source Files/lpc_ssp_glcd.c **** 
 385:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 386:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 387:../Source Files/lpc_ssp_glcd.c **** 
 388:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 389:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 390:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 391:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 392:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 393:../Source Files/lpc_ssp_glcd.c **** }
 394:../Source Files/lpc_ssp_glcd.c **** 
 395:../Source Files/lpc_ssp_glcd.c **** 
 396:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 397:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw character on given position
 398:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x       horizontal position
 399:../Source Files/lpc_ssp_glcd.c ****  *              y       vertical position
 400:../Source Files/lpc_ssp_glcd.c ****  *              c       pointer to character bitmap
 401:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 402:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 403:../Source Files/lpc_ssp_glcd.c **** void GLCD_Draw_Char (uint16_t x, uint16_t y, uint16_t *c)
 404:../Source Files/lpc_ssp_glcd.c **** {
 405:../Source Files/lpc_ssp_glcd.c **** 	int idx = 0, i, j;
 406:../Source Files/lpc_ssp_glcd.c **** 
 407:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 408:../Source Files/lpc_ssp_glcd.c **** 
 409:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 410:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 411:../Source Files/lpc_ssp_glcd.c **** 
 412:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 413:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 414:../Source Files/lpc_ssp_glcd.c **** 
 415:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 416:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 417:../Source Files/lpc_ssp_glcd.c **** 
 418:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 419:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 420:../Source Files/lpc_ssp_glcd.c **** 
 421:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 422:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 423:../Source Files/lpc_ssp_glcd.c **** 
 424:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 425:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 426:../Source Files/lpc_ssp_glcd.c **** 
 427:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 428:../Source Files/lpc_ssp_glcd.c **** 
 429:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 430:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 431:../Source Files/lpc_ssp_glcd.c **** 	{
 432:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 433:../Source Files/lpc_ssp_glcd.c **** 		{
 434:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 435:../Source Files/lpc_ssp_glcd.c **** 			{
 436:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 437:../Source Files/lpc_ssp_glcd.c **** 			}
 438:../Source Files/lpc_ssp_glcd.c **** 			else
 439:../Source Files/lpc_ssp_glcd.c **** 			{
 440:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 441:../Source Files/lpc_ssp_glcd.c **** 			}
 442:../Source Files/lpc_ssp_glcd.c **** 		}
 443:../Source Files/lpc_ssp_glcd.c **** 		c++;
 444:../Source Files/lpc_ssp_glcd.c **** 	}
 445:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 446:../Source Files/lpc_ssp_glcd.c **** }
 447:../Source Files/lpc_ssp_glcd.c **** 
 448:../Source Files/lpc_ssp_glcd.c **** 
 449:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 450:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply character on given line
 451:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 452:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 453:../Source Files/lpc_ssp_glcd.c ****  *              c        ascii character
 454:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 455:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 456:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Char (uint16_t ln, uint16_t col, uchar c)
 457:../Source Files/lpc_ssp_glcd.c **** {
 458:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 459:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 460:../Source Files/lpc_ssp_glcd.c **** }
 461:../Source Files/lpc_ssp_glcd.c **** 
 462:../Source Files/lpc_ssp_glcd.c **** 
 463:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 464:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply string on given line
 465:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 466:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 467:../Source Files/lpc_ssp_glcd.c ****  *              s        pointer to string
 468:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 469:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 470:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 471:../Source Files/lpc_ssp_glcd.c **** {
 472:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 473:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 474:../Source Files/lpc_ssp_glcd.c **** 	{
 475:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 476:../Source Files/lpc_ssp_glcd.c **** 	}
 477:../Source Files/lpc_ssp_glcd.c **** }
 478:../Source Files/lpc_ssp_glcd.c **** 
 479:../Source Files/lpc_ssp_glcd.c **** 
 480:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 481:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear given line
 482:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 483:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 484:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 485:../Source Files/lpc_ssp_glcd.c **** void GLCD_ClearLn (uint16_t ln)
 486:../Source Files/lpc_ssp_glcd.c **** {
 487:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 488:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 489:../Source Files/lpc_ssp_glcd.c **** }
 490:../Source Files/lpc_ssp_glcd.c **** 
 491:../Source Files/lpc_ssp_glcd.c **** 
 492:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 493:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw bargraph
 494:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 495:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 496:../Source Files/lpc_ssp_glcd.c ****  *              w        maximum width of bargraph (in pixels)
 497:../Source Files/lpc_ssp_glcd.c ****  *              val      value of active bargraph (in 1/1024)
 498:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 499:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 500:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bargraph (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t val)
 501:../Source Files/lpc_ssp_glcd.c **** {
 502:../Source Files/lpc_ssp_glcd.c **** 	int i,j;
 503:../Source Files/lpc_ssp_glcd.c **** 
 504:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 505:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 506:../Source Files/lpc_ssp_glcd.c **** 
 507:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 508:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 509:../Source Files/lpc_ssp_glcd.c **** 
 510:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 511:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 512:../Source Files/lpc_ssp_glcd.c **** 
 513:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 514:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 515:../Source Files/lpc_ssp_glcd.c **** 
 516:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 517:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 518:../Source Files/lpc_ssp_glcd.c **** 
 519:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 520:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 521:../Source Files/lpc_ssp_glcd.c **** 
 522:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 523:../Source Files/lpc_ssp_glcd.c **** 
 524:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 525:../Source Files/lpc_ssp_glcd.c **** 
 526:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 527:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 528:../Source Files/lpc_ssp_glcd.c **** 	{
 529:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 530:../Source Files/lpc_ssp_glcd.c **** 		{
 531:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 532:../Source Files/lpc_ssp_glcd.c **** 			{
 533:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 534:../Source Files/lpc_ssp_glcd.c **** 			}
 535:../Source Files/lpc_ssp_glcd.c **** 			else
 536:../Source Files/lpc_ssp_glcd.c **** 			{
 537:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 538:../Source Files/lpc_ssp_glcd.c **** 			}
 539:../Source Files/lpc_ssp_glcd.c **** 		}
 540:../Source Files/lpc_ssp_glcd.c **** 	}
 541:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 542:../Source Files/lpc_ssp_glcd.c **** }
 543:../Source Files/lpc_ssp_glcd.c **** 
 544:../Source Files/lpc_ssp_glcd.c **** 
 545:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 546:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Display graphical bitmap image at position x horizontally
 547:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 548:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 549:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 550:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 551:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 552:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 553:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 554:../Source Files/lpc_ssp_glcd.c ****  *              bitmap   address at which the bitmap data resides
 555:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 556:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 557:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 558:../Source Files/lpc_ssp_glcd.c **** {
 559:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j,k;
 560:../Source Files/lpc_ssp_glcd.c **** 
 561:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 562:../Source Files/lpc_ssp_glcd.c **** 
 563:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 564:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 565:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 566:../Source Files/lpc_ssp_glcd.c **** 	{
 567:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 568:../Source Files/lpc_ssp_glcd.c **** 		{
 569:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 570:../Source Files/lpc_ssp_glcd.c **** 		}
 571:../Source Files/lpc_ssp_glcd.c **** 	}
 572:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 573:../Source Files/lpc_ssp_glcd.c **** }
 574:../Source Files/lpc_ssp_glcd.c **** 
 575:../Source Files/lpc_ssp_glcd.c **** 
 576:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 577:../Source Files/lpc_ssp_glcd.c ****  * @brief	    F at position x horizontally
 578:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 579:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 580:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 581:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 582:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 583:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 584:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 585:../Source Files/lpc_ssp_glcd.c ****  *              color    window color
 586:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 587:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 588:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window_Fill (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color)
 589:../Source Files/lpc_ssp_glcd.c **** {
 590:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j;
 591:../Source Files/lpc_ssp_glcd.c **** 
 592:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 593:../Source Files/lpc_ssp_glcd.c **** 
 594:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 595:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 596:../Source Files/lpc_ssp_glcd.c **** 	{
 597:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 598:../Source Files/lpc_ssp_glcd.c **** 		{
 599:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 600:../Source Files/lpc_ssp_glcd.c **** 		}
 601:../Source Files/lpc_ssp_glcd.c **** 	}
 602:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 603:../Source Files/lpc_ssp_glcd.c **** }
 604:../Source Files/lpc_ssp_glcd.c **** 
 605:../Source Files/lpc_ssp_glcd.c **** 
 606:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 607:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a line on a graphic LCD using Bresenham's
 608:../Source Files/lpc_ssp_glcd.c ****  *              line drawing algorithm
 609:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)   the start coordinate
 610:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)   the end coordinate
 611:../Source Files/lpc_ssp_glcd.c ****  *              color      line color
 612:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 613:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 614:../Source Files/lpc_ssp_glcd.c **** void GLCD_Line(int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color)
 615:../Source Files/lpc_ssp_glcd.c **** {
 616:../Source Files/lpc_ssp_glcd.c **** 	int16_t  x, y, addx, addy, dx, dy;
 617:../Source Files/lpc_ssp_glcd.c **** 	int32_t P,i;
 618:../Source Files/lpc_ssp_glcd.c **** 
 619:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 620:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 621:../Source Files/lpc_ssp_glcd.c **** 	x = x1;
 622:../Source Files/lpc_ssp_glcd.c **** 	y = y1;
 623:../Source Files/lpc_ssp_glcd.c **** 
 624:../Source Files/lpc_ssp_glcd.c **** 	if(x1 > x2)
 625:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 626:../Source Files/lpc_ssp_glcd.c **** 	else
 627:../Source Files/lpc_ssp_glcd.c **** 		addx = 1;
 628:../Source Files/lpc_ssp_glcd.c **** 	if(y1 > y2)
 629:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 630:../Source Files/lpc_ssp_glcd.c **** 	else
 631:../Source Files/lpc_ssp_glcd.c **** 		addy = 1;
 632:../Source Files/lpc_ssp_glcd.c **** 
 633:../Source Files/lpc_ssp_glcd.c **** 
 634:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 635:../Source Files/lpc_ssp_glcd.c **** 	{
 636:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 637:../Source Files/lpc_ssp_glcd.c **** 
 638:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 639:../Source Files/lpc_ssp_glcd.c **** 		{
 640:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 641:../Source Files/lpc_ssp_glcd.c **** 
 642:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 643:../Source Files/lpc_ssp_glcd.c **** 			{
 644:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 645:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 646:../Source Files/lpc_ssp_glcd.c **** 			}
 647:../Source Files/lpc_ssp_glcd.c **** 			else
 648:../Source Files/lpc_ssp_glcd.c **** 			{
 649:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 650:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 651:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 652:../Source Files/lpc_ssp_glcd.c **** 			}
 653:../Source Files/lpc_ssp_glcd.c **** 		}
 654:../Source Files/lpc_ssp_glcd.c **** 	}
 655:../Source Files/lpc_ssp_glcd.c **** 	else
 656:../Source Files/lpc_ssp_glcd.c **** 	{
 657:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 658:../Source Files/lpc_ssp_glcd.c **** 
 659:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 660:../Source Files/lpc_ssp_glcd.c **** 		{
 661:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 662:../Source Files/lpc_ssp_glcd.c **** 
 663:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 664:../Source Files/lpc_ssp_glcd.c **** 			{
 665:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 666:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 667:../Source Files/lpc_ssp_glcd.c **** 			}
 668:../Source Files/lpc_ssp_glcd.c **** 			else
 669:../Source Files/lpc_ssp_glcd.c **** 			{
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 671:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 672:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 673:../Source Files/lpc_ssp_glcd.c **** 			}
 674:../Source Files/lpc_ssp_glcd.c **** 		}
 675:../Source Files/lpc_ssp_glcd.c **** 	}
 676:../Source Files/lpc_ssp_glcd.c **** }
 677:../Source Files/lpc_ssp_glcd.c **** 
 678:../Source Files/lpc_ssp_glcd.c **** 
 679:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 680:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Rectangle on a graphic LCD
 681:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 682:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 683:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Rectangle TRUE/FALSE or ON/OFF
 684:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 685:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   fill color
 686:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 687:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 688:../Source Files/lpc_ssp_glcd.c **** void GLCD_Rect(COORDINATE_Type *p1, COORDINATE_Type *p2, Bool fill, uint16_t color, uint16_t fill_c
 689:../Source Files/lpc_ssp_glcd.c **** {
 690:../Source Files/lpc_ssp_glcd.c **** 	int16_t  width,height;                          // Find the y min and max
 691:../Source Files/lpc_ssp_glcd.c **** 
 692:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 693:../Source Files/lpc_ssp_glcd.c **** 	{
 694:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 695:../Source Files/lpc_ssp_glcd.c **** 		{
 696:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 697:../Source Files/lpc_ssp_glcd.c **** 			{
 698:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 699:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 700:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 701:../Source Files/lpc_ssp_glcd.c **** 			}
 702:../Source Files/lpc_ssp_glcd.c **** 			else
 703:../Source Files/lpc_ssp_glcd.c **** 			{
 704:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 705:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 706:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 707:../Source Files/lpc_ssp_glcd.c **** 			}
 708:../Source Files/lpc_ssp_glcd.c **** 		}
 709:../Source Files/lpc_ssp_glcd.c **** 		else
 710:../Source Files/lpc_ssp_glcd.c **** 		{
 711:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 712:../Source Files/lpc_ssp_glcd.c **** 			{
 713:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 714:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 715:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 716:../Source Files/lpc_ssp_glcd.c **** 			}
 717:../Source Files/lpc_ssp_glcd.c **** 			else
 718:../Source Files/lpc_ssp_glcd.c **** 			{
 719:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 720:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 721:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 722:../Source Files/lpc_ssp_glcd.c **** 			}
 723:../Source Files/lpc_ssp_glcd.c **** 		}
 724:../Source Files/lpc_ssp_glcd.c **** 		fill = NO;
 725:../Source Files/lpc_ssp_glcd.c **** 	}
 726:../Source Files/lpc_ssp_glcd.c **** 	if(!fill)
 727:../Source Files/lpc_ssp_glcd.c **** 	{
 728:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 729:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 732:../Source Files/lpc_ssp_glcd.c **** 	}
 733:../Source Files/lpc_ssp_glcd.c **** }
 734:../Source Files/lpc_ssp_glcd.c **** 
 735:../Source Files/lpc_ssp_glcd.c **** 
 736:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 737:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a frame on a graphic LCD
 738:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 739:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 740:../Source Files/lpc_ssp_glcd.c ****  *              frame_width  Total Width of Frame
 741:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 742:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Frame fill color
 743:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 744:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 745:../Source Files/lpc_ssp_glcd.c **** void GLCD_Frame(COORDINATE_Type *p1, COORDINATE_Type *p2, int16_t frame_width, uint16_t color, uint
 746:../Source Files/lpc_ssp_glcd.c **** {
 747:../Source Files/lpc_ssp_glcd.c **** 	int16_t fw;                          // Find the y min and max
 748:../Source Files/lpc_ssp_glcd.c **** 
 749:../Source Files/lpc_ssp_glcd.c **** 	fw = frame_width;
 750:../Source Files/lpc_ssp_glcd.c **** 
 751:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 752:../Source Files/lpc_ssp_glcd.c **** 	{
 753:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 754:../Source Files/lpc_ssp_glcd.c **** 		{
 755:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 756:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 759:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 760:../Source Files/lpc_ssp_glcd.c **** 		}
 761:../Source Files/lpc_ssp_glcd.c **** 		else
 762:../Source Files/lpc_ssp_glcd.c **** 		{
 763:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 764:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 767:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 768:../Source Files/lpc_ssp_glcd.c **** 		}
 769:../Source Files/lpc_ssp_glcd.c **** 	}
 770:../Source Files/lpc_ssp_glcd.c **** 
 771:../Source Files/lpc_ssp_glcd.c **** 	if(!fw)
 772:../Source Files/lpc_ssp_glcd.c **** 	{
 773:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 774:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 777:../Source Files/lpc_ssp_glcd.c **** 	}
 778:../Source Files/lpc_ssp_glcd.c **** }
 779:../Source Files/lpc_ssp_glcd.c **** 
 780:../Source Files/lpc_ssp_glcd.c **** 
 781:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 782:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a rectangle/frame on a graphic LCD
 783:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 784:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 785:../Source Files/lpc_ssp_glcd.c ****  *              (x3, y3)     the end coordinate
 786:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Triangle TRUE/FALSE or ON/OFF
 787:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 788:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Triangle Fill Color
 789:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 790:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 792:../Source Files/lpc_ssp_glcd.c **** {
 793:../Source Files/lpc_ssp_glcd.c ****     if(fill)
 794:../Source Files/lpc_ssp_glcd.c ****     {
 795:../Source Files/lpc_ssp_glcd.c ****     	uint16_t t1x,t2x,y,minx,maxx,t1xp,t2xp;
 796:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 797:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 798:../Source Files/lpc_ssp_glcd.c ****     	int16_t signx1,signx2,dx1,dy1,dx2,dy2;
 799:../Source Files/lpc_ssp_glcd.c ****     	uint16_t e1,e2;
 800:../Source Files/lpc_ssp_glcd.c ****         // Sort vertices
 801:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 802:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 804:../Source Files/lpc_ssp_glcd.c **** 
 805:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 806:../Source Files/lpc_ssp_glcd.c **** 
 807:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 809:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 810:../Source Files/lpc_ssp_glcd.c **** 
 811:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 813:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 814:../Source Files/lpc_ssp_glcd.c **** 
 815:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 816:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 817:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 818:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 819:../Source Files/lpc_ssp_glcd.c ****     	}
 820:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 821:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 822:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 823:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 824:../Source Files/lpc_ssp_glcd.c ****     	}
 825:../Source Files/lpc_ssp_glcd.c **** 
 826:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 827:../Source Files/lpc_ssp_glcd.c ****         // Flat top, just process the second half
 828:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 829:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 830:../Source Files/lpc_ssp_glcd.c **** 
 831:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 832:../Source Files/lpc_ssp_glcd.c ****     	{
 833:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 834:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 835:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 836:../Source Files/lpc_ssp_glcd.c ****             // process first line until y value is about to change
 837:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 838:../Source Files/lpc_ssp_glcd.c ****     		{
 839:../Source Files/lpc_ssp_glcd.c ****     			i++;
 840:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 841:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 842:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 843:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 844:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 845:../Source Files/lpc_ssp_glcd.c ****     				else          goto next1;
 846:../Source Files/lpc_ssp_glcd.c ****     			}
 847:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 848:../Source Files/lpc_ssp_glcd.c ****     			else t1x += signx1;
 849:../Source Files/lpc_ssp_glcd.c ****     		}
 850:../Source Files/lpc_ssp_glcd.c ****     	// Move line
 851:../Source Files/lpc_ssp_glcd.c ****     	next1:
 852:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 853:../Source Files/lpc_ssp_glcd.c ****     		while (1)
 854:../Source Files/lpc_ssp_glcd.c ****     		{
 855:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 856:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 857:../Source Files/lpc_ssp_glcd.c ****     			{
 858:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 859:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 860:../Source Files/lpc_ssp_glcd.c ****     				else          goto next2;
 861:../Source Files/lpc_ssp_glcd.c ****     			}
 862:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 863:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 864:../Source Files/lpc_ssp_glcd.c ****     		}
 865:../Source Files/lpc_ssp_glcd.c ****     	next2:
 866:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 867:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 868:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 869:../Source Files/lpc_ssp_glcd.c **** 
 870:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 871:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 872:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 874:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 875:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 876:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 877:../Source Files/lpc_ssp_glcd.c ****        }
 878:../Source Files/lpc_ssp_glcd.c ****     	next:
 879:../Source Files/lpc_ssp_glcd.c ****     	// Second half
 880:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 881:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 882:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 883:../Source Files/lpc_ssp_glcd.c **** 
 884:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 885:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 886:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 887:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 888:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 889:../Source Files/lpc_ssp_glcd.c **** 
 890:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 891:../Source Files/lpc_ssp_glcd.c **** 
 892:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 893:../Source Files/lpc_ssp_glcd.c ****     	{
 894:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 895:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 896:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 897:../Source Files/lpc_ssp_glcd.c ****     	    // process first line until y value is about to change
 898:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 899:../Source Files/lpc_ssp_glcd.c ****     		{
 900:../Source Files/lpc_ssp_glcd.c ****         		e1 += dy1;
 901:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 902:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 903:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 904:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 905:../Source Files/lpc_ssp_glcd.c ****     				else          goto next3;
 906:../Source Files/lpc_ssp_glcd.c ****     			}
 907:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 908:../Source Files/lpc_ssp_glcd.c ****     			else   	   	  t1x += signx1;
 909:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 910:../Source Files/lpc_ssp_glcd.c ****     		}
 911:../Source Files/lpc_ssp_glcd.c ****     	next3:
 912:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 913:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 914:../Source Files/lpc_ssp_glcd.c ****     		{
 915:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 916:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 917:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 918:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 919:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 920:../Source Files/lpc_ssp_glcd.c ****     				else          goto next4;
 921:../Source Files/lpc_ssp_glcd.c ****     			}
 922:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 923:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 924:../Source Files/lpc_ssp_glcd.c ****     		}
 925:../Source Files/lpc_ssp_glcd.c ****     	next4:
 926:../Source Files/lpc_ssp_glcd.c **** 
 927:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 928:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 929:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 930:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 931:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 932:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 934:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 935:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 936:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 937:../Source Files/lpc_ssp_glcd.c ****     	}
 938:../Source Files/lpc_ssp_glcd.c ****     	fill = NO;
 939:../Source Files/lpc_ssp_glcd.c ****     }
 940:../Source Files/lpc_ssp_glcd.c **** 
 941:../Source Files/lpc_ssp_glcd.c **** 
 942:../Source Files/lpc_ssp_glcd.c **** 	if(!fill)
 943:../Source Files/lpc_ssp_glcd.c **** 	{
 944:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, color);
 945:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, color);
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, color);
 947:../Source Files/lpc_ssp_glcd.c **** 	}
 948:../Source Files/lpc_ssp_glcd.c **** }
 949:../Source Files/lpc_ssp_glcd.c **** 
 950:../Source Files/lpc_ssp_glcd.c **** 
 951:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 952:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Circle with given Center and Radius
 953:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x, y)     the center of the circle
 954:../Source Files/lpc_ssp_glcd.c ****  *              radius     the radius of the circle
 955:../Source Files/lpc_ssp_glcd.c ****  *              fill       YES or NO
 956:../Source Files/lpc_ssp_glcd.c ****  *              color      Boundary color
 957:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 958:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 960:../Source Files/lpc_ssp_glcd.c **** {
 961:../Source Files/lpc_ssp_glcd.c **** 	int16_t a, b, P;
 962:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 963:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 964:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 965:../Source Files/lpc_ssp_glcd.c **** 
 966:../Source Files/lpc_ssp_glcd.c **** 	do
 967:../Source Files/lpc_ssp_glcd.c **** 	{
 968:../Source Files/lpc_ssp_glcd.c **** 		if(fill)
 969:../Source Files/lpc_ssp_glcd.c **** 		{
 970:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 971:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, fill_color);
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, fill_color);
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, fill_color);
 974:../Source Files/lpc_ssp_glcd.c **** 		}
 975:../Source Files/lpc_ssp_glcd.c **** 
 976:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 977:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 978:../Source Files/lpc_ssp_glcd.c **** 		else
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 980:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 981:../Source Files/lpc_ssp_glcd.c **** 
 982:../Source Files/lpc_ssp_glcd.c **** 	fill = NO;
 983:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 984:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 985:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 986:../Source Files/lpc_ssp_glcd.c **** 	do
 987:../Source Files/lpc_ssp_glcd.c **** 	{
 988:../Source Files/lpc_ssp_glcd.c **** 		if(!fill)
 989:../Source Files/lpc_ssp_glcd.c **** 		{
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, color);
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, color);
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, color);
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, color);
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, color);
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, color);
 998:../Source Files/lpc_ssp_glcd.c **** 		}
 999:../Source Files/lpc_ssp_glcd.c **** 
1000:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
1001:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
1002:../Source Files/lpc_ssp_glcd.c **** 		else
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
1004:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
1005:../Source Files/lpc_ssp_glcd.c **** }
1006:../Source Files/lpc_ssp_glcd.c **** 
1007:../Source Files/lpc_ssp_glcd.c **** 
1008:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1009:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes commands to the GLCD
1010:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	Command		command to be written on GLCD
1011:../Source Files/lpc_ssp_glcd.c ****  * @return 		status
1012:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1013:../Source Files/lpc_ssp_glcd.c **** uchar Write_Command_Glcd (uint8_t Command)
1014:../Source Files/lpc_ssp_glcd.c **** {
 273              		.loc 1 1014 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 40
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL18:
 278 00a8 10B5     		push	{r4, lr}
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 283 00aa 8AB0     		sub	sp, sp, #40
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 48
 286              		.loc 1 1014 0
 287 00ac 0AAC     		add	r4, sp, #40
 288 00ae 04F8210D 		strb	r0, [r4, #-33]!
1015:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1016:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1017:../Source Files/lpc_ssp_glcd.c **** 	__IO uint32_t i;
1018:../Source Files/lpc_ssp_glcd.c **** 
1019:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(2, LCD_RS);  //select command mode
 289              		.loc 1 1019 0
 290 00b2 0121     		movs	r1, #1
 291 00b4 0220     		movs	r0, #2
 292              	.LVL19:
 293 00b6 FFF7FEFF 		bl	GPIO_ClearValue
 294              	.LVL20:
1020:../Source Files/lpc_ssp_glcd.c **** 
1021:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 295              		.loc 1 1021 0
 296 00ba 1148     		ldr	r0, .L27
 297 00bc 0021     		movs	r1, #0
 298 00be FFF7FEFF 		bl	CS_Force1
 299              	.LVL21:
1022:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = &Command;               /* Send Instruction Byte    */
 300              		.loc 1 1022 0
 301 00c2 0494     		str	r4, [sp, #16]
1023:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 302              		.loc 1 1023 0
 303 00c4 0022     		movs	r2, #0
1024:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 304              		.loc 1 1024 0
 305 00c6 0124     		movs	r4, #1
1025:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 306              		.loc 1 1025 0
 307 00c8 0D48     		ldr	r0, .L27
 308 00ca 04A9     		add	r1, sp, #16
1023:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 309              		.loc 1 1023 0
 310 00cc 0692     		str	r2, [sp, #24]
1024:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 311              		.loc 1 1024 0
 312 00ce 0894     		str	r4, [sp, #32]
 313              		.loc 1 1025 0
 314 00d0 FFF7FEFF 		bl	SSP_ReadWrite
 315              	.LVL22:
1026:../Source Files/lpc_ssp_glcd.c **** 
1027:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 316              		.loc 1 1027 0
 317 00d4 C0B2     		uxtb	r0, r0
 318 00d6 80B1     		cbz	r0, .L21
 319              	.LBB4:
 320              	.LBB5:
1028:../Source Files/lpc_ssp_glcd.c **** 	{
1029:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 321              		.loc 1 1029 0
 322 00d8 2146     		mov	r1, r4
 323 00da 0948     		ldr	r0, .L27
 324              	.LVL23:
 325 00dc FFF7FEFF 		bl	CS_Force1
 326              	.LVL24:
1030:../Source Files/lpc_ssp_glcd.c **** 		for(i=925; i>0; i--);
 327              		.loc 1 1030 0
 328 00e0 40F29D31 		movw	r1, #925
 329              	.L25:
 330              	.LVL25:
 331 00e4 0391     		str	r1, [sp, #12]
 332 00e6 039B     		ldr	r3, [sp, #12]
 333 00e8 13B1     		cbz	r3, .L26
 334              	.L23:
 335 00ea 0398     		ldr	r0, [sp, #12]
 336 00ec 411E     		subs	r1, r0, #1
 337              	.LVL26:
 338 00ee F9E7     		b	.L25
 339              	.LVL27:
 340              	.L26:
1031:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_RS);  // select data mode
 341              		.loc 1 1031 0
 342 00f0 0220     		movs	r0, #2
 343 00f2 0121     		movs	r1, #1
 344 00f4 FFF7FEFF 		bl	GPIO_SetValue
 345              	.LVL28:
 346 00f8 0120     		movs	r0, #1
 347              	.L21:
 348              	.LBE5:
 349              	.LBE4:
1032:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1033:../Source Files/lpc_ssp_glcd.c **** 	}
1034:../Source Files/lpc_ssp_glcd.c **** 	else
1035:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1036:../Source Files/lpc_ssp_glcd.c **** }
 350              		.loc 1 1036 0
 351 00fa 0AB0     		add	sp, sp, #40
 352 00fc 10BD     		pop	{r4, pc}
 353              	.L28:
 354 00fe 00BF     		.align	2
 355              	.L27:
 356 0100 00000340 		.word	1073938432
 357              		.cfi_endproc
 358              	.LFE81:
 360              		.align	1
 361              		.global	Write_Data_Glcd
 362              		.thumb
 363              		.thumb_func
 365              	Write_Data_Glcd:
 366              	.LFB82:
1037:../Source Files/lpc_ssp_glcd.c **** 
1038:../Source Files/lpc_ssp_glcd.c **** 
1039:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1040:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes data to the GLCD
1041:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	data	data to be written on GLCD
1042:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1043:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1044:../Source Files/lpc_ssp_glcd.c **** uchar Write_Data_Glcd (uint16_t data)
1045:../Source Files/lpc_ssp_glcd.c **** {
 367              		.loc 1 1045 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 24
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL29:
 372 0104 10B5     		push	{r4, lr}
 373              	.LCFI5:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
1046:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1047:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1048:../Source Files/lpc_ssp_glcd.c **** 
1049:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 377              		.loc 1 1049 0
 378 0106 0F4C     		ldr	r4, .L32
1045:../Source Files/lpc_ssp_glcd.c **** {
 379              		.loc 1 1045 0
 380 0108 86B0     		sub	sp, sp, #24
 381              	.LCFI6:
 382              		.cfi_def_cfa_offset 32
 383              		.loc 1 1049 0
 384 010a 030A     		lsrs	r3, r0, #8
1050:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) data;        // 2nd byte extract
 385              		.loc 1 1050 0
 386 010c 6070     		strb	r0, [r4, #1]
1051:../Source Files/lpc_ssp_glcd.c **** 
1052:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
 387              		.loc 1 1052 0
 388 010e 0121     		movs	r1, #1
 389 0110 0220     		movs	r0, #2
 390              	.LVL30:
1049:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 391              		.loc 1 1049 0
 392 0112 2370     		strb	r3, [r4, #0]
 393              		.loc 1 1052 0
 394 0114 FFF7FEFF 		bl	GPIO_SetValue
 395              	.LVL31:
1053:../Source Files/lpc_ssp_glcd.c **** 
1054:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 396              		.loc 1 1054 0
 397 0118 0B48     		ldr	r0, .L32+4
 398 011a 0021     		movs	r1, #0
 399 011c FFF7FEFF 		bl	CS_Force1
 400              	.LVL32:
1055:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
1056:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
1057:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 401              		.loc 1 1057 0
 402 0120 0220     		movs	r0, #2
1056:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 403              		.loc 1 1056 0
 404 0122 0022     		movs	r2, #0
 405              		.loc 1 1057 0
 406 0124 0490     		str	r0, [sp, #16]
1058:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 407              		.loc 1 1058 0
 408 0126 6946     		mov	r1, sp
 409 0128 0748     		ldr	r0, .L32+4
1055:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 410              		.loc 1 1055 0
 411 012a 0094     		str	r4, [sp, #0]
1056:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 412              		.loc 1 1056 0
 413 012c 0292     		str	r2, [sp, #8]
 414              		.loc 1 1058 0
 415 012e FFF7FEFF 		bl	SSP_ReadWrite
 416              	.LVL33:
1059:../Source Files/lpc_ssp_glcd.c **** 
1060:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 417              		.loc 1 1060 0
 418 0132 C0B2     		uxtb	r0, r0
 419 0134 20B1     		cbz	r0, .L30
 420              	.LBB8:
 421              	.LBB9:
1061:../Source Files/lpc_ssp_glcd.c **** 	{
1062:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 422              		.loc 1 1062 0
 423 0136 0448     		ldr	r0, .L32+4
 424              	.LVL34:
 425 0138 0121     		movs	r1, #1
 426 013a FFF7FEFF 		bl	CS_Force1
 427              	.LVL35:
 428 013e 0120     		movs	r0, #1
 429              	.L30:
 430              	.LBE9:
 431              	.LBE8:
1063:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1064:../Source Files/lpc_ssp_glcd.c **** 	}
1065:../Source Files/lpc_ssp_glcd.c **** 	else
1066:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1067:../Source Files/lpc_ssp_glcd.c **** }
 432              		.loc 1 1067 0
 433 0140 06B0     		add	sp, sp, #24
 434 0142 10BD     		pop	{r4, pc}
 435              	.L33:
 436              		.align	2
 437              	.L32:
 438 0144 00000000 		.word	Tx_Buf1
 439 0148 00000340 		.word	1073938432
 440              		.cfi_endproc
 441              	.LFE82:
 443              		.align	1
 444              		.global	GLCD_Bargraph
 445              		.thumb
 446              		.thumb_func
 448              	GLCD_Bargraph:
 449              	.LFB73:
 501:../Source Files/lpc_ssp_glcd.c **** {
 450              		.loc 1 501 0
 451              		.cfi_startproc
 452              		@ args = 4, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              	.LVL36:
 455 014c 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 456              	.LCFI7:
 457              		.cfi_def_cfa_offset 24
 458              		.cfi_offset 4, -24
 459              		.cfi_offset 5, -20
 460              		.cfi_offset 6, -16
 461              		.cfi_offset 7, -12
 462              		.cfi_offset 8, -8
 463              		.cfi_offset 14, -4
 501:../Source Files/lpc_ssp_glcd.c **** {
 464              		.loc 1 501 0
 465 0150 0646     		mov	r6, r0
 504:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 466              		.loc 1 504 0
 467 0152 4520     		movs	r0, #69
 468              	.LVL37:
 501:../Source Files/lpc_ssp_glcd.c **** {
 469              		.loc 1 501 0
 470 0154 1546     		mov	r5, r2
 471 0156 1F46     		mov	r7, r3
 472 0158 0C46     		mov	r4, r1
 473 015a BDF81880 		ldrh	r8, [sp, #24]
 504:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 474              		.loc 1 504 0
 475 015e FFF7FEFF 		bl	Write_Command_Glcd
 476              	.LVL38:
 505:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 477              		.loc 1 505 0
 478 0162 3046     		mov	r0, r6
 479 0164 FFF7FEFF 		bl	Write_Data_Glcd
 480              	.LVL39:
 507:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 481              		.loc 1 507 0
 482 0168 4620     		movs	r0, #70
 483 016a FFF7FEFF 		bl	Write_Command_Glcd
 484              	.LVL40:
 508:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 485              		.loc 1 508 0
 486 016e 701E     		subs	r0, r6, #1
 487 0170 2918     		adds	r1, r5, r0
 488 0172 88B2     		uxth	r0, r1
 489 0174 FFF7FEFF 		bl	Write_Data_Glcd
 490              	.LVL41:
 510:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 491              		.loc 1 510 0
 492 0178 4420     		movs	r0, #68
 493 017a FFF7FEFF 		bl	Write_Command_Glcd
 494              	.LVL42:
 511:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 495              		.loc 1 511 0
 496 017e 2046     		mov	r0, r4
 497 0180 FFF7FEFF 		bl	Write_Data_Glcd
 498              	.LVL43:
 513:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 499              		.loc 1 513 0
 500 0184 4420     		movs	r0, #68
 501 0186 FFF7FEFF 		bl	Write_Command_Glcd
 502              	.LVL44:
 514:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 503              		.loc 1 514 0
 504 018a 04F11702 		add	r2, r4, #23
 505 018e 1302     		lsls	r3, r2, #8
 506 0190 03F47F40 		and	r0, r3, #65280
 507 0194 FFF7FEFF 		bl	Write_Data_Glcd
 508              	.LVL45:
 516:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 509              		.loc 1 516 0
 510 0198 4E20     		movs	r0, #78
 511 019a FFF7FEFF 		bl	Write_Command_Glcd
 512              	.LVL46:
 517:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 513              		.loc 1 517 0
 514 019e 3046     		mov	r0, r6
 515 01a0 FFF7FEFF 		bl	Write_Data_Glcd
 516              	.LVL47:
 519:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 517              		.loc 1 519 0
 518 01a4 4F20     		movs	r0, #79
 519 01a6 FFF7FEFF 		bl	Write_Command_Glcd
 520              	.LVL48:
 520:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 521              		.loc 1 520 0
 522 01aa 2046     		mov	r0, r4
 523 01ac FFF7FEFF 		bl	Write_Data_Glcd
 524              	.LVL49:
 522:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 525              		.loc 1 522 0
 526 01b0 2220     		movs	r0, #34
 527 01b2 FFF7FEFF 		bl	Write_Command_Glcd
 528              	.LVL50:
 526:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 529              		.loc 1 526 0
 530 01b6 FFF723FF 		bl	wr_dat_start
 531              	.LVL51:
 524:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 532              		.loc 1 524 0
 533 01ba 05FB08F6 		mul	r6, r5, r8
 534 01be 4FEAA628 		asr	r8, r6, #10
 535              	.LVL52:
 527:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 536              		.loc 1 527 0
 537 01c2 0026     		movs	r6, #0
 538              	.LVL53:
 539              	.L35:
 527:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 540              		.loc 1 527 0 is_stmt 0 discriminator 1
 541 01c4 B742     		cmp	r7, r6
 542 01c6 10D0     		beq	.L42
 543              	.L40:
 527:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 544              		.loc 1 527 0
 545 01c8 0024     		movs	r4, #0
 546              	.L39:
 547              	.LVL54:
 529:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 548              		.loc 1 529 0 is_stmt 1 discriminator 1
 549 01ca A542     		cmp	r5, r4
 550 01cc 0BDD     		ble	.L43
 551              	.L38:
 552 01ce 094A     		ldr	r2, .L44
 531:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 553              		.loc 1 531 0
 554 01d0 1FFA88F1 		uxth	r1, r8
 555 01d4 8C42     		cmp	r4, r1
 533:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 556              		.loc 1 533 0
 557 01d6 D4BF     		ite	le
 558 01d8 5088     		ldrhle	r0, [r2, #2]
 537:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 559              		.loc 1 537 0
 560 01da 1088     		ldrhgt	r0, [r2, #0]
 529:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 561              		.loc 1 529 0
 562 01dc 0134     		adds	r4, r4, #1
 563              	.LVL55:
 537:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 564              		.loc 1 537 0
 565 01de 80B2     		uxth	r0, r0
 566 01e0 FFF722FF 		bl	wr_dat_only
 567              	.LVL56:
 568 01e4 F1E7     		b	.L39
 569              	.L43:
 570 01e6 0136     		adds	r6, r6, #1
 571 01e8 ECE7     		b	.L35
 572              	.LVL57:
 573              	.L42:
 542:../Source Files/lpc_ssp_glcd.c **** }
 574              		.loc 1 542 0
 575 01ea BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 541:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 576              		.loc 1 541 0
 577 01ee FFF715BF 		b	wr_dat_stop
 578              	.LVL58:
 579              	.L45:
 580 01f2 00BF     		.align	2
 581              	.L44:
 582 01f4 00000000 		.word	.LANCHOR0
 583              		.cfi_endproc
 584              	.LFE73:
 586              		.align	1
 587              		.global	GLCD_Draw_Char
 588              		.thumb
 589              		.thumb_func
 591              	GLCD_Draw_Char:
 592              	.LFB69:
 404:../Source Files/lpc_ssp_glcd.c **** {
 593              		.loc 1 404 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              	.LVL59:
 598 01f8 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 599              	.LCFI8:
 600              		.cfi_def_cfa_offset 24
 601              		.cfi_offset 3, -24
 602              		.cfi_offset 4, -20
 603              		.cfi_offset 5, -16
 604              		.cfi_offset 6, -12
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 407:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 607              		.loc 1 407 0
 608 01fa A0F11005 		sub	r5, r0, #16
 609 01fe ADB2     		uxth	r5, r5
 610              	.LVL60:
 404:../Source Files/lpc_ssp_glcd.c **** {
 611              		.loc 1 404 0
 612 0200 0646     		mov	r6, r0
 409:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 613              		.loc 1 409 0
 614 0202 4520     		movs	r0, #69
 404:../Source Files/lpc_ssp_glcd.c **** {
 615              		.loc 1 404 0
 616 0204 0C46     		mov	r4, r1
 617 0206 1746     		mov	r7, r2
 409:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 618              		.loc 1 409 0
 619 0208 FFF7FEFF 		bl	Write_Command_Glcd
 620              	.LVL61:
 410:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 621              		.loc 1 410 0
 622 020c 2846     		mov	r0, r5
 623 020e FFF7FEFF 		bl	Write_Data_Glcd
 624              	.LVL62:
 412:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 625              		.loc 1 412 0
 626 0212 4620     		movs	r0, #70
 627 0214 FFF7FEFF 		bl	Write_Command_Glcd
 628              	.LVL63:
 413:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 629              		.loc 1 413 0
 630 0218 701E     		subs	r0, r6, #1
 631 021a 80B2     		uxth	r0, r0
 632 021c FFF7FEFF 		bl	Write_Data_Glcd
 633              	.LVL64:
 415:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 634              		.loc 1 415 0
 635 0220 4420     		movs	r0, #68
 636 0222 FFF7FEFF 		bl	Write_Command_Glcd
 637              	.LVL65:
 416:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 638              		.loc 1 416 0
 639 0226 2046     		mov	r0, r4
 640 0228 FFF7FEFF 		bl	Write_Data_Glcd
 641              	.LVL66:
 418:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 642              		.loc 1 418 0
 643 022c 4420     		movs	r0, #68
 644 022e FFF7FEFF 		bl	Write_Command_Glcd
 645              	.LVL67:
 419:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 646              		.loc 1 419 0
 647 0232 04F11701 		add	r1, r4, #23
 648 0236 0A02     		lsls	r2, r1, #8
 649 0238 02F47F40 		and	r0, r2, #65280
 650 023c FFF7FEFF 		bl	Write_Data_Glcd
 651              	.LVL68:
 421:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 652              		.loc 1 421 0
 653 0240 4E20     		movs	r0, #78
 654 0242 FFF7FEFF 		bl	Write_Command_Glcd
 655              	.LVL69:
 422:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 656              		.loc 1 422 0
 657 0246 2846     		mov	r0, r5
 658 0248 FFF7FEFF 		bl	Write_Data_Glcd
 659              	.LVL70:
 424:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 660              		.loc 1 424 0
 661 024c 4F20     		movs	r0, #79
 662 024e FFF7FEFF 		bl	Write_Command_Glcd
 663              	.LVL71:
 425:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 664              		.loc 1 425 0
 665 0252 2046     		mov	r0, r4
 666 0254 FFF7FEFF 		bl	Write_Data_Glcd
 667              	.LVL72:
 427:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 668              		.loc 1 427 0
 669 0258 2220     		movs	r0, #34
 670 025a FFF7FEFF 		bl	Write_Command_Glcd
 671              	.LVL73:
 429:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 672              		.loc 1 429 0
 673 025e FFF7CFFE 		bl	wr_dat_start
 674              	.LVL74:
 675 0262 0025     		movs	r5, #0
 676              	.LVL75:
 677              	.L47:
 404:../Source Files/lpc_ssp_glcd.c **** {
 678              		.loc 1 404 0 discriminator 1
 679 0264 0024     		movs	r4, #0
 680              	.LVL76:
 681              	.L50:
 434:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 682              		.loc 1 434 0
 683 0266 7B5B     		ldrh	r3, [r7, r5]
 684 0268 0A49     		ldr	r1, .L54
 685 026a 43FA04F3 		asr	r3, r3, r4
 686 026e 13F0010F 		tst	r3, #1
 436:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 687              		.loc 1 436 0
 688 0272 0CBF     		ite	eq
 689 0274 4888     		ldrheq	r0, [r1, #2]
 440:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 690              		.loc 1 440 0
 691 0276 0888     		ldrhne	r0, [r1, #0]
 432:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 692              		.loc 1 432 0
 693 0278 0134     		adds	r4, r4, #1
 440:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 694              		.loc 1 440 0
 695 027a 80B2     		uxth	r0, r0
 696 027c FFF7D4FE 		bl	wr_dat_only
 697              	.LVL77:
 432:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 698              		.loc 1 432 0
 699 0280 102C     		cmp	r4, #16
 700 0282 F0D1     		bne	.L50
 701 0284 0235     		adds	r5, r5, #2
 430:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 702              		.loc 1 430 0
 703 0286 302D     		cmp	r5, #48
 704 0288 ECD1     		bne	.L47
 705              	.L51:
 446:../Source Files/lpc_ssp_glcd.c **** }
 706              		.loc 1 446 0
 707 028a BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 445:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 708              		.loc 1 445 0
 709 028e FFF7C5BE 		b	wr_dat_stop
 710              	.LVL78:
 711              	.L55:
 712 0292 00BF     		.align	2
 713              	.L54:
 714 0294 00000000 		.word	.LANCHOR0
 715              		.cfi_endproc
 716              	.LFE69:
 718              		.align	1
 719              		.global	GLCD_Display_Char
 720              		.thumb
 721              		.thumb_func
 723              	GLCD_Display_Char:
 724              	.LFB70:
 457:../Source Files/lpc_ssp_glcd.c **** {
 725              		.loc 1 457 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              	.LVL79:
 458:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 730              		.loc 1 458 0
 731 0298 203A     		subs	r2, r2, #32
 732              	.LVL80:
 459:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 733              		.loc 1 459 0
 734 029a 1823     		movs	r3, #24
 735 029c D2B2     		uxtb	r2, r2
 736 029e 5843     		muls	r0, r3, r0
 737              	.LVL81:
 457:../Source Files/lpc_ssp_glcd.c **** {
 738              		.loc 1 457 0
 739 02a0 10B5     		push	{r4, lr}
 740              	.LCFI9:
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 4, -8
 743              		.cfi_offset 14, -4
 459:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 744              		.loc 1 459 0
 745 02a2 5343     		muls	r3, r2, r3
 746 02a4 0901     		lsls	r1, r1, #4
 747              	.LVL82:
 748 02a6 054A     		ldr	r2, .L57
 749 02a8 8CB2     		uxth	r4, r1
 750 02aa 02EB4302 		add	r2, r2, r3, lsl #1
 751 02ae 81B2     		uxth	r1, r0
 752 02b0 2046     		mov	r0, r4
 460:../Source Files/lpc_ssp_glcd.c **** }
 753              		.loc 1 460 0
 754 02b2 BDE81040 		pop	{r4, lr}
 459:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 755              		.loc 1 459 0
 756 02b6 FFF7FEBF 		b	GLCD_Draw_Char
 757              	.LVL83:
 758              	.L58:
 759 02ba 00BF     		.align	2
 760              	.L57:
 761 02bc 00000000 		.word	.LANCHOR1
 762              		.cfi_endproc
 763              	.LFE70:
 765              		.align	1
 766              		.global	GLCD_PutPixel
 767              		.thumb
 768              		.thumb_func
 770              	GLCD_PutPixel:
 771              	.LFB62:
 295:../Source Files/lpc_ssp_glcd.c **** {
 772              		.loc 1 295 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              	.LVL84:
 777 02c0 70B5     		push	{r4, r5, r6, lr}
 778              	.LCFI10:
 779              		.cfi_def_cfa_offset 16
 780              		.cfi_offset 4, -16
 781              		.cfi_offset 5, -12
 782              		.cfi_offset 6, -8
 783              		.cfi_offset 14, -4
 295:../Source Files/lpc_ssp_glcd.c **** {
 784              		.loc 1 295 0
 785 02c2 0446     		mov	r4, r0
 296:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 786              		.loc 1 296 0
 787 02c4 4E20     		movs	r0, #78
 788              	.LVL85:
 295:../Source Files/lpc_ssp_glcd.c **** {
 789              		.loc 1 295 0
 790 02c6 0D46     		mov	r5, r1
 791 02c8 1646     		mov	r6, r2
 296:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 792              		.loc 1 296 0
 793 02ca FFF7FEFF 		bl	Write_Command_Glcd
 794              	.LVL86:
 297:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 795              		.loc 1 297 0
 796 02ce 2046     		mov	r0, r4
 797 02d0 FFF7FEFF 		bl	Write_Data_Glcd
 798              	.LVL87:
 299:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 799              		.loc 1 299 0
 800 02d4 4F20     		movs	r0, #79
 801 02d6 FFF7FEFF 		bl	Write_Command_Glcd
 802              	.LVL88:
 300:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 803              		.loc 1 300 0
 804 02da 2846     		mov	r0, r5
 805 02dc FFF7FEFF 		bl	Write_Data_Glcd
 806              	.LVL89:
 302:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 807              		.loc 1 302 0
 808 02e0 2220     		movs	r0, #34
 809 02e2 FFF7FEFF 		bl	Write_Command_Glcd
 810              	.LVL90:
 303:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 811              		.loc 1 303 0
 812 02e6 3046     		mov	r0, r6
 304:../Source Files/lpc_ssp_glcd.c **** }
 813              		.loc 1 304 0
 814 02e8 BDE87040 		pop	{r4, r5, r6, lr}
 303:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 815              		.loc 1 303 0
 816 02ec FFF7FEBF 		b	Write_Data_Glcd
 817              	.LVL91:
 818              		.cfi_endproc
 819              	.LFE62:
 821              		.align	1
 822              		.global	GLCD_Line
 823              		.thumb
 824              		.thumb_func
 826              	GLCD_Line:
 827              	.LFB76:
 615:../Source Files/lpc_ssp_glcd.c **** {
 828              		.loc 1 615 0
 829              		.cfi_startproc
 830              		@ args = 4, pretend = 0, frame = 16
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              	.LVL92:
 833 02f0 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 834              	.LCFI11:
 835              		.cfi_def_cfa_offset 36
 836              		.cfi_offset 4, -36
 837              		.cfi_offset 5, -32
 838              		.cfi_offset 6, -28
 839              		.cfi_offset 7, -24
 840              		.cfi_offset 8, -20
 841              		.cfi_offset 9, -16
 842              		.cfi_offset 10, -12
 843              		.cfi_offset 11, -8
 844              		.cfi_offset 14, -4
 619:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 845              		.loc 1 619 0
 846 02f4 141A     		subs	r4, r2, r0
 620:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 847              		.loc 1 620 0
 848 02f6 5E1A     		subs	r6, r3, r1
 619:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 849              		.loc 1 619 0
 850 02f8 24B2     		sxth	r4, r4
 620:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 851              		.loc 1 620 0
 852 02fa 36B2     		sxth	r6, r6
 619:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 853              		.loc 1 619 0
 854 02fc 002C     		cmp	r4, #0
 855 02fe B8BF     		it	lt
 856 0300 6442     		rsblt	r4, r4, #0
 857              	.LVL93:
 620:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 858              		.loc 1 620 0
 859 0302 002E     		cmp	r6, #0
 860 0304 B8BF     		it	lt
 861 0306 7642     		rsblt	r6, r6, #0
 862              	.LVL94:
 625:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 863              		.loc 1 625 0
 864 0308 4FF6FF75 		movw	r5, #65535
 634:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 865              		.loc 1 634 0
 866 030c 24B2     		sxth	r4, r4
 867              	.LVL95:
 868 030e 36B2     		sxth	r6, r6
 869              	.LVL96:
 615:../Source Files/lpc_ssp_glcd.c **** {
 870              		.loc 1 615 0
 871 0310 85B0     		sub	sp, sp, #20
 872              	.LCFI12:
 873              		.cfi_def_cfa_offset 56
 625:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 874              		.loc 1 625 0
 875 0312 9042     		cmp	r0, r2
 876 0314 CCBF     		ite	gt
 877 0316 2F46     		movgt	r7, r5
 878 0318 0127     		movle	r7, #1
 879              	.LVL97:
 629:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 880              		.loc 1 629 0
 881 031a 9942     		cmp	r1, r3
 882 031c CCBF     		ite	gt
 883 031e A846     		movgt	r8, r5
 884 0320 4FF00108 		movle	r8, #1
 885              	.LVL98:
 634:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 886              		.loc 1 634 0
 887 0324 B442     		cmp	r4, r6
 615:../Source Files/lpc_ssp_glcd.c **** {
 888              		.loc 1 615 0
 889 0326 BDF83890 		ldrh	r9, [sp, #56]
 634:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 890              		.loc 1 634 0
 891 032a 29DB     		blt	.L63
 636:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 892              		.loc 1 636 0
 893 032c 4FEA460B 		lsl	fp, r6, #1
 649:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 894              		.loc 1 649 0
 895 0330 361B     		subs	r6, r6, r4
 896 0332 7300     		lsls	r3, r6, #1
 897              	.LVL99:
 636:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 898              		.loc 1 636 0
 899 0334 C4EB0B05 		rsb	r5, r4, fp
 900              	.LVL100:
 649:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 901              		.loc 1 649 0
 902 0338 0393     		str	r3, [sp, #12]
 638:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 903              		.loc 1 638 0
 904 033a 8A46     		mov	sl, r1
 905 033c 0026     		movs	r6, #0
 906              	.LVL101:
 907              	.L64:
 638:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 908              		.loc 1 638 0 is_stmt 0 discriminator 1
 909 033e A642     		cmp	r6, r4
 910 0340 47DC     		bgt	.L60
 911              	.L67:
 640:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 912              		.loc 1 640 0 is_stmt 1
 913 0342 1FFA8AF3 		uxth	r3, sl
 914 0346 1FFA80FE 		uxth	lr, r0
 915 034a 1946     		mov	r1, r3
 916 034c 7046     		mov	r0, lr
 917              	.LVL102:
 918 034e 4A46     		mov	r2, r9
 919 0350 0193     		str	r3, [sp, #4]
 920 0352 CDF808E0 		str	lr, [sp, #8]
 921 0356 FFF7FEFF 		bl	GLCD_PutPixel
 922              	.LVL103:
 923 035a DDF808C0 		ldr	ip, [sp, #8]
 642:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 924              		.loc 1 642 0
 925 035e 002D     		cmp	r5, #0
 926 0360 0CEB0701 		add	r1, ip, r7
 927 0364 019B     		ldr	r3, [sp, #4]
 928 0366 02DA     		bge	.L65
 644:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 929              		.loc 1 644 0
 930 0368 5D44     		add	r5, r5, fp
 931              	.LVL104:
 645:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 932              		.loc 1 645 0
 933 036a 88B2     		uxth	r0, r1
 934              	.LVL105:
 935 036c 06E0     		b	.L66
 936              	.LVL106:
 937              	.L65:
 649:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 938              		.loc 1 649 0
 939 036e 0398     		ldr	r0, [sp, #12]
 651:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 940              		.loc 1 651 0
 941 0370 03EB080A 		add	sl, r3, r8
 942              	.LVL107:
 649:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 943              		.loc 1 649 0
 944 0374 2D18     		adds	r5, r5, r0
 945              	.LVL108:
 651:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 946              		.loc 1 651 0
 947 0376 1FFA8AFA 		uxth	sl, sl
 650:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 948              		.loc 1 650 0
 949 037a 88B2     		uxth	r0, r1
 950              	.LVL109:
 951              	.L66:
 638:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 952              		.loc 1 638 0
 953 037c 0136     		adds	r6, r6, #1
 954              	.LVL110:
 955 037e DEE7     		b	.L64
 956              	.LVL111:
 957              	.L63:
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 958              		.loc 1 670 0
 959 0380 A21B     		subs	r2, r4, r6
 960              	.LVL112:
 657:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 961              		.loc 1 657 0
 962 0382 4FEA440A 		lsl	sl, r4, #1
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 963              		.loc 1 670 0
 964 0386 5300     		lsls	r3, r2, #1
 965              	.LVL113:
 657:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 966              		.loc 1 657 0
 967 0388 C6EB0A05 		rsb	r5, r6, sl
 968              	.LVL114:
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 969              		.loc 1 670 0
 970 038c 0393     		str	r3, [sp, #12]
 659:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 971              		.loc 1 659 0
 972 038e 8346     		mov	fp, r0
 973 0390 0024     		movs	r4, #0
 974              	.LVL115:
 975              	.L68:
 659:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 976              		.loc 1 659 0 is_stmt 0 discriminator 1
 977 0392 B442     		cmp	r4, r6
 978 0394 1DDC     		bgt	.L60
 979              	.L71:
 661:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 980              		.loc 1 661 0 is_stmt 1
 981 0396 1FFA81FC 		uxth	ip, r1
 982 039a 1FFA8BF3 		uxth	r3, fp
 983 039e 6146     		mov	r1, ip
 984              	.LVL116:
 985 03a0 1846     		mov	r0, r3
 986 03a2 4A46     		mov	r2, r9
 987 03a4 CDF808C0 		str	ip, [sp, #8]
 988 03a8 0193     		str	r3, [sp, #4]
 989 03aa FFF7FEFF 		bl	GLCD_PutPixel
 990              	.LVL117:
 991 03ae DDF808C0 		ldr	ip, [sp, #8]
 663:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 992              		.loc 1 663 0
 993 03b2 002D     		cmp	r5, #0
 994 03b4 0CEB0801 		add	r1, ip, r8
 995 03b8 0198     		ldr	r0, [sp, #4]
 996 03ba 01DA     		bge	.L69
 665:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 997              		.loc 1 665 0
 998 03bc 5544     		add	r5, r5, sl
 999              	.LVL118:
 1000 03be 05E0     		b	.L75
 1001              	.L69:
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1002              		.loc 1 670 0
 1003 03c0 039A     		ldr	r2, [sp, #12]
 671:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1004              		.loc 1 671 0
 1005 03c2 00EB070B 		add	fp, r0, r7
 1006              	.LVL119:
 670:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1007              		.loc 1 670 0
 1008 03c6 AD18     		adds	r5, r5, r2
 1009              	.LVL120:
 671:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1010              		.loc 1 671 0
 1011 03c8 1FFA8BFB 		uxth	fp, fp
 1012              	.L75:
 1013              	.LVL121:
 672:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1014              		.loc 1 672 0
 1015 03cc 89B2     		uxth	r1, r1
 1016              	.LVL122:
 659:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1017              		.loc 1 659 0
 1018 03ce 0134     		adds	r4, r4, #1
 1019              	.LVL123:
 1020 03d0 DFE7     		b	.L68
 1021              	.LVL124:
 1022              	.L60:
 676:../Source Files/lpc_ssp_glcd.c **** }
 1023              		.loc 1 676 0
 1024 03d2 05B0     		add	sp, sp, #20
 1025 03d4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1026              		.cfi_endproc
 1027              	.LFE76:
 1029              		.align	1
 1030              		.global	GLCD_Triangle
 1031              		.thumb
 1032              		.thumb_func
 1034              	GLCD_Triangle:
 1035              	.LFB79:
 792:../Source Files/lpc_ssp_glcd.c **** {
 1036              		.loc 1 792 0
 1037              		.cfi_startproc
 1038              		@ args = 8, pretend = 0, frame = 56
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              	.LVL125:
 1041 03d8 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1042              	.LCFI13:
 1043              		.cfi_def_cfa_offset 36
 1044              		.cfi_offset 4, -36
 1045              		.cfi_offset 5, -32
 1046              		.cfi_offset 6, -28
 1047              		.cfi_offset 7, -24
 1048              		.cfi_offset 8, -20
 1049              		.cfi_offset 9, -16
 1050              		.cfi_offset 10, -12
 1051              		.cfi_offset 11, -8
 1052              		.cfi_offset 14, -4
 1053 03dc 91B0     		sub	sp, sp, #68
 1054              	.LCFI14:
 1055              		.cfi_def_cfa_offset 104
 792:../Source Files/lpc_ssp_glcd.c **** {
 1056              		.loc 1 792 0
 1057 03de 0646     		mov	r6, r0
 1058 03e0 BDF86840 		ldrh	r4, [sp, #104]
 1059 03e4 BDF86C00 		ldrh	r0, [sp, #108]
 1060              	.LVL126:
 1061 03e8 0D46     		mov	r5, r1
 1062 03ea 1746     		mov	r7, r2
 1063 03ec 0E94     		str	r4, [sp, #56]
 1064 03ee 0F90     		str	r0, [sp, #60]
 793:../Source Files/lpc_ssp_glcd.c ****     if(fill)
 1065              		.loc 1 793 0
 1066 03f0 23BB     		cbnz	r3, .L77
 1067              	.LVL127:
 1068              	.L117:
 944:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, color);
 1069              		.loc 1 944 0
 1070 03f2 0E9C     		ldr	r4, [sp, #56]
 1071 03f4 B6F90000 		ldrsh	r0, [r6, #0]
 1072 03f8 B6F90210 		ldrsh	r1, [r6, #2]
 1073 03fc B5F90020 		ldrsh	r2, [r5, #0]
 1074 0400 B5F90230 		ldrsh	r3, [r5, #2]
 1075 0404 0094     		str	r4, [sp, #0]
 1076 0406 FFF7FEFF 		bl	GLCD_Line
 1077              	.LVL128:
 945:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, color);
 1078              		.loc 1 945 0
 1079 040a B7F90020 		ldrsh	r2, [r7, #0]
 1080 040e B7F90230 		ldrsh	r3, [r7, #2]
 1081 0412 B6F90000 		ldrsh	r0, [r6, #0]
 1082 0416 B6F90210 		ldrsh	r1, [r6, #2]
 1083 041a 0094     		str	r4, [sp, #0]
 1084 041c FFF7FEFF 		bl	GLCD_Line
 1085              	.LVL129:
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, color);
 1086              		.loc 1 946 0
 1087 0420 B7F90020 		ldrsh	r2, [r7, #0]
 1088 0424 B7F90230 		ldrsh	r3, [r7, #2]
 1089 0428 B5F90000 		ldrsh	r0, [r5, #0]
 1090 042c B5F90210 		ldrsh	r1, [r5, #2]
 1091 0430 1A94     		str	r4, [sp, #104]
 948:../Source Files/lpc_ssp_glcd.c **** }
 1092              		.loc 1 948 0
 1093 0432 11B0     		add	sp, sp, #68
 1094 0434 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, color);
 1095              		.loc 1 946 0
 1096 0438 FFF7FEBF 		b	GLCD_Line
 1097              	.LVL130:
 1098              	.L77:
 1099              	.LBB10:
 801:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 1100              		.loc 1 801 0
 1101 043c 7388     		ldrh	r3, [r6, #2]
 1102              	.LVL131:
 1103 043e 4A88     		ldrh	r2, [r1, #2]
 1104              	.LVL132:
 1105 0440 1CB2     		sxth	r4, r3
 1106 0442 11B2     		sxth	r1, r2
 1107              	.LVL133:
 1108 0444 8C42     		cmp	r4, r1
 1109 0446 14DD     		ble	.L78
 801:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 1110              		.loc 1 801 0 is_stmt 0 discriminator 1
 1111 0448 82EA0300 		eor	r0, r2, r3
 1112 044c 7080     		strh	r0, [r6, #2]	@ movhi
 1113 044e 6B88     		ldrh	r3, [r5, #2]
 1114 0450 2C88     		ldrh	r4, [r5, #0]
 1115 0452 5840     		eors	r0, r0, r3
 1116 0454 6880     		strh	r0, [r5, #2]	@ movhi
 1117 0456 7288     		ldrh	r2, [r6, #2]
 1118 0458 3188     		ldrh	r1, [r6, #0]
 1119 045a 5040     		eors	r0, r0, r2
 1120 045c 7080     		strh	r0, [r6, #2]	@ movhi
 1121 045e 84EA0100 		eor	r0, r4, r1
 1122 0462 83B2     		uxth	r3, r0
 1123 0464 3380     		strh	r3, [r6, #0]	@ movhi
 1124 0466 2A88     		ldrh	r2, [r5, #0]
 1125 0468 5340     		eors	r3, r3, r2
 1126 046a 2B80     		strh	r3, [r5, #0]	@ movhi
 1127 046c 3488     		ldrh	r4, [r6, #0]
 1128 046e 6340     		eors	r3, r3, r4
 1129 0470 3380     		strh	r3, [r6, #0]	@ movhi
 1130              	.L78:
 802:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 1131              		.loc 1 802 0 is_stmt 1
 1132 0472 7388     		ldrh	r3, [r6, #2]
 1133 0474 7A88     		ldrh	r2, [r7, #2]
 1134 0476 18B2     		sxth	r0, r3
 1135 0478 11B2     		sxth	r1, r2
 1136 047a 8842     		cmp	r0, r1
 1137 047c 14DD     		ble	.L79
 802:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 1138              		.loc 1 802 0 is_stmt 0 discriminator 1
 1139 047e 82EA0304 		eor	r4, r2, r3
 1140 0482 7480     		strh	r4, [r6, #2]	@ movhi
 1141 0484 7B88     		ldrh	r3, [r7, #2]
 1142 0486 3888     		ldrh	r0, [r7, #0]
 1143 0488 5C40     		eors	r4, r4, r3
 1144 048a 7C80     		strh	r4, [r7, #2]	@ movhi
 1145 048c 7288     		ldrh	r2, [r6, #2]
 1146 048e 3188     		ldrh	r1, [r6, #0]
 1147 0490 5440     		eors	r4, r4, r2
 1148 0492 7480     		strh	r4, [r6, #2]	@ movhi
 1149 0494 80EA0104 		eor	r4, r0, r1
 1150 0498 A3B2     		uxth	r3, r4
 1151 049a 3380     		strh	r3, [r6, #0]	@ movhi
 1152 049c 3A88     		ldrh	r2, [r7, #0]
 1153 049e 5340     		eors	r3, r3, r2
 1154 04a0 3B80     		strh	r3, [r7, #0]	@ movhi
 1155 04a2 3088     		ldrh	r0, [r6, #0]
 1156 04a4 4340     		eors	r3, r3, r0
 1157 04a6 3380     		strh	r3, [r6, #0]	@ movhi
 1158              	.L79:
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 1159              		.loc 1 803 0 is_stmt 1
 1160 04a8 6C88     		ldrh	r4, [r5, #2]
 1161 04aa 7B88     		ldrh	r3, [r7, #2]
 1162 04ac 22B2     		sxth	r2, r4
 1163 04ae 19B2     		sxth	r1, r3
 1164 04b0 8A42     		cmp	r2, r1
 1165 04b2 14DD     		ble	.L80
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 1166              		.loc 1 803 0 is_stmt 0 discriminator 1
 1167 04b4 83EA0400 		eor	r0, r3, r4
 1168 04b8 6880     		strh	r0, [r5, #2]	@ movhi
 1169 04ba 7C88     		ldrh	r4, [r7, #2]
 1170 04bc 3A88     		ldrh	r2, [r7, #0]
 1171 04be 6040     		eors	r0, r0, r4
 1172 04c0 7880     		strh	r0, [r7, #2]	@ movhi
 1173 04c2 6B88     		ldrh	r3, [r5, #2]
 1174 04c4 2988     		ldrh	r1, [r5, #0]
 1175 04c6 5840     		eors	r0, r0, r3
 1176 04c8 6880     		strh	r0, [r5, #2]	@ movhi
 1177 04ca 82EA0100 		eor	r0, r2, r1
 1178 04ce 84B2     		uxth	r4, r0
 1179 04d0 2C80     		strh	r4, [r5, #0]	@ movhi
 1180 04d2 3B88     		ldrh	r3, [r7, #0]
 1181 04d4 5C40     		eors	r4, r4, r3
 1182 04d6 3C80     		strh	r4, [r7, #0]	@ movhi
 1183 04d8 2A88     		ldrh	r2, [r5, #0]
 1184 04da 5440     		eors	r4, r4, r2
 1185 04dc 2C80     		strh	r4, [r5, #0]	@ movhi
 1186              	.L80:
 805:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1187              		.loc 1 805 0 is_stmt 1
 1188 04de 3188     		ldrh	r1, [r6, #0]
 1189 04e0 7388     		ldrh	r3, [r6, #2]
 807:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1190              		.loc 1 807 0
 1191 04e2 2888     		ldrh	r0, [r5, #0]
 805:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1192              		.loc 1 805 0
 1193 04e4 1FFA83F8 		uxth	r8, r3
 1194 04e8 8CB2     		uxth	r4, r1
 1195              	.LVL134:
 1196 04ea CDF81880 		str	r8, [sp, #24]
 1197              	.LVL135:
 807:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1198              		.loc 1 807 0
 1199 04ee 021B     		subs	r2, r0, r4
 1200 04f0 90B2     		uxth	r0, r2
 809:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1201              		.loc 1 809 0
 1202 04f2 B5F802A0 		ldrh	sl, [r5, #2]
 1203 04f6 DDF818B0 		ldr	fp, [sp, #24]
 807:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 1204              		.loc 1 807 0
 1205 04fa 1FFA80F9 		uxth	r9, r0
 1206              	.LVL136:
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1207              		.loc 1 808 0
 1208 04fe 19F4004F 		tst	r9, #32768
 809:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1209              		.loc 1 809 0
 1210 0502 CBEB0A02 		rsb	r2, fp, sl
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1211              		.loc 1 808 0
 1212 0506 18BF     		it	ne
 1213 0508 C0F10009 		rsbne	r9, r0, #0
 809:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1214              		.loc 1 809 0
 1215 050c 90B2     		uxth	r0, r2
 1216              	.LVL137:
 811:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1217              		.loc 1 811 0
 1218 050e 3A78     		ldrb	r2, [r7, #0]	@ zero_extendqisi2
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1219              		.loc 1 808 0
 1220 0510 18BF     		it	ne
 1221 0512 4FF6FF78 		movwne	r8, #65535
 811:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1222              		.loc 1 811 0
 1223 0516 C1EB0201 		rsb	r1, r1, r2
 1224              	.LVL138:
 1225 051a 4AB2     		sxtb	r2, r1
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1226              		.loc 1 812 0
 1227 051c 11B2     		sxth	r1, r2
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1228              		.loc 1 808 0
 1229 051e 0CBF     		ite	eq
 1230 0520 4FF00108 		moveq	r8, #1
 1231 0524 1FFA89F9 		uxthne	r9, r9
 1232              	.LVL139:
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1233              		.loc 1 812 0
 1234 0528 0029     		cmp	r1, #0
 808:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1235              		.loc 1 808 0
 1236 052a CDF82080 		str	r8, [sp, #32]
 1237              	.LVL140:
 809:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 1238              		.loc 1 809 0
 1239 052e 0490     		str	r0, [sp, #16]
 1240              	.LVL141:
 811:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 1241              		.loc 1 811 0
 1242 0530 1FFA82FC 		uxth	ip, r2
 1243              	.LVL142:
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1244              		.loc 1 812 0
 1245 0534 05DA     		bge	.L120
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1246              		.loc 1 812 0 is_stmt 0 discriminator 1
 1247 0536 5242     		negs	r2, r2
 1248              	.LVL143:
 1249 0538 1FFA82FC 		uxth	ip, r2
 1250              	.LVL144:
 1251 053c 4FF6FF7E 		movw	lr, #65535
 1252 0540 01E0     		b	.L137
 1253              	.LVL145:
 1254              	.L120:
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1255              		.loc 1 812 0
 1256 0542 4FF0010E 		mov	lr, #1
 1257              	.LVL146:
 1258              	.L137:
 813:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1259              		.loc 1 813 0 is_stmt 1
 1260 0546 B878     		ldrb	r0, [r7, #2]	@ zero_extendqisi2
 815:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1261              		.loc 1 815 0
 1262 0548 DDF810B0 		ldr	fp, [sp, #16]
 813:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1263              		.loc 1 813 0
 1264 054c C11A     		subs	r1, r0, r3
 1265 054e 49B2     		sxtb	r1, r1
 812:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 1266              		.loc 1 812 0
 1267 0550 CDF828E0 		str	lr, [sp, #40]
 1268              	.LVL147:
 815:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1269              		.loc 1 815 0
 1270 0554 0FFA8BF2 		sxth	r2, fp
 1271 0558 0FFA89FE 		sxth	lr, r9
 813:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1272              		.loc 1 813 0
 1273 055c 1FFA81F8 		uxth	r8, r1
 815:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1274              		.loc 1 815 0
 1275 0560 7245     		cmp	r2, lr
 813:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 1276              		.loc 1 813 0
 1277 0562 0846     		mov	r0, r1	@ movhi
 1278 0564 CDF83480 		str	r8, [sp, #52]
 1279              	.LVL148:
 815:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1280              		.loc 1 815 0
 1281 0568 0FDD     		ble	.L121
 817:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 1282              		.loc 1 817 0
 1283 056a DDF81080 		ldr	r8, [sp, #16]
 1284 056e 89EA0809 		eor	r9, r9, r8
 1285              	.LVL149:
 1286 0572 89EA0802 		eor	r2, r9, r8
 1287 0576 1FFA82FB 		uxth	fp, r2
 1288 057a 8BEA090E 		eor	lr, fp, r9
 1289 057e CDF810B0 		str	fp, [sp, #16]
 1290 0582 1FFA8EF9 		uxth	r9, lr
 1291              	.LVL150:
 818:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1292              		.loc 1 818 0
 1293 0586 0122     		movs	r2, #1
 1294 0588 00E0     		b	.L138
 1295              	.LVL151:
 1296              	.L121:
 796:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 1297              		.loc 1 796 0
 1298 058a 0022     		movs	r2, #0
 1299              	.LVL152:
 1300              	.L138:
 820:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 1301              		.loc 1 820 0
 1302 058c 00B2     		sxth	r0, r0
 1303              	.LVL153:
 1304 058e 0FFA8CF8 		sxth	r8, ip
 1305 0592 4045     		cmp	r0, r8
 796:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 1306              		.loc 1 796 0
 1307 0594 0792     		str	r2, [sp, #28]
 1308              	.LVL154:
 820:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 1309              		.loc 1 820 0
 1310 0596 0BDD     		ble	.L122
 822:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 1311              		.loc 1 822 0
 1312 0598 8CEA0100 		eor	r0, ip, r1
 1313 059c 81B2     		uxth	r1, r0
 1314              	.LVL155:
 1315 059e 81EA0C0C 		eor	ip, r1, ip
 1316              	.LVL156:
 1317 05a2 8CEA0100 		eor	r0, ip, r1
 1318              	.LVL157:
 1319 05a6 81B2     		uxth	r1, r0
 1320              	.LVL158:
 823:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 1321              		.loc 1 823 0
 1322 05a8 0120     		movs	r0, #1
 822:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 1323              		.loc 1 822 0
 1324 05aa 0D91     		str	r1, [sp, #52]
 1325              	.LVL159:
 823:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 1326              		.loc 1 823 0
 1327 05ac 0990     		str	r0, [sp, #36]
 1328 05ae 01E0     		b	.L84
 1329              	.LVL160:
 1330              	.L122:
 797:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 1331              		.loc 1 797 0
 1332 05b0 0021     		movs	r1, #0
 1333              	.LVL161:
 1334 05b2 0991     		str	r1, [sp, #36]
 1335              	.LVL162:
 1336              	.L84:
 826:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 1337              		.loc 1 826 0
 1338 05b4 4CF34E01 		sbfx	r1, ip, #1, #15
 1339 05b8 89B2     		uxth	r1, r1
 828:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 1340              		.loc 1 828 0
 1341 05ba 9A45     		cmp	sl, r3
 826:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 1342              		.loc 1 826 0
 1343 05bc 0591     		str	r1, [sp, #20]
 1344              	.LVL163:
 828:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 1345              		.loc 1 828 0
 1346 05be 00F09580 		beq	.L85
 829:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 1347              		.loc 1 829 0
 1348 05c2 49F34E03 		sbfx	r3, r9, #1, #15
 1349 05c6 1FFA83FA 		uxth	sl, r3
 1350              	.LVL164:
 1351              	.LBB11:
 805:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 1352              		.loc 1 805 0
 1353 05ca A046     		mov	r8, r4
 831:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 1354              		.loc 1 831 0
 1355 05cc 4FF0000B 		mov	fp, #0
 1356              	.LVL165:
 1357              	.L86:
 831:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 1358              		.loc 1 831 0 is_stmt 0 discriminator 1
 1359 05d0 0FFA89F3 		sxth	r3, r9
 1360 05d4 9B45     		cmp	fp, r3
 1361 05d6 80F28980 		bge	.L85
 1362              	.L100:
 1363              	.LVL166:
 834:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1364              		.loc 1 834 0 is_stmt 1
 1365 05da A045     		cmp	r8, r4
 837:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1366              		.loc 1 837 0
 1367 05dc 4FF0000E 		mov	lr, #0
 834:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1368              		.loc 1 834 0
 1369 05e0 39BF     		ittee	cc
 1370 05e2 2246     		movcc	r2, r4
 1371 05e4 4146     		movcc	r1, r8
 1372 05e6 4246     		movcs	r2, r8
 1373 05e8 2146     		movcs	r1, r4
 837:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1374              		.loc 1 837 0
 1375 05ea CDF82CE0 		str	lr, [sp, #44]
 1376              	.LVL167:
 1377              	.L88:
 837:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1378              		.loc 1 837 0 is_stmt 0 discriminator 1
 1379 05ee 9B45     		cmp	fp, r3
 1380 05f0 08DA     		bge	.L91
 1381              	.L94:
 840:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1382              		.loc 1 840 0 is_stmt 1
 1383 05f2 0498     		ldr	r0, [sp, #16]
 839:../Source Files/lpc_ssp_glcd.c ****     			i++;
 1384              		.loc 1 839 0
 1385 05f4 0BF1010B 		add	fp, fp, #1
 1386              	.LVL168:
 840:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1387              		.loc 1 840 0
 1388 05f8 8244     		add	sl, sl, r0
 1389              	.LVL169:
 839:../Source Files/lpc_ssp_glcd.c ****     			i++;
 1390              		.loc 1 839 0
 1391 05fa 5FFA8BFB 		uxtb	fp, fp
 1392              	.LVL170:
 840:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 1393              		.loc 1 840 0
 1394 05fe 1FFA8AFA 		uxth	sl, sl
 1395              	.LVL171:
 841:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1396              		.loc 1 841 0
 1397 0602 0FE0     		b	.L89
 1398              	.LVL172:
 1399              	.L91:
 1400 0604 0023     		movs	r3, #0
 1401 0606 0C93     		str	r3, [sp, #48]
 1402 0608 2FE0     		b	.L92
 1403              	.LVL173:
 1404              	.L93:
 844:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1405              		.loc 1 844 0
 1406 060a 0798     		ldr	r0, [sp, #28]
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1407              		.loc 1 791 0
 1408 060c C9EB0A0A 		rsb	sl, r9, sl
 1409              	.LVL174:
 1410 0610 1FFA8AFA 		uxth	sl, sl
 1411              	.LVL175:
 844:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1412              		.loc 1 844 0
 1413 0614 0028     		cmp	r0, #0
 1414 0616 F5D0     		beq	.L91
 1415              	.L90:
 844:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 1416              		.loc 1 844 0 is_stmt 0 discriminator 1
 1417 0618 DDF820E0 		ldr	lr, [sp, #32]
 1418 061c 1FFA8EFE 		uxth	lr, lr
 1419 0620 CDF82CE0 		str	lr, [sp, #44]
 1420              	.LVL176:
 1421              	.L89:
 841:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1422              		.loc 1 841 0 is_stmt 1 discriminator 1
 1423 0624 9A45     		cmp	sl, r3
 1424 0626 F0DA     		bge	.L93
 847:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 1425              		.loc 1 847 0
 1426 0628 0798     		ldr	r0, [sp, #28]
 1427 062a 0028     		cmp	r0, #0
 1428 062c EAD1     		bne	.L91
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1429              		.loc 1 791 0
 1430 062e DDF820E0 		ldr	lr, [sp, #32]
 1431 0632 F044     		add	r8, r8, lr
 1432              	.LVL177:
 1433 0634 1FFA88F8 		uxth	r8, r8
 1434              	.LVL178:
 1435 0638 D9E7     		b	.L88
 1436              	.LVL179:
 1437              	.L97:
 1438 063a 0598     		ldr	r0, [sp, #20]
 1439 063c CCEB0003 		rsb	r3, ip, r0
 1440 0640 98B2     		uxth	r0, r3
 859:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1441              		.loc 1 859 0
 1442 0642 099B     		ldr	r3, [sp, #36]
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1443              		.loc 1 791 0
 1444 0644 0590     		str	r0, [sp, #20]
 859:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1445              		.loc 1 859 0
 1446 0646 C3B1     		cbz	r3, .L96
 859:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 1447              		.loc 1 859 0 is_stmt 0 discriminator 1
 1448 0648 DDF828E0 		ldr	lr, [sp, #40]
 1449 064c 1FFA8EFE 		uxth	lr, lr
 1450 0650 CDF830E0 		str	lr, [sp, #48]
 1451              	.L95:
 856:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 1452              		.loc 1 856 0 is_stmt 1 discriminator 1
 1453 0654 0598     		ldr	r0, [sp, #20]
 1454 0656 0FFA8CF3 		sxth	r3, ip
 1455 065a 9842     		cmp	r0, r3
 1456 065c EDDA     		bge	.L97
 862:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 1457              		.loc 1 862 0
 1458 065e 099B     		ldr	r3, [sp, #36]
 1459 0660 5BB9     		cbnz	r3, .L96
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1460              		.loc 1 791 0
 1461 0662 DDF828E0 		ldr	lr, [sp, #40]
 1462 0666 7444     		add	r4, r4, lr
 1463              	.LVL180:
 1464 0668 A4B2     		uxth	r4, r4
 1465              	.LVL181:
 1466              	.L92:
 855:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 1467              		.loc 1 855 0
 1468 066a 0598     		ldr	r0, [sp, #20]
 1469 066c DDF834E0 		ldr	lr, [sp, #52]
 1470 0670 00EB0E03 		add	r3, r0, lr
 1471 0674 98B2     		uxth	r0, r3
 1472 0676 0590     		str	r0, [sp, #20]
 856:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 1473              		.loc 1 856 0
 1474 0678 ECE7     		b	.L95
 1475              	.L96:
 868:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 1476              		.loc 1 868 0
 1477 067a 069B     		ldr	r3, [sp, #24]
 1478 067c 8845     		cmp	r8, r1
 1479 067e 38BF     		it	cc
 1480 0680 4146     		movcc	r1, r8
 1481 0682 9045     		cmp	r8, r2
 1482 0684 28BF     		it	cs
 1483 0686 4246     		movcs	r2, r8
 1484 0688 88B2     		uxth	r0, r1
 1485              	.LVL182:
 1486 068a 92B2     		uxth	r2, r2
 1487              	.LVL183:
 1488 068c 19B2     		sxth	r1, r3
 1489 068e 0F9B     		ldr	r3, [sp, #60]
 1490 0690 A042     		cmp	r0, r4
 1491 0692 28BF     		it	cs
 1492 0694 2046     		movcs	r0, r4
 1493              	.LVL184:
 1494 0696 A242     		cmp	r2, r4
 1495 0698 38BF     		it	cc
 1496 069a 2246     		movcc	r2, r4
 1497              	.LVL185:
 1498 069c 0093     		str	r3, [sp, #0]
 1499 069e 00B2     		sxth	r0, r0
 1500 06a0 0B46     		mov	r3, r1
 1501 06a2 12B2     		sxth	r2, r2
 1502 06a4 CDF80CC0 		str	ip, [sp, #12]
 1503 06a8 FFF7FEFF 		bl	GLCD_Line
 1504              	.LVL186:
 871:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1505              		.loc 1 871 0
 1506 06ac 0799     		ldr	r1, [sp, #28]
 1507 06ae DDF80CC0 		ldr	ip, [sp, #12]
 1508 06b2 19B9     		cbnz	r1, .L98
 871:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1509              		.loc 1 871 0 is_stmt 0 discriminator 1
 1510 06b4 0898     		ldr	r0, [sp, #32]
 1511 06b6 8044     		add	r8, r8, r0
 1512              	.LVL187:
 1513 06b8 1FFA88F8 		uxth	r8, r8
 1514              	.LVL188:
 1515              	.L98:
 872:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1516              		.loc 1 872 0 is_stmt 1
 1517 06bc 0B9A     		ldr	r2, [sp, #44]
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1518              		.loc 1 873 0
 1519 06be 0999     		ldr	r1, [sp, #36]
 872:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1520              		.loc 1 872 0
 1521 06c0 08EB0203 		add	r3, r8, r2
 1522 06c4 1FFA83F8 		uxth	r8, r3
 1523              	.LVL189:
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1524              		.loc 1 873 0
 1525 06c8 19B9     		cbnz	r1, .L99
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1526              		.loc 1 873 0 is_stmt 0 discriminator 1
 1527 06ca DDF828E0 		ldr	lr, [sp, #40]
 1528 06ce 7444     		add	r4, r4, lr
 1529              	.LVL190:
 1530 06d0 A4B2     		uxth	r4, r4
 1531              	.LVL191:
 1532              	.L99:
 875:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1533              		.loc 1 875 0 is_stmt 1
 1534 06d2 0699     		ldr	r1, [sp, #24]
 874:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1535              		.loc 1 874 0
 1536 06d4 0C98     		ldr	r0, [sp, #48]
 1537 06d6 2318     		adds	r3, r4, r0
 1538              	.LVL192:
 875:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1539              		.loc 1 875 0
 1540 06d8 481C     		adds	r0, r1, #1
 874:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1541              		.loc 1 874 0
 1542 06da 9CB2     		uxth	r4, r3
 1543              	.LVL193:
 875:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1544              		.loc 1 875 0
 1545 06dc 83B2     		uxth	r3, r0
 1546              	.LVL194:
 1547 06de 0693     		str	r3, [sp, #24]
 876:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 1548              		.loc 1 876 0
 1549 06e0 B5F90200 		ldrsh	r0, [r5, #2]
 1550 06e4 0699     		ldr	r1, [sp, #24]
 1551 06e6 8142     		cmp	r1, r0
 1552 06e8 7FF472AF 		bne	.L86
 1553              	.LVL195:
 1554              	.L85:
 1555              	.LBE11:
 880:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1556              		.loc 1 880 0
 1557 06ec 3A78     		ldrb	r2, [r7, #0]	@ zero_extendqisi2
 1558 06ee B5F800A0 		ldrh	sl, [r5, #0]
 1559 06f2 CAEB0203 		rsb	r3, sl, r2
 1560 06f6 58B2     		sxtb	r0, r3
 1561 06f8 02B2     		sxth	r2, r0
 1562 06fa 002A     		cmp	r2, #0
 1563 06fc 1FFA80F9 		uxth	r9, r0
 1564              	.LVL196:
 1565 0700 07DA     		bge	.L127
 880:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1566              		.loc 1 880 0 is_stmt 0 discriminator 1
 1567 0702 C0F10009 		rsb	r9, r0, #0
 1568 0706 4FF6FF70 		movw	r0, #65535
 1569              	.LVL197:
 1570 070a 1FFA89F9 		uxth	r9, r9
 1571              	.LVL198:
 1572 070e 0790     		str	r0, [sp, #28]
 1573 0710 01E0     		b	.L101
 1574              	.LVL199:
 1575              	.L127:
 880:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 1576              		.loc 1 880 0
 1577 0712 0123     		movs	r3, #1
 1578 0714 0793     		str	r3, [sp, #28]
 1579              	.LVL200:
 1580              	.L101:
 881:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1581              		.loc 1 881 0 is_stmt 1
 1582 0716 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 1583 0718 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 882:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 1584              		.loc 1 882 0
 1585 071a 1FFA8AF8 		uxth	r8, sl
 881:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1586              		.loc 1 881 0
 1587 071e 8B1A     		subs	r3, r1, r2
 1588 0720 58B2     		sxtb	r0, r3
 884:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1589              		.loc 1 884 0
 1590 0722 02B2     		sxth	r2, r0
 1591 0724 0FFA89F1 		sxth	r1, r9
 881:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1592              		.loc 1 881 0
 1593 0728 1FFA80FB 		uxth	fp, r0
 884:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1594              		.loc 1 884 0
 1595 072c 8A42     		cmp	r2, r1
 881:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 1596              		.loc 1 881 0
 1597 072e CDF830B0 		str	fp, [sp, #48]
 1598              	.LVL201:
 884:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 1599              		.loc 1 884 0
 1600 0732 0BDD     		ble	.L128
 886:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 1601              		.loc 1 886 0
 1602 0734 89EA0003 		eor	r3, r9, r0
 1603 0738 98B2     		uxth	r0, r3
 1604              	.LVL202:
 1605 073a 80EA0909 		eor	r9, r0, r9
 1606              	.LVL203:
 1607 073e 89EA0003 		eor	r3, r9, r0
 1608              	.LVL204:
 1609 0742 98B2     		uxth	r0, r3
 1610              	.LVL205:
 887:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1611              		.loc 1 887 0
 1612 0744 0123     		movs	r3, #1
 886:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 1613              		.loc 1 886 0
 1614 0746 0C90     		str	r0, [sp, #48]
 1615              	.LVL206:
 887:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 1616              		.loc 1 887 0
 1617 0748 0493     		str	r3, [sp, #16]
 1618 074a 01E0     		b	.L102
 1619              	.LVL207:
 1620              	.L128:
 888:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 1621              		.loc 1 888 0
 1622 074c 0021     		movs	r1, #0
 1623 074e 0491     		str	r1, [sp, #16]
 1624              	.LVL208:
 1625              	.L102:
 890:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 1626              		.loc 1 890 0
 1627 0750 C9F3470B 		ubfx	fp, r9, #1, #8
 1628              	.LVL209:
 1629              	.LBB12:
 892:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1630              		.loc 1 892 0
 1631 0754 4FF0000A 		mov	sl, #0
 1632              	.LVL210:
 1633              	.L103:
 892:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1634              		.loc 1 892 0 is_stmt 0 discriminator 1
 1635 0758 0FFA89F3 		sxth	r3, r9
 1636 075c 9A45     		cmp	sl, r3
 1637 075e 3FF748AE 		bgt	.L117
 1638              	.L118:
 1639              	.LVL211:
 895:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 1640              		.loc 1 895 0 is_stmt 1
 1641 0762 A045     		cmp	r8, r4
 1642 0764 39BF     		ittee	cc
 1643 0766 2246     		movcc	r2, r4
 1644 0768 4146     		movcc	r1, r8
 1645 076a 4246     		movcs	r2, r8
 1646 076c 2146     		movcs	r1, r4
 1647              	.LVL212:
 1648              	.L135:
 898:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 1649              		.loc 1 898 0 discriminator 1
 1650 076e 9A45     		cmp	sl, r3
 1651 0770 12DA     		bge	.L140
 1652              	.L110:
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1653              		.loc 1 791 0
 1654 0772 DDF830E0 		ldr	lr, [sp, #48]
 1655 0776 0BEB0E00 		add	r0, fp, lr
 1656 077a 1FFA80FB 		uxth	fp, r0
 1657              	.LVL213:
 901:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 1658              		.loc 1 901 0
 1659 077e 9B45     		cmp	fp, r3
 1660 0780 08DB     		blt	.L106
 904:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1661              		.loc 1 904 0
 1662 0782 049B     		ldr	r3, [sp, #16]
 903:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 1663              		.loc 1 903 0
 1664 0784 C9EB0B00 		rsb	r0, r9, fp
 1665              	.LVL214:
 1666 0788 1FFA80FB 		uxth	fp, r0
 1667              	.LVL215:
 904:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1668              		.loc 1 904 0
 1669 078c 3BB1     		cbz	r3, .L130
 904:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1670              		.loc 1 904 0 is_stmt 0 discriminator 1
 1671 078e 079B     		ldr	r3, [sp, #28]
 1672 0790 9BB2     		uxth	r3, r3
 1673 0792 02E0     		b	.L139
 1674              	.L106:
 1675              	.LVL216:
 907:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 1676              		.loc 1 907 0 is_stmt 1
 1677 0794 0498     		ldr	r0, [sp, #16]
 1678 0796 60B1     		cbz	r0, .L108
 1679              	.LVL217:
 1680              	.L140:
 1681 0798 0023     		movs	r3, #0
 1682              	.L139:
 1683 079a 0893     		str	r3, [sp, #32]
 1684 079c 01E0     		b	.L107
 1685              	.LVL218:
 1686              	.L130:
 904:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 1687              		.loc 1 904 0
 1688 079e 0498     		ldr	r0, [sp, #16]
 1689              	.LVL219:
 1690 07a0 0890     		str	r0, [sp, #32]
 1691              	.LVL220:
 1692              	.L107:
 913:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 1693              		.loc 1 913 0 discriminator 1
 1694 07a2 B7F90000 		ldrsh	r0, [r7, #0]
 1695 07a6 4FF0000E 		mov	lr, #0
 1696 07aa 0290     		str	r0, [sp, #8]
 1697 07ac CDF82CE0 		str	lr, [sp, #44]
 1698 07b0 1EE0     		b	.L109
 1699              	.LVL221:
 1700              	.L108:
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1701              		.loc 1 791 0
 1702 07b2 0798     		ldr	r0, [sp, #28]
 909:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 1703              		.loc 1 909 0
 1704 07b4 0AF1010A 		add	sl, sl, #1
 1705              	.LVL222:
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1706              		.loc 1 791 0
 1707 07b8 8044     		add	r8, r8, r0
 1708              	.LVL223:
 1709 07ba 1FFA88F8 		uxth	r8, r8
 1710              	.LVL224:
 909:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 1711              		.loc 1 909 0
 1712 07be 5FFA8AFA 		uxtb	sl, sl
 1713              	.LVL225:
 1714 07c2 D4E7     		b	.L135
 1715              	.LVL226:
 1716              	.L113:
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1717              		.loc 1 791 0
 1718 07c4 DDF814E0 		ldr	lr, [sp, #20]
 1719 07c8 CCEB0E03 		rsb	r3, ip, lr
 1720 07cc 98B2     		uxth	r0, r3
 919:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 1721              		.loc 1 919 0
 1722 07ce 099B     		ldr	r3, [sp, #36]
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1723              		.loc 1 791 0
 1724 07d0 0590     		str	r0, [sp, #20]
 919:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 1725              		.loc 1 919 0
 1726 07d2 CBB1     		cbz	r3, .L112
 919:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 1727              		.loc 1 919 0 is_stmt 0 discriminator 1
 1728 07d4 0A9B     		ldr	r3, [sp, #40]
 1729 07d6 98B2     		uxth	r0, r3
 1730 07d8 0B90     		str	r0, [sp, #44]
 1731              	.L111:
 916:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 1732              		.loc 1 916 0 is_stmt 1 discriminator 1
 1733 07da DDF814E0 		ldr	lr, [sp, #20]
 1734 07de 0FFA8CF0 		sxth	r0, ip
 1735 07e2 8645     		cmp	lr, r0
 1736 07e4 EEDA     		bge	.L113
 922:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 1737              		.loc 1 922 0
 1738 07e6 099B     		ldr	r3, [sp, #36]
 1739 07e8 73B9     		cbnz	r3, .L112
 791:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3, Bool fill,uint16_
 1740              		.loc 1 791 0
 1741 07ea 0A98     		ldr	r0, [sp, #40]
 1742 07ec 2418     		adds	r4, r4, r0
 1743              	.LVL227:
 1744 07ee A4B2     		uxth	r4, r4
 1745              	.LVL228:
 1746              	.L109:
 913:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 1747              		.loc 1 913 0 discriminator 1
 1748 07f0 DDF808E0 		ldr	lr, [sp, #8]
 1749 07f4 7445     		cmp	r4, lr
 1750 07f6 07D0     		beq	.L112
 1751              	.L114:
 915:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 1752              		.loc 1 915 0
 1753 07f8 DDF814E0 		ldr	lr, [sp, #20]
 1754 07fc 0D9B     		ldr	r3, [sp, #52]
 1755 07fe 0EEB0300 		add	r0, lr, r3
 1756 0802 83B2     		uxth	r3, r0
 1757 0804 0593     		str	r3, [sp, #20]
 916:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 1758              		.loc 1 916 0
 1759 0806 E8E7     		b	.L111
 1760              	.L112:
 1761              	.LVL229:
 929:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,fill_color);    // Draw line from min to max points found on the y
 1762              		.loc 1 929 0
 1763 0808 069B     		ldr	r3, [sp, #24]
 1764 080a 8845     		cmp	r8, r1
 1765 080c 38BF     		it	cc
 1766 080e 4146     		movcc	r1, r8
 1767 0810 9045     		cmp	r8, r2
 1768 0812 28BF     		it	cs
 1769 0814 4246     		movcs	r2, r8
 1770 0816 88B2     		uxth	r0, r1
 1771              	.LVL230:
 1772 0818 92B2     		uxth	r2, r2
 1773              	.LVL231:
 1774 081a 19B2     		sxth	r1, r3
 1775 081c 0F9B     		ldr	r3, [sp, #60]
 1776 081e A042     		cmp	r0, r4
 1777 0820 28BF     		it	cs
 1778 0822 2046     		movcs	r0, r4
 1779              	.LVL232:
 1780 0824 A242     		cmp	r2, r4
 1781 0826 38BF     		it	cc
 1782 0828 2246     		movcc	r2, r4
 1783              	.LVL233:
 1784 082a 0093     		str	r3, [sp, #0]
 1785 082c 00B2     		sxth	r0, r0
 1786 082e 0B46     		mov	r3, r1
 1787 0830 12B2     		sxth	r2, r2
 1788 0832 CDF80CC0 		str	ip, [sp, #12]
 1789 0836 FFF7FEFF 		bl	GLCD_Line
 1790              	.LVL234:
 931:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1791              		.loc 1 931 0
 1792 083a 0499     		ldr	r1, [sp, #16]
 1793 083c DDF80CC0 		ldr	ip, [sp, #12]
 1794 0840 19B9     		cbnz	r1, .L115
 931:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 1795              		.loc 1 931 0 is_stmt 0 discriminator 1
 1796 0842 0798     		ldr	r0, [sp, #28]
 1797 0844 8044     		add	r8, r8, r0
 1798              	.LVL235:
 1799 0846 1FFA88F8 		uxth	r8, r8
 1800              	.LVL236:
 1801              	.L115:
 932:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1802              		.loc 1 932 0 is_stmt 1
 1803 084a 089A     		ldr	r2, [sp, #32]
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1804              		.loc 1 933 0
 1805 084c 0999     		ldr	r1, [sp, #36]
 932:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 1806              		.loc 1 932 0
 1807 084e 08EB0203 		add	r3, r8, r2
 1808 0852 1FFA83F8 		uxth	r8, r3
 1809              	.LVL237:
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1810              		.loc 1 933 0
 1811 0856 19B9     		cbnz	r1, .L116
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 1812              		.loc 1 933 0 is_stmt 0 discriminator 1
 1813 0858 DDF828E0 		ldr	lr, [sp, #40]
 1814 085c 7444     		add	r4, r4, lr
 1815              	.LVL238:
 1816 085e A4B2     		uxth	r4, r4
 1817              	.LVL239:
 1818              	.L116:
 935:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1819              		.loc 1 935 0 is_stmt 1
 1820 0860 0699     		ldr	r1, [sp, #24]
 934:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1821              		.loc 1 934 0
 1822 0862 0B98     		ldr	r0, [sp, #44]
 1823 0864 2318     		adds	r3, r4, r0
 1824              	.LVL240:
 935:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1825              		.loc 1 935 0
 1826 0866 481C     		adds	r0, r1, #1
 934:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 1827              		.loc 1 934 0
 1828 0868 9CB2     		uxth	r4, r3
 1829              	.LVL241:
 935:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 1830              		.loc 1 935 0
 1831 086a 83B2     		uxth	r3, r0
 1832              	.LVL242:
 1833 086c 0693     		str	r3, [sp, #24]
 936:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 1834              		.loc 1 936 0
 1835 086e B7F90200 		ldrsh	r0, [r7, #2]
 1836 0872 0699     		ldr	r1, [sp, #24]
 1837 0874 8142     		cmp	r1, r0
 1838 0876 3FF7BCAD 		bgt	.L117
 892:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 1839              		.loc 1 892 0
 1840 087a 0AF1010A 		add	sl, sl, #1
 1841              	.LVL243:
 1842 087e 5FFA8AFA 		uxtb	sl, sl
 1843              	.LVL244:
 1844 0882 69E7     		b	.L103
 1845              	.LBE12:
 1846              	.LBE10:
 1847              		.cfi_endproc
 1848              	.LFE79:
 1850              		.align	1
 1851              		.global	GLCD_Frame
 1852              		.thumb
 1853              		.thumb_func
 1855              	GLCD_Frame:
 1856              	.LFB78:
 746:../Source Files/lpc_ssp_glcd.c **** {
 1857              		.loc 1 746 0
 1858              		.cfi_startproc
 1859              		@ args = 4, pretend = 0, frame = 0
 1860              		@ frame_needed = 0, uses_anonymous_args = 0
 1861              	.LVL245:
 1862 0884 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1863              	.LCFI15:
 1864              		.cfi_def_cfa_offset 40
 1865              		.cfi_offset 0, -40
 1866              		.cfi_offset 1, -36
 1867              		.cfi_offset 2, -32
 1868              		.cfi_offset 4, -28
 1869              		.cfi_offset 5, -24
 1870              		.cfi_offset 6, -20
 1871              		.cfi_offset 7, -16
 1872              		.cfi_offset 8, -12
 1873              		.cfi_offset 9, -8
 1874              		.cfi_offset 14, -4
 746:../Source Files/lpc_ssp_glcd.c **** {
 1875              		.loc 1 746 0
 1876 0888 BDF82880 		ldrh	r8, [sp, #40]
 1877 088c 0546     		mov	r5, r0
 1878 088e 0C46     		mov	r4, r1
 1879 0890 9146     		mov	r9, r2
 1880 0892 1F46     		mov	r7, r3
 1881 0894 96B2     		uxth	r6, r2
 1882              	.LVL246:
 1883              	.L142:
 751:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 1884              		.loc 1 751 0 discriminator 1
 1885 0896 002E     		cmp	r6, #0
 1886 0898 58D0     		beq	.L147
 1887              	.L145:
 1888 089a 6988     		ldrh	r1, [r5, #2]
 753:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 1889              		.loc 1 753 0
 1890 089c 33B2     		sxth	r3, r6
 755:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 1891              		.loc 1 755 0
 1892 089e 7218     		adds	r2, r6, r1
 753:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 1893              		.loc 1 753 0
 1894 08a0 4B45     		cmp	r3, r9
 755:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 1895              		.loc 1 755 0
 1896 08a2 11B2     		sxth	r1, r2
 1897 08a4 B5F90000 		ldrsh	r0, [r5, #0]
 1898 08a8 B4F90020 		ldrsh	r2, [r4, #0]
 753:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 1899              		.loc 1 753 0
 1900 08ac 26DA     		bge	.L143
 755:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 1901              		.loc 1 755 0
 1902 08ae 0B46     		mov	r3, r1
 1903 08b0 CDF80080 		str	r8, [sp, #0]
 1904 08b4 FFF7FEFF 		bl	GLCD_Line
 1905              	.LVL247:
 756:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 1906              		.loc 1 756 0
 1907 08b8 6188     		ldrh	r1, [r4, #2]
 1908 08ba B5F90000 		ldrsh	r0, [r5, #0]
 1909 08be 8A1B     		subs	r2, r1, r6
 1910 08c0 11B2     		sxth	r1, r2
 1911 08c2 0B46     		mov	r3, r1
 1912 08c4 B4F90020 		ldrsh	r2, [r4, #0]
 1913 08c8 CDF80080 		str	r8, [sp, #0]
 1914 08cc FFF7FEFF 		bl	GLCD_Line
 1915              	.LVL248:
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 1916              		.loc 1 757 0
 1917 08d0 2888     		ldrh	r0, [r5, #0]
 1918 08d2 B5F90210 		ldrsh	r1, [r5, #2]
 1919 08d6 3318     		adds	r3, r6, r0
 1920 08d8 18B2     		sxth	r0, r3
 1921 08da 0246     		mov	r2, r0
 1922 08dc B4F90230 		ldrsh	r3, [r4, #2]
 1923 08e0 CDF80080 		str	r8, [sp, #0]
 1924 08e4 FFF7FEFF 		bl	GLCD_Line
 1925              	.LVL249:
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 1926              		.loc 1 758 0
 1927 08e8 2188     		ldrh	r1, [r4, #0]
 1928 08ea B4F90230 		ldrsh	r3, [r4, #2]
 1929 08ee 8A1B     		subs	r2, r1, r6
 1930 08f0 10B2     		sxth	r0, r2
 1931 08f2 B5F90210 		ldrsh	r1, [r5, #2]
 1932 08f6 CDF80080 		str	r8, [sp, #0]
 1933 08fa 21E0     		b	.L146
 1934              	.L143:
 763:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 1935              		.loc 1 763 0
 1936 08fc 0B46     		mov	r3, r1
 1937 08fe 0097     		str	r7, [sp, #0]
 1938 0900 FFF7FEFF 		bl	GLCD_Line
 1939              	.LVL250:
 764:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 1940              		.loc 1 764 0
 1941 0904 6088     		ldrh	r0, [r4, #2]
 1942 0906 B4F90020 		ldrsh	r2, [r4, #0]
 1943 090a 831B     		subs	r3, r0, r6
 1944 090c 19B2     		sxth	r1, r3
 1945 090e 0B46     		mov	r3, r1
 1946 0910 B5F90000 		ldrsh	r0, [r5, #0]
 1947 0914 0097     		str	r7, [sp, #0]
 1948 0916 FFF7FEFF 		bl	GLCD_Line
 1949              	.LVL251:
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 1950              		.loc 1 765 0
 1951 091a 2988     		ldrh	r1, [r5, #0]
 1952 091c B4F90230 		ldrsh	r3, [r4, #2]
 1953 0920 7218     		adds	r2, r6, r1
 1954 0922 10B2     		sxth	r0, r2
 1955 0924 B5F90210 		ldrsh	r1, [r5, #2]
 1956 0928 0246     		mov	r2, r0
 1957 092a 0097     		str	r7, [sp, #0]
 1958 092c FFF7FEFF 		bl	GLCD_Line
 1959              	.LVL252:
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 1960              		.loc 1 766 0
 1961 0930 2088     		ldrh	r0, [r4, #0]
 1962 0932 B5F90210 		ldrsh	r1, [r5, #2]
 1963 0936 831B     		subs	r3, r0, r6
 1964 0938 18B2     		sxth	r0, r3
 1965 093a B4F90230 		ldrsh	r3, [r4, #2]
 1966 093e 0097     		str	r7, [sp, #0]
 1967              	.L146:
 1968 0940 0246     		mov	r2, r0
 1969 0942 013E     		subs	r6, r6, #1
 1970 0944 FFF7FEFF 		bl	GLCD_Line
 1971              	.LVL253:
 1972 0948 B6B2     		uxth	r6, r6
 1973 094a A4E7     		b	.L142
 1974              	.L147:
 773:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 1975              		.loc 1 773 0
 1976 094c B5F90210 		ldrsh	r1, [r5, #2]
 1977 0950 B5F90000 		ldrsh	r0, [r5, #0]
 1978 0954 B4F90020 		ldrsh	r2, [r4, #0]
 1979 0958 0B46     		mov	r3, r1
 1980 095a 0097     		str	r7, [sp, #0]
 1981 095c FFF7FEFF 		bl	GLCD_Line
 1982              	.LVL254:
 774:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 1983              		.loc 1 774 0
 1984 0960 B4F90210 		ldrsh	r1, [r4, #2]
 1985 0964 B5F90000 		ldrsh	r0, [r5, #0]
 1986 0968 B4F90020 		ldrsh	r2, [r4, #0]
 1987 096c 0B46     		mov	r3, r1
 1988 096e 0097     		str	r7, [sp, #0]
 1989 0970 FFF7FEFF 		bl	GLCD_Line
 1990              	.LVL255:
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 1991              		.loc 1 775 0
 1992 0974 B5F90000 		ldrsh	r0, [r5, #0]
 1993 0978 B5F90210 		ldrsh	r1, [r5, #2]
 1994 097c B4F90230 		ldrsh	r3, [r4, #2]
 1995 0980 0246     		mov	r2, r0
 1996 0982 0097     		str	r7, [sp, #0]
 1997 0984 FFF7FEFF 		bl	GLCD_Line
 1998              	.LVL256:
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 1999              		.loc 1 776 0
 2000 0988 B4F90000 		ldrsh	r0, [r4, #0]
 2001 098c B5F90210 		ldrsh	r1, [r5, #2]
 2002 0990 B4F90230 		ldrsh	r3, [r4, #2]
 2003 0994 0246     		mov	r2, r0
 2004 0996 0A97     		str	r7, [sp, #40]
 778:../Source Files/lpc_ssp_glcd.c **** }
 2005              		.loc 1 778 0
 2006 0998 03B0     		add	sp, sp, #12
 2007 099a BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2008              		.loc 1 776 0
 2009 099e FFF7FEBF 		b	GLCD_Line
 2010              	.LVL257:
 2011              		.cfi_endproc
 2012              	.LFE78:
 2014              		.align	1
 2015              		.global	GLCD_Circle
 2016              		.thumb
 2017              		.thumb_func
 2019              	GLCD_Circle:
 2020              	.LFB80:
 960:../Source Files/lpc_ssp_glcd.c **** {
 2021              		.loc 1 960 0
 2022              		.cfi_startproc
 2023              		@ args = 8, pretend = 0, frame = 40
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
 2025              	.LVL258:
 2026 09a2 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2027              	.LCFI16:
 2028              		.cfi_def_cfa_offset 36
 2029              		.cfi_offset 4, -36
 2030              		.cfi_offset 5, -32
 2031              		.cfi_offset 6, -28
 2032              		.cfi_offset 7, -24
 2033              		.cfi_offset 8, -20
 2034              		.cfi_offset 9, -16
 2035              		.cfi_offset 10, -12
 2036              		.cfi_offset 11, -8
 2037              		.cfi_offset 14, -4
 2038 09a6 8DB0     		sub	sp, sp, #52
 2039              	.LCFI17:
 2040              		.cfi_def_cfa_offset 88
 960:../Source Files/lpc_ssp_glcd.c **** {
 2041              		.loc 1 960 0
 2042 09a8 0990     		str	r0, [sp, #36]
 2043 09aa 0A91     		str	r1, [sp, #40]
 2044 09ac 0B93     		str	r3, [sp, #44]
 2045 09ae BDF85C00 		ldrh	r0, [sp, #92]
 2046              	.LVL259:
 2047 09b2 BDF85830 		ldrh	r3, [sp, #88]
 2048              	.LVL260:
 964:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2049              		.loc 1 964 0
 2050 09b6 C2F10101 		rsb	r1, r2, #1
 2051              	.LVL261:
 960:../Source Files/lpc_ssp_glcd.c **** {
 2052              		.loc 1 960 0
 2053 09ba 9446     		mov	ip, r2
 964:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2054              		.loc 1 964 0
 2055 09bc 8AB2     		uxth	r2, r1
 2056              	.LVL262:
 960:../Source Files/lpc_ssp_glcd.c **** {
 2057              		.loc 1 960 0
 2058 09be 0593     		str	r3, [sp, #20]
 2059 09c0 0890     		str	r0, [sp, #32]
 964:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2060              		.loc 1 964 0
 2061 09c2 0792     		str	r2, [sp, #28]
 2062              	.LVL263:
 2063 09c4 1646     		mov	r6, r2
 963:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 2064              		.loc 1 963 0
 2065 09c6 6546     		mov	r5, ip
 964:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 2066              		.loc 1 964 0
 2067 09c8 0024     		movs	r4, #0
 2068              	.LVL264:
 2069              	.L152:
 968:../Source Files/lpc_ssp_glcd.c **** 		if(fill)
 2070              		.loc 1 968 0
 2071 09ca 0B9F     		ldr	r7, [sp, #44]
 2072 09cc 002F     		cmp	r7, #0
 2073 09ce 43D0     		beq	.L149
 970:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2074              		.loc 1 970 0
 2075 09d0 099B     		ldr	r3, [sp, #36]
 2076 09d2 0A99     		ldr	r1, [sp, #40]
 2077 09d4 1FFA83F8 		uxth	r8, r3
 2078 09d8 8FB2     		uxth	r7, r1
 2079 09da 1FFA85F9 		uxth	r9, r5
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2080              		.loc 1 959 0
 2081 09de A0B2     		uxth	r0, r4
 970:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2082              		.loc 1 970 0
 2083 09e0 09EB0702 		add	r2, r9, r7
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2084              		.loc 1 959 0
 2085 09e4 C0EB080B 		rsb	fp, r0, r8
 2086 09e8 00EB080A 		add	sl, r0, r8
 970:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2087              		.loc 1 970 0
 2088 09ec 089B     		ldr	r3, [sp, #32]
 2089 09ee 11B2     		sxth	r1, r2
 2090 09f0 0FFA8BFB 		sxth	fp, fp
 2091 09f4 0FFA8AFA 		sxth	sl, sl
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2092              		.loc 1 959 0
 2093 09f8 0690     		str	r0, [sp, #24]
 970:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, fill_color);
 2094              		.loc 1 970 0
 2095 09fa 0093     		str	r3, [sp, #0]
 2096 09fc 5846     		mov	r0, fp
 2097 09fe 0B46     		mov	r3, r1
 2098 0a00 5246     		mov	r2, sl
 2099 0a02 CDF80CC0 		str	ip, [sp, #12]
 2100 0a06 FFF7FEFF 		bl	GLCD_Line
 2101              	.LVL265:
 971:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, fill_color);
 2102              		.loc 1 971 0
 2103 0a0a C9EB0700 		rsb	r0, r9, r7
 2104 0a0e 089A     		ldr	r2, [sp, #32]
 2105 0a10 01B2     		sxth	r1, r0
 2106 0a12 0B46     		mov	r3, r1
 2107 0a14 5846     		mov	r0, fp
 2108 0a16 0092     		str	r2, [sp, #0]
 2109 0a18 5246     		mov	r2, sl
 2110 0a1a FFF7FEFF 		bl	GLCD_Line
 2111              	.LVL266:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2112              		.loc 1 959 0
 2113 0a1e 0699     		ldr	r1, [sp, #24]
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, fill_color);
 2114              		.loc 1 972 0
 2115 0a20 C9EB080C 		rsb	ip, r9, r8
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2116              		.loc 1 959 0
 2117 0a24 CB19     		adds	r3, r1, r7
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, fill_color);
 2118              		.loc 1 972 0
 2119 0a26 0898     		ldr	r0, [sp, #32]
 2120 0a28 C844     		add	r8, r9, r8
 2121 0a2a 19B2     		sxth	r1, r3
 2122 0a2c 0FFA8CF9 		sxth	r9, ip
 2123 0a30 0FFA88FB 		sxth	fp, r8
 2124 0a34 0B46     		mov	r3, r1
 2125 0a36 0090     		str	r0, [sp, #0]
 2126 0a38 5A46     		mov	r2, fp
 2127 0a3a 4846     		mov	r0, r9
 2128 0a3c FFF7FEFF 		bl	GLCD_Line
 2129              	.LVL267:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2130              		.loc 1 959 0
 2131 0a40 069A     		ldr	r2, [sp, #24]
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, fill_color);
 2132              		.loc 1 973 0
 2133 0a42 089B     		ldr	r3, [sp, #32]
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2134              		.loc 1 959 0
 2135 0a44 BF1A     		subs	r7, r7, r2
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, fill_color);
 2136              		.loc 1 973 0
 2137 0a46 39B2     		sxth	r1, r7
 2138 0a48 0093     		str	r3, [sp, #0]
 2139 0a4a 4846     		mov	r0, r9
 2140 0a4c 5A46     		mov	r2, fp
 2141 0a4e 0B46     		mov	r3, r1
 2142 0a50 FFF7FEFF 		bl	GLCD_Line
 2143              	.LVL268:
 2144 0a54 DDF80CC0 		ldr	ip, [sp, #12]
 2145              	.L149:
 976:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 2146              		.loc 1 976 0
 2147 0a58 3104     		lsls	r1, r6, #16
 2148 0a5a 07D5     		bpl	.L150
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2149              		.loc 1 959 0
 2150 0a5c A1B2     		uxth	r1, r4
 977:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2151              		.loc 1 977 0
 2152 0a5e F01C     		adds	r0, r6, #3
 2153 0a60 00EB4102 		add	r2, r0, r1, lsl #1
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2154              		.loc 1 959 0
 2155 0a64 4F1C     		adds	r7, r1, #1
 977:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2156              		.loc 1 977 0
 2157 0a66 96B2     		uxth	r6, r2
 2158              	.LVL269:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2159              		.loc 1 959 0
 2160 0a68 BBB2     		uxth	r3, r7
 2161              	.LVL270:
 2162 0a6a 09E0     		b	.L151
 2163              	.LVL271:
 2164              	.L150:
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2165              		.loc 1 979 0
 2166 0a6c 29B2     		sxth	r1, r5
 2167 0a6e 0536     		adds	r6, r6, #5
 2168              	.LVL272:
 2169 0a70 601A     		subs	r0, r4, r1
 2170 0a72 06EB4002 		add	r2, r6, r0, lsl #1
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2171              		.loc 1 959 0
 2172 0a76 671C     		adds	r7, r4, #1
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2173              		.loc 1 979 0
 2174 0a78 013D     		subs	r5, r5, #1
 2175              	.LVL273:
 2176 0a7a 96B2     		uxth	r6, r2
 2177              	.LVL274:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2178              		.loc 1 959 0
 2179 0a7c BBB2     		uxth	r3, r7
 2180              	.LVL275:
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2181              		.loc 1 979 0
 2182 0a7e ADB2     		uxth	r5, r5
 2183              	.LVL276:
 2184              	.L151:
 980:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 2185              		.loc 1 980 0
 2186 0a80 1BB2     		sxth	r3, r3
 2187              	.LVL277:
 2188 0a82 29B2     		sxth	r1, r5
 2189 0a84 0134     		adds	r4, r4, #1
 2190 0a86 8B42     		cmp	r3, r1
 2191 0a88 9FDD     		ble	.L152
 2192 0a8a 6546     		mov	r5, ip
 2193              	.LVL278:
 2194 0a8c 4FF00009 		mov	r9, #0
 2195              	.LVL279:
 2196              	.L155:
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2197              		.loc 1 990 0
 2198 0a90 099E     		ldr	r6, [sp, #36]
 2199 0a92 0A9F     		ldr	r7, [sp, #40]
 2200 0a94 1FFA86F8 		uxth	r8, r6
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2201              		.loc 1 959 0
 2202 0a98 1FFA89F4 		uxth	r4, r9
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2203              		.loc 1 990 0
 2204 0a9c AEB2     		uxth	r6, r5
 2205 0a9e BFB2     		uxth	r7, r7
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2206              		.loc 1 959 0
 2207 0aa0 04EB0800 		add	r0, r4, r8
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2208              		.loc 1 990 0
 2209 0aa4 06EB070E 		add	lr, r6, r7
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2210              		.loc 1 959 0
 2211 0aa8 82B2     		uxth	r2, r0
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2212              		.loc 1 990 0
 2213 0aaa 1FFA8EFA 		uxth	sl, lr
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2214              		.loc 1 959 0
 2215 0aae 0692     		str	r2, [sp, #24]
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2216              		.loc 1 990 0
 2217 0ab0 5146     		mov	r1, sl
 2218 0ab2 0698     		ldr	r0, [sp, #24]
 2219 0ab4 059A     		ldr	r2, [sp, #20]
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, color);
 2220              		.loc 1 991 0
 2221 0ab6 06EB080B 		add	fp, r6, r8
 990:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, color);
 2222              		.loc 1 990 0
 2223 0aba CDF80CA0 		str	sl, [sp, #12]
 2224 0abe FFF7FEFF 		bl	GLCD_PutPixel
 2225              	.LVL280:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2226              		.loc 1 959 0
 2227 0ac2 E319     		adds	r3, r4, r7
 2228 0ac4 9BB2     		uxth	r3, r3
 991:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, color);
 2229              		.loc 1 991 0
 2230 0ac6 1FFA8BFB 		uxth	fp, fp
 2231 0aca 1946     		mov	r1, r3
 2232 0acc 5846     		mov	r0, fp
 2233 0ace 059A     		ldr	r2, [sp, #20]
 2234 0ad0 0493     		str	r3, [sp, #16]
 2235 0ad2 FFF7FEFF 		bl	GLCD_PutPixel
 2236              	.LVL281:
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, color);
 2237              		.loc 1 992 0
 2238 0ad6 DDF80CC0 		ldr	ip, [sp, #12]
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2239              		.loc 1 959 0
 2240 0ada C4EB0801 		rsb	r1, r4, r8
 2241 0ade 1FFA81FA 		uxth	sl, r1
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, color);
 2242              		.loc 1 992 0
 2243 0ae2 5046     		mov	r0, sl
 2244 0ae4 6146     		mov	r1, ip
 2245 0ae6 059A     		ldr	r2, [sp, #20]
 2246 0ae8 FFF7FEFF 		bl	GLCD_PutPixel
 2247              	.LVL282:
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, color);
 2248              		.loc 1 993 0
 2249 0aec C6EB0808 		rsb	r8, r6, r8
 2250 0af0 049A     		ldr	r2, [sp, #16]
 2251 0af2 1FFA88F8 		uxth	r8, r8
 2252 0af6 1146     		mov	r1, r2
 2253 0af8 4046     		mov	r0, r8
 2254 0afa 059A     		ldr	r2, [sp, #20]
 2255 0afc FFF7FEFF 		bl	GLCD_PutPixel
 2256              	.LVL283:
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2257              		.loc 1 959 0
 2258 0b00 381B     		subs	r0, r7, r4
 2259 0b02 83B2     		uxth	r3, r0
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 2260              		.loc 1 995 0
 2261 0b04 BE1B     		subs	r6, r7, r6
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, color);
 2262              		.loc 1 994 0
 2263 0b06 1946     		mov	r1, r3
 2264 0b08 5846     		mov	r0, fp
 2265 0b0a 059A     		ldr	r2, [sp, #20]
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 2266              		.loc 1 995 0
 2267 0b0c B6B2     		uxth	r6, r6
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, color);
 2268              		.loc 1 994 0
 2269 0b0e 0493     		str	r3, [sp, #16]
 2270 0b10 FFF7FEFF 		bl	GLCD_PutPixel
 2271              	.LVL284:
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, color);
 2272              		.loc 1 995 0
 2273 0b14 0698     		ldr	r0, [sp, #24]
 2274 0b16 3146     		mov	r1, r6
 2275 0b18 059A     		ldr	r2, [sp, #20]
 2276 0b1a FFF7FEFF 		bl	GLCD_PutPixel
 2277              	.LVL285:
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, color);
 2278              		.loc 1 996 0
 2279 0b1e 5046     		mov	r0, sl
 2280 0b20 3146     		mov	r1, r6
 2281 0b22 059A     		ldr	r2, [sp, #20]
 2282 0b24 FFF7FEFF 		bl	GLCD_PutPixel
 2283              	.LVL286:
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, color);
 2284              		.loc 1 997 0
 2285 0b28 4046     		mov	r0, r8
 2286 0b2a 059A     		ldr	r2, [sp, #20]
 2287 0b2c 0499     		ldr	r1, [sp, #16]
 2288 0b2e FFF7FEFF 		bl	GLCD_PutPixel
 2289              	.LVL287:
1000:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 2290              		.loc 1 1000 0
 2291 0b32 0798     		ldr	r0, [sp, #28]
 2292 0b34 0204     		lsls	r2, r0, #16
 2293 0b36 07D5     		bpl	.L153
1001:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2294              		.loc 1 1001 0
 2295 0b38 0330     		adds	r0, r0, #3
 2296 0b3a 00EB4402 		add	r2, r0, r4, lsl #1
 2297 0b3e 91B2     		uxth	r1, r2
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2298              		.loc 1 959 0
 2299 0b40 0134     		adds	r4, r4, #1
1001:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 2300              		.loc 1 1001 0
 2301 0b42 0791     		str	r1, [sp, #28]
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2302              		.loc 1 959 0
 2303 0b44 A3B2     		uxth	r3, r4
 2304              	.LVL288:
 2305 0b46 0CE0     		b	.L154
 2306              	.LVL289:
 2307              	.L153:
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2308              		.loc 1 1003 0
 2309 0b48 079A     		ldr	r2, [sp, #28]
 2310 0b4a 2BB2     		sxth	r3, r5
 2311 0b4c 511D     		adds	r1, r2, #5
 2312 0b4e C3EB0900 		rsb	r0, r3, r9
 2313 0b52 01EB4002 		add	r2, r1, r0, lsl #1
 2314 0b56 91B2     		uxth	r1, r2
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2315              		.loc 1 959 0
 2316 0b58 0134     		adds	r4, r4, #1
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2317              		.loc 1 1003 0
 2318 0b5a 013D     		subs	r5, r5, #1
 2319              	.LVL290:
 2320 0b5c 0791     		str	r1, [sp, #28]
 959:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius, Bool fill, uint16_t color, uint16_t fill_col
 2321              		.loc 1 959 0
 2322 0b5e A3B2     		uxth	r3, r4
 2323              	.LVL291:
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 2324              		.loc 1 1003 0
 2325 0b60 ADB2     		uxth	r5, r5
 2326              	.LVL292:
 2327              	.L154:
1004:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 2328              		.loc 1 1004 0
 2329 0b62 1CB2     		sxth	r4, r3
 2330 0b64 2BB2     		sxth	r3, r5
 2331              	.LVL293:
 2332 0b66 9C42     		cmp	r4, r3
 2333 0b68 09F10109 		add	r9, r9, #1
 2334 0b6c 90DD     		ble	.L155
1005:../Source Files/lpc_ssp_glcd.c **** }
 2335              		.loc 1 1005 0
 2336 0b6e 0DB0     		add	sp, sp, #52
 2337 0b70 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2338              		.cfi_endproc
 2339              	.LFE80:
 2341              		.align	1
 2342              		.global	GLCD_Window
 2343              		.thumb
 2344              		.thumb_func
 2346              	GLCD_Window:
 2347              	.LFB58:
 131:../Source Files/lpc_ssp_glcd.c **** {
 2348              		.loc 1 131 0
 2349              		.cfi_startproc
 2350              		@ args = 0, pretend = 0, frame = 0
 2351              		@ frame_needed = 0, uses_anonymous_args = 0
 2352              	.LVL294:
 2353 0b74 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2354              	.LCFI18:
 2355              		.cfi_def_cfa_offset 24
 2356              		.cfi_offset 3, -24
 2357              		.cfi_offset 4, -20
 2358              		.cfi_offset 5, -16
 2359              		.cfi_offset 6, -12
 2360              		.cfi_offset 7, -8
 2361              		.cfi_offset 14, -4
 131:../Source Files/lpc_ssp_glcd.c **** {
 2362              		.loc 1 131 0
 2363 0b76 0546     		mov	r5, r0
 132:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 2364              		.loc 1 132 0
 2365 0b78 4520     		movs	r0, #69
 2366              	.LVL295:
 131:../Source Files/lpc_ssp_glcd.c **** {
 2367              		.loc 1 131 0
 2368 0b7a 0C46     		mov	r4, r1
 2369 0b7c 1646     		mov	r6, r2
 2370 0b7e 1F46     		mov	r7, r3
 132:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 2371              		.loc 1 132 0
 2372 0b80 FFF7FEFF 		bl	Write_Command_Glcd
 2373              	.LVL296:
 133:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 2374              		.loc 1 133 0
 2375 0b84 2846     		mov	r0, r5
 2376 0b86 FFF7FEFF 		bl	Write_Data_Glcd
 2377              	.LVL297:
 136:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 2378              		.loc 1 136 0
 2379 0b8a 013D     		subs	r5, r5, #1
 135:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 2380              		.loc 1 135 0
 2381 0b8c 4620     		movs	r0, #70
 2382 0b8e FFF7FEFF 		bl	Write_Command_Glcd
 2383              	.LVL298:
 136:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 2384              		.loc 1 136 0
 2385 0b92 7019     		adds	r0, r6, r5
 2386 0b94 80B2     		uxth	r0, r0
 2387 0b96 FFF7FEFF 		bl	Write_Data_Glcd
 2388              	.LVL299:
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 2389              		.loc 1 138 0
 2390 0b9a 4420     		movs	r0, #68
 2391 0b9c FFF7FEFF 		bl	Write_Command_Glcd
 2392              	.LVL300:
 139:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 2393              		.loc 1 139 0
 2394 0ba0 2046     		mov	r0, r4
 2395 0ba2 FFF7FEFF 		bl	Write_Data_Glcd
 2396              	.LVL301:
 141:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 2397              		.loc 1 141 0
 2398 0ba6 4420     		movs	r0, #68
 2399 0ba8 FFF7FEFF 		bl	Write_Command_Glcd
 2400              	.LVL302:
 142:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 2401              		.loc 1 142 0
 2402 0bac 013C     		subs	r4, r4, #1
 2403 0bae 3F19     		adds	r7, r7, r4
 2404 0bb0 3902     		lsls	r1, r7, #8
 2405 0bb2 01F47F40 		and	r0, r1, #65280
 143:../Source Files/lpc_ssp_glcd.c **** }
 2406              		.loc 1 143 0
 2407 0bb6 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 142:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 2408              		.loc 1 142 0
 2409 0bba FFF7FEBF 		b	Write_Data_Glcd
 2410              	.LVL303:
 2411              		.cfi_endproc
 2412              	.LFE58:
 2414              		.align	1
 2415              		.global	GLCD_Display_String
 2416              		.thumb
 2417              		.thumb_func
 2419              	GLCD_Display_String:
 2420              	.LFB71:
 471:../Source Files/lpc_ssp_glcd.c **** {
 2421              		.loc 1 471 0
 2422              		.cfi_startproc
 2423              		@ args = 0, pretend = 0, frame = 0
 2424              		@ frame_needed = 0, uses_anonymous_args = 0
 2425              	.LVL304:
 2426 0bbe F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2427              	.LCFI19:
 2428              		.cfi_def_cfa_offset 24
 2429              		.cfi_offset 3, -24
 2430              		.cfi_offset 4, -20
 2431              		.cfi_offset 5, -16
 2432              		.cfi_offset 6, -12
 2433              		.cfi_offset 7, -8
 2434              		.cfi_offset 14, -4
 471:../Source Files/lpc_ssp_glcd.c **** {
 2435              		.loc 1 471 0
 2436 0bc0 0746     		mov	r7, r0
 472:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2437              		.loc 1 472 0
 2438 0bc2 0020     		movs	r0, #0
 2439              	.LVL305:
 471:../Source Files/lpc_ssp_glcd.c **** {
 2440              		.loc 1 471 0
 2441 0bc4 0E46     		mov	r6, r1
 2442 0bc6 1546     		mov	r5, r2
 472:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2443              		.loc 1 472 0
 2444 0bc8 0146     		mov	r1, r0
 2445              	.LVL306:
 2446 0bca 4FF4A072 		mov	r2, #320
 2447              	.LVL307:
 2448 0bce F023     		movs	r3, #240
 2449 0bd0 FFF7FEFF 		bl	GLCD_Window
 2450              	.LVL308:
 473:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2451              		.loc 1 473 0
 2452 0bd4 0024     		movs	r4, #0
 2453              	.LVL309:
 2454              	.L163:
 470:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 2455              		.loc 1 470 0 discriminator 1
 2456 0bd6 3119     		adds	r1, r6, r4
 2457 0bd8 0134     		adds	r4, r4, #1
 2458 0bda 2B19     		adds	r3, r5, r4
 473:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2459              		.loc 1 473 0 discriminator 1
 2460 0bdc 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
 470:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 2461              		.loc 1 470 0 discriminator 1
 2462 0be0 89B2     		uxth	r1, r1
 2463              	.LVL310:
 473:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 2464              		.loc 1 473 0 discriminator 1
 2465 0be2 1AB1     		cbz	r2, .L165
 2466              	.L164:
 2467              	.LVL311:
 475:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 2468              		.loc 1 475 0
 2469 0be4 3846     		mov	r0, r7
 2470 0be6 FFF7FEFF 		bl	GLCD_Display_Char
 2471              	.LVL312:
 2472 0bea F4E7     		b	.L163
 2473              	.LVL313:
 2474              	.L165:
 477:../Source Files/lpc_ssp_glcd.c **** }
 2475              		.loc 1 477 0
 2476 0bec F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2477              		.cfi_endproc
 2478              	.LFE71:
 2480              		.align	1
 2481              		.global	GLCD_ClearLn
 2482              		.thumb
 2483              		.thumb_func
 2485              	GLCD_ClearLn:
 2486              	.LFB72:
 486:../Source Files/lpc_ssp_glcd.c **** {
 2487              		.loc 1 486 0
 2488              		.cfi_startproc
 2489              		@ args = 0, pretend = 0, frame = 0
 2490              		@ frame_needed = 0, uses_anonymous_args = 0
 2491              	.LVL314:
 2492 0bee 10B5     		push	{r4, lr}
 2493              	.LCFI20:
 2494              		.cfi_def_cfa_offset 8
 2495              		.cfi_offset 4, -8
 2496              		.cfi_offset 14, -4
 486:../Source Files/lpc_ssp_glcd.c **** {
 2497              		.loc 1 486 0
 2498 0bf0 0446     		mov	r4, r0
 487:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 2499              		.loc 1 487 0
 2500 0bf2 0020     		movs	r0, #0
 2501              	.LVL315:
 2502 0bf4 0146     		mov	r1, r0
 2503 0bf6 4FF4A072 		mov	r2, #320
 2504 0bfa F023     		movs	r3, #240
 2505 0bfc FFF7FEFF 		bl	GLCD_Window
 2506              	.LVL316:
 488:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 2507              		.loc 1 488 0
 2508 0c00 034A     		ldr	r2, .L167
 2509 0c02 2046     		mov	r0, r4
 2510 0c04 0021     		movs	r1, #0
 489:../Source Files/lpc_ssp_glcd.c **** }
 2511              		.loc 1 489 0
 2512 0c06 BDE81040 		pop	{r4, lr}
 488:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 2513              		.loc 1 488 0
 2514 0c0a FFF7FEBF 		b	GLCD_Display_String
 2515              	.LVL317:
 2516              	.L168:
 2517 0c0e 00BF     		.align	2
 2518              	.L167:
 2519 0c10 00000000 		.word	.LC0
 2520              		.cfi_endproc
 2521              	.LFE72:
 2523              		.align	1
 2524              		.global	GLCD_Clear
 2525              		.thumb
 2526              		.thumb_func
 2528              	GLCD_Clear:
 2529              	.LFB68:
 377:../Source Files/lpc_ssp_glcd.c **** {
 2530              		.loc 1 377 0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 0
 2533              		@ frame_needed = 0, uses_anonymous_args = 0
 2534              	.LVL318:
 2535 0c14 38B5     		push	{r3, r4, r5, lr}
 2536              	.LCFI21:
 2537              		.cfi_def_cfa_offset 16
 2538              		.cfi_offset 3, -16
 2539              		.cfi_offset 4, -12
 2540              		.cfi_offset 5, -8
 2541              		.cfi_offset 14, -4
 377:../Source Files/lpc_ssp_glcd.c **** {
 2542              		.loc 1 377 0
 2543 0c16 0546     		mov	r5, r0
 380:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 2544              		.loc 1 380 0
 2545 0c18 0020     		movs	r0, #0
 2546              	.LVL319:
 2547 0c1a 0146     		mov	r1, r0
 2548 0c1c 4FF4A072 		mov	r2, #320
 2549 0c20 F023     		movs	r3, #240
 2550 0c22 FFF7FEFF 		bl	GLCD_Window
 2551              	.LVL320:
 382:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 2552              		.loc 1 382 0
 2553 0c26 4E20     		movs	r0, #78
 2554 0c28 FFF7FEFF 		bl	Write_Command_Glcd
 2555              	.LVL321:
 383:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 2556              		.loc 1 383 0
 2557 0c2c 0020     		movs	r0, #0
 2558 0c2e FFF7FEFF 		bl	Write_Data_Glcd
 2559              	.LVL322:
 385:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 2560              		.loc 1 385 0
 2561 0c32 4F20     		movs	r0, #79
 2562 0c34 FFF7FEFF 		bl	Write_Command_Glcd
 2563              	.LVL323:
 386:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 2564              		.loc 1 386 0
 2565 0c38 0020     		movs	r0, #0
 2566 0c3a FFF7FEFF 		bl	Write_Data_Glcd
 2567              	.LVL324:
 388:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 2568              		.loc 1 388 0
 2569 0c3e 2220     		movs	r0, #34
 2570 0c40 FFF7FEFF 		bl	Write_Command_Glcd
 2571              	.LVL325:
 389:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 2572              		.loc 1 389 0
 2573 0c44 FFF7DCF9 		bl	wr_dat_start
 2574              	.LVL326:
 2575 0c48 4FF49634 		mov	r4, #76800
 2576              	.LVL327:
 2577              	.L170:
 391:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 2578              		.loc 1 391 0 discriminator 2
 2579 0c4c 2846     		mov	r0, r5
 2580 0c4e FFF7EBF9 		bl	wr_dat_only
 2581              	.LVL328:
 390:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 2582              		.loc 1 390 0 discriminator 2
 2583 0c52 013C     		subs	r4, r4, #1
 2584 0c54 FAD1     		bne	.L170
 393:../Source Files/lpc_ssp_glcd.c **** }
 2585              		.loc 1 393 0
 2586 0c56 BDE83840 		pop	{r3, r4, r5, lr}
 392:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 2587              		.loc 1 392 0
 2588 0c5a FFF7DFB9 		b	wr_dat_stop
 2589              	.LVL329:
 2590              		.cfi_endproc
 2591              	.LFE68:
 2593              		.align	1
 2594              		.global	GLCD_Set_Loc
 2595              		.thumb
 2596              		.thumb_func
 2598              	GLCD_Set_Loc:
 2599              	.LFB59:
 155:../Source Files/lpc_ssp_glcd.c **** {
 2600              		.loc 1 155 0
 2601              		.cfi_startproc
 2602              		@ args = 0, pretend = 0, frame = 0
 2603              		@ frame_needed = 0, uses_anonymous_args = 0
 2604              	.LVL330:
 2605 0c5e 38B5     		push	{r3, r4, r5, lr}
 2606              	.LCFI22:
 2607              		.cfi_def_cfa_offset 16
 2608              		.cfi_offset 3, -16
 2609              		.cfi_offset 4, -12
 2610              		.cfi_offset 5, -8
 2611              		.cfi_offset 14, -4
 155:../Source Files/lpc_ssp_glcd.c **** {
 2612              		.loc 1 155 0
 2613 0c60 0C46     		mov	r4, r1
 2614 0c62 0546     		mov	r5, r0
 156:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 2615              		.loc 1 156 0
 2616 0c64 FFF7FEFF 		bl	GLCD_Window
 2617              	.LVL331:
 158:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 2618              		.loc 1 158 0
 2619 0c68 4E20     		movs	r0, #78
 2620 0c6a FFF7FEFF 		bl	Write_Command_Glcd
 2621              	.LVL332:
 159:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 2622              		.loc 1 159 0
 2623 0c6e 2846     		mov	r0, r5
 2624 0c70 FFF7FEFF 		bl	Write_Data_Glcd
 2625              	.LVL333:
 161:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 2626              		.loc 1 161 0
 2627 0c74 4F20     		movs	r0, #79
 2628 0c76 FFF7FEFF 		bl	Write_Command_Glcd
 2629              	.LVL334:
 162:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 2630              		.loc 1 162 0
 2631 0c7a 2046     		mov	r0, r4
 2632 0c7c FFF7FEFF 		bl	Write_Data_Glcd
 2633              	.LVL335:
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 2634              		.loc 1 164 0
 2635 0c80 2220     		movs	r0, #34
 165:../Source Files/lpc_ssp_glcd.c **** }
 2636              		.loc 1 165 0
 2637 0c82 BDE83840 		pop	{r3, r4, r5, lr}
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 2638              		.loc 1 164 0
 2639 0c86 FFF7FEBF 		b	Write_Command_Glcd
 2640              	.LVL336:
 2641              		.cfi_endproc
 2642              	.LFE59:
 2644              		.align	1
 2645              		.global	GLCD_Window_Fill
 2646              		.thumb
 2647              		.thumb_func
 2649              	GLCD_Window_Fill:
 2650              	.LFB75:
 589:../Source Files/lpc_ssp_glcd.c **** {
 2651              		.loc 1 589 0
 2652              		.cfi_startproc
 2653              		@ args = 4, pretend = 0, frame = 0
 2654              		@ frame_needed = 0, uses_anonymous_args = 0
 2655              	.LVL337:
 2656 0c8a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2657              	.LCFI23:
 2658              		.cfi_def_cfa_offset 24
 2659              		.cfi_offset 4, -24
 2660              		.cfi_offset 5, -20
 2661              		.cfi_offset 6, -16
 2662              		.cfi_offset 7, -12
 2663              		.cfi_offset 8, -8
 2664              		.cfi_offset 14, -4
 589:../Source Files/lpc_ssp_glcd.c **** {
 2665              		.loc 1 589 0
 2666 0c8e 1746     		mov	r7, r2
 2667 0c90 1E46     		mov	r6, r3
 2668 0c92 BDF81880 		ldrh	r8, [sp, #24]
 592:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 2669              		.loc 1 592 0
 2670 0c96 FFF7FEFF 		bl	GLCD_Set_Loc
 2671              	.LVL338:
 594:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 2672              		.loc 1 594 0
 2673 0c9a FFF7B1F9 		bl	wr_dat_start
 2674              	.LVL339:
 595:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2675              		.loc 1 595 0
 2676 0c9e 0024     		movs	r4, #0
 2677              	.LVL340:
 2678              	.L174:
 595:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2679              		.loc 1 595 0 is_stmt 0 discriminator 1
 2680 0ca0 B442     		cmp	r4, r6
 2681 0ca2 09D2     		bcs	.L178
 2682              	.L177:
 595:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2683              		.loc 1 595 0
 2684 0ca4 0025     		movs	r5, #0
 2685              	.L176:
 2686              	.LVL341:
 597:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2687              		.loc 1 597 0 is_stmt 1 discriminator 1
 2688 0ca6 BD42     		cmp	r5, r7
 2689 0ca8 04D2     		bcs	.L179
 2690              	.L175:
 599:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 2691              		.loc 1 599 0 discriminator 2
 2692 0caa 4046     		mov	r0, r8
 2693 0cac FFF7BCF9 		bl	wr_dat_only
 2694              	.LVL342:
 597:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2695              		.loc 1 597 0 discriminator 2
 2696 0cb0 0135     		adds	r5, r5, #1
 2697              	.LVL343:
 2698 0cb2 F8E7     		b	.L176
 2699              	.L179:
 595:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2700              		.loc 1 595 0
 2701 0cb4 0134     		adds	r4, r4, #1
 2702              	.LVL344:
 2703 0cb6 F3E7     		b	.L174
 2704              	.LVL345:
 2705              	.L178:
 603:../Source Files/lpc_ssp_glcd.c **** }
 2706              		.loc 1 603 0
 2707 0cb8 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 602:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 2708              		.loc 1 602 0
 2709 0cbc FFF7AEB9 		b	wr_dat_stop
 2710              	.LVL346:
 2711              		.cfi_endproc
 2712              	.LFE75:
 2714              		.align	1
 2715              		.global	GLCD_Rect
 2716              		.thumb
 2717              		.thumb_func
 2719              	GLCD_Rect:
 2720              	.LFB77:
 689:../Source Files/lpc_ssp_glcd.c **** {
 2721              		.loc 1 689 0
 2722              		.cfi_startproc
 2723              		@ args = 4, pretend = 0, frame = 0
 2724              		@ frame_needed = 0, uses_anonymous_args = 0
 2725              	.LVL347:
 2726 0cc0 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 2727              	.LCFI24:
 2728              		.cfi_def_cfa_offset 32
 2729              		.cfi_offset 0, -32
 2730              		.cfi_offset 1, -28
 2731              		.cfi_offset 4, -24
 2732              		.cfi_offset 5, -20
 2733              		.cfi_offset 6, -16
 2734              		.cfi_offset 7, -12
 2735              		.cfi_offset 8, -8
 2736              		.cfi_offset 14, -4
 689:../Source Files/lpc_ssp_glcd.c **** {
 2737              		.loc 1 689 0
 2738 0cc4 0C46     		mov	r4, r1
 2739 0cc6 0546     		mov	r5, r0
 2740 0cc8 9846     		mov	r8, r3
 2741 0cca BDF82010 		ldrh	r1, [sp, #32]
 2742              	.LVL348:
 692:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 2743              		.loc 1 692 0
 2744 0cce 002A     		cmp	r2, #0
 2745 0cd0 41D0     		beq	.L181
 694:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 2746              		.loc 1 694 0
 2747 0cd2 B0F800E0 		ldrh	lr, [r0, #0]
 2748 0cd6 2288     		ldrh	r2, [r4, #0]
 2749              	.LVL349:
 2750 0cd8 0FFA8EF3 		sxth	r3, lr
 2751              	.LVL350:
 2752 0cdc 10B2     		sxth	r0, r2
 2753              	.LVL351:
 2754 0cde 6788     		ldrh	r7, [r4, #2]
 2755 0ce0 6E88     		ldrh	r6, [r5, #2]
 2756 0ce2 9842     		cmp	r0, r3
 696:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 2757              		.loc 1 696 0
 2758 0ce4 38B2     		sxth	r0, r7
 2759 0ce6 33B2     		sxth	r3, r6
 694:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 2760              		.loc 1 694 0
 2761 0ce8 13DD     		ble	.L182
 696:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 2762              		.loc 1 696 0
 2763 0cea 9842     		cmp	r0, r3
 2764 0cec 1FFA8EFC 		uxth	ip, lr
 2765 0cf0 07DD     		ble	.L183
 2766              	.LVL352:
 699:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 2767              		.loc 1 699 0
 2768 0cf2 B6B2     		uxth	r6, r6
 2769              	.LVL353:
 698:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 2770              		.loc 1 698 0
 2771 0cf4 013A     		subs	r2, r2, #1
 2772              	.LVL354:
 700:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 2773              		.loc 1 700 0
 2774 0cf6 0CF10100 		add	r0, ip, #1
 2775 0cfa 731C     		adds	r3, r6, #1
 2776 0cfc CCEB0202 		rsb	r2, ip, r2
 2777              	.LVL355:
 2778 0d00 11E0     		b	.L190
 2779              	.LVL356:
 2780              	.L183:
 705:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 2781              		.loc 1 705 0
 2782 0d02 BFB2     		uxth	r7, r7
 2783              	.LVL357:
 704:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 2784              		.loc 1 704 0
 2785 0d04 013A     		subs	r2, r2, #1
 2786              	.LVL358:
 706:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 2787              		.loc 1 706 0
 2788 0d06 0CF10100 		add	r0, ip, #1
 2789 0d0a 7B1C     		adds	r3, r7, #1
 2790 0d0c CCEB0202 		rsb	r2, ip, r2
 2791 0d10 18E0     		b	.L188
 2792              	.LVL359:
 2793              	.L182:
 711:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 2794              		.loc 1 711 0
 2795 0d12 9842     		cmp	r0, r3
 2796 0d14 92B2     		uxth	r2, r2
 2797 0d16 0EDD     		ble	.L184
 2798              	.LVL360:
 714:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 2799              		.loc 1 714 0
 2800 0d18 B6B2     		uxth	r6, r6
 2801              	.LVL361:
 713:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 2802              		.loc 1 713 0
 2803 0d1a 0EF1FF3E 		add	lr, lr, #-1
 2804              	.LVL362:
 715:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 2805              		.loc 1 715 0
 2806 0d1e 501C     		adds	r0, r2, #1
 2807 0d20 731C     		adds	r3, r6, #1
 2808 0d22 C2EB0E02 		rsb	r2, r2, lr
 2809              	.LVL363:
 2810              	.L190:
 714:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 2811              		.loc 1 714 0
 2812 0d26 013F     		subs	r7, r7, #1
 715:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 2813              		.loc 1 715 0
 2814 0d28 BE1B     		subs	r6, r7, r6
 2815 0d2a 0091     		str	r1, [sp, #0]
 2816 0d2c 80B2     		uxth	r0, r0
 2817 0d2e 99B2     		uxth	r1, r3
 2818 0d30 92B2     		uxth	r2, r2
 2819 0d32 B3B2     		uxth	r3, r6
 2820 0d34 0DE0     		b	.L189
 2821              	.L184:
 2822              	.LVL364:
 720:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 2823              		.loc 1 720 0
 2824 0d36 BFB2     		uxth	r7, r7
 2825              	.LVL365:
 719:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 2826              		.loc 1 719 0
 2827 0d38 0EF1FF3C 		add	ip, lr, #-1
 721:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 2828              		.loc 1 721 0
 2829 0d3c 501C     		adds	r0, r2, #1
 2830 0d3e 7B1C     		adds	r3, r7, #1
 2831 0d40 C2EB0C02 		rsb	r2, r2, ip
 2832              	.LVL366:
 2833              	.L188:
 720:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 2834              		.loc 1 720 0
 2835 0d44 013E     		subs	r6, r6, #1
 721:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 2836              		.loc 1 721 0
 2837 0d46 F71B     		subs	r7, r6, r7
 2838 0d48 0091     		str	r1, [sp, #0]
 2839 0d4a 80B2     		uxth	r0, r0
 2840 0d4c 99B2     		uxth	r1, r3
 2841 0d4e 92B2     		uxth	r2, r2
 2842 0d50 BBB2     		uxth	r3, r7
 2843              	.L189:
 2844 0d52 FFF7FEFF 		bl	GLCD_Window_Fill
 2845              	.LVL367:
 2846              	.L181:
 728:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 2847              		.loc 1 728 0
 2848 0d56 B5F90210 		ldrsh	r1, [r5, #2]
 2849 0d5a B5F90000 		ldrsh	r0, [r5, #0]
 2850 0d5e B4F90020 		ldrsh	r2, [r4, #0]
 2851 0d62 0B46     		mov	r3, r1
 2852 0d64 CDF80080 		str	r8, [sp, #0]
 2853 0d68 FFF7FEFF 		bl	GLCD_Line
 2854              	.LVL368:
 729:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 2855              		.loc 1 729 0
 2856 0d6c B4F90210 		ldrsh	r1, [r4, #2]
 2857 0d70 B5F90000 		ldrsh	r0, [r5, #0]
 2858 0d74 B4F90020 		ldrsh	r2, [r4, #0]
 2859 0d78 0B46     		mov	r3, r1
 2860 0d7a CDF80080 		str	r8, [sp, #0]
 2861 0d7e FFF7FEFF 		bl	GLCD_Line
 2862              	.LVL369:
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 2863              		.loc 1 730 0
 2864 0d82 B5F90000 		ldrsh	r0, [r5, #0]
 2865 0d86 B5F90210 		ldrsh	r1, [r5, #2]
 2866 0d8a B4F90230 		ldrsh	r3, [r4, #2]
 2867 0d8e 0246     		mov	r2, r0
 2868 0d90 CDF80080 		str	r8, [sp, #0]
 2869 0d94 FFF7FEFF 		bl	GLCD_Line
 2870              	.LVL370:
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2871              		.loc 1 731 0
 2872 0d98 B4F90000 		ldrsh	r0, [r4, #0]
 2873 0d9c B5F90210 		ldrsh	r1, [r5, #2]
 2874 0da0 B4F90230 		ldrsh	r3, [r4, #2]
 2875 0da4 0246     		mov	r2, r0
 2876 0da6 CDF82080 		str	r8, [sp, #32]
 733:../Source Files/lpc_ssp_glcd.c **** }
 2877              		.loc 1 733 0
 2878 0daa 02B0     		add	sp, sp, #8
 2879 0dac BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 2880              		.loc 1 731 0
 2881 0db0 FFF7FEBF 		b	GLCD_Line
 2882              	.LVL371:
 2883              		.cfi_endproc
 2884              	.LFE77:
 2886              		.align	1
 2887              		.global	GLCD_Bitmap
 2888              		.thumb
 2889              		.thumb_func
 2891              	GLCD_Bitmap:
 2892              	.LFB74:
 558:../Source Files/lpc_ssp_glcd.c **** {
 2893              		.loc 1 558 0
 2894              		.cfi_startproc
 2895              		@ args = 4, pretend = 0, frame = 0
 2896              		@ frame_needed = 0, uses_anonymous_args = 0
 2897              	.LVL372:
 2898 0db4 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 2899              	.LCFI25:
 2900              		.cfi_def_cfa_offset 32
 2901              		.cfi_offset 4, -32
 2902              		.cfi_offset 5, -28
 2903              		.cfi_offset 6, -24
 2904              		.cfi_offset 7, -20
 2905              		.cfi_offset 8, -16
 2906              		.cfi_offset 9, -12
 2907              		.cfi_offset 10, -8
 2908              		.cfi_offset 14, -4
 558:../Source Files/lpc_ssp_glcd.c **** {
 2909              		.loc 1 558 0
 2910 0db8 DDF82080 		ldr	r8, [sp, #32]
 2911 0dbc 1746     		mov	r7, r2
 2912 0dbe 9946     		mov	r9, r3
 561:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 2913              		.loc 1 561 0
 2914 0dc0 FFF7FEFF 		bl	GLCD_Set_Loc
 2915              	.LVL373:
 563:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 2916              		.loc 1 563 0
 2917 0dc4 FFF71CF9 		bl	wr_dat_start
 2918              	.LVL374:
 564:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 2919              		.loc 1 564 0
 2920 0dc8 1025     		movs	r5, #16
 565:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2921              		.loc 1 565 0
 2922 0dca 0026     		movs	r6, #0
 2923              	.LVL375:
 2924              	.L192:
 565:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2925              		.loc 1 565 0 is_stmt 0 discriminator 1
 2926 0dcc 4E45     		cmp	r6, r9
 2927 0dce 0DD2     		bcs	.L194
 557:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 2928              		.loc 1 557 0 is_stmt 1
 2929 0dd0 08EB450A 		add	sl, r8, r5, lsl #1
 2930 0dd4 0024     		movs	r4, #0
 2931              	.LVL376:
 2932              	.L195:
 567:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2933              		.loc 1 567 0 discriminator 1
 2934 0dd6 BC42     		cmp	r4, r7
 2935 0dd8 05D2     		bcs	.L196
 2936              	.L193:
 569:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 2937              		.loc 1 569 0 discriminator 2
 2938 0dda 3AF81400 		ldrh	r0, [sl, r4, lsl #1]
 2939 0dde FFF723F9 		bl	wr_dat_only
 2940              	.LVL377:
 567:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 2941              		.loc 1 567 0 discriminator 2
 2942 0de2 0134     		adds	r4, r4, #1
 2943              	.LVL378:
 2944 0de4 F7E7     		b	.L195
 2945              	.L196:
 557:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 2946              		.loc 1 557 0
 2947 0de6 ED19     		adds	r5, r5, r7
 565:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 2948              		.loc 1 565 0
 2949 0de8 0136     		adds	r6, r6, #1
 2950              	.LVL379:
 2951 0dea EFE7     		b	.L192
 2952              	.LVL380:
 2953              	.L194:
 573:../Source Files/lpc_ssp_glcd.c **** }
 2954              		.loc 1 573 0
 2955 0dec BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 572:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 2956              		.loc 1 572 0
 2957 0df0 FFF714B9 		b	wr_dat_stop
 2958              	.LVL381:
 2959              		.cfi_endproc
 2960              	.LFE74:
 2962              		.align	1
 2963              		.global	GLCD_Display_Home
 2964              		.thumb
 2965              		.thumb_func
 2967              	GLCD_Display_Home:
 2968              	.LFB60:
 174:../Source Files/lpc_ssp_glcd.c **** {
 2969              		.loc 1 174 0
 2970              		.cfi_startproc
 2971              		@ args = 0, pretend = 0, frame = 0
 2972              		@ frame_needed = 0, uses_anonymous_args = 0
 2973              		@ link register save eliminated.
 175:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 2974              		.loc 1 175 0
 2975 0df4 0020     		movs	r0, #0
 2976 0df6 0146     		mov	r1, r0
 2977 0df8 4FF4A072 		mov	r2, #320
 2978 0dfc F023     		movs	r3, #240
 176:../Source Files/lpc_ssp_glcd.c **** }
 2979              		.loc 1 176 0
 175:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 2980              		.loc 1 175 0
 2981 0dfe FFF7FEBF 		b	GLCD_Set_Loc
 2982              	.LVL382:
 2983              		.cfi_endproc
 2984              	.LFE60:
 2986              		.align	1
 2987              		.global	GLCD_Driver_OutCtrl
 2988              		.thumb
 2989              		.thumb_func
 2991              	GLCD_Driver_OutCtrl:
 2992              	.LFB57:
  94:../Source Files/lpc_ssp_glcd.c **** {
 2993              		.loc 1 94 0
 2994              		.cfi_startproc
 2995              		@ args = 0, pretend = 0, frame = 0
 2996              		@ frame_needed = 0, uses_anonymous_args = 0
 2997              	.LVL383:
 2998 0e02 10B5     		push	{r4, lr}
 2999              	.LCFI26:
 3000              		.cfi_def_cfa_offset 8
 3001              		.cfi_offset 4, -8
 3002              		.cfi_offset 14, -4
  94:../Source Files/lpc_ssp_glcd.c **** {
 3003              		.loc 1 94 0
 3004 0e04 0446     		mov	r4, r0
  95:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
 3005              		.loc 1 95 0
 3006 0e06 0120     		movs	r0, #1
 3007              	.LVL384:
 3008 0e08 FFF7FEFF 		bl	Write_Command_Glcd
 3009              	.LVL385:
  97:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
 3010              		.loc 1 97 0
 3011 0e0c 032C     		cmp	r4, #3
 3012 0e0e 12D8     		bhi	.L198
 3013 0e10 DFE804F0 		tbb	[pc, r4]
 3014              	.L204:
 3015 0e14 02       		.byte	(.L200-.L204)/2
 3016 0e15 05       		.byte	(.L201-.L204)/2
 3017 0e16 08       		.byte	(.L202-.L204)/2
 3018 0e17 0B       		.byte	(.L203-.L204)/2
 3019              		.align	1
 3020              	.L200:
 100:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 3021              		.loc 1 100 0
 3022 0e18 47F2EF20 		movw	r0, #29423
 3023 0e1c 07E0     		b	.L205
 3024              	.L201:
 104:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 3025              		.loc 1 104 0
 3026 0e1e 47F2EF00 		movw	r0, #28911
 3027 0e22 04E0     		b	.L205
 3028              	.L202:
 108:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 3029              		.loc 1 108 0
 3030 0e24 43F2EF20 		movw	r0, #13039
 3031 0e28 01E0     		b	.L205
 3032              	.L203:
 112:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 3033              		.loc 1 112 0
 3034 0e2a 43F2EF00 		movw	r0, #12527
 3035              	.L205:
 118:../Source Files/lpc_ssp_glcd.c **** }
 3036              		.loc 1 118 0
 3037 0e2e BDE81040 		pop	{r4, lr}
 112:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 3038              		.loc 1 112 0
 3039 0e32 FFF7FEBF 		b	Write_Data_Glcd
 3040              	.LVL386:
 3041              	.L198:
 3042 0e36 10BD     		pop	{r4, pc}
 3043              		.cfi_endproc
 3044              	.LFE57:
 3046              		.align	1
 3047              		.global	GLCD_Init
 3048              		.thumb
 3049              		.thumb_func
 3051              	GLCD_Init:
 3052              	.LFB61:
 185:../Source Files/lpc_ssp_glcd.c **** {
 3053              		.loc 1 185 0
 3054              		.cfi_startproc
 3055              		@ args = 0, pretend = 0, frame = 0
 3056              		@ frame_needed = 0, uses_anonymous_args = 0
 186:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 3057              		.loc 1 186 0
 3058 0e38 0121     		movs	r1, #1
 185:../Source Files/lpc_ssp_glcd.c **** {
 3059              		.loc 1 185 0
 3060 0e3a 10B5     		push	{r4, lr}
 3061              	.LCFI27:
 3062              		.cfi_def_cfa_offset 8
 3063              		.cfi_offset 4, -8
 3064              		.cfi_offset 14, -4
 186:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 3065              		.loc 1 186 0
 3066 0e3c 0220     		movs	r0, #2
 3067 0e3e 0A46     		mov	r2, r1
 3068 0e40 FFF7FEFF 		bl	GPIO_SetDir
 3069              	.LVL387:
 187:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 3070              		.loc 1 187 0
 3071 0e44 0020     		movs	r0, #0
 3072 0e46 2021     		movs	r1, #32
 3073 0e48 0122     		movs	r2, #1
 3074 0e4a FFF7FEFF 		bl	GPIO_SetDir
 3075              	.LVL388:
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 3076              		.loc 1 188 0
 3077 0e4e 4FF48071 		mov	r1, #256
 3078 0e52 0122     		movs	r2, #1
 3079 0e54 0220     		movs	r0, #2
 3080 0e56 FFF7FEFF 		bl	GPIO_SetDir
 3081              	.LVL389:
 190:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 3082              		.loc 1 190 0
 3083 0e5a 0220     		movs	r0, #2
 3084 0e5c FFF7FEFF 		bl	delay_ms
 3085              	.LVL390:
 191:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 3086              		.loc 1 191 0
 3087 0e60 FFF7FEFF 		bl	GLCD_Reset
 3088              	.LVL391:
 192:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 3089              		.loc 1 192 0
 3090 0e64 0120     		movs	r0, #1
 3091 0e66 FFF7FEFF 		bl	GLCD_Backlight
 3092              	.LVL392:
 193:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 3093              		.loc 1 193 0
 3094 0e6a 0220     		movs	r0, #2
 3095 0e6c FFF7FEFF 		bl	delay_ms
 3096              	.LVL393:
 195:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 3097              		.loc 1 195 0
 3098 0e70 2820     		movs	r0, #40
 3099 0e72 FFF7FEFF 		bl	Write_Command_Glcd
 3100              	.LVL394:
 196:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 3101              		.loc 1 196 0
 3102 0e76 0620     		movs	r0, #6
 3103 0e78 FFF7FEFF 		bl	Write_Data_Glcd
 3104              	.LVL395:
 198:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 3105              		.loc 1 198 0
 3106 0e7c 0020     		movs	r0, #0
 3107 0e7e FFF7FEFF 		bl	Write_Command_Glcd
 3108              	.LVL396:
 199:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 3109              		.loc 1 199 0
 3110 0e82 0120     		movs	r0, #1
 3111 0e84 FFF7FEFF 		bl	Write_Data_Glcd
 3112              	.LVL397:
 201:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 3113              		.loc 1 201 0
 3114 0e88 1020     		movs	r0, #16
 3115 0e8a FFF7FEFF 		bl	Write_Command_Glcd
 3116              	.LVL398:
 202:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 3117              		.loc 1 202 0
 3118 0e8e 0020     		movs	r0, #0
 3119 0e90 FFF7FEFF 		bl	Write_Data_Glcd
 3120              	.LVL399:
 204:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 3121              		.loc 1 204 0
 3122 0e94 0020     		movs	r0, #0
 3123 0e96 FFF7FEFF 		bl	GLCD_Driver_OutCtrl
 3124              	.LVL400:
 206:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 3125              		.loc 1 206 0
 3126 0e9a 0220     		movs	r0, #2
 3127 0e9c FFF7FEFF 		bl	Write_Command_Glcd
 3128              	.LVL401:
 207:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 3129              		.loc 1 207 0
 3130 0ea0 4FF4C060 		mov	r0, #1536
 3131 0ea4 FFF7FEFF 		bl	Write_Data_Glcd
 3132              	.LVL402:
 209:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 3133              		.loc 1 209 0
 3134 0ea8 0320     		movs	r0, #3
 3135 0eaa FFF7FEFF 		bl	Write_Command_Glcd
 3136              	.LVL403:
 210:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 3137              		.loc 1 210 0
 3138 0eae 46F63820 		movw	r0, #27192
 3139 0eb2 FFF7FEFF 		bl	Write_Data_Glcd
 3140              	.LVL404:
 212:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 3141              		.loc 1 212 0
 3142 0eb6 1120     		movs	r0, #17
 3143 0eb8 FFF7FEFF 		bl	Write_Command_Glcd
 3144              	.LVL405:
 213:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 3145              		.loc 1 213 0
 3146 0ebc 46F67000 		movw	r0, #26736
 3147 0ec0 FFF7FEFF 		bl	Write_Data_Glcd
 3148              	.LVL406:
 215:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 3149              		.loc 1 215 0
 3150 0ec4 0F20     		movs	r0, #15
 3151 0ec6 FFF7FEFF 		bl	Write_Command_Glcd
 3152              	.LVL407:
 216:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 3153              		.loc 1 216 0
 3154 0eca 0020     		movs	r0, #0
 3155 0ecc FFF7FEFF 		bl	Write_Data_Glcd
 3156              	.LVL408:
 218:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 3157              		.loc 1 218 0
 3158 0ed0 0B20     		movs	r0, #11
 3159 0ed2 FFF7FEFF 		bl	Write_Command_Glcd
 3160              	.LVL409:
 219:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 3161              		.loc 1 219 0
 3162 0ed6 45F20830 		movw	r0, #21256
 3163 0eda FFF7FEFF 		bl	Write_Data_Glcd
 3164              	.LVL410:
 221:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 3165              		.loc 1 221 0
 3166 0ede 0C20     		movs	r0, #12
 3167 0ee0 FFF7FEFF 		bl	Write_Command_Glcd
 3168              	.LVL411:
 222:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 3169              		.loc 1 222 0
 3170 0ee4 0320     		movs	r0, #3
 3171 0ee6 FFF7FEFF 		bl	Write_Data_Glcd
 3172              	.LVL412:
 224:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 3173              		.loc 1 224 0
 3174 0eea 0D20     		movs	r0, #13
 3175 0eec FFF7FEFF 		bl	Write_Command_Glcd
 3176              	.LVL413:
 225:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 3177              		.loc 1 225 0
 3178 0ef0 0A20     		movs	r0, #10
 3179 0ef2 FFF7FEFF 		bl	Write_Data_Glcd
 3180              	.LVL414:
 227:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 3181              		.loc 1 227 0
 3182 0ef6 0E20     		movs	r0, #14
 3183 0ef8 FFF7FEFF 		bl	Write_Command_Glcd
 3184              	.LVL415:
 228:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 3185              		.loc 1 228 0
 3186 0efc 4FF43850 		mov	r0, #11776
 3187 0f00 FFF7FEFF 		bl	Write_Data_Glcd
 3188              	.LVL416:
 230:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 3189              		.loc 1 230 0
 3190 0f04 1E20     		movs	r0, #30
 3191 0f06 FFF7FEFF 		bl	Write_Command_Glcd
 3192              	.LVL417:
 231:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 3193              		.loc 1 231 0
 3194 0f0a BE20     		movs	r0, #190
 3195 0f0c FFF7FEFF 		bl	Write_Data_Glcd
 3196              	.LVL418:
 233:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 3197              		.loc 1 233 0
 3198 0f10 2520     		movs	r0, #37
 3199 0f12 FFF7FEFF 		bl	Write_Command_Glcd
 3200              	.LVL419:
 234:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 3201              		.loc 1 234 0
 3202 0f16 4FF40040 		mov	r0, #32768
 3203 0f1a FFF7FEFF 		bl	Write_Data_Glcd
 3204              	.LVL420:
 236:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 3205              		.loc 1 236 0
 3206 0f1e 2620     		movs	r0, #38
 3207 0f20 FFF7FEFF 		bl	Write_Command_Glcd
 3208              	.LVL421:
 237:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 3209              		.loc 1 237 0
 3210 0f24 4FF4F040 		mov	r0, #30720
 3211 0f28 FFF7FEFF 		bl	Write_Data_Glcd
 3212              	.LVL422:
 239:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 3213              		.loc 1 239 0
 3214 0f2c 4E20     		movs	r0, #78
 3215 0f2e FFF7FEFF 		bl	Write_Command_Glcd
 3216              	.LVL423:
 240:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 3217              		.loc 1 240 0
 3218 0f32 0020     		movs	r0, #0
 3219 0f34 FFF7FEFF 		bl	Write_Data_Glcd
 3220              	.LVL424:
 242:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 3221              		.loc 1 242 0
 3222 0f38 4F20     		movs	r0, #79
 3223 0f3a FFF7FEFF 		bl	Write_Command_Glcd
 3224              	.LVL425:
 243:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 3225              		.loc 1 243 0
 3226 0f3e 0020     		movs	r0, #0
 3227 0f40 FFF7FEFF 		bl	Write_Data_Glcd
 3228              	.LVL426:
 245:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 3229              		.loc 1 245 0
 3230 0f44 1220     		movs	r0, #18
 3231 0f46 FFF7FEFF 		bl	Write_Command_Glcd
 3232              	.LVL427:
 246:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 3233              		.loc 1 246 0
 3234 0f4a 40F6D900 		movw	r0, #2265
 3235 0f4e FFF7FEFF 		bl	Write_Data_Glcd
 3236              	.LVL428:
 249:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 3237              		.loc 1 249 0
 3238 0f52 3020     		movs	r0, #48
 3239 0f54 FFF7FEFF 		bl	Write_Command_Glcd
 3240              	.LVL429:
 250:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 3241              		.loc 1 250 0
 3242 0f58 0020     		movs	r0, #0
 3243 0f5a FFF7FEFF 		bl	Write_Data_Glcd
 3244              	.LVL430:
 252:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 3245              		.loc 1 252 0
 3246 0f5e 3120     		movs	r0, #49
 3247 0f60 FFF7FEFF 		bl	Write_Command_Glcd
 3248              	.LVL431:
 253:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 3249              		.loc 1 253 0
 3250 0f64 4FF48270 		mov	r0, #260
 3251 0f68 FFF7FEFF 		bl	Write_Data_Glcd
 3252              	.LVL432:
 255:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 3253              		.loc 1 255 0
 3254 0f6c 3220     		movs	r0, #50
 3255 0f6e FFF7FEFF 		bl	Write_Command_Glcd
 3256              	.LVL433:
 256:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 3257              		.loc 1 256 0
 3258 0f72 4FF48070 		mov	r0, #256
 3259 0f76 FFF7FEFF 		bl	Write_Data_Glcd
 3260              	.LVL434:
 259:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3261              		.loc 1 259 0
 3262 0f7a 40F20534 		movw	r4, #773
 258:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 3263              		.loc 1 258 0
 3264 0f7e 3320     		movs	r0, #51
 3265 0f80 FFF7FEFF 		bl	Write_Command_Glcd
 3266              	.LVL435:
 259:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3267              		.loc 1 259 0
 3268 0f84 2046     		mov	r0, r4
 3269 0f86 FFF7FEFF 		bl	Write_Data_Glcd
 3270              	.LVL436:
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 3271              		.loc 1 261 0
 3272 0f8a 3420     		movs	r0, #52
 3273 0f8c FFF7FEFF 		bl	Write_Command_Glcd
 3274              	.LVL437:
 262:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 3275              		.loc 1 262 0
 3276 0f90 40F20550 		movw	r0, #1285
 3277 0f94 FFF7FEFF 		bl	Write_Data_Glcd
 3278              	.LVL438:
 264:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 3279              		.loc 1 264 0
 3280 0f98 3520     		movs	r0, #53
 3281 0f9a FFF7FEFF 		bl	Write_Command_Glcd
 3282              	.LVL439:
 265:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 3283              		.loc 1 265 0
 3284 0f9e 2046     		mov	r0, r4
 3285 0fa0 FFF7FEFF 		bl	Write_Data_Glcd
 3286              	.LVL440:
 267:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 3287              		.loc 1 267 0
 3288 0fa4 3620     		movs	r0, #54
 3289 0fa6 FFF7FEFF 		bl	Write_Command_Glcd
 3290              	.LVL441:
 268:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 3291              		.loc 1 268 0
 3292 0faa 40F20770 		movw	r0, #1799
 3293 0fae FFF7FEFF 		bl	Write_Data_Glcd
 3294              	.LVL442:
 270:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 3295              		.loc 1 270 0
 3296 0fb2 3720     		movs	r0, #55
 3297 0fb4 FFF7FEFF 		bl	Write_Command_Glcd
 3298              	.LVL443:
 271:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 3299              		.loc 1 271 0
 3300 0fb8 4FF44070 		mov	r0, #768
 3301 0fbc FFF7FEFF 		bl	Write_Data_Glcd
 3302              	.LVL444:
 273:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 3303              		.loc 1 273 0
 3304 0fc0 3A20     		movs	r0, #58
 3305 0fc2 FFF7FEFF 		bl	Write_Command_Glcd
 3306              	.LVL445:
 274:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 3307              		.loc 1 274 0
 3308 0fc6 4FF49050 		mov	r0, #4608
 3309 0fca FFF7FEFF 		bl	Write_Data_Glcd
 3310              	.LVL446:
 276:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 3311              		.loc 1 276 0
 3312 0fce 3B20     		movs	r0, #59
 3313 0fd0 FFF7FEFF 		bl	Write_Command_Glcd
 3314              	.LVL447:
 277:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 3315              		.loc 1 277 0
 3316 0fd4 4FF40060 		mov	r0, #2048
 3317 0fd8 FFF7FEFF 		bl	Write_Data_Glcd
 3318              	.LVL448:
 279:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 3319              		.loc 1 279 0
 3320 0fdc 0720     		movs	r0, #7
 3321 0fde FFF7FEFF 		bl	Write_Command_Glcd
 3322              	.LVL449:
 280:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 3323              		.loc 1 280 0
 3324 0fe2 3320     		movs	r0, #51
 3325 0fe4 FFF7FEFF 		bl	Write_Data_Glcd
 3326              	.LVL450:
 282:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 3327              		.loc 1 282 0
 3328 0fe8 0520     		movs	r0, #5
 3329 0fea FFF7FEFF 		bl	delay_ms
 3330              	.LVL451:
 284:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 3331              		.loc 1 284 0
 3332 0fee 2220     		movs	r0, #34
 285:../Source Files/lpc_ssp_glcd.c **** }
 3333              		.loc 1 285 0
 3334 0ff0 BDE81040 		pop	{r4, lr}
 284:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 3335              		.loc 1 284 0
 3336 0ff4 FFF7FEBF 		b	Write_Command_Glcd
 3337              	.LVL452:
 3338              		.cfi_endproc
 3339              	.LFE61:
 3341              		.global	Font_24x16
 3342              		.comm	I2C_Rx_Buf,64,1
 3343              		.comm	I2C_Tx_Buf,64,1
 3344              		.comm	Rx_Buf1,64,1
 3345              		.comm	Tx_Buf1,64,1
 3346              		.comm	TxIntStat,1,1
 3347              		.comm	rb,528,4
 3348              		.comm	EscFlag,2,2
 3349              		.section	.rodata
 3350              		.align	1
 3351              		.set	.LANCHOR1,. + 0
 3354              	Font_24x16:
 3355 0000 0000     		.short	0
 3356 0002 0000     		.short	0
 3357 0004 0000     		.short	0
 3358 0006 0000     		.short	0
 3359 0008 0000     		.short	0
 3360 000a 0000     		.short	0
 3361 000c 0000     		.short	0
 3362 000e 0000     		.short	0
 3363 0010 0000     		.short	0
 3364 0012 0000     		.short	0
 3365 0014 0000     		.short	0
 3366 0016 0000     		.short	0
 3367 0018 0000     		.short	0
 3368 001a 0000     		.short	0
 3369 001c 0000     		.short	0
 3370 001e 0000     		.short	0
 3371 0020 0000     		.short	0
 3372 0022 0000     		.short	0
 3373 0024 0000     		.short	0
 3374 0026 0000     		.short	0
 3375 0028 0000     		.short	0
 3376 002a 0000     		.short	0
 3377 002c 0000     		.short	0
 3378 002e 0000     		.short	0
 3379 0030 0000     		.short	0
 3380 0032 8001     		.short	384
 3381 0034 8001     		.short	384
 3382 0036 8001     		.short	384
 3383 0038 8001     		.short	384
 3384 003a 8001     		.short	384
 3385 003c 8001     		.short	384
 3386 003e 8001     		.short	384
 3387 0040 8001     		.short	384
 3388 0042 8001     		.short	384
 3389 0044 8001     		.short	384
 3390 0046 8001     		.short	384
 3391 0048 8001     		.short	384
 3392 004a 8001     		.short	384
 3393 004c 0000     		.short	0
 3394 004e 0000     		.short	0
 3395 0050 8001     		.short	384
 3396 0052 8001     		.short	384
 3397 0054 0000     		.short	0
 3398 0056 0000     		.short	0
 3399 0058 0000     		.short	0
 3400 005a 0000     		.short	0
 3401 005c 0000     		.short	0
 3402 005e 0000     		.short	0
 3403 0060 0000     		.short	0
 3404 0062 0000     		.short	0
 3405 0064 CC00     		.short	204
 3406 0066 CC00     		.short	204
 3407 0068 CC00     		.short	204
 3408 006a CC00     		.short	204
 3409 006c CC00     		.short	204
 3410 006e CC00     		.short	204
 3411 0070 0000     		.short	0
 3412 0072 0000     		.short	0
 3413 0074 0000     		.short	0
 3414 0076 0000     		.short	0
 3415 0078 0000     		.short	0
 3416 007a 0000     		.short	0
 3417 007c 0000     		.short	0
 3418 007e 0000     		.short	0
 3419 0080 0000     		.short	0
 3420 0082 0000     		.short	0
 3421 0084 0000     		.short	0
 3422 0086 0000     		.short	0
 3423 0088 0000     		.short	0
 3424 008a 0000     		.short	0
 3425 008c 0000     		.short	0
 3426 008e 0000     		.short	0
 3427 0090 0000     		.short	0
 3428 0092 0000     		.short	0
 3429 0094 0000     		.short	0
 3430 0096 0000     		.short	0
 3431 0098 0000     		.short	0
 3432 009a 0000     		.short	0
 3433 009c 600C     		.short	3168
 3434 009e 600C     		.short	3168
 3435 00a0 600C     		.short	3168
 3436 00a2 3006     		.short	1584
 3437 00a4 3006     		.short	1584
 3438 00a6 FE1F     		.short	8190
 3439 00a8 FE1F     		.short	8190
 3440 00aa 3006     		.short	1584
 3441 00ac 3807     		.short	1848
 3442 00ae 1803     		.short	792
 3443 00b0 FE1F     		.short	8190
 3444 00b2 FE1F     		.short	8190
 3445 00b4 1803     		.short	792
 3446 00b6 1803     		.short	792
 3447 00b8 8C01     		.short	396
 3448 00ba 8C01     		.short	396
 3449 00bc 8C01     		.short	396
 3450 00be 0000     		.short	0
 3451 00c0 0000     		.short	0
 3452 00c2 8000     		.short	128
 3453 00c4 E003     		.short	992
 3454 00c6 F80F     		.short	4088
 3455 00c8 9C0E     		.short	3740
 3456 00ca 8C1C     		.short	7308
 3457 00cc 8C18     		.short	6284
 3458 00ce 8C00     		.short	140
 3459 00d0 9800     		.short	152
 3460 00d2 F801     		.short	504
 3461 00d4 E007     		.short	2016
 3462 00d6 800E     		.short	3712
 3463 00d8 801C     		.short	7296
 3464 00da 8C18     		.short	6284
 3465 00dc 8C18     		.short	6284
 3466 00de 9C18     		.short	6300
 3467 00e0 B80C     		.short	3256
 3468 00e2 F00F     		.short	4080
 3469 00e4 E003     		.short	992
 3470 00e6 8000     		.short	128
 3471 00e8 8000     		.short	128
 3472 00ea 0000     		.short	0
 3473 00ec 0000     		.short	0
 3474 00ee 0000     		.short	0
 3475 00f0 0000     		.short	0
 3476 00f2 0000     		.short	0
 3477 00f4 0000     		.short	0
 3478 00f6 0E18     		.short	6158
 3479 00f8 1B0C     		.short	3099
 3480 00fa 110C     		.short	3089
 3481 00fc 1106     		.short	1553
 3482 00fe 1106     		.short	1553
 3483 0100 1103     		.short	785
 3484 0102 1103     		.short	785
 3485 0104 9B01     		.short	411
 3486 0106 8E01     		.short	398
 3487 0108 C038     		.short	14528
 3488 010a C06C     		.short	27840
 3489 010c 6044     		.short	17504
 3490 010e 6044     		.short	17504
 3491 0110 3044     		.short	17456
 3492 0112 3044     		.short	17456
 3493 0114 1844     		.short	17432
 3494 0116 186C     		.short	27672
 3495 0118 0C38     		.short	14348
 3496 011a 0000     		.short	0
 3497 011c 0000     		.short	0
 3498 011e 0000     		.short	0
 3499 0120 0000     		.short	0
 3500 0122 E001     		.short	480
 3501 0124 F003     		.short	1008
 3502 0126 3807     		.short	1848
 3503 0128 1806     		.short	1560
 3504 012a 1806     		.short	1560
 3505 012c 3003     		.short	816
 3506 012e F001     		.short	496
 3507 0130 F000     		.short	240
 3508 0132 F800     		.short	248
 3509 0134 9C31     		.short	12700
 3510 0136 0E33     		.short	13070
 3511 0138 061E     		.short	7686
 3512 013a 061C     		.short	7174
 3513 013c 061C     		.short	7174
 3514 013e 063F     		.short	16134
 3515 0140 FC73     		.short	29692
 3516 0142 F021     		.short	8688
 3517 0144 0000     		.short	0
 3518 0146 0000     		.short	0
 3519 0148 0000     		.short	0
 3520 014a 0000     		.short	0
 3521 014c 0000     		.short	0
 3522 014e 0000     		.short	0
 3523 0150 0000     		.short	0
 3524 0152 0000     		.short	0
 3525 0154 0C00     		.short	12
 3526 0156 0C00     		.short	12
 3527 0158 0C00     		.short	12
 3528 015a 0C00     		.short	12
 3529 015c 0C00     		.short	12
 3530 015e 0C00     		.short	12
 3531 0160 0000     		.short	0
 3532 0162 0000     		.short	0
 3533 0164 0000     		.short	0
 3534 0166 0000     		.short	0
 3535 0168 0000     		.short	0
 3536 016a 0000     		.short	0
 3537 016c 0000     		.short	0
 3538 016e 0000     		.short	0
 3539 0170 0000     		.short	0
 3540 0172 0000     		.short	0
 3541 0174 0000     		.short	0
 3542 0176 0000     		.short	0
 3543 0178 0000     		.short	0
 3544 017a 0000     		.short	0
 3545 017c 0000     		.short	0
 3546 017e 0000     		.short	0
 3547 0180 0000     		.short	0
 3548 0182 0002     		.short	512
 3549 0184 0003     		.short	768
 3550 0186 8001     		.short	384
 3551 0188 C000     		.short	192
 3552 018a C000     		.short	192
 3553 018c 6000     		.short	96
 3554 018e 6000     		.short	96
 3555 0190 3000     		.short	48
 3556 0192 3000     		.short	48
 3557 0194 3000     		.short	48
 3558 0196 3000     		.short	48
 3559 0198 3000     		.short	48
 3560 019a 3000     		.short	48
 3561 019c 3000     		.short	48
 3562 019e 3000     		.short	48
 3563 01a0 6000     		.short	96
 3564 01a2 6000     		.short	96
 3565 01a4 C000     		.short	192
 3566 01a6 C000     		.short	192
 3567 01a8 8001     		.short	384
 3568 01aa 0003     		.short	768
 3569 01ac 0002     		.short	512
 3570 01ae 0000     		.short	0
 3571 01b0 0000     		.short	0
 3572 01b2 2000     		.short	32
 3573 01b4 6000     		.short	96
 3574 01b6 C000     		.short	192
 3575 01b8 8001     		.short	384
 3576 01ba 8001     		.short	384
 3577 01bc 0003     		.short	768
 3578 01be 0003     		.short	768
 3579 01c0 0006     		.short	1536
 3580 01c2 0006     		.short	1536
 3581 01c4 0006     		.short	1536
 3582 01c6 0006     		.short	1536
 3583 01c8 0006     		.short	1536
 3584 01ca 0006     		.short	1536
 3585 01cc 0006     		.short	1536
 3586 01ce 0006     		.short	1536
 3587 01d0 0003     		.short	768
 3588 01d2 0003     		.short	768
 3589 01d4 8001     		.short	384
 3590 01d6 8001     		.short	384
 3591 01d8 C000     		.short	192
 3592 01da 6000     		.short	96
 3593 01dc 2000     		.short	32
 3594 01de 0000     		.short	0
 3595 01e0 0000     		.short	0
 3596 01e2 0000     		.short	0
 3597 01e4 0000     		.short	0
 3598 01e6 0000     		.short	0
 3599 01e8 0000     		.short	0
 3600 01ea 0000     		.short	0
 3601 01ec C000     		.short	192
 3602 01ee C000     		.short	192
 3603 01f0 D806     		.short	1752
 3604 01f2 F807     		.short	2040
 3605 01f4 E001     		.short	480
 3606 01f6 3003     		.short	816
 3607 01f8 3807     		.short	1848
 3608 01fa 0000     		.short	0
 3609 01fc 0000     		.short	0
 3610 01fe 0000     		.short	0
 3611 0200 0000     		.short	0
 3612 0202 0000     		.short	0
 3613 0204 0000     		.short	0
 3614 0206 0000     		.short	0
 3615 0208 0000     		.short	0
 3616 020a 0000     		.short	0
 3617 020c 0000     		.short	0
 3618 020e 0000     		.short	0
 3619 0210 0000     		.short	0
 3620 0212 0000     		.short	0
 3621 0214 0000     		.short	0
 3622 0216 0000     		.short	0
 3623 0218 0000     		.short	0
 3624 021a 0000     		.short	0
 3625 021c 8001     		.short	384
 3626 021e 8001     		.short	384
 3627 0220 8001     		.short	384
 3628 0222 8001     		.short	384
 3629 0224 8001     		.short	384
 3630 0226 FC3F     		.short	16380
 3631 0228 FC3F     		.short	16380
 3632 022a 8001     		.short	384
 3633 022c 8001     		.short	384
 3634 022e 8001     		.short	384
 3635 0230 8001     		.short	384
 3636 0232 8001     		.short	384
 3637 0234 0000     		.short	0
 3638 0236 0000     		.short	0
 3639 0238 0000     		.short	0
 3640 023a 0000     		.short	0
 3641 023c 0000     		.short	0
 3642 023e 0000     		.short	0
 3643 0240 0000     		.short	0
 3644 0242 0000     		.short	0
 3645 0244 0000     		.short	0
 3646 0246 0000     		.short	0
 3647 0248 0000     		.short	0
 3648 024a 0000     		.short	0
 3649 024c 0000     		.short	0
 3650 024e 0000     		.short	0
 3651 0250 0000     		.short	0
 3652 0252 0000     		.short	0
 3653 0254 0000     		.short	0
 3654 0256 0000     		.short	0
 3655 0258 0000     		.short	0
 3656 025a 0000     		.short	0
 3657 025c 0000     		.short	0
 3658 025e 0000     		.short	0
 3659 0260 0000     		.short	0
 3660 0262 8001     		.short	384
 3661 0264 8001     		.short	384
 3662 0266 0001     		.short	256
 3663 0268 0001     		.short	256
 3664 026a 8000     		.short	128
 3665 026c 0000     		.short	0
 3666 026e 0000     		.short	0
 3667 0270 0000     		.short	0
 3668 0272 0000     		.short	0
 3669 0274 0000     		.short	0
 3670 0276 0000     		.short	0
 3671 0278 0000     		.short	0
 3672 027a 0000     		.short	0
 3673 027c 0000     		.short	0
 3674 027e 0000     		.short	0
 3675 0280 0000     		.short	0
 3676 0282 0000     		.short	0
 3677 0284 0000     		.short	0
 3678 0286 0000     		.short	0
 3679 0288 E007     		.short	2016
 3680 028a E007     		.short	2016
 3681 028c 0000     		.short	0
 3682 028e 0000     		.short	0
 3683 0290 0000     		.short	0
 3684 0292 0000     		.short	0
 3685 0294 0000     		.short	0
 3686 0296 0000     		.short	0
 3687 0298 0000     		.short	0
 3688 029a 0000     		.short	0
 3689 029c 0000     		.short	0
 3690 029e 0000     		.short	0
 3691 02a0 0000     		.short	0
 3692 02a2 0000     		.short	0
 3693 02a4 0000     		.short	0
 3694 02a6 0000     		.short	0
 3695 02a8 0000     		.short	0
 3696 02aa 0000     		.short	0
 3697 02ac 0000     		.short	0
 3698 02ae 0000     		.short	0
 3699 02b0 0000     		.short	0
 3700 02b2 0000     		.short	0
 3701 02b4 0000     		.short	0
 3702 02b6 0000     		.short	0
 3703 02b8 0000     		.short	0
 3704 02ba 0000     		.short	0
 3705 02bc 0000     		.short	0
 3706 02be 0000     		.short	0
 3707 02c0 0000     		.short	0
 3708 02c2 C000     		.short	192
 3709 02c4 C000     		.short	192
 3710 02c6 0000     		.short	0
 3711 02c8 0000     		.short	0
 3712 02ca 0000     		.short	0
 3713 02cc 0000     		.short	0
 3714 02ce 0000     		.short	0
 3715 02d0 0000     		.short	0
 3716 02d2 000C     		.short	3072
 3717 02d4 000C     		.short	3072
 3718 02d6 0006     		.short	1536
 3719 02d8 0006     		.short	1536
 3720 02da 0006     		.short	1536
 3721 02dc 0003     		.short	768
 3722 02de 0003     		.short	768
 3723 02e0 0003     		.short	768
 3724 02e2 8003     		.short	896
 3725 02e4 8001     		.short	384
 3726 02e6 8001     		.short	384
 3727 02e8 8001     		.short	384
 3728 02ea C000     		.short	192
 3729 02ec C000     		.short	192
 3730 02ee C000     		.short	192
 3731 02f0 6000     		.short	96
 3732 02f2 6000     		.short	96
 3733 02f4 0000     		.short	0
 3734 02f6 0000     		.short	0
 3735 02f8 0000     		.short	0
 3736 02fa 0000     		.short	0
 3737 02fc 0000     		.short	0
 3738 02fe 0000     		.short	0
 3739 0300 0000     		.short	0
 3740 0302 E003     		.short	992
 3741 0304 F007     		.short	2032
 3742 0306 380E     		.short	3640
 3743 0308 180C     		.short	3096
 3744 030a 0C18     		.short	6156
 3745 030c 0C18     		.short	6156
 3746 030e 0C18     		.short	6156
 3747 0310 0C18     		.short	6156
 3748 0312 0C18     		.short	6156
 3749 0314 0C18     		.short	6156
 3750 0316 0C18     		.short	6156
 3751 0318 0C18     		.short	6156
 3752 031a 0C18     		.short	6156
 3753 031c 180C     		.short	3096
 3754 031e 380E     		.short	3640
 3755 0320 F007     		.short	2032
 3756 0322 E003     		.short	992
 3757 0324 0000     		.short	0
 3758 0326 0000     		.short	0
 3759 0328 0000     		.short	0
 3760 032a 0000     		.short	0
 3761 032c 0000     		.short	0
 3762 032e 0000     		.short	0
 3763 0330 0000     		.short	0
 3764 0332 0001     		.short	256
 3765 0334 8001     		.short	384
 3766 0336 C001     		.short	448
 3767 0338 F001     		.short	496
 3768 033a 9801     		.short	408
 3769 033c 8801     		.short	392
 3770 033e 8001     		.short	384
 3771 0340 8001     		.short	384
 3772 0342 8001     		.short	384
 3773 0344 8001     		.short	384
 3774 0346 8001     		.short	384
 3775 0348 8001     		.short	384
 3776 034a 8001     		.short	384
 3777 034c 8001     		.short	384
 3778 034e 8001     		.short	384
 3779 0350 8001     		.short	384
 3780 0352 8001     		.short	384
 3781 0354 0000     		.short	0
 3782 0356 0000     		.short	0
 3783 0358 0000     		.short	0
 3784 035a 0000     		.short	0
 3785 035c 0000     		.short	0
 3786 035e 0000     		.short	0
 3787 0360 0000     		.short	0
 3788 0362 E003     		.short	992
 3789 0364 F80F     		.short	4088
 3790 0366 180C     		.short	3096
 3791 0368 0C18     		.short	6156
 3792 036a 0C18     		.short	6156
 3793 036c 0018     		.short	6144
 3794 036e 0018     		.short	6144
 3795 0370 000C     		.short	3072
 3796 0372 0006     		.short	1536
 3797 0374 0003     		.short	768
 3798 0376 8001     		.short	384
 3799 0378 C000     		.short	192
 3800 037a 6000     		.short	96
 3801 037c 3000     		.short	48
 3802 037e 1800     		.short	24
 3803 0380 FC1F     		.short	8188
 3804 0382 FC1F     		.short	8188
 3805 0384 0000     		.short	0
 3806 0386 0000     		.short	0
 3807 0388 0000     		.short	0
 3808 038a 0000     		.short	0
 3809 038c 0000     		.short	0
 3810 038e 0000     		.short	0
 3811 0390 0000     		.short	0
 3812 0392 E001     		.short	480
 3813 0394 F807     		.short	2040
 3814 0396 180E     		.short	3608
 3815 0398 0C0C     		.short	3084
 3816 039a 0C0C     		.short	3084
 3817 039c 000C     		.short	3072
 3818 039e 0006     		.short	1536
 3819 03a0 C003     		.short	960
 3820 03a2 C007     		.short	1984
 3821 03a4 000C     		.short	3072
 3822 03a6 0018     		.short	6144
 3823 03a8 0018     		.short	6144
 3824 03aa 0C18     		.short	6156
 3825 03ac 0C18     		.short	6156
 3826 03ae 180C     		.short	3096
 3827 03b0 F807     		.short	2040
 3828 03b2 E003     		.short	992
 3829 03b4 0000     		.short	0
 3830 03b6 0000     		.short	0
 3831 03b8 0000     		.short	0
 3832 03ba 0000     		.short	0
 3833 03bc 0000     		.short	0
 3834 03be 0000     		.short	0
 3835 03c0 0000     		.short	0
 3836 03c2 000C     		.short	3072
 3837 03c4 000E     		.short	3584
 3838 03c6 000F     		.short	3840
 3839 03c8 000F     		.short	3840
 3840 03ca 800D     		.short	3456
 3841 03cc C00C     		.short	3264
 3842 03ce 600C     		.short	3168
 3843 03d0 600C     		.short	3168
 3844 03d2 300C     		.short	3120
 3845 03d4 180C     		.short	3096
 3846 03d6 0C0C     		.short	3084
 3847 03d8 FC3F     		.short	16380
 3848 03da FC3F     		.short	16380
 3849 03dc 000C     		.short	3072
 3850 03de 000C     		.short	3072
 3851 03e0 000C     		.short	3072
 3852 03e2 000C     		.short	3072
 3853 03e4 0000     		.short	0
 3854 03e6 0000     		.short	0
 3855 03e8 0000     		.short	0
 3856 03ea 0000     		.short	0
 3857 03ec 0000     		.short	0
 3858 03ee 0000     		.short	0
 3859 03f0 0000     		.short	0
 3860 03f2 F80F     		.short	4088
 3861 03f4 F80F     		.short	4088
 3862 03f6 1800     		.short	24
 3863 03f8 1800     		.short	24
 3864 03fa 0C00     		.short	12
 3865 03fc EC03     		.short	1004
 3866 03fe FC07     		.short	2044
 3867 0400 1C0E     		.short	3612
 3868 0402 001C     		.short	7168
 3869 0404 0018     		.short	6144
 3870 0406 0018     		.short	6144
 3871 0408 0018     		.short	6144
 3872 040a 0C18     		.short	6156
 3873 040c 1C0C     		.short	3100
 3874 040e 180E     		.short	3608
 3875 0410 F807     		.short	2040
 3876 0412 E003     		.short	992
 3877 0414 0000     		.short	0
 3878 0416 0000     		.short	0
 3879 0418 0000     		.short	0
 3880 041a 0000     		.short	0
 3881 041c 0000     		.short	0
 3882 041e 0000     		.short	0
 3883 0420 0000     		.short	0
 3884 0422 C007     		.short	1984
 3885 0424 F00F     		.short	4080
 3886 0426 381C     		.short	7224
 3887 0428 1818     		.short	6168
 3888 042a 1800     		.short	24
 3889 042c 0C00     		.short	12
 3890 042e CC03     		.short	972
 3891 0430 EC0F     		.short	4076
 3892 0432 3C0E     		.short	3644
 3893 0434 1C1C     		.short	7196
 3894 0436 0C18     		.short	6156
 3895 0438 0C18     		.short	6156
 3896 043a 0C18     		.short	6156
 3897 043c 181C     		.short	7192
 3898 043e 380E     		.short	3640
 3899 0440 F007     		.short	2032
 3900 0442 E003     		.short	992
 3901 0444 0000     		.short	0
 3902 0446 0000     		.short	0
 3903 0448 0000     		.short	0
 3904 044a 0000     		.short	0
 3905 044c 0000     		.short	0
 3906 044e 0000     		.short	0
 3907 0450 0000     		.short	0
 3908 0452 FC1F     		.short	8188
 3909 0454 FC1F     		.short	8188
 3910 0456 000C     		.short	3072
 3911 0458 0006     		.short	1536
 3912 045a 0006     		.short	1536
 3913 045c 0003     		.short	768
 3914 045e 8003     		.short	896
 3915 0460 8001     		.short	384
 3916 0462 C001     		.short	448
 3917 0464 C000     		.short	192
 3918 0466 E000     		.short	224
 3919 0468 6000     		.short	96
 3920 046a 6000     		.short	96
 3921 046c 7000     		.short	112
 3922 046e 3000     		.short	48
 3923 0470 3000     		.short	48
 3924 0472 3000     		.short	48
 3925 0474 0000     		.short	0
 3926 0476 0000     		.short	0
 3927 0478 0000     		.short	0
 3928 047a 0000     		.short	0
 3929 047c 0000     		.short	0
 3930 047e 0000     		.short	0
 3931 0480 0000     		.short	0
 3932 0482 E003     		.short	992
 3933 0484 F007     		.short	2032
 3934 0486 380E     		.short	3640
 3935 0488 180C     		.short	3096
 3936 048a 180C     		.short	3096
 3937 048c 180C     		.short	3096
 3938 048e 3806     		.short	1592
 3939 0490 F007     		.short	2032
 3940 0492 F007     		.short	2032
 3941 0494 180C     		.short	3096
 3942 0496 0C18     		.short	6156
 3943 0498 0C18     		.short	6156
 3944 049a 0C18     		.short	6156
 3945 049c 0C18     		.short	6156
 3946 049e 380C     		.short	3128
 3947 04a0 F80F     		.short	4088
 3948 04a2 E003     		.short	992
 3949 04a4 0000     		.short	0
 3950 04a6 0000     		.short	0
 3951 04a8 0000     		.short	0
 3952 04aa 0000     		.short	0
 3953 04ac 0000     		.short	0
 3954 04ae 0000     		.short	0
 3955 04b0 0000     		.short	0
 3956 04b2 E003     		.short	992
 3957 04b4 F007     		.short	2032
 3958 04b6 380E     		.short	3640
 3959 04b8 1C0C     		.short	3100
 3960 04ba 0C18     		.short	6156
 3961 04bc 0C18     		.short	6156
 3962 04be 0C18     		.short	6156
 3963 04c0 1C1C     		.short	7196
 3964 04c2 381E     		.short	7736
 3965 04c4 F81B     		.short	7160
 3966 04c6 E019     		.short	6624
 3967 04c8 0018     		.short	6144
 3968 04ca 000C     		.short	3072
 3969 04cc 000C     		.short	3072
 3970 04ce 1C0E     		.short	3612
 3971 04d0 F807     		.short	2040
 3972 04d2 F001     		.short	496
 3973 04d4 0000     		.short	0
 3974 04d6 0000     		.short	0
 3975 04d8 0000     		.short	0
 3976 04da 0000     		.short	0
 3977 04dc 0000     		.short	0
 3978 04de 0000     		.short	0
 3979 04e0 0000     		.short	0
 3980 04e2 0000     		.short	0
 3981 04e4 0000     		.short	0
 3982 04e6 0000     		.short	0
 3983 04e8 0000     		.short	0
 3984 04ea 0000     		.short	0
 3985 04ec 8001     		.short	384
 3986 04ee 8001     		.short	384
 3987 04f0 0000     		.short	0
 3988 04f2 0000     		.short	0
 3989 04f4 0000     		.short	0
 3990 04f6 0000     		.short	0
 3991 04f8 0000     		.short	0
 3992 04fa 0000     		.short	0
 3993 04fc 0000     		.short	0
 3994 04fe 0000     		.short	0
 3995 0500 8001     		.short	384
 3996 0502 8001     		.short	384
 3997 0504 0000     		.short	0
 3998 0506 0000     		.short	0
 3999 0508 0000     		.short	0
 4000 050a 0000     		.short	0
 4001 050c 0000     		.short	0
 4002 050e 0000     		.short	0
 4003 0510 0000     		.short	0
 4004 0512 0000     		.short	0
 4005 0514 0000     		.short	0
 4006 0516 0000     		.short	0
 4007 0518 0000     		.short	0
 4008 051a 0000     		.short	0
 4009 051c 8001     		.short	384
 4010 051e 8001     		.short	384
 4011 0520 0000     		.short	0
 4012 0522 0000     		.short	0
 4013 0524 0000     		.short	0
 4014 0526 0000     		.short	0
 4015 0528 0000     		.short	0
 4016 052a 0000     		.short	0
 4017 052c 0000     		.short	0
 4018 052e 0000     		.short	0
 4019 0530 8001     		.short	384
 4020 0532 8001     		.short	384
 4021 0534 0001     		.short	256
 4022 0536 0001     		.short	256
 4023 0538 8000     		.short	128
 4024 053a 0000     		.short	0
 4025 053c 0000     		.short	0
 4026 053e 0000     		.short	0
 4027 0540 0000     		.short	0
 4028 0542 0000     		.short	0
 4029 0544 0000     		.short	0
 4030 0546 0000     		.short	0
 4031 0548 0000     		.short	0
 4032 054a 0000     		.short	0
 4033 054c 0000     		.short	0
 4034 054e 0000     		.short	0
 4035 0550 0010     		.short	4096
 4036 0552 001C     		.short	7168
 4037 0554 800F     		.short	3968
 4038 0556 E003     		.short	992
 4039 0558 F800     		.short	248
 4040 055a 1800     		.short	24
 4041 055c F800     		.short	248
 4042 055e E003     		.short	992
 4043 0560 800F     		.short	3968
 4044 0562 001C     		.short	7168
 4045 0564 0010     		.short	4096
 4046 0566 0000     		.short	0
 4047 0568 0000     		.short	0
 4048 056a 0000     		.short	0
 4049 056c 0000     		.short	0
 4050 056e 0000     		.short	0
 4051 0570 0000     		.short	0
 4052 0572 0000     		.short	0
 4053 0574 0000     		.short	0
 4054 0576 0000     		.short	0
 4055 0578 0000     		.short	0
 4056 057a 0000     		.short	0
 4057 057c 0000     		.short	0
 4058 057e 0000     		.short	0
 4059 0580 F81F     		.short	8184
 4060 0582 0000     		.short	0
 4061 0584 0000     		.short	0
 4062 0586 0000     		.short	0
 4063 0588 F81F     		.short	8184
 4064 058a 0000     		.short	0
 4065 058c 0000     		.short	0
 4066 058e 0000     		.short	0
 4067 0590 0000     		.short	0
 4068 0592 0000     		.short	0
 4069 0594 0000     		.short	0
 4070 0596 0000     		.short	0
 4071 0598 0000     		.short	0
 4072 059a 0000     		.short	0
 4073 059c 0000     		.short	0
 4074 059e 0000     		.short	0
 4075 05a0 0000     		.short	0
 4076 05a2 0000     		.short	0
 4077 05a4 0000     		.short	0
 4078 05a6 0000     		.short	0
 4079 05a8 0000     		.short	0
 4080 05aa 0000     		.short	0
 4081 05ac 0000     		.short	0
 4082 05ae 0000     		.short	0
 4083 05b0 0800     		.short	8
 4084 05b2 3800     		.short	56
 4085 05b4 F001     		.short	496
 4086 05b6 C007     		.short	1984
 4087 05b8 001F     		.short	7936
 4088 05ba 0018     		.short	6144
 4089 05bc 001F     		.short	7936
 4090 05be C007     		.short	1984
 4091 05c0 F001     		.short	496
 4092 05c2 3800     		.short	56
 4093 05c4 0800     		.short	8
 4094 05c6 0000     		.short	0
 4095 05c8 0000     		.short	0
 4096 05ca 0000     		.short	0
 4097 05cc 0000     		.short	0
 4098 05ce 0000     		.short	0
 4099 05d0 0000     		.short	0
 4100 05d2 E003     		.short	992
 4101 05d4 F80F     		.short	4088
 4102 05d6 180C     		.short	3096
 4103 05d8 0C18     		.short	6156
 4104 05da 0C18     		.short	6156
 4105 05dc 0018     		.short	6144
 4106 05de 000C     		.short	3072
 4107 05e0 0006     		.short	1536
 4108 05e2 0003     		.short	768
 4109 05e4 8001     		.short	384
 4110 05e6 C000     		.short	192
 4111 05e8 C000     		.short	192
 4112 05ea C000     		.short	192
 4113 05ec 0000     		.short	0
 4114 05ee 0000     		.short	0
 4115 05f0 C000     		.short	192
 4116 05f2 C000     		.short	192
 4117 05f4 0000     		.short	0
 4118 05f6 0000     		.short	0
 4119 05f8 0000     		.short	0
 4120 05fa 0000     		.short	0
 4121 05fc 0000     		.short	0
 4122 05fe 0000     		.short	0
 4123 0600 0000     		.short	0
 4124 0602 0000     		.short	0
 4125 0604 E007     		.short	2016
 4126 0606 1818     		.short	6168
 4127 0608 0420     		.short	8196
 4128 060a C229     		.short	10690
 4129 060c 224A     		.short	18978
 4130 060e 1144     		.short	17425
 4131 0610 0944     		.short	17417
 4132 0612 0944     		.short	17417
 4133 0614 0944     		.short	17417
 4134 0616 0922     		.short	8713
 4135 0618 1113     		.short	4881
 4136 061a E20C     		.short	3298
 4137 061c 0240     		.short	16386
 4138 061e 0420     		.short	8196
 4139 0620 1818     		.short	6168
 4140 0622 E007     		.short	2016
 4141 0624 0000     		.short	0
 4142 0626 0000     		.short	0
 4143 0628 0000     		.short	0
 4144 062a 0000     		.short	0
 4145 062c 0000     		.short	0
 4146 062e 0000     		.short	0
 4147 0630 0000     		.short	0
 4148 0632 8003     		.short	896
 4149 0634 8003     		.short	896
 4150 0636 C006     		.short	1728
 4151 0638 C006     		.short	1728
 4152 063a C006     		.short	1728
 4153 063c 600C     		.short	3168
 4154 063e 600C     		.short	3168
 4155 0640 3018     		.short	6192
 4156 0642 3018     		.short	6192
 4157 0644 3018     		.short	6192
 4158 0646 F83F     		.short	16376
 4159 0648 F83F     		.short	16376
 4160 064a 1C70     		.short	28700
 4161 064c 0C60     		.short	24588
 4162 064e 0C60     		.short	24588
 4163 0650 06C0     		.short	-16378
 4164 0652 06C0     		.short	-16378
 4165 0654 0000     		.short	0
 4166 0656 0000     		.short	0
 4167 0658 0000     		.short	0
 4168 065a 0000     		.short	0
 4169 065c 0000     		.short	0
 4170 065e 0000     		.short	0
 4171 0660 0000     		.short	0
 4172 0662 FC03     		.short	1020
 4173 0664 FC0F     		.short	4092
 4174 0666 0C0C     		.short	3084
 4175 0668 0C18     		.short	6156
 4176 066a 0C18     		.short	6156
 4177 066c 0C18     		.short	6156
 4178 066e 0C0C     		.short	3084
 4179 0670 FC07     		.short	2044
 4180 0672 FC0F     		.short	4092
 4181 0674 0C18     		.short	6156
 4182 0676 0C30     		.short	12300
 4183 0678 0C30     		.short	12300
 4184 067a 0C30     		.short	12300
 4185 067c 0C30     		.short	12300
 4186 067e 0C18     		.short	6156
 4187 0680 FC1F     		.short	8188
 4188 0682 FC07     		.short	2044
 4189 0684 0000     		.short	0
 4190 0686 0000     		.short	0
 4191 0688 0000     		.short	0
 4192 068a 0000     		.short	0
 4193 068c 0000     		.short	0
 4194 068e 0000     		.short	0
 4195 0690 0000     		.short	0
 4196 0692 C007     		.short	1984
 4197 0694 F01F     		.short	8176
 4198 0696 3838     		.short	14392
 4199 0698 1C30     		.short	12316
 4200 069a 0C70     		.short	28684
 4201 069c 0660     		.short	24582
 4202 069e 0600     		.short	6
 4203 06a0 0600     		.short	6
 4204 06a2 0600     		.short	6
 4205 06a4 0600     		.short	6
 4206 06a6 0600     		.short	6
 4207 06a8 0600     		.short	6
 4208 06aa 0660     		.short	24582
 4209 06ac 0C70     		.short	28684
 4210 06ae 1C30     		.short	12316
 4211 06b0 F01F     		.short	8176
 4212 06b2 E007     		.short	2016
 4213 06b4 0000     		.short	0
 4214 06b6 0000     		.short	0
 4215 06b8 0000     		.short	0
 4216 06ba 0000     		.short	0
 4217 06bc 0000     		.short	0
 4218 06be 0000     		.short	0
 4219 06c0 0000     		.short	0
 4220 06c2 FE03     		.short	1022
 4221 06c4 FE0F     		.short	4094
 4222 06c6 060E     		.short	3590
 4223 06c8 0618     		.short	6150
 4224 06ca 0618     		.short	6150
 4225 06cc 0630     		.short	12294
 4226 06ce 0630     		.short	12294
 4227 06d0 0630     		.short	12294
 4228 06d2 0630     		.short	12294
 4229 06d4 0630     		.short	12294
 4230 06d6 0630     		.short	12294
 4231 06d8 0630     		.short	12294
 4232 06da 0618     		.short	6150
 4233 06dc 0618     		.short	6150
 4234 06de 060E     		.short	3590
 4235 06e0 FE0F     		.short	4094
 4236 06e2 FE03     		.short	1022
 4237 06e4 0000     		.short	0
 4238 06e6 0000     		.short	0
 4239 06e8 0000     		.short	0
 4240 06ea 0000     		.short	0
 4241 06ec 0000     		.short	0
 4242 06ee 0000     		.short	0
 4243 06f0 0000     		.short	0
 4244 06f2 FC3F     		.short	16380
 4245 06f4 FC3F     		.short	16380
 4246 06f6 0C00     		.short	12
 4247 06f8 0C00     		.short	12
 4248 06fa 0C00     		.short	12
 4249 06fc 0C00     		.short	12
 4250 06fe 0C00     		.short	12
 4251 0700 FC1F     		.short	8188
 4252 0702 FC1F     		.short	8188
 4253 0704 0C00     		.short	12
 4254 0706 0C00     		.short	12
 4255 0708 0C00     		.short	12
 4256 070a 0C00     		.short	12
 4257 070c 0C00     		.short	12
 4258 070e 0C00     		.short	12
 4259 0710 FC3F     		.short	16380
 4260 0712 FC3F     		.short	16380
 4261 0714 0000     		.short	0
 4262 0716 0000     		.short	0
 4263 0718 0000     		.short	0
 4264 071a 0000     		.short	0
 4265 071c 0000     		.short	0
 4266 071e 0000     		.short	0
 4267 0720 0000     		.short	0
 4268 0722 F83F     		.short	16376
 4269 0724 F83F     		.short	16376
 4270 0726 1800     		.short	24
 4271 0728 1800     		.short	24
 4272 072a 1800     		.short	24
 4273 072c 1800     		.short	24
 4274 072e 1800     		.short	24
 4275 0730 F81F     		.short	8184
 4276 0732 F81F     		.short	8184
 4277 0734 1800     		.short	24
 4278 0736 1800     		.short	24
 4279 0738 1800     		.short	24
 4280 073a 1800     		.short	24
 4281 073c 1800     		.short	24
 4282 073e 1800     		.short	24
 4283 0740 1800     		.short	24
 4284 0742 1800     		.short	24
 4285 0744 0000     		.short	0
 4286 0746 0000     		.short	0
 4287 0748 0000     		.short	0
 4288 074a 0000     		.short	0
 4289 074c 0000     		.short	0
 4290 074e 0000     		.short	0
 4291 0750 0000     		.short	0
 4292 0752 E00F     		.short	4064
 4293 0754 F83F     		.short	16376
 4294 0756 3C78     		.short	30780
 4295 0758 0E60     		.short	24590
 4296 075a 06E0     		.short	-8186
 4297 075c 07C0     		.short	-16377
 4298 075e 0300     		.short	3
 4299 0760 0300     		.short	3
 4300 0762 03FE     		.short	-509
 4301 0764 03FE     		.short	-509
 4302 0766 03C0     		.short	-16381
 4303 0768 07C0     		.short	-16377
 4304 076a 06C0     		.short	-16378
 4305 076c 0EC0     		.short	-16370
 4306 076e 3CF0     		.short	-4036
 4307 0770 F83F     		.short	16376
 4308 0772 E00F     		.short	4064
 4309 0774 0000     		.short	0
 4310 0776 0000     		.short	0
 4311 0778 0000     		.short	0
 4312 077a 0000     		.short	0
 4313 077c 0000     		.short	0
 4314 077e 0000     		.short	0
 4315 0780 0000     		.short	0
 4316 0782 0C30     		.short	12300
 4317 0784 0C30     		.short	12300
 4318 0786 0C30     		.short	12300
 4319 0788 0C30     		.short	12300
 4320 078a 0C30     		.short	12300
 4321 078c 0C30     		.short	12300
 4322 078e 0C30     		.short	12300
 4323 0790 FC3F     		.short	16380
 4324 0792 FC3F     		.short	16380
 4325 0794 0C30     		.short	12300
 4326 0796 0C30     		.short	12300
 4327 0798 0C30     		.short	12300
 4328 079a 0C30     		.short	12300
 4329 079c 0C30     		.short	12300
 4330 079e 0C30     		.short	12300
 4331 07a0 0C30     		.short	12300
 4332 07a2 0C30     		.short	12300
 4333 07a4 0000     		.short	0
 4334 07a6 0000     		.short	0
 4335 07a8 0000     		.short	0
 4336 07aa 0000     		.short	0
 4337 07ac 0000     		.short	0
 4338 07ae 0000     		.short	0
 4339 07b0 0000     		.short	0
 4340 07b2 8001     		.short	384
 4341 07b4 8001     		.short	384
 4342 07b6 8001     		.short	384
 4343 07b8 8001     		.short	384
 4344 07ba 8001     		.short	384
 4345 07bc 8001     		.short	384
 4346 07be 8001     		.short	384
 4347 07c0 8001     		.short	384
 4348 07c2 8001     		.short	384
 4349 07c4 8001     		.short	384
 4350 07c6 8001     		.short	384
 4351 07c8 8001     		.short	384
 4352 07ca 8001     		.short	384
 4353 07cc 8001     		.short	384
 4354 07ce 8001     		.short	384
 4355 07d0 8001     		.short	384
 4356 07d2 8001     		.short	384
 4357 07d4 0000     		.short	0
 4358 07d6 0000     		.short	0
 4359 07d8 0000     		.short	0
 4360 07da 0000     		.short	0
 4361 07dc 0000     		.short	0
 4362 07de 0000     		.short	0
 4363 07e0 0000     		.short	0
 4364 07e2 0006     		.short	1536
 4365 07e4 0006     		.short	1536
 4366 07e6 0006     		.short	1536
 4367 07e8 0006     		.short	1536
 4368 07ea 0006     		.short	1536
 4369 07ec 0006     		.short	1536
 4370 07ee 0006     		.short	1536
 4371 07f0 0006     		.short	1536
 4372 07f2 0006     		.short	1536
 4373 07f4 0006     		.short	1536
 4374 07f6 0006     		.short	1536
 4375 07f8 0006     		.short	1536
 4376 07fa 1806     		.short	1560
 4377 07fc 1806     		.short	1560
 4378 07fe 3807     		.short	1848
 4379 0800 F003     		.short	1008
 4380 0802 E001     		.short	480
 4381 0804 0000     		.short	0
 4382 0806 0000     		.short	0
 4383 0808 0000     		.short	0
 4384 080a 0000     		.short	0
 4385 080c 0000     		.short	0
 4386 080e 0000     		.short	0
 4387 0810 0000     		.short	0
 4388 0812 0630     		.short	12294
 4389 0814 0618     		.short	6150
 4390 0816 060C     		.short	3078
 4391 0818 0606     		.short	1542
 4392 081a 0603     		.short	774
 4393 081c 8601     		.short	390
 4394 081e C600     		.short	198
 4395 0820 6600     		.short	102
 4396 0822 7600     		.short	118
 4397 0824 DE00     		.short	222
 4398 0826 8E01     		.short	398
 4399 0828 0603     		.short	774
 4400 082a 0606     		.short	1542
 4401 082c 060C     		.short	3078
 4402 082e 0618     		.short	6150
 4403 0830 0630     		.short	12294
 4404 0832 0660     		.short	24582
 4405 0834 0000     		.short	0
 4406 0836 0000     		.short	0
 4407 0838 0000     		.short	0
 4408 083a 0000     		.short	0
 4409 083c 0000     		.short	0
 4410 083e 0000     		.short	0
 4411 0840 0000     		.short	0
 4412 0842 1800     		.short	24
 4413 0844 1800     		.short	24
 4414 0846 1800     		.short	24
 4415 0848 1800     		.short	24
 4416 084a 1800     		.short	24
 4417 084c 1800     		.short	24
 4418 084e 1800     		.short	24
 4419 0850 1800     		.short	24
 4420 0852 1800     		.short	24
 4421 0854 1800     		.short	24
 4422 0856 1800     		.short	24
 4423 0858 1800     		.short	24
 4424 085a 1800     		.short	24
 4425 085c 1800     		.short	24
 4426 085e 1800     		.short	24
 4427 0860 F81F     		.short	8184
 4428 0862 F81F     		.short	8184
 4429 0864 0000     		.short	0
 4430 0866 0000     		.short	0
 4431 0868 0000     		.short	0
 4432 086a 0000     		.short	0
 4433 086c 0000     		.short	0
 4434 086e 0000     		.short	0
 4435 0870 0000     		.short	0
 4436 0872 0EE0     		.short	-8178
 4437 0874 1EF0     		.short	-4066
 4438 0876 1EF0     		.short	-4066
 4439 0878 1EF0     		.short	-4066
 4440 087a 36D8     		.short	-10186
 4441 087c 36D8     		.short	-10186
 4442 087e 36D8     		.short	-10186
 4443 0880 36D8     		.short	-10186
 4444 0882 66CC     		.short	-13210
 4445 0884 66CC     		.short	-13210
 4446 0886 66CC     		.short	-13210
 4447 0888 C6C6     		.short	-14650
 4448 088a C6C6     		.short	-14650
 4449 088c C6C6     		.short	-14650
 4450 088e C6C6     		.short	-14650
 4451 0890 86C3     		.short	-15482
 4452 0892 86C3     		.short	-15482
 4453 0894 0000     		.short	0
 4454 0896 0000     		.short	0
 4455 0898 0000     		.short	0
 4456 089a 0000     		.short	0
 4457 089c 0000     		.short	0
 4458 089e 0000     		.short	0
 4459 08a0 0000     		.short	0
 4460 08a2 0C30     		.short	12300
 4461 08a4 1C30     		.short	12316
 4462 08a6 3C30     		.short	12348
 4463 08a8 3C30     		.short	12348
 4464 08aa 6C30     		.short	12396
 4465 08ac 6C30     		.short	12396
 4466 08ae CC30     		.short	12492
 4467 08b0 CC30     		.short	12492
 4468 08b2 8C31     		.short	12684
 4469 08b4 0C33     		.short	13068
 4470 08b6 0C33     		.short	13068
 4471 08b8 0C36     		.short	13836
 4472 08ba 0C36     		.short	13836
 4473 08bc 0C3C     		.short	15372
 4474 08be 0C3C     		.short	15372
 4475 08c0 0C38     		.short	14348
 4476 08c2 0C30     		.short	12300
 4477 08c4 0000     		.short	0
 4478 08c6 0000     		.short	0
 4479 08c8 0000     		.short	0
 4480 08ca 0000     		.short	0
 4481 08cc 0000     		.short	0
 4482 08ce 0000     		.short	0
 4483 08d0 0000     		.short	0
 4484 08d2 E007     		.short	2016
 4485 08d4 F81F     		.short	8184
 4486 08d6 1C38     		.short	14364
 4487 08d8 0E70     		.short	28686
 4488 08da 0660     		.short	24582
 4489 08dc 03C0     		.short	-16381
 4490 08de 03C0     		.short	-16381
 4491 08e0 03C0     		.short	-16381
 4492 08e2 03C0     		.short	-16381
 4493 08e4 03C0     		.short	-16381
 4494 08e6 03C0     		.short	-16381
 4495 08e8 03C0     		.short	-16381
 4496 08ea 0660     		.short	24582
 4497 08ec 0E70     		.short	28686
 4498 08ee 1C38     		.short	14364
 4499 08f0 F81F     		.short	8184
 4500 08f2 E007     		.short	2016
 4501 08f4 0000     		.short	0
 4502 08f6 0000     		.short	0
 4503 08f8 0000     		.short	0
 4504 08fa 0000     		.short	0
 4505 08fc 0000     		.short	0
 4506 08fe 0000     		.short	0
 4507 0900 0000     		.short	0
 4508 0902 FC0F     		.short	4092
 4509 0904 FC1F     		.short	8188
 4510 0906 0C38     		.short	14348
 4511 0908 0C30     		.short	12300
 4512 090a 0C30     		.short	12300
 4513 090c 0C30     		.short	12300
 4514 090e 0C30     		.short	12300
 4515 0910 0C18     		.short	6156
 4516 0912 FC1F     		.short	8188
 4517 0914 FC07     		.short	2044
 4518 0916 0C00     		.short	12
 4519 0918 0C00     		.short	12
 4520 091a 0C00     		.short	12
 4521 091c 0C00     		.short	12
 4522 091e 0C00     		.short	12
 4523 0920 0C00     		.short	12
 4524 0922 0C00     		.short	12
 4525 0924 0000     		.short	0
 4526 0926 0000     		.short	0
 4527 0928 0000     		.short	0
 4528 092a 0000     		.short	0
 4529 092c 0000     		.short	0
 4530 092e 0000     		.short	0
 4531 0930 0000     		.short	0
 4532 0932 E007     		.short	2016
 4533 0934 F81F     		.short	8184
 4534 0936 1C38     		.short	14364
 4535 0938 0E70     		.short	28686
 4536 093a 0660     		.short	24582
 4537 093c 03E0     		.short	-8189
 4538 093e 03C0     		.short	-16381
 4539 0940 03C0     		.short	-16381
 4540 0942 03C0     		.short	-16381
 4541 0944 03C0     		.short	-16381
 4542 0946 03C0     		.short	-16381
 4543 0948 07E0     		.short	-8185
 4544 094a 0663     		.short	25350
 4545 094c 0E3F     		.short	16142
 4546 094e 1C3C     		.short	15388
 4547 0950 F83F     		.short	16376
 4548 0952 E0F7     		.short	-2080
 4549 0954 00C0     		.short	-16384
 4550 0956 0000     		.short	0
 4551 0958 0000     		.short	0
 4552 095a 0000     		.short	0
 4553 095c 0000     		.short	0
 4554 095e 0000     		.short	0
 4555 0960 0000     		.short	0
 4556 0962 FE0F     		.short	4094
 4557 0964 FE1F     		.short	8190
 4558 0966 0638     		.short	14342
 4559 0968 0630     		.short	12294
 4560 096a 0630     		.short	12294
 4561 096c 0630     		.short	12294
 4562 096e 0638     		.short	14342
 4563 0970 FE1F     		.short	8190
 4564 0972 FE07     		.short	2046
 4565 0974 0603     		.short	774
 4566 0976 0606     		.short	1542
 4567 0978 060C     		.short	3078
 4568 097a 0618     		.short	6150
 4569 097c 0618     		.short	6150
 4570 097e 0630     		.short	12294
 4571 0980 0630     		.short	12294
 4572 0982 0660     		.short	24582
 4573 0984 0000     		.short	0
 4574 0986 0000     		.short	0
 4575 0988 0000     		.short	0
 4576 098a 0000     		.short	0
 4577 098c 0000     		.short	0
 4578 098e 0000     		.short	0
 4579 0990 0000     		.short	0
 4580 0992 E003     		.short	992
 4581 0994 F80F     		.short	4088
 4582 0996 1C0C     		.short	3100
 4583 0998 0C18     		.short	6156
 4584 099a 0C18     		.short	6156
 4585 099c 0C00     		.short	12
 4586 099e 1C00     		.short	28
 4587 09a0 F803     		.short	1016
 4588 09a2 E00F     		.short	4064
 4589 09a4 001E     		.short	7680
 4590 09a6 0038     		.short	14336
 4591 09a8 0630     		.short	12294
 4592 09aa 0630     		.short	12294
 4593 09ac 0E30     		.short	12302
 4594 09ae 1C1C     		.short	7196
 4595 09b0 F80F     		.short	4088
 4596 09b2 E007     		.short	2016
 4597 09b4 0000     		.short	0
 4598 09b6 0000     		.short	0
 4599 09b8 0000     		.short	0
 4600 09ba 0000     		.short	0
 4601 09bc 0000     		.short	0
 4602 09be 0000     		.short	0
 4603 09c0 0000     		.short	0
 4604 09c2 FE7F     		.short	32766
 4605 09c4 FE7F     		.short	32766
 4606 09c6 8001     		.short	384
 4607 09c8 8001     		.short	384
 4608 09ca 8001     		.short	384
 4609 09cc 8001     		.short	384
 4610 09ce 8001     		.short	384
 4611 09d0 8001     		.short	384
 4612 09d2 8001     		.short	384
 4613 09d4 8001     		.short	384
 4614 09d6 8001     		.short	384
 4615 09d8 8001     		.short	384
 4616 09da 8001     		.short	384
 4617 09dc 8001     		.short	384
 4618 09de 8001     		.short	384
 4619 09e0 8001     		.short	384
 4620 09e2 8001     		.short	384
 4621 09e4 0000     		.short	0
 4622 09e6 0000     		.short	0
 4623 09e8 0000     		.short	0
 4624 09ea 0000     		.short	0
 4625 09ec 0000     		.short	0
 4626 09ee 0000     		.short	0
 4627 09f0 0000     		.short	0
 4628 09f2 0C30     		.short	12300
 4629 09f4 0C30     		.short	12300
 4630 09f6 0C30     		.short	12300
 4631 09f8 0C30     		.short	12300
 4632 09fa 0C30     		.short	12300
 4633 09fc 0C30     		.short	12300
 4634 09fe 0C30     		.short	12300
 4635 0a00 0C30     		.short	12300
 4636 0a02 0C30     		.short	12300
 4637 0a04 0C30     		.short	12300
 4638 0a06 0C30     		.short	12300
 4639 0a08 0C30     		.short	12300
 4640 0a0a 0C30     		.short	12300
 4641 0a0c 0C30     		.short	12300
 4642 0a0e 1818     		.short	6168
 4643 0a10 F81F     		.short	8184
 4644 0a12 E007     		.short	2016
 4645 0a14 0000     		.short	0
 4646 0a16 0000     		.short	0
 4647 0a18 0000     		.short	0
 4648 0a1a 0000     		.short	0
 4649 0a1c 0000     		.short	0
 4650 0a1e 0000     		.short	0
 4651 0a20 0000     		.short	0
 4652 0a22 0360     		.short	24579
 4653 0a24 0630     		.short	12294
 4654 0a26 0630     		.short	12294
 4655 0a28 0630     		.short	12294
 4656 0a2a 0C18     		.short	6156
 4657 0a2c 0C18     		.short	6156
 4658 0a2e 0C18     		.short	6156
 4659 0a30 180C     		.short	3096
 4660 0a32 180C     		.short	3096
 4661 0a34 380E     		.short	3640
 4662 0a36 3006     		.short	1584
 4663 0a38 3006     		.short	1584
 4664 0a3a 7007     		.short	1904
 4665 0a3c 6003     		.short	864
 4666 0a3e 6003     		.short	864
 4667 0a40 C001     		.short	448
 4668 0a42 C001     		.short	448
 4669 0a44 0000     		.short	0
 4670 0a46 0000     		.short	0
 4671 0a48 0000     		.short	0
 4672 0a4a 0000     		.short	0
 4673 0a4c 0000     		.short	0
 4674 0a4e 0000     		.short	0
 4675 0a50 0000     		.short	0
 4676 0a52 0360     		.short	24579
 4677 0a54 C361     		.short	25027
 4678 0a56 C361     		.short	25027
 4679 0a58 C361     		.short	25027
 4680 0a5a 6633     		.short	13158
 4681 0a5c 6633     		.short	13158
 4682 0a5e 6633     		.short	13158
 4683 0a60 6633     		.short	13158
 4684 0a62 6633     		.short	13158
 4685 0a64 6633     		.short	13158
 4686 0a66 6C1B     		.short	7020
 4687 0a68 6C1B     		.short	7020
 4688 0a6a 6C1B     		.short	7020
 4689 0a6c 2C1A     		.short	6700
 4690 0a6e 3C1E     		.short	7740
 4691 0a70 380E     		.short	3640
 4692 0a72 380E     		.short	3640
 4693 0a74 0000     		.short	0
 4694 0a76 0000     		.short	0
 4695 0a78 0000     		.short	0
 4696 0a7a 0000     		.short	0
 4697 0a7c 0000     		.short	0
 4698 0a7e 0000     		.short	0
 4699 0a80 0000     		.short	0
 4700 0a82 0FE0     		.short	-8177
 4701 0a84 0C70     		.short	28684
 4702 0a86 1830     		.short	12312
 4703 0a88 3018     		.short	6192
 4704 0a8a 700C     		.short	3184
 4705 0a8c 600E     		.short	3680
 4706 0a8e C007     		.short	1984
 4707 0a90 8003     		.short	896
 4708 0a92 8003     		.short	896
 4709 0a94 C003     		.short	960
 4710 0a96 E006     		.short	1760
 4711 0a98 700C     		.short	3184
 4712 0a9a 301C     		.short	7216
 4713 0a9c 1818     		.short	6168
 4714 0a9e 0C30     		.short	12300
 4715 0aa0 0E60     		.short	24590
 4716 0aa2 07E0     		.short	-8185
 4717 0aa4 0000     		.short	0
 4718 0aa6 0000     		.short	0
 4719 0aa8 0000     		.short	0
 4720 0aaa 0000     		.short	0
 4721 0aac 0000     		.short	0
 4722 0aae 0000     		.short	0
 4723 0ab0 0000     		.short	0
 4724 0ab2 03C0     		.short	-16381
 4725 0ab4 0660     		.short	24582
 4726 0ab6 0C30     		.short	12300
 4727 0ab8 1C38     		.short	14364
 4728 0aba 3818     		.short	6200
 4729 0abc 300C     		.short	3120
 4730 0abe 6006     		.short	1632
 4731 0ac0 E007     		.short	2016
 4732 0ac2 C003     		.short	960
 4733 0ac4 8001     		.short	384
 4734 0ac6 8001     		.short	384
 4735 0ac8 8001     		.short	384
 4736 0aca 8001     		.short	384
 4737 0acc 8001     		.short	384
 4738 0ace 8001     		.short	384
 4739 0ad0 8001     		.short	384
 4740 0ad2 8001     		.short	384
 4741 0ad4 0000     		.short	0
 4742 0ad6 0000     		.short	0
 4743 0ad8 0000     		.short	0
 4744 0ada 0000     		.short	0
 4745 0adc 0000     		.short	0
 4746 0ade 0000     		.short	0
 4747 0ae0 0000     		.short	0
 4748 0ae2 FC7F     		.short	32764
 4749 0ae4 FC7F     		.short	32764
 4750 0ae6 0060     		.short	24576
 4751 0ae8 0030     		.short	12288
 4752 0aea 0018     		.short	6144
 4753 0aec 000C     		.short	3072
 4754 0aee 0006     		.short	1536
 4755 0af0 0003     		.short	768
 4756 0af2 8001     		.short	384
 4757 0af4 C000     		.short	192
 4758 0af6 6000     		.short	96
 4759 0af8 3000     		.short	48
 4760 0afa 1800     		.short	24
 4761 0afc 0C00     		.short	12
 4762 0afe 0600     		.short	6
 4763 0b00 FE7F     		.short	32766
 4764 0b02 FE7F     		.short	32766
 4765 0b04 0000     		.short	0
 4766 0b06 0000     		.short	0
 4767 0b08 0000     		.short	0
 4768 0b0a 0000     		.short	0
 4769 0b0c 0000     		.short	0
 4770 0b0e 0000     		.short	0
 4771 0b10 0000     		.short	0
 4772 0b12 E003     		.short	992
 4773 0b14 E003     		.short	992
 4774 0b16 6000     		.short	96
 4775 0b18 6000     		.short	96
 4776 0b1a 6000     		.short	96
 4777 0b1c 6000     		.short	96
 4778 0b1e 6000     		.short	96
 4779 0b20 6000     		.short	96
 4780 0b22 6000     		.short	96
 4781 0b24 6000     		.short	96
 4782 0b26 6000     		.short	96
 4783 0b28 6000     		.short	96
 4784 0b2a 6000     		.short	96
 4785 0b2c 6000     		.short	96
 4786 0b2e 6000     		.short	96
 4787 0b30 6000     		.short	96
 4788 0b32 6000     		.short	96
 4789 0b34 6000     		.short	96
 4790 0b36 6000     		.short	96
 4791 0b38 6000     		.short	96
 4792 0b3a E003     		.short	992
 4793 0b3c E003     		.short	992
 4794 0b3e 0000     		.short	0
 4795 0b40 0000     		.short	0
 4796 0b42 3000     		.short	48
 4797 0b44 3000     		.short	48
 4798 0b46 6000     		.short	96
 4799 0b48 6000     		.short	96
 4800 0b4a 6000     		.short	96
 4801 0b4c C000     		.short	192
 4802 0b4e C000     		.short	192
 4803 0b50 C000     		.short	192
 4804 0b52 C001     		.short	448
 4805 0b54 8001     		.short	384
 4806 0b56 8001     		.short	384
 4807 0b58 8001     		.short	384
 4808 0b5a 0003     		.short	768
 4809 0b5c 0003     		.short	768
 4810 0b5e 0003     		.short	768
 4811 0b60 0006     		.short	1536
 4812 0b62 0006     		.short	1536
 4813 0b64 0000     		.short	0
 4814 0b66 0000     		.short	0
 4815 0b68 0000     		.short	0
 4816 0b6a 0000     		.short	0
 4817 0b6c 0000     		.short	0
 4818 0b6e 0000     		.short	0
 4819 0b70 0000     		.short	0
 4820 0b72 E003     		.short	992
 4821 0b74 E003     		.short	992
 4822 0b76 0003     		.short	768
 4823 0b78 0003     		.short	768
 4824 0b7a 0003     		.short	768
 4825 0b7c 0003     		.short	768
 4826 0b7e 0003     		.short	768
 4827 0b80 0003     		.short	768
 4828 0b82 0003     		.short	768
 4829 0b84 0003     		.short	768
 4830 0b86 0003     		.short	768
 4831 0b88 0003     		.short	768
 4832 0b8a 0003     		.short	768
 4833 0b8c 0003     		.short	768
 4834 0b8e 0003     		.short	768
 4835 0b90 0003     		.short	768
 4836 0b92 0003     		.short	768
 4837 0b94 0003     		.short	768
 4838 0b96 0003     		.short	768
 4839 0b98 0003     		.short	768
 4840 0b9a E003     		.short	992
 4841 0b9c E003     		.short	992
 4842 0b9e 0000     		.short	0
 4843 0ba0 0000     		.short	0
 4844 0ba2 0000     		.short	0
 4845 0ba4 C001     		.short	448
 4846 0ba6 C001     		.short	448
 4847 0ba8 6003     		.short	864
 4848 0baa 6003     		.short	864
 4849 0bac 6003     		.short	864
 4850 0bae 3006     		.short	1584
 4851 0bb0 3006     		.short	1584
 4852 0bb2 180C     		.short	3096
 4853 0bb4 180C     		.short	3096
 4854 0bb6 0000     		.short	0
 4855 0bb8 0000     		.short	0
 4856 0bba 0000     		.short	0
 4857 0bbc 0000     		.short	0
 4858 0bbe 0000     		.short	0
 4859 0bc0 0000     		.short	0
 4860 0bc2 0000     		.short	0
 4861 0bc4 0000     		.short	0
 4862 0bc6 0000     		.short	0
 4863 0bc8 0000     		.short	0
 4864 0bca 0000     		.short	0
 4865 0bcc 0000     		.short	0
 4866 0bce 0000     		.short	0
 4867 0bd0 0000     		.short	0
 4868 0bd2 0000     		.short	0
 4869 0bd4 0000     		.short	0
 4870 0bd6 0000     		.short	0
 4871 0bd8 0000     		.short	0
 4872 0bda 0000     		.short	0
 4873 0bdc 0000     		.short	0
 4874 0bde 0000     		.short	0
 4875 0be0 0000     		.short	0
 4876 0be2 0000     		.short	0
 4877 0be4 0000     		.short	0
 4878 0be6 0000     		.short	0
 4879 0be8 0000     		.short	0
 4880 0bea 0000     		.short	0
 4881 0bec 0000     		.short	0
 4882 0bee 0000     		.short	0
 4883 0bf0 0000     		.short	0
 4884 0bf2 FFFF     		.short	-1
 4885 0bf4 FFFF     		.short	-1
 4886 0bf6 0000     		.short	0
 4887 0bf8 0000     		.short	0
 4888 0bfa 0000     		.short	0
 4889 0bfc 0000     		.short	0
 4890 0bfe 0000     		.short	0
 4891 0c00 0000     		.short	0
 4892 0c02 0C00     		.short	12
 4893 0c04 0C00     		.short	12
 4894 0c06 0C00     		.short	12
 4895 0c08 0C00     		.short	12
 4896 0c0a 0C00     		.short	12
 4897 0c0c 0C00     		.short	12
 4898 0c0e 0000     		.short	0
 4899 0c10 0000     		.short	0
 4900 0c12 0000     		.short	0
 4901 0c14 0000     		.short	0
 4902 0c16 0000     		.short	0
 4903 0c18 0000     		.short	0
 4904 0c1a 0000     		.short	0
 4905 0c1c 0000     		.short	0
 4906 0c1e 0000     		.short	0
 4907 0c20 0000     		.short	0
 4908 0c22 0000     		.short	0
 4909 0c24 0000     		.short	0
 4910 0c26 0000     		.short	0
 4911 0c28 0000     		.short	0
 4912 0c2a 0000     		.short	0
 4913 0c2c 0000     		.short	0
 4914 0c2e 0000     		.short	0
 4915 0c30 0000     		.short	0
 4916 0c32 0000     		.short	0
 4917 0c34 0000     		.short	0
 4918 0c36 0000     		.short	0
 4919 0c38 0000     		.short	0
 4920 0c3a 0000     		.short	0
 4921 0c3c F003     		.short	1008
 4922 0c3e F807     		.short	2040
 4923 0c40 1C0C     		.short	3100
 4924 0c42 0C0C     		.short	3084
 4925 0c44 000F     		.short	3840
 4926 0c46 F00F     		.short	4080
 4927 0c48 F80C     		.short	3320
 4928 0c4a 0C0C     		.short	3084
 4929 0c4c 0C0C     		.short	3084
 4930 0c4e 1C0F     		.short	3868
 4931 0c50 F80F     		.short	4088
 4932 0c52 F018     		.short	6384
 4933 0c54 0000     		.short	0
 4934 0c56 0000     		.short	0
 4935 0c58 0000     		.short	0
 4936 0c5a 0000     		.short	0
 4937 0c5c 0000     		.short	0
 4938 0c5e 0000     		.short	0
 4939 0c60 0000     		.short	0
 4940 0c62 1800     		.short	24
 4941 0c64 1800     		.short	24
 4942 0c66 1800     		.short	24
 4943 0c68 1800     		.short	24
 4944 0c6a 1800     		.short	24
 4945 0c6c D803     		.short	984
 4946 0c6e F80F     		.short	4088
 4947 0c70 380C     		.short	3128
 4948 0c72 1818     		.short	6168
 4949 0c74 1818     		.short	6168
 4950 0c76 1818     		.short	6168
 4951 0c78 1818     		.short	6168
 4952 0c7a 1818     		.short	6168
 4953 0c7c 1818     		.short	6168
 4954 0c7e 380C     		.short	3128
 4955 0c80 F80F     		.short	4088
 4956 0c82 D803     		.short	984
 4957 0c84 0000     		.short	0
 4958 0c86 0000     		.short	0
 4959 0c88 0000     		.short	0
 4960 0c8a 0000     		.short	0
 4961 0c8c 0000     		.short	0
 4962 0c8e 0000     		.short	0
 4963 0c90 0000     		.short	0
 4964 0c92 0000     		.short	0
 4965 0c94 0000     		.short	0
 4966 0c96 0000     		.short	0
 4967 0c98 0000     		.short	0
 4968 0c9a 0000     		.short	0
 4969 0c9c C003     		.short	960
 4970 0c9e F007     		.short	2032
 4971 0ca0 300E     		.short	3632
 4972 0ca2 180C     		.short	3096
 4973 0ca4 1800     		.short	24
 4974 0ca6 1800     		.short	24
 4975 0ca8 1800     		.short	24
 4976 0caa 1800     		.short	24
 4977 0cac 180C     		.short	3096
 4978 0cae 300E     		.short	3632
 4979 0cb0 F007     		.short	2032
 4980 0cb2 C003     		.short	960
 4981 0cb4 0000     		.short	0
 4982 0cb6 0000     		.short	0
 4983 0cb8 0000     		.short	0
 4984 0cba 0000     		.short	0
 4985 0cbc 0000     		.short	0
 4986 0cbe 0000     		.short	0
 4987 0cc0 0000     		.short	0
 4988 0cc2 0018     		.short	6144
 4989 0cc4 0018     		.short	6144
 4990 0cc6 0018     		.short	6144
 4991 0cc8 0018     		.short	6144
 4992 0cca 0018     		.short	6144
 4993 0ccc C01B     		.short	7104
 4994 0cce F01F     		.short	8176
 4995 0cd0 301C     		.short	7216
 4996 0cd2 1818     		.short	6168
 4997 0cd4 1818     		.short	6168
 4998 0cd6 1818     		.short	6168
 4999 0cd8 1818     		.short	6168
 5000 0cda 1818     		.short	6168
 5001 0cdc 1818     		.short	6168
 5002 0cde 301C     		.short	7216
 5003 0ce0 F01F     		.short	8176
 5004 0ce2 C01B     		.short	7104
 5005 0ce4 0000     		.short	0
 5006 0ce6 0000     		.short	0
 5007 0ce8 0000     		.short	0
 5008 0cea 0000     		.short	0
 5009 0cec 0000     		.short	0
 5010 0cee 0000     		.short	0
 5011 0cf0 0000     		.short	0
 5012 0cf2 0000     		.short	0
 5013 0cf4 0000     		.short	0
 5014 0cf6 0000     		.short	0
 5015 0cf8 0000     		.short	0
 5016 0cfa 0000     		.short	0
 5017 0cfc C003     		.short	960
 5018 0cfe F00F     		.short	4080
 5019 0d00 300C     		.short	3120
 5020 0d02 1818     		.short	6168
 5021 0d04 F81F     		.short	8184
 5022 0d06 F81F     		.short	8184
 5023 0d08 1800     		.short	24
 5024 0d0a 1800     		.short	24
 5025 0d0c 3818     		.short	6200
 5026 0d0e 301C     		.short	7216
 5027 0d10 F00F     		.short	4080
 5028 0d12 C007     		.short	1984
 5029 0d14 0000     		.short	0
 5030 0d16 0000     		.short	0
 5031 0d18 0000     		.short	0
 5032 0d1a 0000     		.short	0
 5033 0d1c 0000     		.short	0
 5034 0d1e 0000     		.short	0
 5035 0d20 0000     		.short	0
 5036 0d22 800F     		.short	3968
 5037 0d24 C00F     		.short	4032
 5038 0d26 C000     		.short	192
 5039 0d28 C000     		.short	192
 5040 0d2a C000     		.short	192
 5041 0d2c F007     		.short	2032
 5042 0d2e F007     		.short	2032
 5043 0d30 C000     		.short	192
 5044 0d32 C000     		.short	192
 5045 0d34 C000     		.short	192
 5046 0d36 C000     		.short	192
 5047 0d38 C000     		.short	192
 5048 0d3a C000     		.short	192
 5049 0d3c C000     		.short	192
 5050 0d3e C000     		.short	192
 5051 0d40 C000     		.short	192
 5052 0d42 C000     		.short	192
 5053 0d44 0000     		.short	0
 5054 0d46 0000     		.short	0
 5055 0d48 0000     		.short	0
 5056 0d4a 0000     		.short	0
 5057 0d4c 0000     		.short	0
 5058 0d4e 0000     		.short	0
 5059 0d50 0000     		.short	0
 5060 0d52 0000     		.short	0
 5061 0d54 0000     		.short	0
 5062 0d56 0000     		.short	0
 5063 0d58 0000     		.short	0
 5064 0d5a 0000     		.short	0
 5065 0d5c E00D     		.short	3552
 5066 0d5e F80F     		.short	4088
 5067 0d60 180E     		.short	3608
 5068 0d62 0C0C     		.short	3084
 5069 0d64 0C0C     		.short	3084
 5070 0d66 0C0C     		.short	3084
 5071 0d68 0C0C     		.short	3084
 5072 0d6a 0C0C     		.short	3084
 5073 0d6c 0C0C     		.short	3084
 5074 0d6e 180E     		.short	3608
 5075 0d70 F80F     		.short	4088
 5076 0d72 E00D     		.short	3552
 5077 0d74 000C     		.short	3072
 5078 0d76 0C0C     		.short	3084
 5079 0d78 1C06     		.short	1564
 5080 0d7a F807     		.short	2040
 5081 0d7c F001     		.short	496
 5082 0d7e 0000     		.short	0
 5083 0d80 0000     		.short	0
 5084 0d82 1800     		.short	24
 5085 0d84 1800     		.short	24
 5086 0d86 1800     		.short	24
 5087 0d88 1800     		.short	24
 5088 0d8a 1800     		.short	24
 5089 0d8c D807     		.short	2008
 5090 0d8e F80F     		.short	4088
 5091 0d90 381C     		.short	7224
 5092 0d92 1818     		.short	6168
 5093 0d94 1818     		.short	6168
 5094 0d96 1818     		.short	6168
 5095 0d98 1818     		.short	6168
 5096 0d9a 1818     		.short	6168
 5097 0d9c 1818     		.short	6168
 5098 0d9e 1818     		.short	6168
 5099 0da0 1818     		.short	6168
 5100 0da2 1818     		.short	6168
 5101 0da4 0000     		.short	0
 5102 0da6 0000     		.short	0
 5103 0da8 0000     		.short	0
 5104 0daa 0000     		.short	0
 5105 0dac 0000     		.short	0
 5106 0dae 0000     		.short	0
 5107 0db0 0000     		.short	0
 5108 0db2 C000     		.short	192
 5109 0db4 C000     		.short	192
 5110 0db6 0000     		.short	0
 5111 0db8 0000     		.short	0
 5112 0dba 0000     		.short	0
 5113 0dbc C000     		.short	192
 5114 0dbe C000     		.short	192
 5115 0dc0 C000     		.short	192
 5116 0dc2 C000     		.short	192
 5117 0dc4 C000     		.short	192
 5118 0dc6 C000     		.short	192
 5119 0dc8 C000     		.short	192
 5120 0dca C000     		.short	192
 5121 0dcc C000     		.short	192
 5122 0dce C000     		.short	192
 5123 0dd0 C000     		.short	192
 5124 0dd2 C000     		.short	192
 5125 0dd4 0000     		.short	0
 5126 0dd6 0000     		.short	0
 5127 0dd8 0000     		.short	0
 5128 0dda 0000     		.short	0
 5129 0ddc 0000     		.short	0
 5130 0dde 0000     		.short	0
 5131 0de0 0000     		.short	0
 5132 0de2 C000     		.short	192
 5133 0de4 C000     		.short	192
 5134 0de6 0000     		.short	0
 5135 0de8 0000     		.short	0
 5136 0dea 0000     		.short	0
 5137 0dec C000     		.short	192
 5138 0dee C000     		.short	192
 5139 0df0 C000     		.short	192
 5140 0df2 C000     		.short	192
 5141 0df4 C000     		.short	192
 5142 0df6 C000     		.short	192
 5143 0df8 C000     		.short	192
 5144 0dfa C000     		.short	192
 5145 0dfc C000     		.short	192
 5146 0dfe C000     		.short	192
 5147 0e00 C000     		.short	192
 5148 0e02 C000     		.short	192
 5149 0e04 C000     		.short	192
 5150 0e06 C000     		.short	192
 5151 0e08 C000     		.short	192
 5152 0e0a F800     		.short	248
 5153 0e0c 7800     		.short	120
 5154 0e0e 0000     		.short	0
 5155 0e10 0000     		.short	0
 5156 0e12 0C00     		.short	12
 5157 0e14 0C00     		.short	12
 5158 0e16 0C00     		.short	12
 5159 0e18 0C00     		.short	12
 5160 0e1a 0C00     		.short	12
 5161 0e1c 0C0C     		.short	3084
 5162 0e1e 0C06     		.short	1548
 5163 0e20 0C03     		.short	780
 5164 0e22 8C01     		.short	396
 5165 0e24 CC00     		.short	204
 5166 0e26 6C00     		.short	108
 5167 0e28 FC00     		.short	252
 5168 0e2a 9C01     		.short	412
 5169 0e2c 8C03     		.short	908
 5170 0e2e 0C03     		.short	780
 5171 0e30 0C06     		.short	1548
 5172 0e32 0C0C     		.short	3084
 5173 0e34 0000     		.short	0
 5174 0e36 0000     		.short	0
 5175 0e38 0000     		.short	0
 5176 0e3a 0000     		.short	0
 5177 0e3c 0000     		.short	0
 5178 0e3e 0000     		.short	0
 5179 0e40 0000     		.short	0
 5180 0e42 C000     		.short	192
 5181 0e44 C000     		.short	192
 5182 0e46 C000     		.short	192
 5183 0e48 C000     		.short	192
 5184 0e4a C000     		.short	192
 5185 0e4c C000     		.short	192
 5186 0e4e C000     		.short	192
 5187 0e50 C000     		.short	192
 5188 0e52 C000     		.short	192
 5189 0e54 C000     		.short	192
 5190 0e56 C000     		.short	192
 5191 0e58 C000     		.short	192
 5192 0e5a C000     		.short	192
 5193 0e5c C000     		.short	192
 5194 0e5e C000     		.short	192
 5195 0e60 C000     		.short	192
 5196 0e62 C000     		.short	192
 5197 0e64 0000     		.short	0
 5198 0e66 0000     		.short	0
 5199 0e68 0000     		.short	0
 5200 0e6a 0000     		.short	0
 5201 0e6c 0000     		.short	0
 5202 0e6e 0000     		.short	0
 5203 0e70 0000     		.short	0
 5204 0e72 0000     		.short	0
 5205 0e74 0000     		.short	0
 5206 0e76 0000     		.short	0
 5207 0e78 0000     		.short	0
 5208 0e7a 0000     		.short	0
 5209 0e7c 7C3C     		.short	15484
 5210 0e7e FF7E     		.short	32511
 5211 0e80 C7E3     		.short	-7225
 5212 0e82 83C1     		.short	-15997
 5213 0e84 83C1     		.short	-15997
 5214 0e86 83C1     		.short	-15997
 5215 0e88 83C1     		.short	-15997
 5216 0e8a 83C1     		.short	-15997
 5217 0e8c 83C1     		.short	-15997
 5218 0e8e 83C1     		.short	-15997
 5219 0e90 83C1     		.short	-15997
 5220 0e92 83C1     		.short	-15997
 5221 0e94 0000     		.short	0
 5222 0e96 0000     		.short	0
 5223 0e98 0000     		.short	0
 5224 0e9a 0000     		.short	0
 5225 0e9c 0000     		.short	0
 5226 0e9e 0000     		.short	0
 5227 0ea0 0000     		.short	0
 5228 0ea2 0000     		.short	0
 5229 0ea4 0000     		.short	0
 5230 0ea6 0000     		.short	0
 5231 0ea8 0000     		.short	0
 5232 0eaa 0000     		.short	0
 5233 0eac 9807     		.short	1944
 5234 0eae F80F     		.short	4088
 5235 0eb0 381C     		.short	7224
 5236 0eb2 1818     		.short	6168
 5237 0eb4 1818     		.short	6168
 5238 0eb6 1818     		.short	6168
 5239 0eb8 1818     		.short	6168
 5240 0eba 1818     		.short	6168
 5241 0ebc 1818     		.short	6168
 5242 0ebe 1818     		.short	6168
 5243 0ec0 1818     		.short	6168
 5244 0ec2 1818     		.short	6168
 5245 0ec4 0000     		.short	0
 5246 0ec6 0000     		.short	0
 5247 0ec8 0000     		.short	0
 5248 0eca 0000     		.short	0
 5249 0ecc 0000     		.short	0
 5250 0ece 0000     		.short	0
 5251 0ed0 0000     		.short	0
 5252 0ed2 0000     		.short	0
 5253 0ed4 0000     		.short	0
 5254 0ed6 0000     		.short	0
 5255 0ed8 0000     		.short	0
 5256 0eda 0000     		.short	0
 5257 0edc C003     		.short	960
 5258 0ede F00F     		.short	4080
 5259 0ee0 300C     		.short	3120
 5260 0ee2 1818     		.short	6168
 5261 0ee4 1818     		.short	6168
 5262 0ee6 1818     		.short	6168
 5263 0ee8 1818     		.short	6168
 5264 0eea 1818     		.short	6168
 5265 0eec 1818     		.short	6168
 5266 0eee 300C     		.short	3120
 5267 0ef0 F00F     		.short	4080
 5268 0ef2 C003     		.short	960
 5269 0ef4 0000     		.short	0
 5270 0ef6 0000     		.short	0
 5271 0ef8 0000     		.short	0
 5272 0efa 0000     		.short	0
 5273 0efc 0000     		.short	0
 5274 0efe 0000     		.short	0
 5275 0f00 0000     		.short	0
 5276 0f02 0000     		.short	0
 5277 0f04 0000     		.short	0
 5278 0f06 0000     		.short	0
 5279 0f08 0000     		.short	0
 5280 0f0a 0000     		.short	0
 5281 0f0c D803     		.short	984
 5282 0f0e F80F     		.short	4088
 5283 0f10 380C     		.short	3128
 5284 0f12 1818     		.short	6168
 5285 0f14 1818     		.short	6168
 5286 0f16 1818     		.short	6168
 5287 0f18 1818     		.short	6168
 5288 0f1a 1818     		.short	6168
 5289 0f1c 1818     		.short	6168
 5290 0f1e 380C     		.short	3128
 5291 0f20 F80F     		.short	4088
 5292 0f22 D803     		.short	984
 5293 0f24 1800     		.short	24
 5294 0f26 1800     		.short	24
 5295 0f28 1800     		.short	24
 5296 0f2a 1800     		.short	24
 5297 0f2c 1800     		.short	24
 5298 0f2e 0000     		.short	0
 5299 0f30 0000     		.short	0
 5300 0f32 0000     		.short	0
 5301 0f34 0000     		.short	0
 5302 0f36 0000     		.short	0
 5303 0f38 0000     		.short	0
 5304 0f3a 0000     		.short	0
 5305 0f3c C01B     		.short	7104
 5306 0f3e F01F     		.short	8176
 5307 0f40 301C     		.short	7216
 5308 0f42 1818     		.short	6168
 5309 0f44 1818     		.short	6168
 5310 0f46 1818     		.short	6168
 5311 0f48 1818     		.short	6168
 5312 0f4a 1818     		.short	6168
 5313 0f4c 1818     		.short	6168
 5314 0f4e 301C     		.short	7216
 5315 0f50 F01F     		.short	8176
 5316 0f52 C01B     		.short	7104
 5317 0f54 0018     		.short	6144
 5318 0f56 0018     		.short	6144
 5319 0f58 0018     		.short	6144
 5320 0f5a 0018     		.short	6144
 5321 0f5c 0018     		.short	6144
 5322 0f5e 0000     		.short	0
 5323 0f60 0000     		.short	0
 5324 0f62 0000     		.short	0
 5325 0f64 0000     		.short	0
 5326 0f66 0000     		.short	0
 5327 0f68 0000     		.short	0
 5328 0f6a 0000     		.short	0
 5329 0f6c B007     		.short	1968
 5330 0f6e F003     		.short	1008
 5331 0f70 7000     		.short	112
 5332 0f72 3000     		.short	48
 5333 0f74 3000     		.short	48
 5334 0f76 3000     		.short	48
 5335 0f78 3000     		.short	48
 5336 0f7a 3000     		.short	48
 5337 0f7c 3000     		.short	48
 5338 0f7e 3000     		.short	48
 5339 0f80 3000     		.short	48
 5340 0f82 3000     		.short	48
 5341 0f84 0000     		.short	0
 5342 0f86 0000     		.short	0
 5343 0f88 0000     		.short	0
 5344 0f8a 0000     		.short	0
 5345 0f8c 0000     		.short	0
 5346 0f8e 0000     		.short	0
 5347 0f90 0000     		.short	0
 5348 0f92 0000     		.short	0
 5349 0f94 0000     		.short	0
 5350 0f96 0000     		.short	0
 5351 0f98 0000     		.short	0
 5352 0f9a 0000     		.short	0
 5353 0f9c E003     		.short	992
 5354 0f9e F003     		.short	1008
 5355 0fa0 380E     		.short	3640
 5356 0fa2 180C     		.short	3096
 5357 0fa4 3800     		.short	56
 5358 0fa6 F003     		.short	1008
 5359 0fa8 C007     		.short	1984
 5360 0faa 000C     		.short	3072
 5361 0fac 180C     		.short	3096
 5362 0fae 380E     		.short	3640
 5363 0fb0 F007     		.short	2032
 5364 0fb2 E003     		.short	992
 5365 0fb4 0000     		.short	0
 5366 0fb6 0000     		.short	0
 5367 0fb8 0000     		.short	0
 5368 0fba 0000     		.short	0
 5369 0fbc 0000     		.short	0
 5370 0fbe 0000     		.short	0
 5371 0fc0 0000     		.short	0
 5372 0fc2 0000     		.short	0
 5373 0fc4 8000     		.short	128
 5374 0fc6 C000     		.short	192
 5375 0fc8 C000     		.short	192
 5376 0fca C000     		.short	192
 5377 0fcc F007     		.short	2032
 5378 0fce F007     		.short	2032
 5379 0fd0 C000     		.short	192
 5380 0fd2 C000     		.short	192
 5381 0fd4 C000     		.short	192
 5382 0fd6 C000     		.short	192
 5383 0fd8 C000     		.short	192
 5384 0fda C000     		.short	192
 5385 0fdc C000     		.short	192
 5386 0fde C000     		.short	192
 5387 0fe0 C007     		.short	1984
 5388 0fe2 8007     		.short	1920
 5389 0fe4 0000     		.short	0
 5390 0fe6 0000     		.short	0
 5391 0fe8 0000     		.short	0
 5392 0fea 0000     		.short	0
 5393 0fec 0000     		.short	0
 5394 0fee 0000     		.short	0
 5395 0ff0 0000     		.short	0
 5396 0ff2 0000     		.short	0
 5397 0ff4 0000     		.short	0
 5398 0ff6 0000     		.short	0
 5399 0ff8 0000     		.short	0
 5400 0ffa 0000     		.short	0
 5401 0ffc 1818     		.short	6168
 5402 0ffe 1818     		.short	6168
 5403 1000 1818     		.short	6168
 5404 1002 1818     		.short	6168
 5405 1004 1818     		.short	6168
 5406 1006 1818     		.short	6168
 5407 1008 1818     		.short	6168
 5408 100a 1818     		.short	6168
 5409 100c 1818     		.short	6168
 5410 100e 381C     		.short	7224
 5411 1010 F01F     		.short	8176
 5412 1012 E019     		.short	6624
 5413 1014 0000     		.short	0
 5414 1016 0000     		.short	0
 5415 1018 0000     		.short	0
 5416 101a 0000     		.short	0
 5417 101c 0000     		.short	0
 5418 101e 0000     		.short	0
 5419 1020 0000     		.short	0
 5420 1022 0000     		.short	0
 5421 1024 0000     		.short	0
 5422 1026 0000     		.short	0
 5423 1028 0000     		.short	0
 5424 102a 0000     		.short	0
 5425 102c 0C18     		.short	6156
 5426 102e 180C     		.short	3096
 5427 1030 180C     		.short	3096
 5428 1032 180C     		.short	3096
 5429 1034 3006     		.short	1584
 5430 1036 3006     		.short	1584
 5431 1038 3006     		.short	1584
 5432 103a 6003     		.short	864
 5433 103c 6003     		.short	864
 5434 103e 6003     		.short	864
 5435 1040 C001     		.short	448
 5436 1042 C001     		.short	448
 5437 1044 0000     		.short	0
 5438 1046 0000     		.short	0
 5439 1048 0000     		.short	0
 5440 104a 0000     		.short	0
 5441 104c 0000     		.short	0
 5442 104e 0000     		.short	0
 5443 1050 0000     		.short	0
 5444 1052 0000     		.short	0
 5445 1054 0000     		.short	0
 5446 1056 0000     		.short	0
 5447 1058 0000     		.short	0
 5448 105a 0000     		.short	0
 5449 105c C141     		.short	16833
 5450 105e C141     		.short	16833
 5451 1060 C361     		.short	25027
 5452 1062 6363     		.short	25443
 5453 1064 6363     		.short	25443
 5454 1066 6363     		.short	25443
 5455 1068 3636     		.short	13878
 5456 106a 3636     		.short	13878
 5457 106c 3636     		.short	13878
 5458 106e 1C1C     		.short	7196
 5459 1070 1C1C     		.short	7196
 5460 1072 1C1C     		.short	7196
 5461 1074 0000     		.short	0
 5462 1076 0000     		.short	0
 5463 1078 0000     		.short	0
 5464 107a 0000     		.short	0
 5465 107c 0000     		.short	0
 5466 107e 0000     		.short	0
 5467 1080 0000     		.short	0
 5468 1082 0000     		.short	0
 5469 1084 0000     		.short	0
 5470 1086 0000     		.short	0
 5471 1088 0000     		.short	0
 5472 108a 0000     		.short	0
 5473 108c 1C38     		.short	14364
 5474 108e 381C     		.short	7224
 5475 1090 300C     		.short	3120
 5476 1092 6006     		.short	1632
 5477 1094 C003     		.short	960
 5478 1096 C003     		.short	960
 5479 1098 C003     		.short	960
 5480 109a C003     		.short	960
 5481 109c 6006     		.short	1632
 5482 109e 300C     		.short	3120
 5483 10a0 381C     		.short	7224
 5484 10a2 1C38     		.short	14364
 5485 10a4 0000     		.short	0
 5486 10a6 0000     		.short	0
 5487 10a8 0000     		.short	0
 5488 10aa 0000     		.short	0
 5489 10ac 0000     		.short	0
 5490 10ae 0000     		.short	0
 5491 10b0 0000     		.short	0
 5492 10b2 0000     		.short	0
 5493 10b4 0000     		.short	0
 5494 10b6 0000     		.short	0
 5495 10b8 0000     		.short	0
 5496 10ba 0000     		.short	0
 5497 10bc 1830     		.short	12312
 5498 10be 3018     		.short	6192
 5499 10c0 3018     		.short	6192
 5500 10c2 7018     		.short	6256
 5501 10c4 600C     		.short	3168
 5502 10c6 600C     		.short	3168
 5503 10c8 E00C     		.short	3296
 5504 10ca C006     		.short	1728
 5505 10cc C006     		.short	1728
 5506 10ce 8003     		.short	896
 5507 10d0 8003     		.short	896
 5508 10d2 8003     		.short	896
 5509 10d4 8001     		.short	384
 5510 10d6 8001     		.short	384
 5511 10d8 C001     		.short	448
 5512 10da F000     		.short	240
 5513 10dc 7000     		.short	112
 5514 10de 0000     		.short	0
 5515 10e0 0000     		.short	0
 5516 10e2 0000     		.short	0
 5517 10e4 0000     		.short	0
 5518 10e6 0000     		.short	0
 5519 10e8 0000     		.short	0
 5520 10ea 0000     		.short	0
 5521 10ec FC1F     		.short	8188
 5522 10ee FC1F     		.short	8188
 5523 10f0 000C     		.short	3072
 5524 10f2 0006     		.short	1536
 5525 10f4 0003     		.short	768
 5526 10f6 8001     		.short	384
 5527 10f8 C000     		.short	192
 5528 10fa 6000     		.short	96
 5529 10fc 3000     		.short	48
 5530 10fe 1800     		.short	24
 5531 1100 FC1F     		.short	8188
 5532 1102 FC1F     		.short	8188
 5533 1104 0000     		.short	0
 5534 1106 0000     		.short	0
 5535 1108 0000     		.short	0
 5536 110a 0000     		.short	0
 5537 110c 0000     		.short	0
 5538 110e 0000     		.short	0
 5539 1110 0000     		.short	0
 5540 1112 0003     		.short	768
 5541 1114 8001     		.short	384
 5542 1116 C000     		.short	192
 5543 1118 C000     		.short	192
 5544 111a C000     		.short	192
 5545 111c C000     		.short	192
 5546 111e C000     		.short	192
 5547 1120 C000     		.short	192
 5548 1122 6000     		.short	96
 5549 1124 6000     		.short	96
 5550 1126 3000     		.short	48
 5551 1128 6000     		.short	96
 5552 112a 4000     		.short	64
 5553 112c C000     		.short	192
 5554 112e C000     		.short	192
 5555 1130 C000     		.short	192
 5556 1132 C000     		.short	192
 5557 1134 C000     		.short	192
 5558 1136 C000     		.short	192
 5559 1138 8001     		.short	384
 5560 113a 0003     		.short	768
 5561 113c 0000     		.short	0
 5562 113e 0000     		.short	0
 5563 1140 0000     		.short	0
 5564 1142 8001     		.short	384
 5565 1144 8001     		.short	384
 5566 1146 8001     		.short	384
 5567 1148 8001     		.short	384
 5568 114a 8001     		.short	384
 5569 114c 8001     		.short	384
 5570 114e 8001     		.short	384
 5571 1150 8001     		.short	384
 5572 1152 8001     		.short	384
 5573 1154 8001     		.short	384
 5574 1156 8001     		.short	384
 5575 1158 8001     		.short	384
 5576 115a 8001     		.short	384
 5577 115c 8001     		.short	384
 5578 115e 8001     		.short	384
 5579 1160 8001     		.short	384
 5580 1162 8001     		.short	384
 5581 1164 8001     		.short	384
 5582 1166 8001     		.short	384
 5583 1168 8001     		.short	384
 5584 116a 8001     		.short	384
 5585 116c 8001     		.short	384
 5586 116e 0000     		.short	0
 5587 1170 0000     		.short	0
 5588 1172 6000     		.short	96
 5589 1174 C000     		.short	192
 5590 1176 C001     		.short	448
 5591 1178 8001     		.short	384
 5592 117a 8001     		.short	384
 5593 117c 8001     		.short	384
 5594 117e 8001     		.short	384
 5595 1180 8001     		.short	384
 5596 1182 0003     		.short	768
 5597 1184 0003     		.short	768
 5598 1186 0006     		.short	1536
 5599 1188 0003     		.short	768
 5600 118a 0001     		.short	256
 5601 118c 8001     		.short	384
 5602 118e 8001     		.short	384
 5603 1190 8001     		.short	384
 5604 1192 8001     		.short	384
 5605 1194 8001     		.short	384
 5606 1196 8001     		.short	384
 5607 1198 C000     		.short	192
 5608 119a 6000     		.short	96
 5609 119c 0000     		.short	0
 5610 119e 0000     		.short	0
 5611 11a0 0000     		.short	0
 5612 11a2 0000     		.short	0
 5613 11a4 0000     		.short	0
 5614 11a6 0000     		.short	0
 5615 11a8 0000     		.short	0
 5616 11aa 0000     		.short	0
 5617 11ac 0000     		.short	0
 5618 11ae 0000     		.short	0
 5619 11b0 F010     		.short	4336
 5620 11b2 F81F     		.short	8184
 5621 11b4 080F     		.short	3848
 5622 11b6 0000     		.short	0
 5623 11b8 0000     		.short	0
 5624 11ba 0000     		.short	0
 5625 11bc 0000     		.short	0
 5626 11be 0000     		.short	0
 5627 11c0 0000     		.short	0
 5628 11c2 0000     		.short	0
 5629 11c4 0000     		.short	0
 5630 11c6 0000     		.short	0
 5631 11c8 0000     		.short	0
 5632 11ca 0000     		.short	0
 5633 11cc 0000     		.short	0
 5634 11ce 0000     		.short	0
 5635 11d0 0000     		.short	0
 5636 11d2 0000     		.short	0
 5637 11d4 0000     		.short	0
 5638 11d6 0000     		.short	0
 5639 11d8 0000     		.short	0
 5640 11da 0000     		.short	0
 5641 11dc 0000     		.short	0
 5642 11de 0000     		.short	0
 5643 11e0 0000     		.short	0
 5644 11e2 0000     		.short	0
 5645 11e4 0000     		.short	0
 5646 11e6 0000     		.short	0
 5647 11e8 0000     		.short	0
 5648 11ea 0000     		.short	0
 5649 11ec 0000     		.short	0
 5650 11ee 0000     		.short	0
 5651 11f0 0000     		.short	0
 5652 11f2 0000     		.short	0
 5653 11f4 0000     		.short	0
 5654 11f6 0000     		.short	0
 5655 11f8 0000     		.short	0
 5656 11fa 0000     		.short	0
 5657 11fc 0000     		.short	0
 5658 11fe 0000     		.short	0
 5659 1200 0000     		.short	0
 5660 1202 0000     		.short	0
 5661 1204 0000     		.short	0
 5662 1206 0000     		.short	0
 5663 1208 0000     		.short	0
 5664 120a C003     		.short	960
 5665 120c 300C     		.short	3120
 5666 120e 0810     		.short	4104
 5667 1210 0420     		.short	8196
 5668 1212 0420     		.short	8196
 5669 1214 0240     		.short	16386
 5670 1216 0240     		.short	16386
 5671 1218 0240     		.short	16386
 5672 121a 0240     		.short	16386
 5673 121c 0240     		.short	16386
 5674 121e 0420     		.short	8196
 5675 1220 0420     		.short	8196
 5676 1222 0810     		.short	4104
 5677 1224 300C     		.short	3120
 5678 1226 C003     		.short	960
 5679 1228 0000     		.short	0
 5680 122a 0000     		.short	0
 5681 122c 0000     		.short	0
 5682 122e 0000     		.short	0
 5683 1230 0000     		.short	0
 5684 1232 0000     		.short	0
 5685 1234 0000     		.short	0
 5686 1236 0000     		.short	0
 5687 1238 0000     		.short	0
 5688 123a C003     		.short	960
 5689 123c F00F     		.short	4080
 5690 123e F81F     		.short	8184
 5691 1240 FC3F     		.short	16380
 5692 1242 FC3F     		.short	16380
 5693 1244 FE7F     		.short	32766
 5694 1246 FE7F     		.short	32766
 5695 1248 FE7F     		.short	32766
 5696 124a FE7F     		.short	32766
 5697 124c FE7F     		.short	32766
 5698 124e FC3F     		.short	16380
 5699 1250 FC3F     		.short	16380
 5700 1252 F81F     		.short	8184
 5701 1254 F00F     		.short	4080
 5702 1256 C003     		.short	960
 5703 1258 0000     		.short	0
 5704 125a 0000     		.short	0
 5705 125c 0000     		.short	0
 5706 125e 0000     		.short	0
 5707 1260 0000     		.short	0
 5708 1262 0000     		.short	0
 5709 1264 0000     		.short	0
 5710 1266 0000     		.short	0
 5711 1268 0000     		.short	0
 5712 126a 0000     		.short	0
 5713 126c 0000     		.short	0
 5714 126e E007     		.short	2016
 5715 1270 F00F     		.short	4080
 5716 1272 1818     		.short	6168
 5717 1274 1818     		.short	6168
 5718 1276 1818     		.short	6168
 5719 1278 1818     		.short	6168
 5720 127a 1818     		.short	6168
 5721 127c 1818     		.short	6168
 5722 127e F00F     		.short	4080
 5723 1280 E007     		.short	2016
 5724 1282 0000     		.short	0
 5725 1284 0000     		.short	0
 5726 1286 0000     		.short	0
 5727 1288 0000     		.short	0
 5728 128a 0000     		.short	0
 5729 128c 0000     		.short	0
 5730 128e 0000     		.short	0
 5731 1290 0000     		.short	0
 5732 1292 0000     		.short	0
 5733 1294 0000     		.short	0
 5734 1296 0000     		.short	0
 5735 1298 0000     		.short	0
 5736 129a 0000     		.short	0
 5737 129c 0000     		.short	0
 5738 129e E007     		.short	2016
 5739 12a0 F00F     		.short	4080
 5740 12a2 F81F     		.short	8184
 5741 12a4 F81F     		.short	8184
 5742 12a6 F81F     		.short	8184
 5743 12a8 F81F     		.short	8184
 5744 12aa F81F     		.short	8184
 5745 12ac F81F     		.short	8184
 5746 12ae F00F     		.short	4080
 5747 12b0 E007     		.short	2016
 5748 12b2 0000     		.short	0
 5749 12b4 0000     		.short	0
 5750 12b6 0000     		.short	0
 5751 12b8 0000     		.short	0
 5752 12ba 0000     		.short	0
 5753 12bc 0000     		.short	0
 5754 12be 0000     		.short	0
 5755 12c0 0000     		.short	0
 5756 12c2 0000     		.short	0
 5757 12c4 0000     		.short	0
 5758 12c6 0000     		.short	0
 5759 12c8 0000     		.short	0
 5760 12ca 0000     		.short	0
 5761 12cc 0000     		.short	0
 5762 12ce 0000     		.short	0
 5763 12d0 0000     		.short	0
 5764 12d2 0000     		.short	0
 5765 12d4 0000     		.short	0
 5766 12d6 0000     		.short	0
 5767 12d8 8001     		.short	384
 5768 12da C003     		.short	960
 5769 12dc 6006     		.short	1632
 5770 12de 300C     		.short	3120
 5771 12e0 1818     		.short	6168
 5772 12e2 1818     		.short	6168
 5773 12e4 F81F     		.short	8184
 5774 12e6 F81F     		.short	8184
 5775 12e8 0000     		.short	0
 5776 12ea 0000     		.short	0
 5777 12ec 0000     		.short	0
 5778 12ee 0000     		.short	0
 5779 12f0 0000     		.short	0
 5780 12f2 0000     		.short	0
 5781 12f4 0000     		.short	0
 5782 12f6 0000     		.short	0
 5783 12f8 0000     		.short	0
 5784 12fa 0000     		.short	0
 5785 12fc 0000     		.short	0
 5786 12fe 0000     		.short	0
 5787 1300 0000     		.short	0
 5788 1302 0000     		.short	0
 5789 1304 0000     		.short	0
 5790 1306 0000     		.short	0
 5791 1308 8001     		.short	384
 5792 130a C003     		.short	960
 5793 130c E007     		.short	2016
 5794 130e F00F     		.short	4080
 5795 1310 F81F     		.short	8184
 5796 1312 F81F     		.short	8184
 5797 1314 F81F     		.short	8184
 5798 1316 F81F     		.short	8184
 5799 1318 0000     		.short	0
 5800 131a 0000     		.short	0
 5801 131c 0000     		.short	0
 5802 131e 0000     		.short	0
 5803 1320 0000     		.short	0
 5804 1322 0000     		.short	0
 5805 1324 0000     		.short	0
 5806 1326 0000     		.short	0
 5807 1328 F81F     		.short	8184
 5808 132a F81F     		.short	8184
 5809 132c 1818     		.short	6168
 5810 132e 1818     		.short	6168
 5811 1330 300C     		.short	3120
 5812 1332 6006     		.short	1632
 5813 1334 C003     		.short	960
 5814 1336 8001     		.short	384
 5815 1338 0000     		.short	0
 5816 133a 0000     		.short	0
 5817 133c 0000     		.short	0
 5818 133e 0000     		.short	0
 5819 1340 0000     		.short	0
 5820 1342 0000     		.short	0
 5821 1344 0000     		.short	0
 5822 1346 0000     		.short	0
 5823 1348 0000     		.short	0
 5824 134a 0000     		.short	0
 5825 134c 0000     		.short	0
 5826 134e 0000     		.short	0
 5827 1350 0000     		.short	0
 5828 1352 0000     		.short	0
 5829 1354 0000     		.short	0
 5830 1356 0000     		.short	0
 5831 1358 F81F     		.short	8184
 5832 135a F81F     		.short	8184
 5833 135c F81F     		.short	8184
 5834 135e F81F     		.short	8184
 5835 1360 F00F     		.short	4080
 5836 1362 E007     		.short	2016
 5837 1364 C003     		.short	960
 5838 1366 8001     		.short	384
 5839 1368 0000     		.short	0
 5840 136a 0000     		.short	0
 5841 136c 0000     		.short	0
 5842 136e 0000     		.short	0
 5843 1370 0000     		.short	0
 5844 1372 0000     		.short	0
 5845 1374 0000     		.short	0
 5846 1376 0000     		.short	0
 5847 1378 0000     		.short	0
 5848 137a 0000     		.short	0
 5849 137c 0000     		.short	0
 5850 137e 0000     		.short	0
 5851 1380 0000     		.short	0
 5852 1382 0000     		.short	0
 5853 1384 0000     		.short	0
 5854 1386 0000     		.short	0
 5855 1388 0000     		.short	0
 5856 138a 0000     		.short	0
 5857 138c 0000     		.short	0
 5858 138e E001     		.short	480
 5859 1390 F001     		.short	496
 5860 1392 9801     		.short	408
 5861 1394 8C01     		.short	396
 5862 1396 8601     		.short	390
 5863 1398 8601     		.short	390
 5864 139a 8C01     		.short	396
 5865 139c 9801     		.short	408
 5866 139e F001     		.short	496
 5867 13a0 E001     		.short	480
 5868 13a2 0000     		.short	0
 5869 13a4 0000     		.short	0
 5870 13a6 0000     		.short	0
 5871 13a8 0000     		.short	0
 5872 13aa 0000     		.short	0
 5873 13ac 0000     		.short	0
 5874 13ae 0000     		.short	0
 5875 13b0 0000     		.short	0
 5876 13b2 0000     		.short	0
 5877 13b4 0000     		.short	0
 5878 13b6 0000     		.short	0
 5879 13b8 0000     		.short	0
 5880 13ba 0000     		.short	0
 5881 13bc 0000     		.short	0
 5882 13be E001     		.short	480
 5883 13c0 F001     		.short	496
 5884 13c2 F801     		.short	504
 5885 13c4 FC01     		.short	508
 5886 13c6 FE01     		.short	510
 5887 13c8 FE01     		.short	510
 5888 13ca FC01     		.short	508
 5889 13cc F801     		.short	504
 5890 13ce F001     		.short	496
 5891 13d0 E001     		.short	480
 5892 13d2 0000     		.short	0
 5893 13d4 0000     		.short	0
 5894 13d6 0000     		.short	0
 5895 13d8 0000     		.short	0
 5896 13da 0000     		.short	0
 5897 13dc 0000     		.short	0
 5898 13de 0000     		.short	0
 5899 13e0 0000     		.short	0
 5900 13e2 0000     		.short	0
 5901 13e4 0000     		.short	0
 5902 13e6 0000     		.short	0
 5903 13e8 0000     		.short	0
 5904 13ea 0000     		.short	0
 5905 13ec 0000     		.short	0
 5906 13ee 8007     		.short	1920
 5907 13f0 800F     		.short	3968
 5908 13f2 8019     		.short	6528
 5909 13f4 8031     		.short	12672
 5910 13f6 8061     		.short	24960
 5911 13f8 8061     		.short	24960
 5912 13fa 8031     		.short	12672
 5913 13fc 8019     		.short	6528
 5914 13fe 800F     		.short	3968
 5915 1400 8007     		.short	1920
 5916 1402 0000     		.short	0
 5917 1404 0000     		.short	0
 5918 1406 0000     		.short	0
 5919 1408 0000     		.short	0
 5920 140a 0000     		.short	0
 5921 140c 0000     		.short	0
 5922 140e 0000     		.short	0
 5923 1410 0000     		.short	0
 5924 1412 0000     		.short	0
 5925 1414 0000     		.short	0
 5926 1416 0000     		.short	0
 5927 1418 0000     		.short	0
 5928 141a 0000     		.short	0
 5929 141c 0000     		.short	0
 5930 141e 8007     		.short	1920
 5931 1420 800F     		.short	3968
 5932 1422 801F     		.short	8064
 5933 1424 803F     		.short	16256
 5934 1426 807F     		.short	32640
 5935 1428 807F     		.short	32640
 5936 142a 803F     		.short	16256
 5937 142c 801F     		.short	8064
 5938 142e 800F     		.short	3968
 5939 1430 8007     		.short	1920
 5940 1432 0000     		.short	0
 5941 1434 0000     		.short	0
 5942 1436 0000     		.short	0
 5943 1438 0000     		.short	0
 5944 143a 0000     		.short	0
 5945 143c 0000     		.short	0
 5946 143e 0000     		.short	0
 5947 1440 0000     		.short	0
 5948 1442 C001     		.short	448
 5949 1444 2002     		.short	544
 5950 1446 2002     		.short	544
 5951 1448 4001     		.short	320
 5952 144a 3006     		.short	1584
 5953 144c 0808     		.short	2056
 5954 144e 0808     		.short	2056
 5955 1450 0808     		.short	2056
 5956 1452 0808     		.short	2056
 5957 1454 0808     		.short	2056
 5958 1456 0808     		.short	2056
 5959 1458 0808     		.short	2056
 5960 145a 2002     		.short	544
 5961 145c 2002     		.short	544
 5962 145e 2002     		.short	544
 5963 1460 2002     		.short	544
 5964 1462 2002     		.short	544
 5965 1464 2002     		.short	544
 5966 1466 2002     		.short	544
 5967 1468 2002     		.short	544
 5968 146a 2002     		.short	544
 5969 146c 2002     		.short	544
 5970 146e 0000     		.short	0
 5971 1470 0000     		.short	0
 5972 1472 C001     		.short	448
 5973 1474 E003     		.short	992
 5974 1476 E003     		.short	992
 5975 1478 C001     		.short	448
 5976 147a F007     		.short	2032
 5977 147c D80D     		.short	3544
 5978 147e D80D     		.short	3544
 5979 1480 D80D     		.short	3544
 5980 1482 D80D     		.short	3544
 5981 1484 D80D     		.short	3544
 5982 1486 D80D     		.short	3544
 5983 1488 D80D     		.short	3544
 5984 148a 6003     		.short	864
 5985 148c 6003     		.short	864
 5986 148e 6003     		.short	864
 5987 1490 6003     		.short	864
 5988 1492 6003     		.short	864
 5989 1494 6003     		.short	864
 5990 1496 6003     		.short	864
 5991 1498 6003     		.short	864
 5992 149a 6003     		.short	864
 5993 149c 6003     		.short	864
 5994 149e 0000     		.short	0
 5995 14a0 0000     		.short	0
 5996 14a2 C001     		.short	448
 5997 14a4 2002     		.short	544
 5998 14a6 2002     		.short	544
 5999 14a8 4001     		.short	320
 6000 14aa 3006     		.short	1584
 6001 14ac 0808     		.short	2056
 6002 14ae 0808     		.short	2056
 6003 14b0 0808     		.short	2056
 6004 14b2 0410     		.short	4100
 6005 14b4 0220     		.short	8194
 6006 14b6 0220     		.short	8194
 6007 14b8 4001     		.short	320
 6008 14ba 2002     		.short	544
 6009 14bc 2002     		.short	544
 6010 14be 1004     		.short	1040
 6011 14c0 0808     		.short	2056
 6012 14c2 0808     		.short	2056
 6013 14c4 0410     		.short	4100
 6014 14c6 0410     		.short	4100
 6015 14c8 0420     		.short	8196
 6016 14ca 0440     		.short	16388
 6017 14cc 0000     		.short	0
 6018 14ce 0000     		.short	0
 6019 14d0 0000     		.short	0
 6020 14d2 C001     		.short	448
 6021 14d4 E003     		.short	992
 6022 14d6 E003     		.short	992
 6023 14d8 C001     		.short	448
 6024 14da F007     		.short	2032
 6025 14dc D80D     		.short	3544
 6026 14de D80D     		.short	3544
 6027 14e0 D80D     		.short	3544
 6028 14e2 CC19     		.short	6604
 6029 14e4 C631     		.short	12742
 6030 14e6 C261     		.short	25026
 6031 14e8 C001     		.short	448
 6032 14ea 6003     		.short	864
 6033 14ec 6003     		.short	864
 6034 14ee 7006     		.short	1648
 6035 14f0 380C     		.short	3128
 6036 14f2 180C     		.short	3096
 6037 14f4 0C18     		.short	6156
 6038 14f6 0C18     		.short	6156
 6039 14f8 0C30     		.short	12300
 6040 14fa 0C60     		.short	24588
 6041 14fc 0000     		.short	0
 6042 14fe 0000     		.short	0
 6043              		.section	.rodata.str1.1,"aMS",%progbits,1
 6044              	.LC0:
 6045 0000 20202020 		.ascii	"                    \000"
 6045      20202020 
 6045      20202020 
 6045      20202020 
 6045      20202020 
 6046              		.data
 6047              		.align	1
 6048              		.set	.LANCHOR0,. + 0
 6051              	TextColor:
 6052 0000 E007     		.short	2016
 6055              	BackColor:
 6056 0002 FFFF     		.short	-1
 6057              		.text
 6058              	.Letext0:
 6059              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q2\\bin\\../lib/gcc/arm-none-eab
 6060              		.file 3 "../CM3 Core/LPC17xx.h"
 6061              		.file 4 "../Header Files/lpc_types.h"
 6062              		.file 5 "../Header Files/lpc17xx_uart.h"
 6063              		.file 6 "../Header Files/lpc17xx_ssp.h"
 6064              		.file 7 "../Header Files/lpc_ssp_glcd.h"
 6065              		.file 8 "../CM3 Core/core_cm3.h"
 6066              		.file 9 "../Header Files/lpc17xx_i2c.h"
 6067              		.file 10 "../Header Files/Font_24x16.h"
 6068              		.file 11 "../Header Files/lpc17xx_gpio.h"
 6069              		.file 12 "../Header Files/lpc17xx_systick.h"
 6070              		.file 13 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 lpc_ssp_glcd.c
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:18     .text:00000000 $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:22     .text:00000000 wr_dat_start
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:52     .text:00000018 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:56     .text:0000001c $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:60     .text:0000001c wr_dat_stop
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:77     .text:00000024 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:81     .text:00000028 $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:85     .text:00000028 wr_dat_only
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:133    .text:00000048 $d
                            *COM*:00000040 Tx_Buf1
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:138    .text:00000050 $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:143    .text:00000050 GLCD_Backlight
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:178    .text:00000066 GLCD_Reset
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:223    .text:00000090 GLCD_SetTextColor
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:238    .text:00000098 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:242    .text:0000009c $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:247    .text:0000009c GLCD_SetBackColor
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:262    .text:000000a4 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:266    .text:000000a8 $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:271    .text:000000a8 Write_Command_Glcd
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:356    .text:00000100 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:360    .text:00000104 $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:365    .text:00000104 Write_Data_Glcd
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:438    .text:00000144 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:443    .text:0000014c $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:448    .text:0000014c GLCD_Bargraph
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:582    .text:000001f4 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:586    .text:000001f8 $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:591    .text:000001f8 GLCD_Draw_Char
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:714    .text:00000294 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:718    .text:00000298 $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:723    .text:00000298 GLCD_Display_Char
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:761    .text:000002bc $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:765    .text:000002c0 $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:770    .text:000002c0 GLCD_PutPixel
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:826    .text:000002f0 GLCD_Line
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:1034   .text:000003d8 GLCD_Triangle
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:1855   .text:00000884 GLCD_Frame
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2019   .text:000009a2 GLCD_Circle
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2346   .text:00000b74 GLCD_Window
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2419   .text:00000bbe GLCD_Display_String
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2485   .text:00000bee GLCD_ClearLn
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2519   .text:00000c10 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2523   .text:00000c14 $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2528   .text:00000c14 GLCD_Clear
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2598   .text:00000c5e GLCD_Set_Loc
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2649   .text:00000c8a GLCD_Window_Fill
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2719   .text:00000cc0 GLCD_Rect
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2891   .text:00000db4 GLCD_Bitmap
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2967   .text:00000df4 GLCD_Display_Home
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:2991   .text:00000e02 GLCD_Driver_OutCtrl
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:3015   .text:00000e14 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:3019   .text:00000e18 $t
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:3051   .text:00000e38 GLCD_Init
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:3354   .rodata:00000000 Font_24x16
                            *COM*:00000040 I2C_Rx_Buf
                            *COM*:00000040 I2C_Tx_Buf
                            *COM*:00000040 Rx_Buf1
                            *COM*:00000001 TxIntStat
                            *COM*:00000210 rb
                            *COM*:00000002 EscFlag
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:3350   .rodata:00000000 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:6047   .data:00000000 $d
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:6051   .data:00000000 TextColor
C:\Users\raghav\AppData\Local\Temp\ccT2ZsD0.s:6055   .data:00000002 BackColor
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.549b84bf9d8399e395ff8216fcbb3d69
                           .group:00000000 wm4.LPC17xx.h.27.964facdaadd4aa3f18ac78c8a78f0013
                           .group:00000000 wm4.core_cm3.h.32.3cac756d6e704b813781f82afd94fa5f
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.6beb15babd14c076008ec0890c26e21c
                           .group:00000000 wm4.core_cm3.h.83.1a3cb9afc687cf157efeddb3d5f3109e
                           .group:00000000 wm4.LPC17xx.h.953.82b7a9ed60bb594048bc8738cf1d3489
                           .group:00000000 wm4.lpc_types.h.32.72d58ce80fabd1a5430c6ec0500a090b
                           .group:00000000 wm4.lpc17xx_pinsel.h.30.767cda9b27a5c688cd97e5947d664047
                           .group:00000000 wm4.lpc17xx_clkpwr.h.30.8537d92ff6965961e80fda89ac5019f2
                           .group:00000000 wm4.lpc17xx_systick.h.30.9f34c15ae315a203fed1d933040ad7b9
                           .group:00000000 wm4.lpc17xx_gpio.h.30.0b884ee110dd20865784f12e1569ecf1
                           .group:00000000 wm4.lpc17xx_wdt.h.34.a2dcafab9849854019efb51f717a8129
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832
                           .group:00000000 wm4.lpc17xx_uart.h.58.dbba6e724b29a6214e9cafbaf3ee8a9e
                           .group:00000000 wm4.lpc17xx_ssp.h.48.cd045d667ab7b89d5d550d38997df61b
                           .group:00000000 wm4.lpc17xx_i2c.h.30.8ecc2351e7cba41135ba36b3ad45f764
                           .group:00000000 wm4.lpc_i2c_tsc2004.h.29.34082f268f216caa8d0bf2c0960ad4a6
                           .group:00000000 wm4.lpc_ssp_glcd.h.46.c050a23f7d3e575d1eafabe862fb4f95
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.Font_24x16.h.16.3819cadfc08710b0322707370d919056

UNDEFINED SYMBOLS
CS_Force1
GPIO_SetValue
SSP_ReadWrite
GPIO_ClearValue
delay_ms
GPIO_SetDir
