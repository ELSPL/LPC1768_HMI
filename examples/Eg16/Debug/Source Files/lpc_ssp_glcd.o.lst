   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"lpc_ssp_glcd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	1
  19              		.thumb
  20              		.thumb_func
  22              	wr_dat_start:
  23              	.LFB65:
  24              		.file 1 "../Source Files/lpc_ssp_glcd.c"
   1:../Source Files/lpc_ssp_glcd.c **** /**********************************************************************
   2:../Source Files/lpc_ssp_glcd.c **** * $Id$		lpc_ssp_glcd.c
   3:../Source Files/lpc_ssp_glcd.c **** *//**
   4:../Source Files/lpc_ssp_glcd.c **** * @file		lpc_ssp_glcd.c
   5:../Source Files/lpc_ssp_glcd.c **** * @brief	Contains all functions support for SSP based GLCD
   6:../Source Files/lpc_ssp_glcd.c **** *           library on LPC17xx
   7:../Source Files/lpc_ssp_glcd.c **** * @version	1.0
   8:../Source Files/lpc_ssp_glcd.c **** * @date		18. Dec. 2013
   9:../Source Files/lpc_ssp_glcd.c **** * @author	Dwijay.Edutech Learning Solutions
  10:../Source Files/lpc_ssp_glcd.c **** ***********************************************************************
  11:../Source Files/lpc_ssp_glcd.c **** * Software that is described herein is for illustrative purposes only
  12:../Source Files/lpc_ssp_glcd.c **** * which provides customers with programming information regarding the
  13:../Source Files/lpc_ssp_glcd.c **** * products. This software is supplied "AS IS" without any warranties.
  14:../Source Files/lpc_ssp_glcd.c **** * NXP Semiconductors assumes no responsibility or liability for the
  15:../Source Files/lpc_ssp_glcd.c **** * use of the software, conveys no license or title under any patent,
  16:../Source Files/lpc_ssp_glcd.c **** * copyright, or mask work right to the product. NXP Semiconductors
  17:../Source Files/lpc_ssp_glcd.c **** * reserves the right to make changes in the software without
  18:../Source Files/lpc_ssp_glcd.c **** * notification. NXP Semiconductors also make no representation or
  19:../Source Files/lpc_ssp_glcd.c **** * warranty that such application will be suitable for the specified
  20:../Source Files/lpc_ssp_glcd.c **** * use without further testing or modification.
  21:../Source Files/lpc_ssp_glcd.c **** **********************************************************************/
  22:../Source Files/lpc_ssp_glcd.c **** 
  23:../Source Files/lpc_ssp_glcd.c **** /* Peripheral group ----------------------------------------------------------- */
  24:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD
  25:../Source Files/lpc_ssp_glcd.c ****  * @{
  26:../Source Files/lpc_ssp_glcd.c ****  */
  27:../Source Files/lpc_ssp_glcd.c **** 
  28:../Source Files/lpc_ssp_glcd.c **** /* Includes ------------------------------------------------------------------- */
  29:../Source Files/lpc_ssp_glcd.c **** #include "lpc_ssp_glcd.h"
  30:../Source Files/lpc_ssp_glcd.c **** #include "math.h"
  31:../Source Files/lpc_ssp_glcd.c **** #include "Font_24x16.h"
  32:../Source Files/lpc_ssp_glcd.c **** #include "Font_5x7.h"
  33:../Source Files/lpc_ssp_glcd.c **** 
  34:../Source Files/lpc_ssp_glcd.c **** 
  35:../Source Files/lpc_ssp_glcd.c **** /* If this source file built with example, the LPC17xx FW library configuration
  36:../Source Files/lpc_ssp_glcd.c ****  * file in each example directory ("lpc17xx_libcfg.h") must be included,
  37:../Source Files/lpc_ssp_glcd.c ****  * otherwise the default FW library configuration file must be included instead
  38:../Source Files/lpc_ssp_glcd.c ****  */
  39:../Source Files/lpc_ssp_glcd.c **** 
  40:../Source Files/lpc_ssp_glcd.c **** /******************************************************************************/
  41:../Source Files/lpc_ssp_glcd.c **** static volatile uint16_t TextColor = Black, BackColor = White;
  42:../Source Files/lpc_ssp_glcd.c **** 
  43:../Source Files/lpc_ssp_glcd.c **** // Swap two bytes
  44:../Source Files/lpc_ssp_glcd.c **** #define SWAP(x,y) do { (x)=(x)^(y); (y)=(x)^(y); (x)=(x)^(y); } while(0)
  45:../Source Files/lpc_ssp_glcd.c **** #define bit_test(D,i) (D & (0x01 << i))
  46:../Source Files/lpc_ssp_glcd.c **** 
  47:../Source Files/lpc_ssp_glcd.c **** /** @addtogroup GLCD_Public_Functions
  48:../Source Files/lpc_ssp_glcd.c ****  * @{
  49:../Source Files/lpc_ssp_glcd.c ****  */
  50:../Source Files/lpc_ssp_glcd.c **** 
  51:../Source Files/lpc_ssp_glcd.c **** /* Public Functions ----------------------------------------------------------- */
  52:../Source Files/lpc_ssp_glcd.c **** 
  53:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  54:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls Backlight
  55:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	NewState	ENABLE/DISABLE the Backlight
  56:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  57:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  58:../Source Files/lpc_ssp_glcd.c **** void GLCD_Backlight (FunctionalState NewState)
  59:../Source Files/lpc_ssp_glcd.c **** {
  60:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
  61:../Source Files/lpc_ssp_glcd.c **** 	{
  62:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
  63:../Source Files/lpc_ssp_glcd.c **** 	}
  64:../Source Files/lpc_ssp_glcd.c **** 	else
  65:../Source Files/lpc_ssp_glcd.c **** 	{
  66:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
  67:../Source Files/lpc_ssp_glcd.c **** 	}
  68:../Source Files/lpc_ssp_glcd.c **** }
  69:../Source Files/lpc_ssp_glcd.c **** 
  70:../Source Files/lpc_ssp_glcd.c **** 
  71:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  72:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function resets GLCD
  73:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
  74:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  75:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  76:../Source Files/lpc_ssp_glcd.c **** void GLCD_Reset (void)
  77:../Source Files/lpc_ssp_glcd.c **** {
  78:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
  79:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
  81:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
  82:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
  83:../Source Files/lpc_ssp_glcd.c **** }
  84:../Source Files/lpc_ssp_glcd.c **** 
  85:../Source Files/lpc_ssp_glcd.c **** 
  86:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
  87:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function controls GLCD Output
  88:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	drv	    Output Format
  89:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_LEFT
  90:../Source Files/lpc_ssp_glcd.c ****  * 						- TOP_RIGHT
  91:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_LEFT
  92:../Source Files/lpc_ssp_glcd.c ****  * 						- BOTTOM_RIGHT
  93:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
  94:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
  95:../Source Files/lpc_ssp_glcd.c **** void GLCD_Driver_OutCtrl (DRIVER_OUT_Type drv)
  96:../Source Files/lpc_ssp_glcd.c **** {
  97:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
  98:../Source Files/lpc_ssp_glcd.c **** 
  99:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
 100:../Source Files/lpc_ssp_glcd.c **** 	{
 101:../Source Files/lpc_ssp_glcd.c **** 	case TOP_LEFT:
 102:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 103:../Source Files/lpc_ssp_glcd.c **** 		break;
 104:../Source Files/lpc_ssp_glcd.c **** 
 105:../Source Files/lpc_ssp_glcd.c **** 	case TOP_RIGHT:
 106:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 107:../Source Files/lpc_ssp_glcd.c **** 		break;
 108:../Source Files/lpc_ssp_glcd.c **** 
 109:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_LEFT:
 110:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 111:../Source Files/lpc_ssp_glcd.c **** 		break;
 112:../Source Files/lpc_ssp_glcd.c **** 
 113:../Source Files/lpc_ssp_glcd.c **** 	case BOTTOM_RIGHT:
 114:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 115:../Source Files/lpc_ssp_glcd.c **** 		break;
 116:../Source Files/lpc_ssp_glcd.c **** 
 117:../Source Files/lpc_ssp_glcd.c **** 	default:
 118:../Source Files/lpc_ssp_glcd.c **** 		break;
 119:../Source Files/lpc_ssp_glcd.c **** 	}
 120:../Source Files/lpc_ssp_glcd.c **** }
 121:../Source Files/lpc_ssp_glcd.c **** 
 122:../Source Files/lpc_ssp_glcd.c **** 
 123:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 124:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set draw window region to required width and height
 125:../Source Files/lpc_ssp_glcd.c ****  *              as well as location
 126:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 127:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 128:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 129:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 130:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 131:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 132:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 133:../Source Files/lpc_ssp_glcd.c **** {
 134:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 135:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 136:../Source Files/lpc_ssp_glcd.c **** 
 137:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 139:../Source Files/lpc_ssp_glcd.c **** 
 140:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 141:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 142:../Source Files/lpc_ssp_glcd.c **** 
 143:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 144:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 145:../Source Files/lpc_ssp_glcd.c **** }
 146:../Source Files/lpc_ssp_glcd.c **** 
 147:../Source Files/lpc_ssp_glcd.c **** 
 148:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 149:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to to desired location
 150:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 151:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 152:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 153:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 154:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 155:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 156:../Source Files/lpc_ssp_glcd.c **** void GLCD_Set_Loc (uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 157:../Source Files/lpc_ssp_glcd.c **** {
 158:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 159:../Source Files/lpc_ssp_glcd.c **** 
 160:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 161:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 162:../Source Files/lpc_ssp_glcd.c **** 
 163:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 165:../Source Files/lpc_ssp_glcd.c **** 
 166:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 167:../Source Files/lpc_ssp_glcd.c **** }
 168:../Source Files/lpc_ssp_glcd.c **** 
 169:../Source Files/lpc_ssp_glcd.c **** 
 170:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 171:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Sets Cursor to Home
 172:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 173:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 174:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 175:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Home (void)
 176:../Source Files/lpc_ssp_glcd.c **** {
 177:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 178:../Source Files/lpc_ssp_glcd.c **** }
 179:../Source Files/lpc_ssp_glcd.c **** 
 180:../Source Files/lpc_ssp_glcd.c **** 
 181:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 182:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function Initializes GLCD
 183:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 184:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 185:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 186:../Source Files/lpc_ssp_glcd.c **** void GLCD_Init (void)
 187:../Source Files/lpc_ssp_glcd.c **** {
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 189:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 190:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 191:../Source Files/lpc_ssp_glcd.c **** 
 192:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 193:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 194:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 195:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 196:../Source Files/lpc_ssp_glcd.c **** 
 197:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 198:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 199:../Source Files/lpc_ssp_glcd.c **** 
 200:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 201:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 202:../Source Files/lpc_ssp_glcd.c **** 
 203:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 204:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 205:../Source Files/lpc_ssp_glcd.c **** 
 206:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 207:../Source Files/lpc_ssp_glcd.c **** 
 208:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 209:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 210:../Source Files/lpc_ssp_glcd.c **** 
 211:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 212:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 213:../Source Files/lpc_ssp_glcd.c **** 
 214:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 215:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 216:../Source Files/lpc_ssp_glcd.c **** 
 217:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 218:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 219:../Source Files/lpc_ssp_glcd.c **** 
 220:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 221:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 222:../Source Files/lpc_ssp_glcd.c **** 
 223:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 224:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 225:../Source Files/lpc_ssp_glcd.c **** 
 226:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 227:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 228:../Source Files/lpc_ssp_glcd.c **** 
 229:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 230:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 231:../Source Files/lpc_ssp_glcd.c **** 
 232:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 233:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 234:../Source Files/lpc_ssp_glcd.c **** 
 235:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 236:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 237:../Source Files/lpc_ssp_glcd.c **** 
 238:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 239:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 240:../Source Files/lpc_ssp_glcd.c **** 
 241:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 242:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 243:../Source Files/lpc_ssp_glcd.c **** 
 244:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 245:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 246:../Source Files/lpc_ssp_glcd.c **** 
 247:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 248:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 249:../Source Files/lpc_ssp_glcd.c **** 
 250:../Source Files/lpc_ssp_glcd.c **** 	// Gamma Control (R30h to R3Bh) -- Page 56 of SSD2119 datasheet
 251:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 252:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 253:../Source Files/lpc_ssp_glcd.c **** 
 254:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 255:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 256:../Source Files/lpc_ssp_glcd.c **** 
 257:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 258:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 259:../Source Files/lpc_ssp_glcd.c **** 
 260:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 262:../Source Files/lpc_ssp_glcd.c **** 
 263:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 264:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 265:../Source Files/lpc_ssp_glcd.c **** 
 266:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 267:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 268:../Source Files/lpc_ssp_glcd.c **** 
 269:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 270:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 271:../Source Files/lpc_ssp_glcd.c **** 
 272:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 273:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 274:../Source Files/lpc_ssp_glcd.c **** 
 275:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 276:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 277:../Source Files/lpc_ssp_glcd.c **** 
 278:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 279:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 280:../Source Files/lpc_ssp_glcd.c **** 
 281:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 282:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 283:../Source Files/lpc_ssp_glcd.c **** 
 284:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 285:../Source Files/lpc_ssp_glcd.c **** 
 286:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 287:../Source Files/lpc_ssp_glcd.c **** }
 288:../Source Files/lpc_ssp_glcd.c **** 
 289:../Source Files/lpc_ssp_glcd.c **** 
 290:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 291:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a pixel in foreground color
 292:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 293:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 294:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 295:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 296:../Source Files/lpc_ssp_glcd.c **** void GLCD_PutPixel (uint16_t x, uint16_t y, uint16_t color)
 297:../Source Files/lpc_ssp_glcd.c **** {
 298:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 299:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 300:../Source Files/lpc_ssp_glcd.c **** 
 301:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 302:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 303:../Source Files/lpc_ssp_glcd.c **** 
 304:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 305:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 306:../Source Files/lpc_ssp_glcd.c **** }
 307:../Source Files/lpc_ssp_glcd.c **** 
 308:../Source Files/lpc_ssp_glcd.c **** 
 309:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 310:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set foreground color
 311:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    foreground color
 312:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 313:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 314:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetTextColor (uint16_t color)
 315:../Source Files/lpc_ssp_glcd.c **** {
 316:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 317:../Source Files/lpc_ssp_glcd.c **** }
 318:../Source Files/lpc_ssp_glcd.c **** 
 319:../Source Files/lpc_ssp_glcd.c **** 
 320:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 321:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Set background color
 322:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    background color
 323:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 324:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 325:../Source Files/lpc_ssp_glcd.c **** void GLCD_SetBackColor (uint16_t color)
 326:../Source Files/lpc_ssp_glcd.c **** {
 327:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 328:../Source Files/lpc_ssp_glcd.c **** }
 329:../Source Files/lpc_ssp_glcd.c **** 
 330:../Source Files/lpc_ssp_glcd.c **** 
 331:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 332:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Start of data writing to LCD controller
 333:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 334:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 335:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 336:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_start (void)
 337:../Source Files/lpc_ssp_glcd.c **** {
  25              		.loc 1 337 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
 338:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);
  29              		.loc 1 338 0
  30 0000 0021     		movs	r1, #0
 337:../Source Files/lpc_ssp_glcd.c **** {
  31              		.loc 1 337 0
  32 0002 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              		.loc 1 338 0
  38 0004 0448     		ldr	r0, .L2
  39 0006 FFF7FEFF 		bl	CS_Force1
  40              	.LVL0:
 339:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  41              		.loc 1 339 0
  42 000a 0220     		movs	r0, #2
  43 000c 0121     		movs	r1, #1
 340:../Source Files/lpc_ssp_glcd.c **** }
  44              		.loc 1 340 0
  45 000e BDE80840 		pop	{r3, lr}
 339:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
  46              		.loc 1 339 0
  47 0012 FFF7FEBF 		b	GPIO_SetValue
  48              	.LVL1:
  49              	.L3:
  50 0016 00BF     		.align	2
  51              	.L2:
  52 0018 00000340 		.word	1073938432
  53              		.cfi_endproc
  54              	.LFE65:
  56              		.align	1
  57              		.thumb
  58              		.thumb_func
  60              	wr_dat_stop:
  61              	.LFB66:
 341:../Source Files/lpc_ssp_glcd.c **** 
 342:../Source Files/lpc_ssp_glcd.c **** 
 343:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 344:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Stop of data writing to LCD controller
 345:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
 346:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 347:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 348:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_stop (void)
 349:../Source Files/lpc_ssp_glcd.c **** {
  62              		.loc 1 349 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 350:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  67              		.loc 1 350 0
  68 001c 0148     		ldr	r0, .L5
  69 001e 0121     		movs	r1, #1
 351:../Source Files/lpc_ssp_glcd.c **** }
  70              		.loc 1 351 0
 350:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, ENABLE);
  71              		.loc 1 350 0
  72 0020 FFF7FEBF 		b	CS_Force1
  73              	.LVL2:
  74              	.L6:
  75              		.align	2
  76              	.L5:
  77 0024 00000340 		.word	1073938432
  78              		.cfi_endproc
  79              	.LFE66:
  81              		.align	1
  82              		.thumb
  83              		.thumb_func
  85              	wr_dat_only:
  86              	.LFB67:
 352:../Source Files/lpc_ssp_glcd.c **** 
 353:../Source Files/lpc_ssp_glcd.c **** 
 354:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 355:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Data writing to LCD controller
 356:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	c     data to be written
 357:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 358:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 359:../Source Files/lpc_ssp_glcd.c **** static __INLINE void wr_dat_only (uint16_t c)
 360:../Source Files/lpc_ssp_glcd.c **** {
  87              		.loc 1 360 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 24
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL3:
  92 0028 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 32
  95              		.cfi_offset 0, -32
  96              		.cfi_offset 1, -28
  97              		.cfi_offset 2, -24
  98              		.cfi_offset 3, -20
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 6, -8
 102              		.cfi_offset 14, -4
 361:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
 362:../Source Files/lpc_ssp_glcd.c **** 
 363:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 103              		.loc 1 363 0
 104 002a 074B     		ldr	r3, .L8
 105 002c 020A     		lsrs	r2, r0, #8
 364:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) c;        // 2nd byte extract
 106              		.loc 1 364 0
 107 002e 5870     		strb	r0, [r3, #1]
 365:../Source Files/lpc_ssp_glcd.c **** 
 366:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 367:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 368:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 108              		.loc 1 368 0
 109 0030 0220     		movs	r0, #2
 110              	.LVL4:
 363:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(c>>8);    // 1st byte extract
 111              		.loc 1 363 0
 112 0032 1A70     		strb	r2, [r3, #0]
 113              		.loc 1 368 0
 114 0034 0490     		str	r0, [sp, #16]
 367:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 115              		.loc 1 367 0
 116 0036 0022     		movs	r2, #0
 369:../Source Files/lpc_ssp_glcd.c **** 	SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 117              		.loc 1 369 0
 118 0038 6946     		mov	r1, sp
 119 003a 0448     		ldr	r0, .L8+4
 366:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 120              		.loc 1 366 0
 121 003c 0093     		str	r3, [sp, #0]
 367:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 122              		.loc 1 367 0
 123 003e 0292     		str	r2, [sp, #8]
 124              		.loc 1 369 0
 125 0040 FFF7FEFF 		bl	SSP_ReadWrite
 126              	.LVL5:
 370:../Source Files/lpc_ssp_glcd.c **** }
 127              		.loc 1 370 0
 128 0044 07B0     		add	sp, sp, #28
 129 0046 00BD     		pop	{pc}
 130              	.L9:
 131              		.align	2
 132              	.L8:
 133 0048 00000000 		.word	Tx_Buf1
 134 004c 00000340 		.word	1073938432
 135              		.cfi_endproc
 136              	.LFE67:
 138              		.align	1
 139              		.global	GLCD_Backlight
 140              		.thumb
 141              		.thumb_func
 143              	GLCD_Backlight:
 144              	.LFB55:
  59:../Source Files/lpc_ssp_glcd.c **** {
 145              		.loc 1 59 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150              	.LVL6:
  60:../Source Files/lpc_ssp_glcd.c **** 	if(NewState)
 151              		.loc 1 60 0
 152 0050 20B1     		cbz	r0, .L11
  62:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 153              		.loc 1 62 0
 154 0052 0220     		movs	r0, #2
 155              	.LVL7:
 156 0054 4FF48071 		mov	r1, #256
  68:../Source Files/lpc_ssp_glcd.c **** }
 157              		.loc 1 68 0
  62:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_BK);
 158              		.loc 1 62 0
 159 0058 FFF7FEBF 		b	GPIO_SetValue
 160              	.LVL8:
 161              	.L11:
  66:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 162              		.loc 1 66 0
 163 005c 0220     		movs	r0, #2
 164              	.LVL9:
 165 005e 4FF48071 		mov	r1, #256
  68:../Source Files/lpc_ssp_glcd.c **** }
 166              		.loc 1 68 0
  66:../Source Files/lpc_ssp_glcd.c **** 		GPIO_ClearValue(2, LCD_BK);
 167              		.loc 1 66 0
 168 0062 FFF7FEBF 		b	GPIO_ClearValue
 169              	.LVL10:
 170              		.cfi_endproc
 171              	.LFE55:
 173              		.align	1
 174              		.global	GLCD_Reset
 175              		.thumb
 176              		.thumb_func
 178              	GLCD_Reset:
 179              	.LFB56:
  77:../Source Files/lpc_ssp_glcd.c **** {
 180              		.loc 1 77 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0066 08B5     		push	{r3, lr}
 185              	.LCFI2:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
  78:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);
 189              		.loc 1 78 0
 190 0068 2021     		movs	r1, #32
 191 006a 0020     		movs	r0, #0
 192 006c FFF7FEFF 		bl	GPIO_SetValue
 193              	.LVL11:
  79:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 194              		.loc 1 79 0
 195 0070 0220     		movs	r0, #2
 196 0072 FFF7FEFF 		bl	delay_ms
 197              	.LVL12:
  80:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(0, LCD_RST);  //reset low
 198              		.loc 1 80 0
 199 0076 2021     		movs	r1, #32
 200 0078 0020     		movs	r0, #0
 201 007a FFF7FEFF 		bl	GPIO_ClearValue
 202              	.LVL13:
  81:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(4);
 203              		.loc 1 81 0
 204 007e 0420     		movs	r0, #4
 205 0080 FFF7FEFF 		bl	delay_ms
 206              	.LVL14:
  82:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 207              		.loc 1 82 0
 208 0084 0020     		movs	r0, #0
 209 0086 2021     		movs	r1, #32
  83:../Source Files/lpc_ssp_glcd.c **** }
 210              		.loc 1 83 0
 211 0088 BDE80840 		pop	{r3, lr}
  82:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(0, LCD_RST);  //reset low
 212              		.loc 1 82 0
 213 008c FFF7FEBF 		b	GPIO_SetValue
 214              	.LVL15:
 215              		.cfi_endproc
 216              	.LFE56:
 218              		.align	1
 219              		.global	GLCD_SetTextColor
 220              		.thumb
 221              		.thumb_func
 223              	GLCD_SetTextColor:
 224              	.LFB63:
 315:../Source Files/lpc_ssp_glcd.c **** {
 225              		.loc 1 315 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230              	.LVL16:
 316:../Source Files/lpc_ssp_glcd.c **** 	TextColor = color;
 231              		.loc 1 316 0
 232 0090 014B     		ldr	r3, .L15
 233 0092 1880     		strh	r0, [r3, #0]	@ movhi
 234 0094 7047     		bx	lr
 235              	.L16:
 236 0096 00BF     		.align	2
 237              	.L15:
 238 0098 00000000 		.word	.LANCHOR0
 239              		.cfi_endproc
 240              	.LFE63:
 242              		.align	1
 243              		.global	GLCD_SetBackColor
 244              		.thumb
 245              		.thumb_func
 247              	GLCD_SetBackColor:
 248              	.LFB64:
 326:../Source Files/lpc_ssp_glcd.c **** {
 249              		.loc 1 326 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL17:
 327:../Source Files/lpc_ssp_glcd.c **** 	BackColor = color;
 255              		.loc 1 327 0
 256 009c 014B     		ldr	r3, .L18
 257 009e 1880     		strh	r0, [r3, #0]	@ movhi
 258 00a0 7047     		bx	lr
 259              	.L19:
 260 00a2 00BF     		.align	2
 261              	.L18:
 262 00a4 00000000 		.word	.LANCHOR1
 263              		.cfi_endproc
 264              	.LFE64:
 266              		.align	1
 267              		.global	Write_Command_Glcd
 268              		.thumb
 269              		.thumb_func
 271              	Write_Command_Glcd:
 272              	.LFB86:
 371:../Source Files/lpc_ssp_glcd.c **** 
 372:../Source Files/lpc_ssp_glcd.c **** 
 373:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 374:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear display
 375:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	color    display clearing color
 376:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 377:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 378:../Source Files/lpc_ssp_glcd.c **** void GLCD_Clear (uint16_t color)
 379:../Source Files/lpc_ssp_glcd.c **** {
 380:../Source Files/lpc_ssp_glcd.c **** 	unsigned int   i;
 381:../Source Files/lpc_ssp_glcd.c **** 
 382:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 383:../Source Files/lpc_ssp_glcd.c **** 
 384:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 385:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 386:../Source Files/lpc_ssp_glcd.c **** 
 387:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 388:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 389:../Source Files/lpc_ssp_glcd.c **** 
 390:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 391:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 392:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 393:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 394:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 395:../Source Files/lpc_ssp_glcd.c **** }
 396:../Source Files/lpc_ssp_glcd.c **** 
 397:../Source Files/lpc_ssp_glcd.c **** 
 398:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 399:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw character on given position
 400:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x       horizontal position
 401:../Source Files/lpc_ssp_glcd.c ****  *              y       vertical position
 402:../Source Files/lpc_ssp_glcd.c ****  *              c       pointer to character bitmap
 403:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 404:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 405:../Source Files/lpc_ssp_glcd.c **** void GLCD_Draw_Char (uint16_t x, uint16_t y, uint16_t *c)
 406:../Source Files/lpc_ssp_glcd.c **** {
 407:../Source Files/lpc_ssp_glcd.c **** 	int idx = 0, i, j;
 408:../Source Files/lpc_ssp_glcd.c **** 
 409:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 410:../Source Files/lpc_ssp_glcd.c **** 
 411:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 412:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 413:../Source Files/lpc_ssp_glcd.c **** 
 414:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 415:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 416:../Source Files/lpc_ssp_glcd.c **** 
 417:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 418:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 419:../Source Files/lpc_ssp_glcd.c **** 
 420:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 421:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 422:../Source Files/lpc_ssp_glcd.c **** 
 423:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 424:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 425:../Source Files/lpc_ssp_glcd.c **** 
 426:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 427:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 428:../Source Files/lpc_ssp_glcd.c **** 
 429:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 430:../Source Files/lpc_ssp_glcd.c **** 
 431:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 432:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 433:../Source Files/lpc_ssp_glcd.c **** 	{
 434:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 435:../Source Files/lpc_ssp_glcd.c **** 		{
 436:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 437:../Source Files/lpc_ssp_glcd.c **** 			{
 438:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 439:../Source Files/lpc_ssp_glcd.c **** 			}
 440:../Source Files/lpc_ssp_glcd.c **** 			else
 441:../Source Files/lpc_ssp_glcd.c **** 			{
 442:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 443:../Source Files/lpc_ssp_glcd.c **** 			}
 444:../Source Files/lpc_ssp_glcd.c **** 		}
 445:../Source Files/lpc_ssp_glcd.c **** 		c++;
 446:../Source Files/lpc_ssp_glcd.c **** 	}
 447:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 448:../Source Files/lpc_ssp_glcd.c **** }
 449:../Source Files/lpc_ssp_glcd.c **** 
 450:../Source Files/lpc_ssp_glcd.c **** 
 451:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 452:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply character on given line
 453:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 454:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 455:../Source Files/lpc_ssp_glcd.c ****  *              c        ascii character
 456:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 457:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 458:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_Char (uint16_t ln, uint16_t col, uchar c)
 459:../Source Files/lpc_ssp_glcd.c **** {
 460:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 462:../Source Files/lpc_ssp_glcd.c **** }
 463:../Source Files/lpc_ssp_glcd.c **** 
 464:../Source Files/lpc_ssp_glcd.c **** 
 465:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 466:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Disply string on given line
 467:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 468:../Source Files/lpc_ssp_glcd.c ****  *              col      column number
 469:../Source Files/lpc_ssp_glcd.c ****  *              s        pointer to string
 470:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 471:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 472:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 473:../Source Files/lpc_ssp_glcd.c **** {
 474:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 476:../Source Files/lpc_ssp_glcd.c **** 	{
 477:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 478:../Source Files/lpc_ssp_glcd.c **** 	}
 479:../Source Files/lpc_ssp_glcd.c **** }
 480:../Source Files/lpc_ssp_glcd.c **** 
 481:../Source Files/lpc_ssp_glcd.c **** 
 482:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 483:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Clear given line
 484:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	ln       line number
 485:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 486:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 487:../Source Files/lpc_ssp_glcd.c **** void GLCD_ClearLn (uint16_t ln)
 488:../Source Files/lpc_ssp_glcd.c **** {
 489:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 490:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 491:../Source Files/lpc_ssp_glcd.c **** }
 492:../Source Files/lpc_ssp_glcd.c **** 
 493:../Source Files/lpc_ssp_glcd.c **** 
 494:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 495:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw bargraph
 496:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 497:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 498:../Source Files/lpc_ssp_glcd.c ****  *              w        maximum width of bargraph (in pixels)
 499:../Source Files/lpc_ssp_glcd.c ****  *              val      value of active bargraph (in 1/1024)
 500:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 501:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 502:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bargraph (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t val)
 503:../Source Files/lpc_ssp_glcd.c **** {
 504:../Source Files/lpc_ssp_glcd.c **** 	int i,j;
 505:../Source Files/lpc_ssp_glcd.c **** 
 506:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 507:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 508:../Source Files/lpc_ssp_glcd.c **** 
 509:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 510:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 511:../Source Files/lpc_ssp_glcd.c **** 
 512:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 513:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 514:../Source Files/lpc_ssp_glcd.c **** 
 515:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 516:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 517:../Source Files/lpc_ssp_glcd.c **** 
 518:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 519:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 520:../Source Files/lpc_ssp_glcd.c **** 
 521:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 522:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 523:../Source Files/lpc_ssp_glcd.c **** 
 524:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 525:../Source Files/lpc_ssp_glcd.c **** 
 526:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 527:../Source Files/lpc_ssp_glcd.c **** 
 528:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 530:../Source Files/lpc_ssp_glcd.c **** 	{
 531:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 532:../Source Files/lpc_ssp_glcd.c **** 		{
 533:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 534:../Source Files/lpc_ssp_glcd.c **** 			{
 535:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 536:../Source Files/lpc_ssp_glcd.c **** 			}
 537:../Source Files/lpc_ssp_glcd.c **** 			else
 538:../Source Files/lpc_ssp_glcd.c **** 			{
 539:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 540:../Source Files/lpc_ssp_glcd.c **** 			}
 541:../Source Files/lpc_ssp_glcd.c **** 		}
 542:../Source Files/lpc_ssp_glcd.c **** 	}
 543:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 544:../Source Files/lpc_ssp_glcd.c **** }
 545:../Source Files/lpc_ssp_glcd.c **** 
 546:../Source Files/lpc_ssp_glcd.c **** 
 547:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 548:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Display graphical bitmap image at position x horizontally
 549:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 550:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 551:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 552:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 553:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 554:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 555:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 556:../Source Files/lpc_ssp_glcd.c ****  *              bitmap   address at which the bitmap data resides
 557:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 558:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 559:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 560:../Source Files/lpc_ssp_glcd.c **** {
 561:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j,k;
 562:../Source Files/lpc_ssp_glcd.c **** 
 563:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 564:../Source Files/lpc_ssp_glcd.c **** 
 565:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 566:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 568:../Source Files/lpc_ssp_glcd.c **** 	{
 569:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 570:../Source Files/lpc_ssp_glcd.c **** 		{
 571:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 572:../Source Files/lpc_ssp_glcd.c **** 		}
 573:../Source Files/lpc_ssp_glcd.c **** 	}
 574:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 575:../Source Files/lpc_ssp_glcd.c **** }
 576:../Source Files/lpc_ssp_glcd.c **** 
 577:../Source Files/lpc_ssp_glcd.c **** 
 578:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 579:../Source Files/lpc_ssp_glcd.c ****  * @brief	    F at position x horizontally
 580:../Source Files/lpc_ssp_glcd.c ****  *              and y vertically (This function is optimized for
 581:../Source Files/lpc_ssp_glcd.c ****  *              16 bits per pixel format, it has to be adapted for
 582:../Source Files/lpc_ssp_glcd.c ****  *              any other bits per pixel format)
 583:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	x        horizontal position
 584:../Source Files/lpc_ssp_glcd.c ****  *              y        vertical position
 585:../Source Files/lpc_ssp_glcd.c ****  *              w        width of bitmap
 586:../Source Files/lpc_ssp_glcd.c ****  *              h        height of bitmap
 587:../Source Files/lpc_ssp_glcd.c ****  *              color    window color
 588:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 589:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 590:../Source Files/lpc_ssp_glcd.c **** void GLCD_Window_Fill (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color)
 591:../Source Files/lpc_ssp_glcd.c **** {
 592:../Source Files/lpc_ssp_glcd.c **** 	uint32_t i,j;
 593:../Source Files/lpc_ssp_glcd.c **** 
 594:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 595:../Source Files/lpc_ssp_glcd.c **** 
 596:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 598:../Source Files/lpc_ssp_glcd.c **** 	{
 599:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 600:../Source Files/lpc_ssp_glcd.c **** 		{
 601:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 602:../Source Files/lpc_ssp_glcd.c **** 		}
 603:../Source Files/lpc_ssp_glcd.c **** 	}
 604:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 605:../Source Files/lpc_ssp_glcd.c **** }
 606:../Source Files/lpc_ssp_glcd.c **** 
 607:../Source Files/lpc_ssp_glcd.c **** 
 608:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 609:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a line on a graphic LCD using Bresenham's
 610:../Source Files/lpc_ssp_glcd.c ****  *              line drawing algorithm
 611:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)   the start coordinate
 612:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)   the end coordinate
 613:../Source Files/lpc_ssp_glcd.c ****  *              color      line color
 614:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 615:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 616:../Source Files/lpc_ssp_glcd.c **** void GLCD_Line(int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color)
 617:../Source Files/lpc_ssp_glcd.c **** {
 618:../Source Files/lpc_ssp_glcd.c **** 	int16_t  x, y, addx, addy, dx, dy;
 619:../Source Files/lpc_ssp_glcd.c **** 	int32_t P,i;
 620:../Source Files/lpc_ssp_glcd.c **** 
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 623:../Source Files/lpc_ssp_glcd.c **** 	x = x1;
 624:../Source Files/lpc_ssp_glcd.c **** 	y = y1;
 625:../Source Files/lpc_ssp_glcd.c **** 
 626:../Source Files/lpc_ssp_glcd.c **** 	if(x1 > x2)
 627:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 628:../Source Files/lpc_ssp_glcd.c **** 	else
 629:../Source Files/lpc_ssp_glcd.c **** 		addx = 1;
 630:../Source Files/lpc_ssp_glcd.c **** 	if(y1 > y2)
 631:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 632:../Source Files/lpc_ssp_glcd.c **** 	else
 633:../Source Files/lpc_ssp_glcd.c **** 		addy = 1;
 634:../Source Files/lpc_ssp_glcd.c **** 
 635:../Source Files/lpc_ssp_glcd.c **** 
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 637:../Source Files/lpc_ssp_glcd.c **** 	{
 638:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 639:../Source Files/lpc_ssp_glcd.c **** 
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 641:../Source Files/lpc_ssp_glcd.c **** 		{
 642:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 643:../Source Files/lpc_ssp_glcd.c **** 
 644:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 645:../Source Files/lpc_ssp_glcd.c **** 			{
 646:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 647:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 648:../Source Files/lpc_ssp_glcd.c **** 			}
 649:../Source Files/lpc_ssp_glcd.c **** 			else
 650:../Source Files/lpc_ssp_glcd.c **** 			{
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 652:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 653:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 654:../Source Files/lpc_ssp_glcd.c **** 			}
 655:../Source Files/lpc_ssp_glcd.c **** 		}
 656:../Source Files/lpc_ssp_glcd.c **** 	}
 657:../Source Files/lpc_ssp_glcd.c **** 	else
 658:../Source Files/lpc_ssp_glcd.c **** 	{
 659:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 660:../Source Files/lpc_ssp_glcd.c **** 
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 662:../Source Files/lpc_ssp_glcd.c **** 		{
 663:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 664:../Source Files/lpc_ssp_glcd.c **** 
 665:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 666:../Source Files/lpc_ssp_glcd.c **** 			{
 667:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 668:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 669:../Source Files/lpc_ssp_glcd.c **** 			}
 670:../Source Files/lpc_ssp_glcd.c **** 			else
 671:../Source Files/lpc_ssp_glcd.c **** 			{
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 673:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 674:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 675:../Source Files/lpc_ssp_glcd.c **** 			}
 676:../Source Files/lpc_ssp_glcd.c **** 		}
 677:../Source Files/lpc_ssp_glcd.c **** 	}
 678:../Source Files/lpc_ssp_glcd.c **** }
 679:../Source Files/lpc_ssp_glcd.c **** 
 680:../Source Files/lpc_ssp_glcd.c **** 
 681:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 682:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Rectangle on a graphic LCD
 683:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 684:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 685:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Rectangle TRUE/FALSE or ON/OFF
 686:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 687:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   fill color
 688:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 689:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 690:../Source Files/lpc_ssp_glcd.c **** void GLCD_Rect(COORDINATE_Type *p1, COORDINATE_Type *p2, Bool fill, uint16_t color, uint16_t fill_c
 691:../Source Files/lpc_ssp_glcd.c **** {
 692:../Source Files/lpc_ssp_glcd.c **** 	int16_t  width,height;                          // Find the y min and max
 693:../Source Files/lpc_ssp_glcd.c **** 
 694:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 695:../Source Files/lpc_ssp_glcd.c **** 	{
 696:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 697:../Source Files/lpc_ssp_glcd.c **** 		{
 698:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 699:../Source Files/lpc_ssp_glcd.c **** 			{
 700:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 701:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 702:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 703:../Source Files/lpc_ssp_glcd.c **** 			}
 704:../Source Files/lpc_ssp_glcd.c **** 			else
 705:../Source Files/lpc_ssp_glcd.c **** 			{
 706:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 707:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 708:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 709:../Source Files/lpc_ssp_glcd.c **** 			}
 710:../Source Files/lpc_ssp_glcd.c **** 		}
 711:../Source Files/lpc_ssp_glcd.c **** 		else
 712:../Source Files/lpc_ssp_glcd.c **** 		{
 713:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 714:../Source Files/lpc_ssp_glcd.c **** 			{
 715:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 716:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 717:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 718:../Source Files/lpc_ssp_glcd.c **** 			}
 719:../Source Files/lpc_ssp_glcd.c **** 			else
 720:../Source Files/lpc_ssp_glcd.c **** 			{
 721:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 722:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 723:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 724:../Source Files/lpc_ssp_glcd.c **** 			}
 725:../Source Files/lpc_ssp_glcd.c **** 		}
 726:../Source Files/lpc_ssp_glcd.c **** 		fill = NO;
 727:../Source Files/lpc_ssp_glcd.c **** 	}
 728:../Source Files/lpc_ssp_glcd.c **** 	if(!fill)
 729:../Source Files/lpc_ssp_glcd.c **** 	{
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 732:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 733:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 734:../Source Files/lpc_ssp_glcd.c **** 	}
 735:../Source Files/lpc_ssp_glcd.c **** }
 736:../Source Files/lpc_ssp_glcd.c **** 
 737:../Source Files/lpc_ssp_glcd.c **** 
 738:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 739:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a frame on a graphic LCD
 740:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 741:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 742:../Source Files/lpc_ssp_glcd.c ****  *              frame_width  Total Width of Frame
 743:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 744:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Frame fill color
 745:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 746:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 747:../Source Files/lpc_ssp_glcd.c **** void GLCD_Frame(COORDINATE_Type *p1, COORDINATE_Type *p2, int16_t frame_width, uint16_t color, uint
 748:../Source Files/lpc_ssp_glcd.c **** {
 749:../Source Files/lpc_ssp_glcd.c **** 	int16_t fw;                          // Find the y min and max
 750:../Source Files/lpc_ssp_glcd.c **** 
 751:../Source Files/lpc_ssp_glcd.c **** 	fw = frame_width;
 752:../Source Files/lpc_ssp_glcd.c **** 
 753:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 754:../Source Files/lpc_ssp_glcd.c **** 	{
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 756:../Source Files/lpc_ssp_glcd.c **** 		{
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 759:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 760:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 761:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 762:../Source Files/lpc_ssp_glcd.c **** 		}
 763:../Source Files/lpc_ssp_glcd.c **** 		else
 764:../Source Files/lpc_ssp_glcd.c **** 		{
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 767:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 768:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 769:../Source Files/lpc_ssp_glcd.c **** 			fw--;
 770:../Source Files/lpc_ssp_glcd.c **** 		}
 771:../Source Files/lpc_ssp_glcd.c **** 	}
 772:../Source Files/lpc_ssp_glcd.c **** 
 773:../Source Files/lpc_ssp_glcd.c **** 	if(!fw)
 774:../Source Files/lpc_ssp_glcd.c **** 	{
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 777:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 778:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 779:../Source Files/lpc_ssp_glcd.c **** 	}
 780:../Source Files/lpc_ssp_glcd.c **** }
 781:../Source Files/lpc_ssp_glcd.c **** 
 782:../Source Files/lpc_ssp_glcd.c **** 
 783:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 784:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a rectangle/frame on a graphic LCD
 785:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x1, y1)     the start coordinate
 786:../Source Files/lpc_ssp_glcd.c ****  *              (x2, y2)     the end coordinate
 787:../Source Files/lpc_ssp_glcd.c ****  *              (x3, y3)     the end coordinate
 788:../Source Files/lpc_ssp_glcd.c ****  *              fill         Fill Triangle TRUE/FALSE or ON/OFF
 789:../Source Files/lpc_ssp_glcd.c ****  *              color        Boundary color
 790:../Source Files/lpc_ssp_glcd.c ****  *              fill_color   Triangle Fill Color
 791:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 792:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 794:../Source Files/lpc_ssp_glcd.c **** {
 795:../Source Files/lpc_ssp_glcd.c ****     if(cfg->fill)
 796:../Source Files/lpc_ssp_glcd.c ****     {
 797:../Source Files/lpc_ssp_glcd.c ****     	uint16_t t1x,t2x,y,minx,maxx,t1xp,t2xp;
 798:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 799:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 800:../Source Files/lpc_ssp_glcd.c ****     	int16_t signx1,signx2,dx1,dy1,dx2,dy2;
 801:../Source Files/lpc_ssp_glcd.c ****     	uint16_t e1,e2;
 802:../Source Files/lpc_ssp_glcd.c ****         // Sort vertices
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 805:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 806:../Source Files/lpc_ssp_glcd.c **** 
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 808:../Source Files/lpc_ssp_glcd.c **** 
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 811:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 812:../Source Files/lpc_ssp_glcd.c **** 
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 816:../Source Files/lpc_ssp_glcd.c **** 
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 818:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 819:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 820:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 821:../Source Files/lpc_ssp_glcd.c ****     	}
 822:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 823:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 824:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 825:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 826:../Source Files/lpc_ssp_glcd.c ****     	}
 827:../Source Files/lpc_ssp_glcd.c **** 
 828:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 829:../Source Files/lpc_ssp_glcd.c ****         // Flat top, just process the second half
 830:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 831:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 832:../Source Files/lpc_ssp_glcd.c **** 
 833:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 834:../Source Files/lpc_ssp_glcd.c ****     	{
 835:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 836:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 837:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 838:../Source Files/lpc_ssp_glcd.c ****             // process first line until y value is about to change
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 840:../Source Files/lpc_ssp_glcd.c ****     		{
 841:../Source Files/lpc_ssp_glcd.c ****     			i++;
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 843:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 844:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 845:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 847:../Source Files/lpc_ssp_glcd.c ****     				else          goto next1;
 848:../Source Files/lpc_ssp_glcd.c ****     			}
 849:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 850:../Source Files/lpc_ssp_glcd.c ****     			else t1x += signx1;
 851:../Source Files/lpc_ssp_glcd.c ****     		}
 852:../Source Files/lpc_ssp_glcd.c ****     	// Move line
 853:../Source Files/lpc_ssp_glcd.c ****     	next1:
 854:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 855:../Source Files/lpc_ssp_glcd.c ****     		while (1)
 856:../Source Files/lpc_ssp_glcd.c ****     		{
 857:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 858:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 859:../Source Files/lpc_ssp_glcd.c ****     			{
 860:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 862:../Source Files/lpc_ssp_glcd.c ****     				else          goto next2;
 863:../Source Files/lpc_ssp_glcd.c ****     			}
 864:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 865:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 866:../Source Files/lpc_ssp_glcd.c ****     		}
 867:../Source Files/lpc_ssp_glcd.c ****     	next2:
 868:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 869:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 870:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 871:../Source Files/lpc_ssp_glcd.c **** 
 872:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 874:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 876:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 878:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 879:../Source Files/lpc_ssp_glcd.c ****        }
 880:../Source Files/lpc_ssp_glcd.c ****     	next:
 881:../Source Files/lpc_ssp_glcd.c ****     	// Second half
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 883:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 884:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 885:../Source Files/lpc_ssp_glcd.c **** 
 886:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 887:../Source Files/lpc_ssp_glcd.c ****     	{   // swap values
 888:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 889:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 890:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 891:../Source Files/lpc_ssp_glcd.c **** 
 892:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 893:../Source Files/lpc_ssp_glcd.c **** 
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 895:../Source Files/lpc_ssp_glcd.c ****     	{
 896:../Source Files/lpc_ssp_glcd.c ****     		t1xp=0; t2xp=0;
 897:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 898:../Source Files/lpc_ssp_glcd.c ****     		else		{ minx=t2x; maxx=t1x; }
 899:../Source Files/lpc_ssp_glcd.c ****     	    // process first line until y value is about to change
 900:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 901:../Source Files/lpc_ssp_glcd.c ****     		{
 902:../Source Files/lpc_ssp_glcd.c ****         		e1 += dy1;
 903:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 904:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 905:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 907:../Source Files/lpc_ssp_glcd.c ****     				else          goto next3;
 908:../Source Files/lpc_ssp_glcd.c ****     			}
 909:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 910:../Source Files/lpc_ssp_glcd.c ****     			else   	   	  t1x += signx1;
 911:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 912:../Source Files/lpc_ssp_glcd.c ****     		}
 913:../Source Files/lpc_ssp_glcd.c ****     	next3:
 914:../Source Files/lpc_ssp_glcd.c ****             // process second line until y value is about to change
 915:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 916:../Source Files/lpc_ssp_glcd.c ****     		{
 917:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 918:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 919:../Source Files/lpc_ssp_glcd.c ****     	   	   	{
 920:../Source Files/lpc_ssp_glcd.c ****     				e2 -= dx2;
 921:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 922:../Source Files/lpc_ssp_glcd.c ****     				else          goto next4;
 923:../Source Files/lpc_ssp_glcd.c ****     			}
 924:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 925:../Source Files/lpc_ssp_glcd.c ****     			else              t2x += signx2;
 926:../Source Files/lpc_ssp_glcd.c ****     		}
 927:../Source Files/lpc_ssp_glcd.c ****     	next4:
 928:../Source Files/lpc_ssp_glcd.c **** 
 929:../Source Files/lpc_ssp_glcd.c ****     		if(minx>t1x) minx=t1x; if(minx>t2x) minx=t2x;
 930:../Source Files/lpc_ssp_glcd.c ****     		if(maxx<t1x) maxx=t1x; if(maxx<t2x) maxx=t2x;
 931:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 932:../Source Files/lpc_ssp_glcd.c ****     		// Now increase y
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 934:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 936:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 938:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 939:../Source Files/lpc_ssp_glcd.c ****     	}
 940:../Source Files/lpc_ssp_glcd.c ****     	cfg->fill = NO;
 941:../Source Files/lpc_ssp_glcd.c ****     }
 942:../Source Files/lpc_ssp_glcd.c **** 
 943:../Source Files/lpc_ssp_glcd.c **** 
 944:../Source Files/lpc_ssp_glcd.c **** 	if(!cfg->fill && cfg->bndry)
 945:../Source Files/lpc_ssp_glcd.c **** 	{
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, cfg->bcolor);
 947:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, cfg->bcolor);
 948:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, cfg->bcolor);
 949:../Source Files/lpc_ssp_glcd.c **** 	}
 950:../Source Files/lpc_ssp_glcd.c **** }
 951:../Source Files/lpc_ssp_glcd.c **** 
 952:../Source Files/lpc_ssp_glcd.c **** 
 953:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
 954:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw a Circle with given Center and Radius
 955:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x, y)     the center of the circle
 956:../Source Files/lpc_ssp_glcd.c ****  *              radius     the radius of the circle
 957:../Source Files/lpc_ssp_glcd.c ****  *              fill       YES or NO
 958:../Source Files/lpc_ssp_glcd.c ****  *              color      Boundary color
 959:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
 960:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 962:../Source Files/lpc_ssp_glcd.c **** {
 963:../Source Files/lpc_ssp_glcd.c **** 	int16_t a, b, P;
 964:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 965:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 967:../Source Files/lpc_ssp_glcd.c **** 
 968:../Source Files/lpc_ssp_glcd.c **** 	do
 969:../Source Files/lpc_ssp_glcd.c **** 	{
 970:../Source Files/lpc_ssp_glcd.c **** 		if(cfg->fill)
 971:../Source Files/lpc_ssp_glcd.c **** 		{
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, cfg->fill_color);
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, cfg->fill_color);
 975:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, cfg->fill_color);
 976:../Source Files/lpc_ssp_glcd.c **** 		}
 977:../Source Files/lpc_ssp_glcd.c **** 
 978:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 980:../Source Files/lpc_ssp_glcd.c **** 		else
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 982:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 983:../Source Files/lpc_ssp_glcd.c **** 
 984:../Source Files/lpc_ssp_glcd.c **** 	cfg->fill = NO;
 985:../Source Files/lpc_ssp_glcd.c **** 	a = 0;
 986:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 987:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 988:../Source Files/lpc_ssp_glcd.c **** 	do
 989:../Source Files/lpc_ssp_glcd.c **** 	{
 990:../Source Files/lpc_ssp_glcd.c **** 		if(!cfg->fill && cfg->bndry)
 991:../Source Files/lpc_ssp_glcd.c **** 		{
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, cfg->bcolor);
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, cfg->bcolor);
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 998:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, cfg->bcolor);
 999:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, cfg->bcolor);
1000:../Source Files/lpc_ssp_glcd.c **** 		}
1001:../Source Files/lpc_ssp_glcd.c **** 
1002:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
1004:../Source Files/lpc_ssp_glcd.c **** 		else
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
1006:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
1007:../Source Files/lpc_ssp_glcd.c **** }
1008:../Source Files/lpc_ssp_glcd.c **** 
1009:../Source Files/lpc_ssp_glcd.c **** 
1010:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1011:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Write text on a graphic LCD
1012:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	(x,y)      The upper left coordinate of the first letter
1013:../Source Files/lpc_ssp_glcd.c ****  *              textptr    A pointer to an array of text to display
1014:../Source Files/lpc_ssp_glcd.c ****  *              row        Number of rows of pixels
1015:../Source Files/lpc_ssp_glcd.c ****  *              col        Number of Colums of pixels
1016:../Source Files/lpc_ssp_glcd.c ****  *              font       font 2 dimentional array
1017:../Source Files/lpc_ssp_glcd.c ****  *              size       The size of the text: 1 = 5x7, 2 = 10x14, ...
1018:../Source Files/lpc_ssp_glcd.c ****  *              color      font color
1019:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1020:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint16_t length, uint8_t row, uint8_t col, in
1022:../Source Files/lpc_ssp_glcd.c **** {
1023:../Source Files/lpc_ssp_glcd.c ****    int16_t i, j, k, l, m;                     // Loop counters
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
1025:../Source Files/lpc_ssp_glcd.c **** 
1026:../Source Files/lpc_ssp_glcd.c ****    for(i=0; i<length; ++i, ++x) // Loop through the passed string
1027:../Source Files/lpc_ssp_glcd.c ****    {
1028:../Source Files/lpc_ssp_glcd.c ****       memcpy(pixelData, font[textptr[i]-' '], row);
1029:../Source Files/lpc_ssp_glcd.c **** 
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
1031:../Source Files/lpc_ssp_glcd.c ****       {
1032:../Source Files/lpc_ssp_glcd.c ****          x = 0;                           // Set x at far left position
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
1034:../Source Files/lpc_ssp_glcd.c ****       }
1035:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
1036:../Source Files/lpc_ssp_glcd.c ****       {
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
1038:../Source Files/lpc_ssp_glcd.c ****          {
1039:../Source Files/lpc_ssp_glcd.c ****             if(bit_test(pixelData[j], k)) // Check if the pixel should be set
1040:../Source Files/lpc_ssp_glcd.c ****             {
1041:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
1042:../Source Files/lpc_ssp_glcd.c ****                {                          // character's size
1043:../Source Files/lpc_ssp_glcd.c ****                   for(m=0; m<size; ++m)
1044:../Source Files/lpc_ssp_glcd.c ****                   {
1045:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
1046:../Source Files/lpc_ssp_glcd.c ****                   }
1047:../Source Files/lpc_ssp_glcd.c ****                }
1048:../Source Files/lpc_ssp_glcd.c ****             }
1049:../Source Files/lpc_ssp_glcd.c ****          }
1050:../Source Files/lpc_ssp_glcd.c ****       }
1051:../Source Files/lpc_ssp_glcd.c ****    }
1052:../Source Files/lpc_ssp_glcd.c **** }
1053:../Source Files/lpc_ssp_glcd.c **** 
1054:../Source Files/lpc_ssp_glcd.c **** 
1055:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1056:../Source Files/lpc_ssp_glcd.c ****  * @brief		Modified version of Standard Printf statement
1057:../Source Files/lpc_ssp_glcd.c ****  *
1058:../Source Files/lpc_ssp_glcd.c ****  * @par			Supports standard formats "%c %s %d %x"
1059:../Source Files/lpc_ssp_glcd.c ****  * 				"%d" and "%x" requires non-standard qualifiers,"%dfn, %xfn":-
1060:../Source Files/lpc_ssp_glcd.c ****  *		        f supplies a fill character
1061:../Source Files/lpc_ssp_glcd.c ****  *		        n supplies a field width
1062:../Source Files/lpc_ssp_glcd.c ****  *
1063:../Source Files/lpc_ssp_glcd.c ****  *		        ENABLE RTC_SUPPORT in lpc17xx_uart.h for RTC Features
1064:../Source Files/lpc_ssp_glcd.c ****  *
1065:../Source Files/lpc_ssp_glcd.c ****  *				Supports custom formats  "%b  %u %t %y %a"
1066:../Source Files/lpc_ssp_glcd.c ****  *				"%b"	prints a 2 digit BCD value with leading zero
1067:../Source Files/lpc_ssp_glcd.c ****  *				"%u"	prints the 16 bit unsigned integer in hex format
1068:../Source Files/lpc_ssp_glcd.c ****  *				"%t"    prints current time
1069:../Source Files/lpc_ssp_glcd.c ****  *				"%y"    prints current date
1070:../Source Files/lpc_ssp_glcd.c ****  *				"%a"    prints alarm time and date
1071:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	UARTx	Selected UART peripheral used to send data,
1072:../Source Files/lpc_ssp_glcd.c ****  * 				should be:
1073:../Source Files/lpc_ssp_glcd.c ****  *  			- LPC_UART0: UART0 peripheral
1074:../Source Files/lpc_ssp_glcd.c ****  * 				- LPC_UART1: UART1 peripheral
1075:../Source Files/lpc_ssp_glcd.c ****  * 				- LPC_UART2: UART2 peripheral
1076:../Source Files/lpc_ssp_glcd.c ****  * 				- LPC_UART3: UART3 peripheral
1077:../Source Files/lpc_ssp_glcd.c ****  * @param[in] 	*format Character format
1078:../Source Files/lpc_ssp_glcd.c ****  * @param[in]   ...  <multiple argument>
1079:../Source Files/lpc_ssp_glcd.c ****  *
1080:../Source Files/lpc_ssp_glcd.c ****  * @return 		return with valid character or nothing
1081:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1082:../Source Files/lpc_ssp_glcd.c **** int16 gprintf(int16_t x, int16_t y, int8_t size, uint16_t color, const char *format, ...)
1083:../Source Files/lpc_ssp_glcd.c **** {
1084:../Source Files/lpc_ssp_glcd.c **** 	uchar hex[]= "0123456789ABCDEF";
1085:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_dec[10] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
1086:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
1087:../Source Files/lpc_ssp_glcd.c **** 	unsigned int temp;
1088:../Source Files/lpc_ssp_glcd.c **** 
1089:../Source Files/lpc_ssp_glcd.c **** 	schar format_flag, fill_char;
1090:../Source Files/lpc_ssp_glcd.c **** 	ulong32 u_val, div_val;
1091:../Source Files/lpc_ssp_glcd.c **** 	uint16 base;
1092:../Source Files/lpc_ssp_glcd.c **** 
1093:../Source Files/lpc_ssp_glcd.c **** 	schar *ptr;
1094:../Source Files/lpc_ssp_glcd.c **** #ifdef RTC_MODE
1095:../Source Files/lpc_ssp_glcd.c **** 	RTC_TIME_Type FullTime;
1096:../Source Files/lpc_ssp_glcd.c **** #endif
1097:../Source Files/lpc_ssp_glcd.c **** 	va_list ap;
1098:../Source Files/lpc_ssp_glcd.c **** 	va_start(ap, format);
1099:../Source Files/lpc_ssp_glcd.c **** 
1100:../Source Files/lpc_ssp_glcd.c **** 	for(;;)
1101:../Source Files/lpc_ssp_glcd.c **** 	{
1102:../Source Files/lpc_ssp_glcd.c **** 		while((format_flag = *format++) != '%')      // until full format string read
1103:../Source Files/lpc_ssp_glcd.c **** 		{
1104:../Source Files/lpc_ssp_glcd.c **** 			if(!format_flag)
1105:../Source Files/lpc_ssp_glcd.c **** 			{                        // until '%' or '\0'
1106:../Source Files/lpc_ssp_glcd.c **** 				return (0);
1107:../Source Files/lpc_ssp_glcd.c **** 			}
1108:../Source Files/lpc_ssp_glcd.c **** 
1109:../Source Files/lpc_ssp_glcd.c **** 		    if(x+5*size >= 320)          // Performs character wrapping
1110:../Source Files/lpc_ssp_glcd.c **** 		    {
1111:../Source Files/lpc_ssp_glcd.c **** 		       x = 0;                           // Set x at far left position
1112:../Source Files/lpc_ssp_glcd.c **** 		       y += 7*size + 1;                 // Set y at next position down
1113:../Source Files/lpc_ssp_glcd.c **** 		    }
1114:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(x,y,&format_flag,1,5,7,default5x7,size,color);
1115:../Source Files/lpc_ssp_glcd.c **** 			x=x+5*size+1;
1116:../Source Files/lpc_ssp_glcd.c **** 		}
1117:../Source Files/lpc_ssp_glcd.c **** 
1118:../Source Files/lpc_ssp_glcd.c **** 		switch(format_flag = *format++)
1119:../Source Files/lpc_ssp_glcd.c **** 		{
1120:../Source Files/lpc_ssp_glcd.c **** 			case 'c':
1121:../Source Files/lpc_ssp_glcd.c **** 				format_flag = va_arg(ap, int);
1122:../Source Files/lpc_ssp_glcd.c **** 			    if(x+5*size >= 320)          // Performs character wrapping
1123:../Source Files/lpc_ssp_glcd.c **** 			    {
1124:../Source Files/lpc_ssp_glcd.c **** 			       x = 0;                           // Set x at far left position
1125:../Source Files/lpc_ssp_glcd.c **** 			       y += 7*size + 1;                 // Set y at next position down
1126:../Source Files/lpc_ssp_glcd.c **** 			    }
1127:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Text(x,y,&format_flag,1,5,7,default5x7,size,color);
1128:../Source Files/lpc_ssp_glcd.c **** 				x=x+5*size+1;
1129:../Source Files/lpc_ssp_glcd.c **** 
1130:../Source Files/lpc_ssp_glcd.c **** 				continue;
1131:../Source Files/lpc_ssp_glcd.c **** 
1132:../Source Files/lpc_ssp_glcd.c **** 			default:
1133:../Source Files/lpc_ssp_glcd.c **** 			    if(x+5*size >= 320)          // Performs character wrapping
1134:../Source Files/lpc_ssp_glcd.c **** 			    {
1135:../Source Files/lpc_ssp_glcd.c **** 			       x = 0;                           // Set x at far left position
1136:../Source Files/lpc_ssp_glcd.c **** 			       y += 7*size + 1;                 // Set y at next position down
1137:../Source Files/lpc_ssp_glcd.c **** 			    }
1138:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Text(x,y,&format_flag,1,5,7,default5x7,size,color);
1139:../Source Files/lpc_ssp_glcd.c **** 				x=x+5*size+1;
1140:../Source Files/lpc_ssp_glcd.c **** 
1141:../Source Files/lpc_ssp_glcd.c ****         		continue;
1142:../Source Files/lpc_ssp_glcd.c **** 
1143:../Source Files/lpc_ssp_glcd.c **** 			case 'b':
1144:../Source Files/lpc_ssp_glcd.c **** 				format_flag = va_arg(ap,int);
1145:../Source Files/lpc_ssp_glcd.c **** 			    if(x+5*size >= 320)          // Performs character wrapping
1146:../Source Files/lpc_ssp_glcd.c **** 			    {
1147:../Source Files/lpc_ssp_glcd.c **** 			       x = 0;                           // Set x at far left position
1148:../Source Files/lpc_ssp_glcd.c **** 			       y += 7*size + 1;                 // Set y at next position down
1149:../Source Files/lpc_ssp_glcd.c **** 			    }
1150:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Text(x,y,&(hex[(uint16)format_flag >> 4]),1,5,7,default5x7,size,color);
1151:../Source Files/lpc_ssp_glcd.c **** 				x=x+5*size+1;
1152:../Source Files/lpc_ssp_glcd.c **** 			    if(x+5*size >= 320)          // Performs character wrapping
1153:../Source Files/lpc_ssp_glcd.c **** 			    {
1154:../Source Files/lpc_ssp_glcd.c **** 			       x = 0;                           // Set x at far left position
1155:../Source Files/lpc_ssp_glcd.c **** 			       y += 7*size + 1;                 // Set y at next position down
1156:../Source Files/lpc_ssp_glcd.c **** 			    }
1157:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Text(x,y,&(hex[(uint16)format_flag & 0x0F]),1,5,7,default5x7,size,color);
1158:../Source Files/lpc_ssp_glcd.c **** 				x=x+5*size+1;
1159:../Source Files/lpc_ssp_glcd.c **** 
1160:../Source Files/lpc_ssp_glcd.c **** 				continue;
1161:../Source Files/lpc_ssp_glcd.c **** 
1162:../Source Files/lpc_ssp_glcd.c **** 			case 's':
1163:../Source Files/lpc_ssp_glcd.c **** 				ptr = va_arg(ap, schar *);
1164:../Source Files/lpc_ssp_glcd.c **** 				while(*ptr)
1165:../Source Files/lpc_ssp_glcd.c **** 				{
1166:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
1167:../Source Files/lpc_ssp_glcd.c **** 				    {
1168:../Source Files/lpc_ssp_glcd.c **** 				       x = 0;                           // Set x at far left position
1169:../Source Files/lpc_ssp_glcd.c **** 				       y += 7*size + 1;                 // Set y at next position down
1170:../Source Files/lpc_ssp_glcd.c **** 				    }
1171:../Source Files/lpc_ssp_glcd.c **** 					GLCD_Text(x,y,&(*ptr++),1,5,7,default5x7,size,color);
1172:../Source Files/lpc_ssp_glcd.c **** 					x=x+5*size+1;
1173:../Source Files/lpc_ssp_glcd.c **** 				}
1174:../Source Files/lpc_ssp_glcd.c **** 
1175:../Source Files/lpc_ssp_glcd.c **** 				continue;
1176:../Source Files/lpc_ssp_glcd.c **** #ifdef RTC_MODE
1177:../Source Files/lpc_ssp_glcd.c **** 			case 't':
1178:../Source Files/lpc_ssp_glcd.c **** 				RTC_GetFullTime (LPC_RTC, &FullTime);
1179:../Source Files/lpc_ssp_glcd.c **** 			    gprintf(x,y,size,color, "%d02:%d02:%d02",FullTime.HOUR,FullTime.MIN,FullTime.SEC);
1180:../Source Files/lpc_ssp_glcd.c **** 
1181:../Source Files/lpc_ssp_glcd.c **** 				continue;
1182:../Source Files/lpc_ssp_glcd.c **** 
1183:../Source Files/lpc_ssp_glcd.c **** 			case 'y':
1184:../Source Files/lpc_ssp_glcd.c **** 				RTC_GetFullTime (LPC_RTC, &FullTime);
1185:../Source Files/lpc_ssp_glcd.c **** 			    gprintf(x,y,size,color, "%d02/%d02/%d04",FullTime.DOM,FullTime.MONTH,FullTime.YEAR);
1186:../Source Files/lpc_ssp_glcd.c **** 
1187:../Source Files/lpc_ssp_glcd.c **** 				continue;
1188:../Source Files/lpc_ssp_glcd.c **** 
1189:../Source Files/lpc_ssp_glcd.c **** 			case 'a':
1190:../Source Files/lpc_ssp_glcd.c **** 				RTC_GetFullAlarmTime (LPC_RTC, &FullTime);
1191:../Source Files/lpc_ssp_glcd.c **** 				gprintf(x,y,size,color, "Time: %d02:%d02:%d02",FullTime.HOUR,FullTime.MIN,FullTime.SEC);
1192:../Source Files/lpc_ssp_glcd.c **** 				gprintf(x,y,size,color, "  Date: %d02/%d02/%d04",FullTime.DOM,FullTime.MONTH,FullTime.YEAR);
1193:../Source Files/lpc_ssp_glcd.c **** 
1194:../Source Files/lpc_ssp_glcd.c **** 				continue;
1195:../Source Files/lpc_ssp_glcd.c **** #endif
1196:../Source Files/lpc_ssp_glcd.c **** 			case 'u':
1197:../Source Files/lpc_ssp_glcd.c **** 				base = 16;
1198:../Source Files/lpc_ssp_glcd.c **** 				div_val = 0x100000;
1199:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap, uint32_t);
1200:../Source Files/lpc_ssp_glcd.c **** 				do
1201:../Source Files/lpc_ssp_glcd.c **** 				{
1202:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
1203:../Source Files/lpc_ssp_glcd.c **** 				    {
1204:../Source Files/lpc_ssp_glcd.c **** 				       x = 0;                           // Set x at far left position
1205:../Source Files/lpc_ssp_glcd.c **** 				       y += 7*size + 1;                 // Set y at next position down
1206:../Source Files/lpc_ssp_glcd.c **** 				    }
1207:../Source Files/lpc_ssp_glcd.c **** 					GLCD_Text(x,y,&(hex[u_val/div_val]),1,5,7,default5x7,size,color);
1208:../Source Files/lpc_ssp_glcd.c **** 					x=x+5*size+1;
1209:../Source Files/lpc_ssp_glcd.c **** 					u_val %= div_val;
1210:../Source Files/lpc_ssp_glcd.c **** 					div_val /= base;
1211:../Source Files/lpc_ssp_glcd.c **** 				}while(div_val);
1212:../Source Files/lpc_ssp_glcd.c **** 
1213:../Source Files/lpc_ssp_glcd.c **** 				continue;
1214:../Source Files/lpc_ssp_glcd.c **** 
1215:../Source Files/lpc_ssp_glcd.c **** 			case 'd':
1216:../Source Files/lpc_ssp_glcd.c **** 				base = 10;
1217:../Source Files/lpc_ssp_glcd.c **** 				fill_char = *format++;
1218:../Source Files/lpc_ssp_glcd.c **** 				format_flag = ( *format++ ) - '1';
1219:../Source Files/lpc_ssp_glcd.c **** 				div_val = width_dec[format_flag];
1220:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap,int);
1221:../Source Files/lpc_ssp_glcd.c **** 
1222:../Source Files/lpc_ssp_glcd.c **** 				if(((int)u_val) < 0)
1223:../Source Files/lpc_ssp_glcd.c **** 				{
1224:../Source Files/lpc_ssp_glcd.c **** 					u_val = - u_val;    // applied to unsigned type, result still unsigned
1225:../Source Files/lpc_ssp_glcd.c **** 					temp = '-';
1226:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
1227:../Source Files/lpc_ssp_glcd.c **** 				    {
1228:../Source Files/lpc_ssp_glcd.c **** 				       x = 0;                           // Set x at far left position
1229:../Source Files/lpc_ssp_glcd.c **** 				       y += 7*size + 1;                 // Set y at next position down
1230:../Source Files/lpc_ssp_glcd.c **** 				    }
1231:../Source Files/lpc_ssp_glcd.c **** 				    GLCD_Text(x,y,&temp,1,5,7,default5x7,size,color);
1232:../Source Files/lpc_ssp_glcd.c **** 				    x=x+5*size+1;
1233:../Source Files/lpc_ssp_glcd.c **** 				}
1234:../Source Files/lpc_ssp_glcd.c **** 
1235:../Source Files/lpc_ssp_glcd.c **** 				goto  CONVERSION_LOOP;
1236:../Source Files/lpc_ssp_glcd.c **** 
1237:../Source Files/lpc_ssp_glcd.c **** 			case 'x':
1238:../Source Files/lpc_ssp_glcd.c **** 				base = 16;
1239:../Source Files/lpc_ssp_glcd.c **** 				fill_char = *format++;
1240:../Source Files/lpc_ssp_glcd.c **** 				format_flag = (*format++) - '1';
1241:../Source Files/lpc_ssp_glcd.c **** 				div_val = width_hex[format_flag];
1242:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap, int);
1243:../Source Files/lpc_ssp_glcd.c **** 
1244:../Source Files/lpc_ssp_glcd.c **** 				CONVERSION_LOOP:
1245:../Source Files/lpc_ssp_glcd.c **** 				while(div_val > 1 && div_val > u_val)
1246:../Source Files/lpc_ssp_glcd.c **** 				{
1247:../Source Files/lpc_ssp_glcd.c **** 					div_val /= base;
1248:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
1249:../Source Files/lpc_ssp_glcd.c **** 				    {
1250:../Source Files/lpc_ssp_glcd.c **** 				       x = 0;                           // Set x at far left position
1251:../Source Files/lpc_ssp_glcd.c **** 				       y += 7*size + 1;                 // Set y at next position down
1252:../Source Files/lpc_ssp_glcd.c **** 				    }
1253:../Source Files/lpc_ssp_glcd.c **** 					GLCD_Text(x,y,&fill_char,1,5,7,default5x7,size,color);
1254:../Source Files/lpc_ssp_glcd.c **** 					x=x+5*size+1;
1255:../Source Files/lpc_ssp_glcd.c **** 				}
1256:../Source Files/lpc_ssp_glcd.c **** 
1257:../Source Files/lpc_ssp_glcd.c **** 				do
1258:../Source Files/lpc_ssp_glcd.c **** 				{
1259:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
1260:../Source Files/lpc_ssp_glcd.c **** 				    {
1261:../Source Files/lpc_ssp_glcd.c **** 				       x = 0;                           // Set x at far left position
1262:../Source Files/lpc_ssp_glcd.c **** 				       y += 7*size + 1;                 // Set y at next position down
1263:../Source Files/lpc_ssp_glcd.c **** 				    }
1264:../Source Files/lpc_ssp_glcd.c **** 					GLCD_Text(x,y,&(hex[u_val/div_val]),1,5,7,default5x7,size,color);
1265:../Source Files/lpc_ssp_glcd.c **** 					x=x+5*size+1;
1266:../Source Files/lpc_ssp_glcd.c **** 					u_val %= div_val;
1267:../Source Files/lpc_ssp_glcd.c **** 					div_val /= base;
1268:../Source Files/lpc_ssp_glcd.c **** 				}while(div_val);
1269:../Source Files/lpc_ssp_glcd.c **** 		}// end of switch statement
1270:../Source Files/lpc_ssp_glcd.c **** 	}
1271:../Source Files/lpc_ssp_glcd.c **** 	return(0);
1272:../Source Files/lpc_ssp_glcd.c **** }
1273:../Source Files/lpc_ssp_glcd.c **** 
1274:../Source Files/lpc_ssp_glcd.c **** 
1275:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1276:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw Bar for Bar Graph (Dependent on Bar Graph Test)
1277:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	index      Bar Number (from 1 to 10)
1278:../Source Files/lpc_ssp_glcd.c ****  *              width      Bar width
1279:../Source Files/lpc_ssp_glcd.c ****  *              per        Percentage height
1280:../Source Files/lpc_ssp_glcd.c ****  *              color      Bar Color
1281:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1282:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1283:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bar(int16_t index,uint8_t width,int16_t per,uint16_t color)
1284:../Source Files/lpc_ssp_glcd.c **** {
1285:../Source Files/lpc_ssp_glcd.c **** 	/**************************************************************************
1286:../Source Files/lpc_ssp_glcd.c **** 	 * Par1 : const 30 indicates  ref distance line. 28 indicates spacing between
1287:../Source Files/lpc_ssp_glcd.c **** 	 * two bar graphs at multiples of 28, now as the center of bar is located
1288:../Source Files/lpc_ssp_glcd.c **** 	 * half of width should be left and other half on right, so after subracting
1289:../Source Files/lpc_ssp_glcd.c **** 	 * half width from center we get x point of bar.
1290:../Source Files/lpc_ssp_glcd.c **** 	 * Par2 : 220 is Y ref line so (220 - bar heigth) will give y point of bar.
1291:../Source Files/lpc_ssp_glcd.c **** 	 * Par4 : per*2 is scaling for 200 pixels for 100 percentage heigth.
1292:../Source Files/lpc_ssp_glcd.c **** 	 **************************************************************************/
1293:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
1294:../Source Files/lpc_ssp_glcd.c **** 	{
1295:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Window_Fill(30+(index*26)-(width-(width/2)),220-(per*2),width,per*2,color);
1296:../Source Files/lpc_ssp_glcd.c **** 	}
1297:../Source Files/lpc_ssp_glcd.c **** }
1298:../Source Files/lpc_ssp_glcd.c **** 
1299:../Source Files/lpc_ssp_glcd.c **** 
1300:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1301:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Draw Line Bar for Bar Graph (Dependent on Bar Graph Test)
1302:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	index      Bar Number (from 1 to 10)
1303:../Source Files/lpc_ssp_glcd.c ****  *              width      Bar width
1304:../Source Files/lpc_ssp_glcd.c ****  *              y          y_reference for bar
1305:../Source Files/lpc_ssp_glcd.c ****  *              per        Percentage height
1306:../Source Files/lpc_ssp_glcd.c ****  *              dec        decrement bar YES/NO or TRUE/FALSE
1307:../Source Files/lpc_ssp_glcd.c ****  *              color      Bar Color
1308:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1309:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1310:../Source Files/lpc_ssp_glcd.c **** void GLCD_LBar(int16_t index, uint8_t width, int16_t y, int16_t per, Bool dec,uint16_t color)
1311:../Source Files/lpc_ssp_glcd.c **** {
1312:../Source Files/lpc_ssp_glcd.c **** 	int16_t x1,x2,h,y_diff;
1313:../Source Files/lpc_ssp_glcd.c **** 
1314:../Source Files/lpc_ssp_glcd.c **** 	if(dec)
1315:../Source Files/lpc_ssp_glcd.c **** 	{
1316:../Source Files/lpc_ssp_glcd.c **** 		y_diff=y+(per);
1317:../Source Files/lpc_ssp_glcd.c **** 	}
1318:../Source Files/lpc_ssp_glcd.c **** 	else
1319:../Source Files/lpc_ssp_glcd.c **** 	{
1320:../Source Files/lpc_ssp_glcd.c **** 		y_diff=y-(per);
1321:../Source Files/lpc_ssp_glcd.c **** 	}
1322:../Source Files/lpc_ssp_glcd.c **** 
1323:../Source Files/lpc_ssp_glcd.c **** 	if((y_diff>=20) && (index<=10) && !dec)
1324:../Source Files/lpc_ssp_glcd.c **** 	{
1325:../Source Files/lpc_ssp_glcd.c **** 		for(h=0;h<=per;h++)
1326:../Source Files/lpc_ssp_glcd.c **** 		{
1327:../Source Files/lpc_ssp_glcd.c **** 			x1 = 30+(index*26)-(width-(width/2));
1328:../Source Files/lpc_ssp_glcd.c **** 			x2 = x1+width;
1329:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x1,y-h,x2,y-h,color);
1330:../Source Files/lpc_ssp_glcd.c **** 		}
1331:../Source Files/lpc_ssp_glcd.c **** 	}
1332:../Source Files/lpc_ssp_glcd.c **** 	else if(dec && (y_diff<=219) && (index<=10))
1333:../Source Files/lpc_ssp_glcd.c **** 	{
1334:../Source Files/lpc_ssp_glcd.c **** 		for(h=0;h<=per;h++)
1335:../Source Files/lpc_ssp_glcd.c **** 		{
1336:../Source Files/lpc_ssp_glcd.c **** 			x1 = 30+(index*26)-(width-(width/2));
1337:../Source Files/lpc_ssp_glcd.c **** 			x2 = x1+width;
1338:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x1,y+h,x2,y+h,color);
1339:../Source Files/lpc_ssp_glcd.c **** 		}
1340:../Source Files/lpc_ssp_glcd.c **** 	}
1341:../Source Files/lpc_ssp_glcd.c **** }
1342:../Source Files/lpc_ssp_glcd.c **** 
1343:../Source Files/lpc_ssp_glcd.c **** 
1344:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1345:../Source Files/lpc_ssp_glcd.c ****  * @brief	    Display Bar Graph function
1346:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	None
1347:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1348:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1349:../Source Files/lpc_ssp_glcd.c **** void Show_BarGraph(void)
1350:../Source Files/lpc_ssp_glcd.c **** {
1351:../Source Files/lpc_ssp_glcd.c **** 	COORDINATE_Type point1,point2,point3;
1352:../Source Files/lpc_ssp_glcd.c **** 	COLORCFG_Type tricfg;
1353:../Source Files/lpc_ssp_glcd.c ****     uint16_t y_scale,x_scale,i;
1354:../Source Files/lpc_ssp_glcd.c **** 
1355:../Source Files/lpc_ssp_glcd.c **** 	// X and Y lines
1356:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(30,5,30,238,Black);
1357:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(1,220,315,220,Black);
1358:../Source Files/lpc_ssp_glcd.c **** 
1359:../Source Files/lpc_ssp_glcd.c **** 	gprintf(22,5,1,Black,"Y");
1360:../Source Files/lpc_ssp_glcd.c **** 	gprintf(310,225,1,Black,"X");
1361:../Source Files/lpc_ssp_glcd.c **** 	gprintf(50,5,1,Black,"X=ADC-CH  Y=VAL  Y-MAX=4095  Y-UNIT=40.95");
1362:../Source Files/lpc_ssp_glcd.c **** 
1363:../Source Files/lpc_ssp_glcd.c **** 	// Y Line Arrows Top and Bottom
1364:../Source Files/lpc_ssp_glcd.c **** 	// Top arrow coordinates
1365:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
1366:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 5;
1367:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
1368:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 10;
1369:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
1370:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 10;
1371:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1372:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1373:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1374:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1375:../Source Files/lpc_ssp_glcd.c **** 
1376:../Source Files/lpc_ssp_glcd.c **** 	// Bottom arrow coordinates
1377:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
1378:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 238;
1379:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
1380:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 233;
1381:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
1382:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 233;
1383:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1384:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1385:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1386:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1387:../Source Files/lpc_ssp_glcd.c **** 
1388:../Source Files/lpc_ssp_glcd.c **** 	// X Line Arrows Left and Right
1389:../Source Files/lpc_ssp_glcd.c **** 	// Left arrow coordinates
1390:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 1;
1391:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
1392:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 6;
1393:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
1394:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 6;
1395:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
1396:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1397:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1398:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1399:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1400:../Source Files/lpc_ssp_glcd.c **** 
1401:../Source Files/lpc_ssp_glcd.c **** 	// Right arrow coordinates
1402:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 315;
1403:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
1404:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 310;
1405:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
1406:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 310;
1407:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
1408:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
1409:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
1410:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
1411:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
1412:../Source Files/lpc_ssp_glcd.c **** 
1413:../Source Files/lpc_ssp_glcd.c **** 	// X and Y scaling
1414:../Source Files/lpc_ssp_glcd.c **** 	gprintf(0,225,1,Black,"(0,0)");
1415:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=1; y_scale>=20; y_scale=y_scale-20,i++)
1416:../Source Files/lpc_ssp_glcd.c **** 	{
1417:../Source Files/lpc_ssp_glcd.c **** 		if(y_scale!=20)
1418:../Source Files/lpc_ssp_glcd.c **** 		{
1419:../Source Files/lpc_ssp_glcd.c **** 			gprintf(14,y_scale,1,Black,"%d02",i*10);
1420:../Source Files/lpc_ssp_glcd.c **** 		}
1421:../Source Files/lpc_ssp_glcd.c **** 		else
1422:../Source Files/lpc_ssp_glcd.c **** 		{
1423:../Source Files/lpc_ssp_glcd.c **** 			gprintf(10,y_scale,1,Black,"%d03",i*10);
1424:../Source Files/lpc_ssp_glcd.c **** 		}
1425:../Source Files/lpc_ssp_glcd.c **** 
1426:../Source Files/lpc_ssp_glcd.c **** 	}
1427:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=1; x_scale<=300; x_scale=x_scale+26,i++)
1428:../Source Files/lpc_ssp_glcd.c **** 	{
1429:../Source Files/lpc_ssp_glcd.c **** 		gprintf(x_scale,225,1,Black,"%d02",i);
1430:../Source Files/lpc_ssp_glcd.c **** 	}
1431:../Source Files/lpc_ssp_glcd.c **** }
1432:../Source Files/lpc_ssp_glcd.c **** 
1433:../Source Files/lpc_ssp_glcd.c **** 
1434:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1435:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes commands to the GLCD
1436:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	Command		command to be written on GLCD
1437:../Source Files/lpc_ssp_glcd.c ****  * @return 		status
1438:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1439:../Source Files/lpc_ssp_glcd.c **** uchar Write_Command_Glcd (uint8_t Command)
1440:../Source Files/lpc_ssp_glcd.c **** {
 273              		.loc 1 1440 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 40
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL18:
 278 00a8 10B5     		push	{r4, lr}
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 283 00aa 8AB0     		sub	sp, sp, #40
 284              	.LCFI4:
 285              		.cfi_def_cfa_offset 48
 286              		.loc 1 1440 0
 287 00ac 0AAC     		add	r4, sp, #40
 288 00ae 04F8210D 		strb	r0, [r4, #-33]!
1441:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1442:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1443:../Source Files/lpc_ssp_glcd.c **** 	__IO uint32_t i;
1444:../Source Files/lpc_ssp_glcd.c **** 
1445:../Source Files/lpc_ssp_glcd.c **** 	GPIO_ClearValue(2, LCD_RS);  //select command mode
 289              		.loc 1 1445 0
 290 00b2 0121     		movs	r1, #1
 291 00b4 0220     		movs	r0, #2
 292              	.LVL19:
 293 00b6 FFF7FEFF 		bl	GPIO_ClearValue
 294              	.LVL20:
1446:../Source Files/lpc_ssp_glcd.c **** 
1447:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 295              		.loc 1 1447 0
 296 00ba 1148     		ldr	r0, .L27
 297 00bc 0021     		movs	r1, #0
 298 00be FFF7FEFF 		bl	CS_Force1
 299              	.LVL21:
1448:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = &Command;               /* Send Instruction Byte    */
 300              		.loc 1 1448 0
 301 00c2 0494     		str	r4, [sp, #16]
1449:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 302              		.loc 1 1449 0
 303 00c4 0022     		movs	r2, #0
1450:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 304              		.loc 1 1450 0
 305 00c6 0124     		movs	r4, #1
1451:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 306              		.loc 1 1451 0
 307 00c8 0D48     		ldr	r0, .L27
 308 00ca 04A9     		add	r1, sp, #16
1449:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 309              		.loc 1 1449 0
 310 00cc 0692     		str	r2, [sp, #24]
1450:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 1;
 311              		.loc 1 1450 0
 312 00ce 0894     		str	r4, [sp, #32]
 313              		.loc 1 1451 0
 314 00d0 FFF7FEFF 		bl	SSP_ReadWrite
 315              	.LVL22:
1452:../Source Files/lpc_ssp_glcd.c **** 
1453:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 316              		.loc 1 1453 0
 317 00d4 C0B2     		uxtb	r0, r0
 318 00d6 80B1     		cbz	r0, .L21
 319              	.LBB4:
 320              	.LBB5:
1454:../Source Files/lpc_ssp_glcd.c **** 	{
1455:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 321              		.loc 1 1455 0
 322 00d8 2146     		mov	r1, r4
 323 00da 0948     		ldr	r0, .L27
 324              	.LVL23:
 325 00dc FFF7FEFF 		bl	CS_Force1
 326              	.LVL24:
1456:../Source Files/lpc_ssp_glcd.c **** 		for(i=925; i>0; i--);
 327              		.loc 1 1456 0
 328 00e0 40F29D31 		movw	r1, #925
 329              	.L25:
 330              	.LVL25:
 331 00e4 0391     		str	r1, [sp, #12]
 332 00e6 039B     		ldr	r3, [sp, #12]
 333 00e8 13B1     		cbz	r3, .L26
 334              	.L23:
 335 00ea 0398     		ldr	r0, [sp, #12]
 336 00ec 411E     		subs	r1, r0, #1
 337              	.LVL26:
 338 00ee F9E7     		b	.L25
 339              	.LVL27:
 340              	.L26:
1457:../Source Files/lpc_ssp_glcd.c **** 		GPIO_SetValue(2, LCD_RS);  // select data mode
 341              		.loc 1 1457 0
 342 00f0 0220     		movs	r0, #2
 343 00f2 0121     		movs	r1, #1
 344 00f4 FFF7FEFF 		bl	GPIO_SetValue
 345              	.LVL28:
 346 00f8 0120     		movs	r0, #1
 347              	.L21:
 348              	.LBE5:
 349              	.LBE4:
1458:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1459:../Source Files/lpc_ssp_glcd.c **** 	}
1460:../Source Files/lpc_ssp_glcd.c **** 	else
1461:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1462:../Source Files/lpc_ssp_glcd.c **** }
 350              		.loc 1 1462 0
 351 00fa 0AB0     		add	sp, sp, #40
 352 00fc 10BD     		pop	{r4, pc}
 353              	.L28:
 354 00fe 00BF     		.align	2
 355              	.L27:
 356 0100 00000340 		.word	1073938432
 357              		.cfi_endproc
 358              	.LFE86:
 360              		.align	1
 361              		.global	Write_Data_Glcd
 362              		.thumb
 363              		.thumb_func
 365              	Write_Data_Glcd:
 366              	.LFB87:
1463:../Source Files/lpc_ssp_glcd.c **** 
1464:../Source Files/lpc_ssp_glcd.c **** 
1465:../Source Files/lpc_ssp_glcd.c **** /*********************************************************************//**
1466:../Source Files/lpc_ssp_glcd.c ****  * @brief	    This function writes data to the GLCD
1467:../Source Files/lpc_ssp_glcd.c ****  * @param[in]	data	data to be written on GLCD
1468:../Source Files/lpc_ssp_glcd.c ****  * @return 		None
1469:../Source Files/lpc_ssp_glcd.c ****  **********************************************************************/
1470:../Source Files/lpc_ssp_glcd.c **** uchar Write_Data_Glcd (uint16_t data)
1471:../Source Files/lpc_ssp_glcd.c **** {
 367              		.loc 1 1471 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 24
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL29:
 372 0104 10B5     		push	{r4, lr}
 373              	.LCFI5:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
1472:../Source Files/lpc_ssp_glcd.c **** 	SSP_DATA_SETUP_Type xferConfig;
1473:../Source Files/lpc_ssp_glcd.c **** 	uint8_t WriteStatus =0;
1474:../Source Files/lpc_ssp_glcd.c **** 
1475:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 377              		.loc 1 1475 0
 378 0106 0F4C     		ldr	r4, .L32
1471:../Source Files/lpc_ssp_glcd.c **** {
 379              		.loc 1 1471 0
 380 0108 86B0     		sub	sp, sp, #24
 381              	.LCFI6:
 382              		.cfi_def_cfa_offset 32
 383              		.loc 1 1475 0
 384 010a 030A     		lsrs	r3, r0, #8
1476:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[1] = (uchar) data;        // 2nd byte extract
 385              		.loc 1 1476 0
 386 010c 6070     		strb	r0, [r4, #1]
1477:../Source Files/lpc_ssp_glcd.c **** 
1478:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetValue(2, LCD_RS);  // select data mode
 387              		.loc 1 1478 0
 388 010e 0121     		movs	r1, #1
 389 0110 0220     		movs	r0, #2
 390              	.LVL30:
1475:../Source Files/lpc_ssp_glcd.c **** 	Tx_Buf1[0] = (uchar)(data>>8);    // 1st byte extract
 391              		.loc 1 1475 0
 392 0112 2370     		strb	r3, [r4, #0]
 393              		.loc 1 1478 0
 394 0114 FFF7FEFF 		bl	GPIO_SetValue
 395              	.LVL31:
1479:../Source Files/lpc_ssp_glcd.c **** 
1480:../Source Files/lpc_ssp_glcd.c **** 	CS_Force1 (LPC_SSP1, DISABLE);                        /* Select device           */
 396              		.loc 1 1480 0
 397 0118 0B48     		ldr	r0, .L32+4
 398 011a 0021     		movs	r1, #0
 399 011c FFF7FEFF 		bl	CS_Force1
 400              	.LVL32:
1481:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
1482:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
1483:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.length = 2;
 401              		.loc 1 1483 0
 402 0120 0220     		movs	r0, #2
1482:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 403              		.loc 1 1482 0
 404 0122 0022     		movs	r2, #0
 405              		.loc 1 1483 0
 406 0124 0490     		str	r0, [sp, #16]
1484:../Source Files/lpc_ssp_glcd.c **** 	WriteStatus = SSP_ReadWrite(LPC_SSP1, &xferConfig, SSP_TRANSFER_POLLING);
 407              		.loc 1 1484 0
 408 0126 6946     		mov	r1, sp
 409 0128 0748     		ldr	r0, .L32+4
1481:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.tx_data = Tx_Buf1;               /* Send Instruction Byte    */
 410              		.loc 1 1481 0
 411 012a 0094     		str	r4, [sp, #0]
1482:../Source Files/lpc_ssp_glcd.c **** 	xferConfig.rx_data = NULL;
 412              		.loc 1 1482 0
 413 012c 0292     		str	r2, [sp, #8]
 414              		.loc 1 1484 0
 415 012e FFF7FEFF 		bl	SSP_ReadWrite
 416              	.LVL33:
1485:../Source Files/lpc_ssp_glcd.c **** 
1486:../Source Files/lpc_ssp_glcd.c **** 	if(WriteStatus)
 417              		.loc 1 1486 0
 418 0132 C0B2     		uxtb	r0, r0
 419 0134 20B1     		cbz	r0, .L30
 420              	.LBB8:
 421              	.LBB9:
1487:../Source Files/lpc_ssp_glcd.c **** 	{
1488:../Source Files/lpc_ssp_glcd.c **** 		CS_Force1 (LPC_SSP1, ENABLE);                          /* CS high inactive        */
 422              		.loc 1 1488 0
 423 0136 0448     		ldr	r0, .L32+4
 424              	.LVL34:
 425 0138 0121     		movs	r1, #1
 426 013a FFF7FEFF 		bl	CS_Force1
 427              	.LVL35:
 428 013e 0120     		movs	r0, #1
 429              	.L30:
 430              	.LBE9:
 431              	.LBE8:
1489:../Source Files/lpc_ssp_glcd.c **** 		return(1);
1490:../Source Files/lpc_ssp_glcd.c **** 	}
1491:../Source Files/lpc_ssp_glcd.c **** 	else
1492:../Source Files/lpc_ssp_glcd.c **** 		return(0);
1493:../Source Files/lpc_ssp_glcd.c **** }
 432              		.loc 1 1493 0
 433 0140 06B0     		add	sp, sp, #24
 434 0142 10BD     		pop	{r4, pc}
 435              	.L33:
 436              		.align	2
 437              	.L32:
 438 0144 00000000 		.word	Tx_Buf1
 439 0148 00000340 		.word	1073938432
 440              		.cfi_endproc
 441              	.LFE87:
 443              		.align	1
 444              		.global	GLCD_Bargraph
 445              		.thumb
 446              		.thumb_func
 448              	GLCD_Bargraph:
 449              	.LFB73:
 503:../Source Files/lpc_ssp_glcd.c **** {
 450              		.loc 1 503 0
 451              		.cfi_startproc
 452              		@ args = 4, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              	.LVL36:
 455 014c 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 456              	.LCFI7:
 457              		.cfi_def_cfa_offset 24
 458              		.cfi_offset 4, -24
 459              		.cfi_offset 5, -20
 460              		.cfi_offset 6, -16
 461              		.cfi_offset 7, -12
 462              		.cfi_offset 8, -8
 463              		.cfi_offset 14, -4
 503:../Source Files/lpc_ssp_glcd.c **** {
 464              		.loc 1 503 0
 465 0150 0646     		mov	r6, r0
 506:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 466              		.loc 1 506 0
 467 0152 4520     		movs	r0, #69
 468              	.LVL37:
 503:../Source Files/lpc_ssp_glcd.c **** {
 469              		.loc 1 503 0
 470 0154 1546     		mov	r5, r2
 471 0156 1F46     		mov	r7, r3
 472 0158 0C46     		mov	r4, r1
 473 015a BDF81880 		ldrh	r8, [sp, #24]
 506:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 474              		.loc 1 506 0
 475 015e FFF7FEFF 		bl	Write_Command_Glcd
 476              	.LVL38:
 507:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 477              		.loc 1 507 0
 478 0162 3046     		mov	r0, r6
 479 0164 FFF7FEFF 		bl	Write_Data_Glcd
 480              	.LVL39:
 509:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 481              		.loc 1 509 0
 482 0168 4620     		movs	r0, #70
 483 016a FFF7FEFF 		bl	Write_Command_Glcd
 484              	.LVL40:
 510:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 485              		.loc 1 510 0
 486 016e 701E     		subs	r0, r6, #1
 487 0170 2918     		adds	r1, r5, r0
 488 0172 88B2     		uxth	r0, r1
 489 0174 FFF7FEFF 		bl	Write_Data_Glcd
 490              	.LVL41:
 512:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 491              		.loc 1 512 0
 492 0178 4420     		movs	r0, #68
 493 017a FFF7FEFF 		bl	Write_Command_Glcd
 494              	.LVL42:
 513:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 495              		.loc 1 513 0
 496 017e 2046     		mov	r0, r4
 497 0180 FFF7FEFF 		bl	Write_Data_Glcd
 498              	.LVL43:
 515:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 499              		.loc 1 515 0
 500 0184 4420     		movs	r0, #68
 501 0186 FFF7FEFF 		bl	Write_Command_Glcd
 502              	.LVL44:
 516:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 503              		.loc 1 516 0
 504 018a 04F11702 		add	r2, r4, #23
 505 018e 1302     		lsls	r3, r2, #8
 506 0190 03F47F40 		and	r0, r3, #65280
 507 0194 FFF7FEFF 		bl	Write_Data_Glcd
 508              	.LVL45:
 518:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 509              		.loc 1 518 0
 510 0198 4E20     		movs	r0, #78
 511 019a FFF7FEFF 		bl	Write_Command_Glcd
 512              	.LVL46:
 519:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 513              		.loc 1 519 0
 514 019e 3046     		mov	r0, r6
 515 01a0 FFF7FEFF 		bl	Write_Data_Glcd
 516              	.LVL47:
 521:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 517              		.loc 1 521 0
 518 01a4 4F20     		movs	r0, #79
 519 01a6 FFF7FEFF 		bl	Write_Command_Glcd
 520              	.LVL48:
 522:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 521              		.loc 1 522 0
 522 01aa 2046     		mov	r0, r4
 523 01ac FFF7FEFF 		bl	Write_Data_Glcd
 524              	.LVL49:
 524:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 525              		.loc 1 524 0
 526 01b0 2220     		movs	r0, #34
 527 01b2 FFF7FEFF 		bl	Write_Command_Glcd
 528              	.LVL50:
 528:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 529              		.loc 1 528 0
 530 01b6 FFF723FF 		bl	wr_dat_start
 531              	.LVL51:
 526:../Source Files/lpc_ssp_glcd.c **** 	val = (val * w) >> 10;                /* Scale value for 24x12 characters   */
 532              		.loc 1 526 0
 533 01ba 05FB08F6 		mul	r6, r5, r8
 534 01be 4FEAA628 		asr	r8, r6, #10
 535              	.LVL52:
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 536              		.loc 1 529 0
 537 01c2 0026     		movs	r6, #0
 538              	.LVL53:
 539              	.L35:
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 540              		.loc 1 529 0 is_stmt 0 discriminator 1
 541 01c4 B742     		cmp	r7, r6
 542 01c6 10D0     		beq	.L42
 543              	.L40:
 529:../Source Files/lpc_ssp_glcd.c **** 	for (i = h; i >0; i--)
 544              		.loc 1 529 0
 545 01c8 0024     		movs	r4, #0
 546              	.L39:
 547              	.LVL54:
 531:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 548              		.loc 1 531 0 is_stmt 1 discriminator 1
 549 01ca A542     		cmp	r5, r4
 550 01cc 0BDD     		ble	.L43
 551              	.L38:
 533:../Source Files/lpc_ssp_glcd.c **** 			if(j <= val)
 552              		.loc 1 533 0
 553 01ce 1FFA88F0 		uxth	r0, r8
 554 01d2 8442     		cmp	r4, r0
 535:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 555              		.loc 1 535 0
 556 01d4 D4BF     		ite	le
 557 01d6 0748     		ldrle	r0, .L44
 539:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 558              		.loc 1 539 0
 559 01d8 0748     		ldrgt	r0, .L44+4
 531:../Source Files/lpc_ssp_glcd.c **** 		for (j = 0; j <= w-1; j++)
 560              		.loc 1 531 0
 561 01da 0134     		adds	r4, r4, #1
 562              	.LVL55:
 539:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 563              		.loc 1 539 0
 564 01dc 0188     		ldrh	r1, [r0, #0]
 565 01de 88B2     		uxth	r0, r1
 566 01e0 FFF722FF 		bl	wr_dat_only
 567              	.LVL56:
 568 01e4 F1E7     		b	.L39
 569              	.L43:
 570 01e6 0136     		adds	r6, r6, #1
 571 01e8 ECE7     		b	.L35
 572              	.LVL57:
 573              	.L42:
 544:../Source Files/lpc_ssp_glcd.c **** }
 574              		.loc 1 544 0
 575 01ea BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 543:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 576              		.loc 1 543 0
 577 01ee FFF715BF 		b	wr_dat_stop
 578              	.LVL58:
 579              	.L45:
 580 01f2 00BF     		.align	2
 581              	.L44:
 582 01f4 00000000 		.word	.LANCHOR1
 583 01f8 00000000 		.word	.LANCHOR0
 584              		.cfi_endproc
 585              	.LFE73:
 587              		.align	1
 588              		.global	GLCD_Draw_Char
 589              		.thumb
 590              		.thumb_func
 592              	GLCD_Draw_Char:
 593              	.LFB69:
 406:../Source Files/lpc_ssp_glcd.c **** {
 594              		.loc 1 406 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              	.LVL59:
 599 01fc F8B5     		push	{r3, r4, r5, r6, r7, lr}
 600              	.LCFI8:
 601              		.cfi_def_cfa_offset 24
 602              		.cfi_offset 3, -24
 603              		.cfi_offset 4, -20
 604              		.cfi_offset 5, -16
 605              		.cfi_offset 6, -12
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 409:../Source Files/lpc_ssp_glcd.c **** 	x = x-CHAR_W;
 608              		.loc 1 409 0
 609 01fe A0F11005 		sub	r5, r0, #16
 610 0202 ADB2     		uxth	r5, r5
 611              	.LVL60:
 406:../Source Files/lpc_ssp_glcd.c **** {
 612              		.loc 1 406 0
 613 0204 0646     		mov	r6, r0
 411:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 614              		.loc 1 411 0
 615 0206 4520     		movs	r0, #69
 406:../Source Files/lpc_ssp_glcd.c **** {
 616              		.loc 1 406 0
 617 0208 0C46     		mov	r4, r1
 618 020a 1746     		mov	r7, r2
 411:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 619              		.loc 1 411 0
 620 020c FFF7FEFF 		bl	Write_Command_Glcd
 621              	.LVL61:
 412:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 622              		.loc 1 412 0
 623 0210 2846     		mov	r0, r5
 624 0212 FFF7FEFF 		bl	Write_Data_Glcd
 625              	.LVL62:
 414:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 626              		.loc 1 414 0
 627 0216 4620     		movs	r0, #70
 628 0218 FFF7FEFF 		bl	Write_Command_Glcd
 629              	.LVL63:
 415:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+CHAR_W-1);
 630              		.loc 1 415 0
 631 021c 701E     		subs	r0, r6, #1
 632 021e 80B2     		uxth	r0, r0
 633 0220 FFF7FEFF 		bl	Write_Data_Glcd
 634              	.LVL64:
 417:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 635              		.loc 1 417 0
 636 0224 4420     		movs	r0, #68
 637 0226 FFF7FEFF 		bl	Write_Command_Glcd
 638              	.LVL65:
 418:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 639              		.loc 1 418 0
 640 022a 2046     		mov	r0, r4
 641 022c FFF7FEFF 		bl	Write_Data_Glcd
 642              	.LVL66:
 420:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 643              		.loc 1 420 0
 644 0230 4420     		movs	r0, #68
 645 0232 FFF7FEFF 		bl	Write_Command_Glcd
 646              	.LVL67:
 421:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+CHAR_H-1)<<8);
 647              		.loc 1 421 0
 648 0236 04F11701 		add	r1, r4, #23
 649 023a 0A02     		lsls	r2, r1, #8
 650 023c 02F47F40 		and	r0, r2, #65280
 651 0240 FFF7FEFF 		bl	Write_Data_Glcd
 652              	.LVL68:
 423:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 653              		.loc 1 423 0
 654 0244 4E20     		movs	r0, #78
 655 0246 FFF7FEFF 		bl	Write_Command_Glcd
 656              	.LVL69:
 424:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 657              		.loc 1 424 0
 658 024a 2846     		mov	r0, r5
 659 024c FFF7FEFF 		bl	Write_Data_Glcd
 660              	.LVL70:
 426:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 661              		.loc 1 426 0
 662 0250 4F20     		movs	r0, #79
 663 0252 FFF7FEFF 		bl	Write_Command_Glcd
 664              	.LVL71:
 427:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 665              		.loc 1 427 0
 666 0256 2046     		mov	r0, r4
 667 0258 FFF7FEFF 		bl	Write_Data_Glcd
 668              	.LVL72:
 429:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 669              		.loc 1 429 0
 670 025c 2220     		movs	r0, #34
 671 025e FFF7FEFF 		bl	Write_Command_Glcd
 672              	.LVL73:
 431:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 673              		.loc 1 431 0
 674 0262 FFF7CDFE 		bl	wr_dat_start
 675              	.LVL74:
 676 0266 0025     		movs	r5, #0
 677              	.LVL75:
 678              	.L47:
 406:../Source Files/lpc_ssp_glcd.c **** {
 679              		.loc 1 406 0 discriminator 1
 680 0268 0024     		movs	r4, #0
 681              	.LVL76:
 682              	.L50:
 436:../Source Files/lpc_ssp_glcd.c **** 			if((c[idx] & (1 << i)) == 0x00)
 683              		.loc 1 436 0
 684 026a 7B5B     		ldrh	r3, [r7, r5]
 685 026c 43FA04F3 		asr	r3, r3, r4
 686 0270 D807     		lsls	r0, r3, #31
 438:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(BackColor);
 687              		.loc 1 438 0
 688 0272 54BF     		ite	pl
 689 0274 0748     		ldrpl	r0, .L54
 442:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 690              		.loc 1 442 0
 691 0276 0848     		ldrmi	r0, .L54+4
 434:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 692              		.loc 1 434 0
 693 0278 0134     		adds	r4, r4, #1
 442:../Source Files/lpc_ssp_glcd.c **** 				wr_dat_only(TextColor);
 694              		.loc 1 442 0
 695 027a 0188     		ldrh	r1, [r0, #0]
 696 027c 88B2     		uxth	r0, r1
 697 027e FFF7D3FE 		bl	wr_dat_only
 698              	.LVL77:
 434:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i<CHAR_W; i++)
 699              		.loc 1 434 0
 700 0282 102C     		cmp	r4, #16
 701 0284 F1D1     		bne	.L50
 702 0286 0235     		adds	r5, r5, #2
 432:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < CHAR_H; j++)
 703              		.loc 1 432 0
 704 0288 302D     		cmp	r5, #48
 705 028a EDD1     		bne	.L47
 706              	.L51:
 448:../Source Files/lpc_ssp_glcd.c **** }
 707              		.loc 1 448 0
 708 028c BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 447:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 709              		.loc 1 447 0
 710 0290 FFF7C4BE 		b	wr_dat_stop
 711              	.LVL78:
 712              	.L55:
 713              		.align	2
 714              	.L54:
 715 0294 00000000 		.word	.LANCHOR1
 716 0298 00000000 		.word	.LANCHOR0
 717              		.cfi_endproc
 718              	.LFE69:
 720              		.align	1
 721              		.global	GLCD_Display_Char
 722              		.thumb
 723              		.thumb_func
 725              	GLCD_Display_Char:
 726              	.LFB70:
 459:../Source Files/lpc_ssp_glcd.c **** {
 727              		.loc 1 459 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              	.LVL79:
 460:../Source Files/lpc_ssp_glcd.c **** 	c -= 32;
 732              		.loc 1 460 0
 733 029c 203A     		subs	r2, r2, #32
 734              	.LVL80:
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 735              		.loc 1 461 0
 736 029e 1823     		movs	r3, #24
 737 02a0 D2B2     		uxtb	r2, r2
 738 02a2 5843     		muls	r0, r3, r0
 739              	.LVL81:
 459:../Source Files/lpc_ssp_glcd.c **** {
 740              		.loc 1 459 0
 741 02a4 10B5     		push	{r4, lr}
 742              	.LCFI9:
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 4, -8
 745              		.cfi_offset 14, -4
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 746              		.loc 1 461 0
 747 02a6 5343     		muls	r3, r2, r3
 748 02a8 0901     		lsls	r1, r1, #4
 749              	.LVL82:
 750 02aa 054A     		ldr	r2, .L57
 751 02ac 8CB2     		uxth	r4, r1
 752 02ae 02EB4302 		add	r2, r2, r3, lsl #1
 753 02b2 81B2     		uxth	r1, r0
 754 02b4 2046     		mov	r0, r4
 462:../Source Files/lpc_ssp_glcd.c **** }
 755              		.loc 1 462 0
 756 02b6 BDE81040 		pop	{r4, lr}
 461:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Draw_Char(col * CHAR_W, ln * CHAR_H, (uint16_t *)&Font_24x16[c * CHAR_H]);
 757              		.loc 1 461 0
 758 02ba FFF7FEBF 		b	GLCD_Draw_Char
 759              	.LVL83:
 760              	.L58:
 761 02be 00BF     		.align	2
 762              	.L57:
 763 02c0 00000000 		.word	.LANCHOR2
 764              		.cfi_endproc
 765              	.LFE70:
 767              		.align	1
 768              		.global	GLCD_PutPixel
 769              		.thumb
 770              		.thumb_func
 772              	GLCD_PutPixel:
 773              	.LFB62:
 297:../Source Files/lpc_ssp_glcd.c **** {
 774              		.loc 1 297 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              	.LVL84:
 779 02c4 70B5     		push	{r4, r5, r6, lr}
 780              	.LCFI10:
 781              		.cfi_def_cfa_offset 16
 782              		.cfi_offset 4, -16
 783              		.cfi_offset 5, -12
 784              		.cfi_offset 6, -8
 785              		.cfi_offset 14, -4
 297:../Source Files/lpc_ssp_glcd.c **** {
 786              		.loc 1 297 0
 787 02c6 0446     		mov	r4, r0
 298:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 788              		.loc 1 298 0
 789 02c8 4E20     		movs	r0, #78
 790              	.LVL85:
 297:../Source Files/lpc_ssp_glcd.c **** {
 791              		.loc 1 297 0
 792 02ca 0D46     		mov	r5, r1
 793 02cc 1646     		mov	r6, r2
 298:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 794              		.loc 1 298 0
 795 02ce FFF7FEFF 		bl	Write_Command_Glcd
 796              	.LVL86:
 299:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 797              		.loc 1 299 0
 798 02d2 2046     		mov	r0, r4
 799 02d4 FFF7FEFF 		bl	Write_Data_Glcd
 800              	.LVL87:
 301:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 801              		.loc 1 301 0
 802 02d8 4F20     		movs	r0, #79
 803 02da FFF7FEFF 		bl	Write_Command_Glcd
 804              	.LVL88:
 302:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 805              		.loc 1 302 0
 806 02de 2846     		mov	r0, r5
 807 02e0 FFF7FEFF 		bl	Write_Data_Glcd
 808              	.LVL89:
 304:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);      /* RAM data write     */
 809              		.loc 1 304 0
 810 02e4 2220     		movs	r0, #34
 811 02e6 FFF7FEFF 		bl	Write_Command_Glcd
 812              	.LVL90:
 305:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 813              		.loc 1 305 0
 814 02ea 3046     		mov	r0, r6
 306:../Source Files/lpc_ssp_glcd.c **** }
 815              		.loc 1 306 0
 816 02ec BDE87040 		pop	{r4, r5, r6, lr}
 305:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(color);
 817              		.loc 1 305 0
 818 02f0 FFF7FEBF 		b	Write_Data_Glcd
 819              	.LVL91:
 820              		.cfi_endproc
 821              	.LFE62:
 823              		.align	1
 824              		.global	GLCD_Text
 825              		.thumb
 826              		.thumb_func
 828              	GLCD_Text:
 829              	.LFB81:
1022:../Source Files/lpc_ssp_glcd.c **** {
 830              		.loc 1 1022 0
 831              		.cfi_startproc
 832              		@ args = 20, pretend = 0, frame = 64
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834              	.LVL92:
 835 02f4 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 836              	.LCFI11:
 837              		.cfi_def_cfa_offset 36
 838              		.cfi_offset 4, -36
 839              		.cfi_offset 5, -32
 840              		.cfi_offset 6, -28
 841              		.cfi_offset 7, -24
 842              		.cfi_offset 8, -20
 843              		.cfi_offset 9, -16
 844              		.cfi_offset 10, -12
 845              		.cfi_offset 11, -8
 846              		.cfi_offset 14, -4
 847 02f8 91B0     		sub	sp, sp, #68
 848              	.LCFI12:
 849              		.cfi_def_cfa_offset 104
 850 02fa 00AF     		add	r7, sp, #0
 851              	.LCFI13:
 852              		.cfi_def_cfa_register 7
1022:../Source Files/lpc_ssp_glcd.c **** {
 853              		.loc 1 1022 0
 854 02fc 97F97450 		ldrsb	r5, [r7, #116]
 855 0300 3B61     		str	r3, [r7, #16]
 856 0302 B7F87830 		ldrh	r3, [r7, #120]
 857              	.LVL93:
 858 0306 97F86840 		ldrb	r4, [r7, #104]	@ zero_extendqisi2
 859              	.LVL94:
 860 030a FB60     		str	r3, [r7, #12]
 861              	.LBB10:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 862              		.loc 1 1033 0
 863 030c ABB2     		uxth	r3, r5
 864              	.LBE10:
1022:../Source Files/lpc_ssp_glcd.c **** {
 865              		.loc 1 1022 0
 866 030e 7A61     		str	r2, [r7, #20]
 867              	.LBB11:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 868              		.loc 1 1033 0
 869 0310 7B63     		str	r3, [r7, #52]
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 870              		.loc 1 1037 0
 871 0312 97F86C20 		ldrb	r2, [r7, #108]	@ zero_extendqisi2
 872              	.LVL95:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 873              		.loc 1 1033 0
 874 0316 6343     		muls	r3, r4, r3
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 875              		.loc 1 1030 0
 876 0318 05FB04F6 		mul	r6, r5, r4
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 877              		.loc 1 1037 0
 878 031c 6A43     		muls	r2, r5, r2
 879              	.LBE11:
1022:../Source Files/lpc_ssp_glcd.c **** {
 880              		.loc 1 1022 0
 881 031e F863     		str	r0, [r7, #60]
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 882              		.loc 1 1024 0
 883 0320 E01D     		adds	r0, r4, #7
 884              	.LVL96:
1022:../Source Files/lpc_ssp_glcd.c **** {
 885              		.loc 1 1022 0
 886 0322 3963     		str	r1, [r7, #48]
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 887              		.loc 1 1024 0
 888 0324 00F4FC71 		and	r1, r0, #504
 889              	.LVL97:
 890              	.LBB12:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 891              		.loc 1 1033 0
 892 0328 581C     		adds	r0, r3, #1
 893              	.LBE12:
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 894              		.loc 1 1024 0
 895 032a ADEB010D 		sub	sp, sp, r1
 896              	.LBB13:
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 897              		.loc 1 1030 0
 898 032e BE62     		str	r6, [r7, #40]
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 899              		.loc 1 1033 0
 900 0330 81B2     		uxth	r1, r0
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint16_t length, uint8_t row, uint8_t col, in
 901              		.loc 1 1021 0
 902 0332 9EB2     		uxth	r6, r3
 903 0334 BE61     		str	r6, [r7, #24]
 904              	.LBE13:
1024:../Source Files/lpc_ssp_glcd.c ****    int8_t pixelData[row];                     // Stores character data
 905              		.loc 1 1024 0
 906 0336 C7F82CD0 		str	sp, [r7, #44]
 907              	.LVL98:
 908              	.LBB14:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 909              		.loc 1 1033 0
 910 033a 7962     		str	r1, [r7, #36]
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 911              		.loc 1 1037 0
 912 033c 3A62     		str	r2, [r7, #32]
 913              	.LBE14:
1026:../Source Files/lpc_ssp_glcd.c ****    for(i=0; i<length; ++i, ++x) // Loop through the passed string
 914              		.loc 1 1026 0
 915 033e 0026     		movs	r6, #0
 916              	.LVL99:
 917              	.L61:
1026:../Source Files/lpc_ssp_glcd.c ****    for(i=0; i<length; ++i, ++x) // Loop through the passed string
 918              		.loc 1 1026 0 is_stmt 0 discriminator 1
 919 0340 3B69     		ldr	r3, [r7, #16]
 920 0342 9E42     		cmp	r6, r3
 921 0344 6ADA     		bge	.L73
 922              	.L70:
 923              	.LBB15:
1028:../Source Files/lpc_ssp_glcd.c ****       memcpy(pixelData, font[textptr[i]-' '], row);
 924              		.loc 1 1028 0 is_stmt 1
 925 0346 7869     		ldr	r0, [r7, #20]
 926 0348 3A6F     		ldr	r2, [r7, #112]
 927 034a 8157     		ldrsb	r1, [r0, r6]
 928 034c F86A     		ldr	r0, [r7, #44]
 929 034e 2039     		subs	r1, r1, #32
 930 0350 04FB0121 		mla	r1, r4, r1, r2
 931 0354 2246     		mov	r2, r4
 932 0356 FFF7FEFF 		bl	memcpy
 933              	.LVL100:
1030:../Source Files/lpc_ssp_glcd.c ****       if(x+row*size >= 320)          // Performs character wrapping
 934              		.loc 1 1030 0
 935 035a FB6B     		ldr	r3, [r7, #60]
 936 035c B86A     		ldr	r0, [r7, #40]
 937 035e 1918     		adds	r1, r3, r0
 938 0360 B1F5A07F 		cmp	r1, #320
 939 0364 06DB     		blt	.L62
 940              	.LVL101:
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 941              		.loc 1 1033 0
 942 0366 7A6A     		ldr	r2, [r7, #36]
 943 0368 3B6B     		ldr	r3, [r7, #48]
 944 036a D018     		adds	r0, r2, r3
 945 036c 01B2     		sxth	r1, r0
1032:../Source Files/lpc_ssp_glcd.c ****          x = 0;                           // Set x at far left position
 946              		.loc 1 1032 0
 947 036e 0022     		movs	r2, #0
1033:../Source Files/lpc_ssp_glcd.c ****          y += row*size + 1;                 // Set y at next position down
 948              		.loc 1 1033 0
 949 0370 3963     		str	r1, [r7, #48]
1032:../Source Files/lpc_ssp_glcd.c ****          x = 0;                           // Set x at far left position
 950              		.loc 1 1032 0
 951 0372 FA63     		str	r2, [r7, #60]
 952              	.LVL102:
 953              	.L62:
1035:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
 954              		.loc 1 1035 0
 955 0374 FB6B     		ldr	r3, [r7, #60]
 956 0376 4FF00008 		mov	r8, #0
 957 037a BB63     		str	r3, [r7, #56]
 958              	.LVL103:
 959              	.L63:
1035:../Source Files/lpc_ssp_glcd.c ****       for(j=0; j<row; ++j, x+=size)         // Loop through character byte data
 960              		.loc 1 1035 0 is_stmt 0 discriminator 1
 961 037c A045     		cmp	r8, r4
 962 037e 45DA     		bge	.L69
 963 0380 396B     		ldr	r1, [r7, #48]
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint16_t length, uint8_t row, uint8_t col, in
 964              		.loc 1 1021 0 is_stmt 1
 965 0382 4FF0000C 		mov	ip, #0
 966 0386 1FFA81FB 		uxth	fp, r1
 967              	.L65:
1037:../Source Files/lpc_ssp_glcd.c ****          for(k=0; k<col*size; ++k)          // Loop through the vertical pixels
 968              		.loc 1 1037 0 discriminator 1
 969 038a 3A6A     		ldr	r2, [r7, #32]
 970 038c 9445     		cmp	ip, r2
 971 038e 35DA     		bge	.L74
 972              	.L68:
1039:../Source Files/lpc_ssp_glcd.c ****             if(bit_test(pixelData[j], k)) // Check if the pixel should be set
 973              		.loc 1 1039 0
 974 0390 FB6A     		ldr	r3, [r7, #44]
 975 0392 13F90800 		ldrsb	r0, [r3, r8]
 976 0396 40FA0CF1 		asr	r1, r0, ip
 977 039a CA07     		lsls	r2, r1, #31
 978 039c 06D4     		bmi	.L71
 979              	.L67:
 980 039e 786B     		ldr	r0, [r7, #52]
 981 03a0 0CF1010C 		add	ip, ip, #1
 982 03a4 8344     		add	fp, fp, r0
 983 03a6 1FFA8BFB 		uxth	fp, fp
 984 03aa EEE7     		b	.L65
 985              	.L71:
 986 03ac 4FF0000A 		mov	sl, #0
 987              	.L64:
 988              	.LVL104:
1041:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
 989              		.loc 1 1041 0 discriminator 1
 990 03b0 0FFA8AF2 		sxth	r2, sl
 991 03b4 ABB2     		uxth	r3, r5
 992 03b6 9542     		cmp	r5, r2
 993 03b8 FB61     		str	r3, [r7, #28]
 994 03ba F0DD     		ble	.L67
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint16_t length, uint8_t row, uint8_t col, in
 995              		.loc 1 1021 0
 996 03bc 0BEB0A01 		add	r1, fp, sl
 997 03c0 8BB2     		uxth	r3, r1
 998 03c2 4FF00009 		mov	r9, #0
 999              	.L66:
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint16_t length, uint8_t row, uint8_t col, in
 1000              		.loc 1 1021 0 is_stmt 0 discriminator 2
 1001 03c6 BA6B     		ldr	r2, [r7, #56]
1045:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
 1002              		.loc 1 1045 0 is_stmt 1 discriminator 2
 1003 03c8 1946     		mov	r1, r3
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint16_t length, uint8_t row, uint8_t col, in
 1004              		.loc 1 1021 0 discriminator 2
 1005 03ca 09EB0200 		add	r0, r9, r2
1045:../Source Files/lpc_ssp_glcd.c ****                      GLCD_PutPixel(x+m, y+k*size+l, color); // Draws the pixel
 1006              		.loc 1 1045 0 discriminator 2
 1007 03ce 80B2     		uxth	r0, r0
 1008 03d0 FA68     		ldr	r2, [r7, #12]
 1009 03d2 7B60     		str	r3, [r7, #4]
 1010 03d4 C7F808C0 		str	ip, [r7, #8]
 1011 03d8 FFF7FEFF 		bl	GLCD_PutPixel
 1012              	.LVL105:
1043:../Source Files/lpc_ssp_glcd.c ****                   for(m=0; m<size; ++m)
 1013              		.loc 1 1043 0 discriminator 2
 1014 03dc FB69     		ldr	r3, [r7, #28]
 1015 03de 09F10109 		add	r9, r9, #1
 1016 03e2 1AB2     		sxth	r2, r3
 1017 03e4 0FFA89F1 		sxth	r1, r9
 1018 03e8 9142     		cmp	r1, r2
 1019 03ea 7B68     		ldr	r3, [r7, #4]
 1020 03ec D7F808C0 		ldr	ip, [r7, #8]
 1021 03f0 E9DB     		blt	.L66
1041:../Source Files/lpc_ssp_glcd.c ****                for(l=0; l<size; ++l)      // The next two loops change the
 1022              		.loc 1 1041 0
 1023 03f2 0AF1010A 		add	sl, sl, #1
 1024              	.LVL106:
 1025 03f6 1FFA8AFA 		uxth	sl, sl
 1026              	.LVL107:
 1027 03fa D9E7     		b	.L64
 1028              	.LVL108:
 1029              	.L74:
1021:../Source Files/lpc_ssp_glcd.c **** void GLCD_Text(int16_t x, int16_t y, int8_t* textptr, uint16_t length, uint8_t row, uint8_t col, in
 1030              		.loc 1 1021 0
 1031 03fc B86B     		ldr	r0, [r7, #56]
 1032 03fe 7B6B     		ldr	r3, [r7, #52]
 1033 0400 08F10108 		add	r8, r8, #1
 1034 0404 1918     		adds	r1, r3, r0
 1035 0406 0AB2     		sxth	r2, r1
 1036 0408 BA63     		str	r2, [r7, #56]
 1037 040a B7E7     		b	.L63
 1038              	.L69:
 1039 040c F86B     		ldr	r0, [r7, #60]
 1040 040e B969     		ldr	r1, [r7, #24]
 1041 0410 0136     		adds	r6, r6, #1
 1042 0412 4218     		adds	r2, r0, r1
 1043              	.LBE15:
1026:../Source Files/lpc_ssp_glcd.c ****    for(i=0; i<length; ++i, ++x) // Loop through the passed string
 1044              		.loc 1 1026 0
 1045 0414 531C     		adds	r3, r2, #1
 1046 0416 18B2     		sxth	r0, r3
 1047 0418 F863     		str	r0, [r7, #60]
 1048              	.LVL109:
 1049 041a 91E7     		b	.L61
 1050              	.L73:
1052:../Source Files/lpc_ssp_glcd.c **** }
 1051              		.loc 1 1052 0
 1052 041c 07F14407 		add	r7, r7, #68
 1053 0420 BD46     		mov	sp, r7
 1054 0422 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1055              		.cfi_endproc
 1056              	.LFE81:
 1058              		.align	1
 1059              		.global	gprintf
 1060              		.thumb
 1061              		.thumb_func
 1063              	gprintf:
 1064              	.LFB82:
1083:../Source Files/lpc_ssp_glcd.c **** {
 1065              		.loc 1 1083 0
 1066              		.cfi_startproc
 1067              		@ args = 4, pretend = 0, frame = 128
 1068              		@ frame_needed = 0, uses_anonymous_args = 1
 1069              	.LVL110:
 1070 0426 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1071              	.LCFI14:
 1072              		.cfi_def_cfa_offset 36
 1073              		.cfi_offset 4, -36
 1074              		.cfi_offset 5, -32
 1075              		.cfi_offset 6, -28
 1076              		.cfi_offset 7, -24
 1077              		.cfi_offset 8, -20
 1078              		.cfi_offset 9, -16
 1079              		.cfi_offset 10, -12
 1080              		.cfi_offset 11, -8
 1081              		.cfi_offset 14, -4
 1082 042a 9A46     		mov	sl, r3
 1083 042c A7B0     		sub	sp, sp, #156
 1084              	.LCFI15:
 1085              		.cfi_def_cfa_offset 192
1084:../Source Files/lpc_ssp_glcd.c **** 	uchar hex[]= "0123456789ABCDEF";
 1086              		.loc 1 1084 0
 1087 042e A14B     		ldr	r3, .L121
 1088              	.LVL111:
1083:../Source Files/lpc_ssp_glcd.c **** {
 1089              		.loc 1 1083 0
 1090 0430 DDF8C0B0 		ldr	fp, [sp, #192]
 1091 0434 1646     		mov	r6, r2
 1092 0436 0446     		mov	r4, r0
 1093 0438 0D46     		mov	r5, r1
1084:../Source Files/lpc_ssp_glcd.c **** 	uchar hex[]= "0123456789ABCDEF";
 1094              		.loc 1 1084 0
 1095 043a 0DAA     		add	r2, sp, #52
 1096              	.LVL112:
 1097 043c 03F1100E 		add	lr, r3, #16
 1098              	.LVL113:
 1099              	.L76:
 1100 0440 1868     		ldr	r0, [r3, #0]	@ unaligned
 1101 0442 5968     		ldr	r1, [r3, #4]	@ unaligned
 1102 0444 1746     		mov	r7, r2
 1103 0446 03C7     		stmia	r7!, {r0, r1}
 1104 0448 0833     		adds	r3, r3, #8
 1105 044a 7345     		cmp	r3, lr
 1106 044c 3A46     		mov	r2, r7
 1107 044e F7D1     		bne	.L76
 1108 0450 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
1085:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_dec[10] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
 1109              		.loc 1 1085 0
 1110 0452 0021     		movs	r1, #0
1084:../Source Files/lpc_ssp_glcd.c **** 	uchar hex[]= "0123456789ABCDEF";
 1111              		.loc 1 1084 0
 1112 0454 3870     		strb	r0, [r7, #0]
1085:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_dec[10] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
 1113              		.loc 1 1085 0
 1114 0456 2822     		movs	r2, #40
 1115 0458 12A8     		add	r0, sp, #72
 1116 045a FFF7FEFF 		bl	memset
 1117              	.LVL114:
 1118 045e 0A21     		movs	r1, #10
 1119 0460 4FF47A72 		mov	r2, #1000
 1120 0464 1391     		str	r1, [sp, #76]
 1121 0466 6423     		movs	r3, #100
 1122 0468 1592     		str	r2, [sp, #84]
 1123 046a 9349     		ldr	r1, .L121+4
 1124 046c 934A     		ldr	r2, .L121+8
 1125 046e 1493     		str	r3, [sp, #80]
 1126 0470 42F21070 		movw	r0, #10000
 1127 0474 924B     		ldr	r3, .L121+12
 1128 0476 0127     		movs	r7, #1
 1129 0478 1690     		str	r0, [sp, #88]
 1130 047a 1791     		str	r1, [sp, #92]
 1131 047c 1992     		str	r2, [sp, #100]
1086:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
 1132              		.loc 1 1086 0
 1133 047e 0021     		movs	r1, #0
 1134 0480 2822     		movs	r2, #40
 1135 0482 1CA8     		add	r0, sp, #112
1085:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_dec[10] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};
 1136              		.loc 1 1085 0
 1137 0484 1297     		str	r7, [sp, #72]
 1138 0486 1893     		str	r3, [sp, #96]
1086:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
 1139              		.loc 1 1086 0
 1140 0488 FFF7FEFF 		bl	memset
 1141              	.LVL115:
 1142 048c 4FF48051 		mov	r1, #4096
 1143 0490 4FF48033 		mov	r3, #65536
1109:../Source Files/lpc_ssp_glcd.c **** 		    if(x+5*size >= 320)          // Performs character wrapping
 1144              		.loc 1 1109 0
 1145 0494 4FF00509 		mov	r9, #5
1086:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
 1146              		.loc 1 1086 0
 1147 0498 4FF48012 		mov	r2, #1048576
1112:../Source Files/lpc_ssp_glcd.c **** 		       y += 7*size + 1;                 // Set y at next position down
 1148              		.loc 1 1112 0
 1149 049c 4FF00708 		mov	r8, #7
1086:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
 1150              		.loc 1 1086 0
 1151 04a0 1F91     		str	r1, [sp, #124]
 1152 04a2 2093     		str	r3, [sp, #128]
1098:../Source Files/lpc_ssp_glcd.c **** 	va_start(ap, format);
 1153              		.loc 1 1098 0
 1154 04a4 31A9     		add	r1, sp, #196
1112:../Source Files/lpc_ssp_glcd.c **** 		       y += 7*size + 1;                 // Set y at next position down
 1155              		.loc 1 1112 0
 1156 04a6 B3B2     		uxth	r3, r6
1086:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
 1157              		.loc 1 1086 0
 1158 04a8 2192     		str	r2, [sp, #132]
1098:../Source Files/lpc_ssp_glcd.c **** 	va_start(ap, format);
 1159              		.loc 1 1098 0
 1160 04aa 0C91     		str	r1, [sp, #48]
1112:../Source Files/lpc_ssp_glcd.c **** 		       y += 7*size + 1;                 // Set y at next position down
 1161              		.loc 1 1112 0
 1162 04ac 08FB03F2 		mul	r2, r8, r3
1115:../Source Files/lpc_ssp_glcd.c **** 			x=x+5*size+1;
 1163              		.loc 1 1115 0
 1164 04b0 09FB03F1 		mul	r1, r9, r3
1086:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
 1165              		.loc 1 1086 0
 1166 04b4 4FF48070 		mov	r0, #256
 1167 04b8 1C97     		str	r7, [sp, #112]
 1168 04ba 1E90     		str	r0, [sp, #120]
 1169 04bc 1027     		movs	r7, #16
 1170 04be 4FF08050 		mov	r0, #268435456
 1171 04c2 1D97     		str	r7, [sp, #116]
 1172 04c4 2390     		str	r0, [sp, #140]
 1173 04c6 4FF08077 		mov	r7, #16777216
1112:../Source Files/lpc_ssp_glcd.c **** 		       y += 7*size + 1;                 // Set y at next position down
 1174              		.loc 1 1112 0
 1175 04ca 02F10100 		add	r0, r2, #1
1115:../Source Files/lpc_ssp_glcd.c **** 			x=x+5*size+1;
 1176              		.loc 1 1115 0
 1177 04ce 01F1010C 		add	ip, r1, #1
1086:../Source Files/lpc_ssp_glcd.c **** 	unsigned int width_hex[10] = { 0x1, 0x10, 0x100, 0x1000, 0x10000, 0x100000, 0x1000000, 0x10000000}
 1178              		.loc 1 1086 0
 1179 04d2 2297     		str	r7, [sp, #136]
1112:../Source Files/lpc_ssp_glcd.c **** 		       y += 7*size + 1;                 // Set y at next position down
 1180              		.loc 1 1112 0
 1181 04d4 1FFA80F8 		uxth	r8, r0
1109:../Source Files/lpc_ssp_glcd.c **** 		    if(x+5*size >= 320)          // Performs character wrapping
 1182              		.loc 1 1109 0
 1183 04d8 09FB06F7 		mul	r7, r9, r6
1115:../Source Files/lpc_ssp_glcd.c **** 			x=x+5*size+1;
 1184              		.loc 1 1115 0
 1185 04dc 1FFA8CF9 		uxth	r9, ip
 1186              	.LVL116:
 1187              	.L77:
1102:../Source Files/lpc_ssp_glcd.c **** 		while((format_flag = *format++) != '%')      // until full format string read
 1188              		.loc 1 1102 0 discriminator 1
 1189 04e0 9BF80000 		ldrb	r0, [fp, #0]	@ zero_extendqisi2
 1190 04e4 2528     		cmp	r0, #37
 1191 04e6 8DF82A00 		strb	r0, [sp, #42]
 1192              	.LVL117:
 1193 04ea 25D0     		beq	.L119
 1194              	.L80:
1104:../Source Files/lpc_ssp_glcd.c **** 			if(!format_flag)
 1195              		.loc 1 1104 0
 1196 04ec 0028     		cmp	r0, #0
 1197 04ee 00F09A81 		beq	.L112
1109:../Source Files/lpc_ssp_glcd.c **** 		    if(x+5*size >= 320)          // Performs character wrapping
 1198              		.loc 1 1109 0
 1199 04f2 E119     		adds	r1, r4, r7
 1200 04f4 B1F5A07F 		cmp	r1, #320
 1201 04f8 03DB     		blt	.L79
 1202              	.LVL118:
1112:../Source Files/lpc_ssp_glcd.c **** 		       y += 7*size + 1;                 // Set y at next position down
 1203              		.loc 1 1112 0
 1204 04fa 08EB0503 		add	r3, r8, r5
 1205 04fe 1DB2     		sxth	r5, r3
 1206              	.LVL119:
1111:../Source Files/lpc_ssp_glcd.c **** 		       x = 0;                           // Set x at far left position
 1207              		.loc 1 1111 0
 1208 0500 0024     		movs	r4, #0
 1209              	.LVL120:
 1210              	.L79:
1102:../Source Files/lpc_ssp_glcd.c **** 		while((format_flag = *format++) != '%')      // until full format string read
 1211              		.loc 1 1102 0
 1212 0502 0BF1010E 		add	lr, fp, #1
 1213 0506 CDF824E0 		str	lr, [sp, #36]
 1214              	.LVL121:
 1215              	.L114:
1114:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Text(x,y,&format_flag,1,5,7,default5x7,size,color);
 1216              		.loc 1 1114 0
 1217 050a 0523     		movs	r3, #5
 1218 050c 4FF0070C 		mov	ip, #7
 1219 0510 6C4A     		ldr	r2, .L121+16
 1220 0512 8DE80810 		stmia	sp, {r3, ip}
 1221 0516 0292     		str	r2, [sp, #8]
 1222 0518 0396     		str	r6, [sp, #12]
 1223 051a CDF810A0 		str	sl, [sp, #16]
 1224 051e 2046     		mov	r0, r4
 1225 0520 2946     		mov	r1, r5
 1226 0522 0DF12A02 		add	r2, sp, #42
 1227              	.LVL122:
 1228              	.L115:
 1229 0526 0123     		movs	r3, #1
 1230 0528 FFF7FEFF 		bl	GLCD_Text
 1231              	.LVL123:
1115:../Source Files/lpc_ssp_glcd.c **** 			x=x+5*size+1;
 1232              		.loc 1 1115 0
 1233 052c 09EB0400 		add	r0, r9, r4
 1234 0530 04B2     		sxth	r4, r0
 1235              	.LVL124:
 1236              	.L90:
1111:../Source Files/lpc_ssp_glcd.c **** 		       x = 0;                           // Set x at far left position
 1237              		.loc 1 1111 0 discriminator 1
 1238 0532 DDF824B0 		ldr	fp, [sp, #36]
 1239 0536 D3E7     		b	.L77
 1240              	.LVL125:
 1241              	.L119:
1118:../Source Files/lpc_ssp_glcd.c **** 		switch(format_flag = *format++)
 1242              		.loc 1 1118 0
 1243 0538 9BF80130 		ldrb	r3, [fp, #1]	@ zero_extendqisi2
 1244 053c 0BF10202 		add	r2, fp, #2
 1245 0540 58B2     		sxtb	r0, r3
 1246 0542 6428     		cmp	r0, #100
 1247 0544 8DF82A30 		strb	r3, [sp, #42]
 1248 0548 0992     		str	r2, [sp, #36]
 1249              	.LVL126:
 1250 054a 00F0BD80 		beq	.L84
 1251 054e 0ADC     		bgt	.L88
 1252 0550 6228     		cmp	r0, #98
 1253 0552 18D0     		beq	.L82
 1254 0554 6328     		cmp	r0, #99
 1255 0556 0DD1     		bne	.L81
1121:../Source Files/lpc_ssp_glcd.c **** 				format_flag = va_arg(ap, int);
 1256              		.loc 1 1121 0
 1257 0558 0C99     		ldr	r1, [sp, #48]
 1258 055a 0A68     		ldr	r2, [r1, #0]
 1259              	.LVL127:
 1260 055c 0B1D     		adds	r3, r1, #4
 1261 055e 0C93     		str	r3, [sp, #48]
 1262 0560 8DF82A20 		strb	r2, [sp, #42]
 1263 0564 06E0     		b	.L81
 1264              	.LVL128:
 1265              	.L88:
1118:../Source Files/lpc_ssp_glcd.c **** 		switch(format_flag = *format++)
 1266              		.loc 1 1118 0
 1267 0566 7528     		cmp	r0, #117
 1268 0568 6ED0     		beq	.L86
 1269 056a 7828     		cmp	r0, #120
 1270 056c 00F0ED80 		beq	.L87
 1271 0570 7328     		cmp	r0, #115
 1272 0572 45D0     		beq	.L120
 1273              	.LVL129:
 1274              	.L81:
1133:../Source Files/lpc_ssp_glcd.c **** 			    if(x+5*size >= 320)          // Performs character wrapping
 1275              		.loc 1 1133 0
 1276 0574 E319     		adds	r3, r4, r7
 1277 0576 B3F5A07F 		cmp	r3, #320
 1278 057a C6DB     		blt	.L114
 1279              	.LVL130:
1136:../Source Files/lpc_ssp_glcd.c **** 			       y += 7*size + 1;                 // Set y at next position down
 1280              		.loc 1 1136 0
 1281 057c 08EB0504 		add	r4, r8, r5
 1282 0580 25B2     		sxth	r5, r4
 1283              	.LVL131:
1135:../Source Files/lpc_ssp_glcd.c **** 			       x = 0;                           // Set x at far left position
 1284              		.loc 1 1135 0
 1285 0582 0024     		movs	r4, #0
 1286              	.LVL132:
 1287 0584 C1E7     		b	.L114
 1288              	.LVL133:
 1289              	.L82:
1144:../Source Files/lpc_ssp_glcd.c **** 				format_flag = va_arg(ap,int);
 1290              		.loc 1 1144 0
 1291 0586 0C98     		ldr	r0, [sp, #48]
1145:../Source Files/lpc_ssp_glcd.c **** 			    if(x+5*size >= 320)          // Performs character wrapping
 1292              		.loc 1 1145 0
 1293 0588 E219     		adds	r2, r4, r7
 1294              	.LVL134:
1144:../Source Files/lpc_ssp_glcd.c **** 				format_flag = va_arg(ap,int);
 1295              		.loc 1 1144 0
 1296 058a 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 1297              	.LVL135:
 1298 058c 011D     		adds	r1, r0, #4
1145:../Source Files/lpc_ssp_glcd.c **** 			    if(x+5*size >= 320)          // Performs character wrapping
 1299              		.loc 1 1145 0
 1300 058e B2F5A07F 		cmp	r2, #320
1144:../Source Files/lpc_ssp_glcd.c **** 				format_flag = va_arg(ap,int);
 1301              		.loc 1 1144 0
 1302 0592 0C91     		str	r1, [sp, #48]
 1303              	.LVL136:
 1304 0594 8DF82A30 		strb	r3, [sp, #42]
1145:../Source Files/lpc_ssp_glcd.c **** 			    if(x+5*size >= 320)          // Performs character wrapping
 1305              		.loc 1 1145 0
 1306 0598 02DB     		blt	.L92
 1307              	.LVL137:
1148:../Source Files/lpc_ssp_glcd.c **** 			       y += 7*size + 1;                 // Set y at next position down
 1308              		.loc 1 1148 0
 1309 059a 4544     		add	r5, r8, r5
 1310              	.LVL138:
 1311 059c 2DB2     		sxth	r5, r5
 1312              	.LVL139:
1147:../Source Files/lpc_ssp_glcd.c **** 			       x = 0;                           // Set x at far left position
 1313              		.loc 1 1147 0
 1314 059e 0024     		movs	r4, #0
 1315              	.LVL140:
 1316              	.L92:
1150:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Text(x,y,&(hex[(uint16)format_flag >> 4]),1,5,7,default5x7,size,color);
 1317              		.loc 1 1150 0
 1318 05a0 58B2     		sxtb	r0, r3
 1319              	.LVL141:
 1320 05a2 4FF0070E 		mov	lr, #7
 1321 05a6 0523     		movs	r3, #5
 1322 05a8 4649     		ldr	r1, .L121+16
 1323 05aa C0F30B12 		ubfx	r2, r0, #4, #12
 1324              	.LVL142:
 1325 05ae 8DE80840 		stmia	sp, {r3, lr}
 1326 05b2 2046     		mov	r0, r4
 1327              	.LVL143:
 1328 05b4 0DAB     		add	r3, sp, #52
1151:../Source Files/lpc_ssp_glcd.c **** 				x=x+5*size+1;
 1329              		.loc 1 1151 0
 1330 05b6 4C44     		add	r4, r9, r4
 1331              	.LVL144:
1150:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Text(x,y,&(hex[(uint16)format_flag >> 4]),1,5,7,default5x7,size,color);
 1332              		.loc 1 1150 0
 1333 05b8 0291     		str	r1, [sp, #8]
 1334 05ba 9A18     		adds	r2, r3, r2
 1335 05bc 0396     		str	r6, [sp, #12]
 1336 05be 0123     		movs	r3, #1
 1337 05c0 CDF810A0 		str	sl, [sp, #16]
 1338 05c4 2946     		mov	r1, r5
1151:../Source Files/lpc_ssp_glcd.c **** 				x=x+5*size+1;
 1339              		.loc 1 1151 0
 1340 05c6 24B2     		sxth	r4, r4
1150:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Text(x,y,&(hex[(uint16)format_flag >> 4]),1,5,7,default5x7,size,color);
 1341              		.loc 1 1150 0
 1342 05c8 FFF7FEFF 		bl	GLCD_Text
 1343              	.LVL145:
1152:../Source Files/lpc_ssp_glcd.c **** 			    if(x+5*size >= 320)          // Performs character wrapping
 1344              		.loc 1 1152 0
 1345 05cc E019     		adds	r0, r4, r7
 1346 05ce B0F5A07F 		cmp	r0, #320
 1347 05d2 02DB     		blt	.L93
 1348              	.LVL146:
1155:../Source Files/lpc_ssp_glcd.c **** 			       y += 7*size + 1;                 // Set y at next position down
 1349              		.loc 1 1155 0
 1350 05d4 4544     		add	r5, r8, r5
 1351              	.LVL147:
 1352 05d6 2DB2     		sxth	r5, r5
 1353              	.LVL148:
1154:../Source Files/lpc_ssp_glcd.c **** 			       x = 0;                           // Set x at far left position
 1354              		.loc 1 1154 0
 1355 05d8 0024     		movs	r4, #0
 1356              	.LVL149:
 1357              	.L93:
1157:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Text(x,y,&(hex[(uint16)format_flag & 0x0F]),1,5,7,default5x7,size,color);
 1358              		.loc 1 1157 0
 1359 05da 9DF82A20 		ldrb	r2, [sp, #42]	@ zero_extendqisi2
 1360              	.LVL150:
 1361 05de 3949     		ldr	r1, .L121+16
 1362 05e0 0520     		movs	r0, #5
 1363 05e2 02F00F02 		and	r2, r2, #15
 1364              	.LVL151:
 1365 05e6 0723     		movs	r3, #7
 1366 05e8 0DF1340B 		add	fp, sp, #52
 1367 05ec 8DE80900 		stmia	sp, {r0, r3}
 1368 05f0 0291     		str	r1, [sp, #8]
 1369 05f2 0396     		str	r6, [sp, #12]
 1370 05f4 CDF810A0 		str	sl, [sp, #16]
 1371 05f8 2046     		mov	r0, r4
 1372 05fa 2946     		mov	r1, r5
 1373 05fc 5A44     		add	r2, fp, r2
 1374 05fe 92E7     		b	.L115
 1375              	.LVL152:
 1376              	.L120:
1163:../Source Files/lpc_ssp_glcd.c **** 				ptr = va_arg(ap, schar *);
 1377              		.loc 1 1163 0
 1378 0600 0C98     		ldr	r0, [sp, #48]
 1379 0602 021D     		adds	r2, r0, #4
 1380              	.LVL153:
 1381 0604 D0F800B0 		ldr	fp, [r0, #0]
 1382 0608 0C92     		str	r2, [sp, #48]
 1383              	.LVL154:
 1384              	.L94:
 1385 060a 5A46     		mov	r2, fp
 1386              	.LVL155:
1164:../Source Files/lpc_ssp_glcd.c **** 				while(*ptr)
 1387              		.loc 1 1164 0 discriminator 1
 1388 060c 92F90010 		ldrsb	r1, [r2, #0]
 1389 0610 0BF1010B 		add	fp, fp, #1
 1390 0614 0029     		cmp	r1, #0
 1391 0616 8CD0     		beq	.L90
 1392              	.L96:
1166:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
 1393              		.loc 1 1166 0
 1394 0618 E319     		adds	r3, r4, r7
 1395 061a B3F5A07F 		cmp	r3, #320
 1396 061e 02DB     		blt	.L95
 1397              	.LVL156:
1169:../Source Files/lpc_ssp_glcd.c **** 				       y += 7*size + 1;                 // Set y at next position down
 1398              		.loc 1 1169 0
 1399 0620 4544     		add	r5, r8, r5
 1400              	.LVL157:
 1401 0622 2DB2     		sxth	r5, r5
 1402              	.LVL158:
1168:../Source Files/lpc_ssp_glcd.c **** 				       x = 0;                           // Set x at far left position
 1403              		.loc 1 1168 0
 1404 0624 0024     		movs	r4, #0
 1405              	.LVL159:
 1406              	.L95:
1171:../Source Files/lpc_ssp_glcd.c **** 					GLCD_Text(x,y,&(*ptr++),1,5,7,default5x7,size,color);
 1407              		.loc 1 1171 0
 1408 0626 2748     		ldr	r0, .L121+16
 1409 0628 0521     		movs	r1, #5
 1410 062a 0723     		movs	r3, #7
 1411 062c 8DE80A00 		stmia	sp, {r1, r3}
 1412 0630 0290     		str	r0, [sp, #8]
 1413 0632 0396     		str	r6, [sp, #12]
 1414 0634 2046     		mov	r0, r4
 1415 0636 CDF810A0 		str	sl, [sp, #16]
 1416 063a 2946     		mov	r1, r5
 1417 063c 0123     		movs	r3, #1
1172:../Source Files/lpc_ssp_glcd.c **** 					x=x+5*size+1;
 1418              		.loc 1 1172 0
 1419 063e 4C44     		add	r4, r9, r4
 1420              	.LVL160:
1171:../Source Files/lpc_ssp_glcd.c **** 					GLCD_Text(x,y,&(*ptr++),1,5,7,default5x7,size,color);
 1421              		.loc 1 1171 0
 1422 0640 FFF7FEFF 		bl	GLCD_Text
 1423              	.LVL161:
1172:../Source Files/lpc_ssp_glcd.c **** 					x=x+5*size+1;
 1424              		.loc 1 1172 0
 1425 0644 24B2     		sxth	r4, r4
 1426              	.LVL162:
 1427 0646 E0E7     		b	.L94
 1428              	.LVL163:
 1429              	.L86:
1199:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap, uint32_t);
 1430              		.loc 1 1199 0
 1431 0648 0C99     		ldr	r1, [sp, #48]
 1432 064a 0620     		movs	r0, #6
 1433 064c 0B1D     		adds	r3, r1, #4
 1434 064e D1F800C0 		ldr	ip, [r1, #0]
 1435              	.LVL164:
 1436 0652 0C93     		str	r3, [sp, #48]
 1437 0654 0790     		str	r0, [sp, #28]
1198:../Source Files/lpc_ssp_glcd.c **** 				div_val = 0x100000;
 1438              		.loc 1 1198 0
 1439 0656 4FF4801B 		mov	fp, #1048576
 1440              	.LVL165:
 1441              	.L98:
1202:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
 1442              		.loc 1 1202 0
 1443 065a E219     		adds	r2, r4, r7
 1444 065c B2F5A07F 		cmp	r2, #320
 1445 0660 02DB     		blt	.L97
 1446              	.LVL166:
1205:../Source Files/lpc_ssp_glcd.c **** 				       y += 7*size + 1;                 // Set y at next position down
 1447              		.loc 1 1205 0
 1448 0662 4544     		add	r5, r8, r5
 1449              	.LVL167:
 1450 0664 2DB2     		sxth	r5, r5
 1451              	.LVL168:
1204:../Source Files/lpc_ssp_glcd.c **** 				       x = 0;                           // Set x at far left position
 1452              		.loc 1 1204 0
 1453 0666 0024     		movs	r4, #0
 1454              	.LVL169:
 1455              	.L97:
1207:../Source Files/lpc_ssp_glcd.c **** 					GLCD_Text(x,y,&(hex[u_val/div_val]),1,5,7,default5x7,size,color);
 1456              		.loc 1 1207 0
 1457 0668 BCFBFBF1 		udiv	r1, ip, fp
 1458 066c 0891     		str	r1, [sp, #32]
 1459 066e 0522     		movs	r2, #5
 1460 0670 0723     		movs	r3, #7
 1461 0672 8DE80C00 		stmia	sp, {r2, r3}
 1462 0676 DDF820E0 		ldr	lr, [sp, #32]
 1463 067a 124B     		ldr	r3, .L121+16
 1464 067c 0DAA     		add	r2, sp, #52
 1465 067e 2046     		mov	r0, r4
 1466 0680 0293     		str	r3, [sp, #8]
 1467 0682 2946     		mov	r1, r5
 1468 0684 0123     		movs	r3, #1
 1469 0686 0396     		str	r6, [sp, #12]
 1470 0688 CDF810A0 		str	sl, [sp, #16]
 1471 068c 7244     		add	r2, r2, lr
 1472 068e CDF818C0 		str	ip, [sp, #24]
 1473 0692 FFF7FEFF 		bl	GLCD_Text
 1474              	.LVL170:
1211:../Source Files/lpc_ssp_glcd.c **** 				}while(div_val);
 1475              		.loc 1 1211 0
 1476 0696 0799     		ldr	r1, [sp, #28]
1209:../Source Files/lpc_ssp_glcd.c **** 					u_val %= div_val;
 1477              		.loc 1 1209 0
 1478 0698 DDF818C0 		ldr	ip, [sp, #24]
 1479 069c 0898     		ldr	r0, [sp, #32]
1208:../Source Files/lpc_ssp_glcd.c **** 					x=x+5*size+1;
 1480              		.loc 1 1208 0
 1481 069e 4C44     		add	r4, r9, r4
 1482              	.LVL171:
1211:../Source Files/lpc_ssp_glcd.c **** 				}while(div_val);
 1483              		.loc 1 1211 0
 1484 06a0 4B1E     		subs	r3, r1, #1
1209:../Source Files/lpc_ssp_glcd.c **** 					u_val %= div_val;
 1485              		.loc 1 1209 0
 1486 06a2 0BFB10CC 		mls	ip, fp, r0, ip
1208:../Source Files/lpc_ssp_glcd.c **** 					x=x+5*size+1;
 1487              		.loc 1 1208 0
 1488 06a6 24B2     		sxth	r4, r4
 1489              	.LVL172:
1210:../Source Files/lpc_ssp_glcd.c **** 					div_val /= base;
 1490              		.loc 1 1210 0
 1491 06a8 4FEA1B1B 		lsr	fp, fp, #4
 1492              	.LVL173:
1211:../Source Files/lpc_ssp_glcd.c **** 				}while(div_val);
 1493              		.loc 1 1211 0
 1494 06ac 0793     		str	r3, [sp, #28]
 1495 06ae D4D1     		bne	.L98
 1496 06b0 3FE7     		b	.L90
 1497              	.L122:
 1498 06b2 00BF     		.align	2
 1499              	.L121:
 1500 06b4 00000000 		.word	.LC0
 1501 06b8 A0860100 		.word	100000
 1502 06bc 80969800 		.word	10000000
 1503 06c0 40420F00 		.word	1000000
 1504 06c4 00150000 		.word	.LANCHOR3+1032
 1505              	.LVL174:
 1506              	.L84:
1218:../Source Files/lpc_ssp_glcd.c **** 				format_flag = ( *format++ ) - '1';
 1507              		.loc 1 1218 0
 1508 06c8 9BF80300 		ldrb	r0, [fp, #3]	@ zero_extendqisi2
1217:../Source Files/lpc_ssp_glcd.c **** 				fill_char = *format++;
 1509              		.loc 1 1217 0
 1510 06cc 9BF80220 		ldrb	r2, [fp, #2]	@ zero_extendqisi2
 1511              	.LVL175:
1218:../Source Files/lpc_ssp_glcd.c **** 				format_flag = ( *format++ ) - '1';
 1512              		.loc 1 1218 0
 1513 06d0 3138     		subs	r0, r0, #49
 1514 06d2 C1B2     		uxtb	r1, r0
1219:../Source Files/lpc_ssp_glcd.c **** 				div_val = width_dec[format_flag];
 1515              		.loc 1 1219 0
 1516 06d4 4BB2     		sxtb	r3, r1
1218:../Source Files/lpc_ssp_glcd.c **** 				format_flag = ( *format++ ) - '1';
 1517              		.loc 1 1218 0
 1518 06d6 8DF82A10 		strb	r1, [sp, #42]
1220:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap,int);
 1519              		.loc 1 1220 0
 1520 06da 0C99     		ldr	r1, [sp, #48]
1217:../Source Files/lpc_ssp_glcd.c **** 				fill_char = *format++;
 1521              		.loc 1 1217 0
 1522 06dc 8DF82B20 		strb	r2, [sp, #43]
 1523              	.LVL176:
1220:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap,int);
 1524              		.loc 1 1220 0
 1525 06e0 D1F800C0 		ldr	ip, [r1, #0]
1219:../Source Files/lpc_ssp_glcd.c **** 				div_val = width_dec[format_flag];
 1526              		.loc 1 1219 0
 1527 06e4 26AA     		add	r2, sp, #152
1218:../Source Files/lpc_ssp_glcd.c **** 				format_flag = ( *format++ ) - '1';
 1528              		.loc 1 1218 0
 1529 06e6 0BF1040E 		add	lr, fp, #4
1219:../Source Files/lpc_ssp_glcd.c **** 				div_val = width_dec[format_flag];
 1530              		.loc 1 1219 0
 1531 06ea 02EB8300 		add	r0, r2, r3, lsl #2
1220:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap,int);
 1532              		.loc 1 1220 0
 1533 06ee 0B1D     		adds	r3, r1, #4
1222:../Source Files/lpc_ssp_glcd.c **** 				if(((int)u_val) < 0)
 1534              		.loc 1 1222 0
 1535 06f0 BCF1000F 		cmp	ip, #0
1218:../Source Files/lpc_ssp_glcd.c **** 				format_flag = ( *format++ ) - '1';
 1536              		.loc 1 1218 0
 1537 06f4 CDF824E0 		str	lr, [sp, #36]
 1538              	.LVL177:
1219:../Source Files/lpc_ssp_glcd.c **** 				div_val = width_dec[format_flag];
 1539              		.loc 1 1219 0
 1540 06f8 50F850BC 		ldr	fp, [r0, #-80]
 1541              	.LVL178:
1220:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap,int);
 1542              		.loc 1 1220 0
 1543 06fc 0C93     		str	r3, [sp, #48]
1222:../Source Files/lpc_ssp_glcd.c **** 				if(((int)u_val) < 0)
 1544              		.loc 1 1222 0
 1545 06fe 21DA     		bge	.L107
1226:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
 1546              		.loc 1 1226 0
 1547 0700 E119     		adds	r1, r4, r7
1225:../Source Files/lpc_ssp_glcd.c **** 					temp = '-';
 1548              		.loc 1 1225 0
 1549 0702 2D20     		movs	r0, #45
1226:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
 1550              		.loc 1 1226 0
 1551 0704 B1F5A07F 		cmp	r1, #320
1224:../Source Files/lpc_ssp_glcd.c **** 					u_val = - u_val;    // applied to unsigned type, result still unsigned
 1552              		.loc 1 1224 0
 1553 0708 CCF1000C 		rsb	ip, ip, #0
 1554              	.LVL179:
1225:../Source Files/lpc_ssp_glcd.c **** 					temp = '-';
 1555              		.loc 1 1225 0
 1556 070c 0B90     		str	r0, [sp, #44]
1226:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
 1557              		.loc 1 1226 0
 1558 070e 02DB     		blt	.L100
 1559              	.LVL180:
1229:../Source Files/lpc_ssp_glcd.c **** 				       y += 7*size + 1;                 // Set y at next position down
 1560              		.loc 1 1229 0
 1561 0710 4544     		add	r5, r8, r5
 1562              	.LVL181:
 1563 0712 2DB2     		sxth	r5, r5
 1564              	.LVL182:
1228:../Source Files/lpc_ssp_glcd.c **** 				       x = 0;                           // Set x at far left position
 1565              		.loc 1 1228 0
 1566 0714 0024     		movs	r4, #0
 1567              	.LVL183:
 1568              	.L100:
1231:../Source Files/lpc_ssp_glcd.c **** 				    GLCD_Text(x,y,&temp,1,5,7,default5x7,size,color);
 1569              		.loc 1 1231 0
 1570 0716 0523     		movs	r3, #5
 1571 0718 4FF0070E 		mov	lr, #7
 1572              	.LVL184:
 1573 071c 8DE80840 		stmia	sp, {r3, lr}
 1574 0720 424B     		ldr	r3, .L123
 1575 0722 2046     		mov	r0, r4
 1576 0724 0293     		str	r3, [sp, #8]
 1577 0726 0BAA     		add	r2, sp, #44
 1578 0728 0396     		str	r6, [sp, #12]
 1579 072a CDF810A0 		str	sl, [sp, #16]
 1580 072e 2946     		mov	r1, r5
 1581 0730 0123     		movs	r3, #1
 1582 0732 CDF818C0 		str	ip, [sp, #24]
1232:../Source Files/lpc_ssp_glcd.c **** 				    x=x+5*size+1;
 1583              		.loc 1 1232 0
 1584 0736 4C44     		add	r4, r9, r4
 1585              	.LVL185:
1231:../Source Files/lpc_ssp_glcd.c **** 				    GLCD_Text(x,y,&temp,1,5,7,default5x7,size,color);
 1586              		.loc 1 1231 0
 1587 0738 FFF7FEFF 		bl	GLCD_Text
 1588              	.LVL186:
1216:../Source Files/lpc_ssp_glcd.c **** 				base = 10;
 1589              		.loc 1 1216 0
 1590 073c 0A22     		movs	r2, #10
1232:../Source Files/lpc_ssp_glcd.c **** 				    x=x+5*size+1;
 1591              		.loc 1 1232 0
 1592 073e 24B2     		sxth	r4, r4
 1593              	.LVL187:
1216:../Source Files/lpc_ssp_glcd.c **** 				base = 10;
 1594              		.loc 1 1216 0
 1595 0740 0792     		str	r2, [sp, #28]
 1596 0742 40E0     		b	.L116
 1597              	.LVL188:
 1598              	.L107:
 1599 0744 0A22     		movs	r2, #10
 1600 0746 0792     		str	r2, [sp, #28]
 1601 0748 1AE0     		b	.L113
 1602              	.LVL189:
 1603              	.L87:
1240:../Source Files/lpc_ssp_glcd.c **** 				format_flag = (*format++) - '1';
 1604              		.loc 1 1240 0
 1605 074a 9BF80310 		ldrb	r1, [fp, #3]	@ zero_extendqisi2
1239:../Source Files/lpc_ssp_glcd.c **** 				fill_char = *format++;
 1606              		.loc 1 1239 0
 1607 074e 9BF80220 		ldrb	r2, [fp, #2]	@ zero_extendqisi2
 1608              	.LVL190:
1240:../Source Files/lpc_ssp_glcd.c **** 				format_flag = (*format++) - '1';
 1609              		.loc 1 1240 0
 1610 0752 3139     		subs	r1, r1, #49
 1611 0754 CBB2     		uxtb	r3, r1
1241:../Source Files/lpc_ssp_glcd.c **** 				div_val = width_hex[format_flag];
 1612              		.loc 1 1241 0
 1613 0756 58B2     		sxtb	r0, r3
1239:../Source Files/lpc_ssp_glcd.c **** 				fill_char = *format++;
 1614              		.loc 1 1239 0
 1615 0758 8DF82B20 		strb	r2, [sp, #43]
 1616              	.LVL191:
1240:../Source Files/lpc_ssp_glcd.c **** 				format_flag = (*format++) - '1';
 1617              		.loc 1 1240 0
 1618 075c 8DF82A30 		strb	r3, [sp, #42]
1241:../Source Files/lpc_ssp_glcd.c **** 				div_val = width_hex[format_flag];
 1619              		.loc 1 1241 0
 1620 0760 26AA     		add	r2, sp, #152
1242:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap, int);
 1621              		.loc 1 1242 0
 1622 0762 0C9B     		ldr	r3, [sp, #48]
1241:../Source Files/lpc_ssp_glcd.c **** 				div_val = width_hex[format_flag];
 1623              		.loc 1 1241 0
 1624 0764 02EB8001 		add	r1, r2, r0, lsl #2
1240:../Source Files/lpc_ssp_glcd.c **** 				format_flag = (*format++) - '1';
 1625              		.loc 1 1240 0
 1626 0768 0BF1040E 		add	lr, fp, #4
1242:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap, int);
 1627              		.loc 1 1242 0
 1628 076c 181D     		adds	r0, r3, #4
1238:../Source Files/lpc_ssp_glcd.c **** 				base = 16;
 1629              		.loc 1 1238 0
 1630 076e 1022     		movs	r2, #16
1241:../Source Files/lpc_ssp_glcd.c **** 				div_val = width_hex[format_flag];
 1631              		.loc 1 1241 0
 1632 0770 51F828BC 		ldr	fp, [r1, #-40]
1242:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap, int);
 1633              		.loc 1 1242 0
 1634 0774 D3F800C0 		ldr	ip, [r3, #0]
1240:../Source Files/lpc_ssp_glcd.c **** 				format_flag = (*format++) - '1';
 1635              		.loc 1 1240 0
 1636 0778 CDF824E0 		str	lr, [sp, #36]
 1637              	.LVL192:
1242:../Source Files/lpc_ssp_glcd.c **** 				u_val = va_arg(ap, int);
 1638              		.loc 1 1242 0
 1639 077c 0C90     		str	r0, [sp, #48]
1238:../Source Files/lpc_ssp_glcd.c **** 				base = 16;
 1640              		.loc 1 1238 0
 1641 077e 0792     		str	r2, [sp, #28]
 1642              	.L99:
 1643              	.LVL193:
 1644              	.L113:
1245:../Source Files/lpc_ssp_glcd.c **** 				while(div_val > 1 && div_val > u_val)
 1645              		.loc 1 1245 0 discriminator 1
 1646 0780 BBF1010F 		cmp	fp, #1
 1647 0784 46D9     		bls	.L108
1245:../Source Files/lpc_ssp_glcd.c **** 				while(div_val > 1 && div_val > u_val)
 1648              		.loc 1 1245 0 is_stmt 0 discriminator 2
 1649 0786 E345     		cmp	fp, ip
 1650 0788 44D9     		bls	.L108
 1651              	.L104:
1247:../Source Files/lpc_ssp_glcd.c **** 					div_val /= base;
 1652              		.loc 1 1247 0 is_stmt 1
 1653 078a 079B     		ldr	r3, [sp, #28]
1248:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
 1654              		.loc 1 1248 0
 1655 078c E219     		adds	r2, r4, r7
 1656 078e B2F5A07F 		cmp	r2, #320
1247:../Source Files/lpc_ssp_glcd.c **** 					div_val /= base;
 1657              		.loc 1 1247 0
 1658 0792 BBFBF3FB 		udiv	fp, fp, r3
 1659              	.LVL194:
1248:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
 1660              		.loc 1 1248 0
 1661 0796 02DB     		blt	.L102
 1662              	.LVL195:
1251:../Source Files/lpc_ssp_glcd.c **** 				       y += 7*size + 1;                 // Set y at next position down
 1663              		.loc 1 1251 0
 1664 0798 4544     		add	r5, r8, r5
 1665              	.LVL196:
 1666 079a 2DB2     		sxth	r5, r5
 1667              	.LVL197:
1250:../Source Files/lpc_ssp_glcd.c **** 				       x = 0;                           // Set x at far left position
 1668              		.loc 1 1250 0
 1669 079c 0024     		movs	r4, #0
 1670              	.LVL198:
 1671              	.L102:
1253:../Source Files/lpc_ssp_glcd.c **** 					GLCD_Text(x,y,&fill_char,1,5,7,default5x7,size,color);
 1672              		.loc 1 1253 0
 1673 079e 0520     		movs	r0, #5
 1674 07a0 0723     		movs	r3, #7
 1675 07a2 8DE80900 		stmia	sp, {r0, r3}
 1676 07a6 2148     		ldr	r0, .L123
 1677 07a8 0396     		str	r6, [sp, #12]
 1678 07aa 0290     		str	r0, [sp, #8]
 1679 07ac CDF810A0 		str	sl, [sp, #16]
 1680 07b0 2046     		mov	r0, r4
 1681 07b2 2946     		mov	r1, r5
 1682 07b4 0DF12B02 		add	r2, sp, #43
 1683 07b8 0123     		movs	r3, #1
 1684 07ba CDF818C0 		str	ip, [sp, #24]
 1685 07be FFF7FEFF 		bl	GLCD_Text
 1686              	.LVL199:
1254:../Source Files/lpc_ssp_glcd.c **** 					x=x+5*size+1;
 1687              		.loc 1 1254 0
 1688 07c2 4C44     		add	r4, r9, r4
 1689              	.LVL200:
 1690 07c4 24B2     		sxth	r4, r4
 1691              	.LVL201:
 1692              	.L116:
 1693 07c6 DDF818C0 		ldr	ip, [sp, #24]
 1694 07ca D9E7     		b	.L113
 1695              	.LVL202:
 1696              	.L105:
1264:../Source Files/lpc_ssp_glcd.c **** 					GLCD_Text(x,y,&(hex[u_val/div_val]),1,5,7,default5x7,size,color);
 1697              		.loc 1 1264 0
 1698 07cc 0521     		movs	r1, #5
 1699 07ce 0723     		movs	r3, #7
 1700 07d0 8DE80A00 		stmia	sp, {r1, r3}
 1701 07d4 154B     		ldr	r3, .L123
 1702 07d6 BCFBFBFE 		udiv	lr, ip, fp
 1703 07da 0DAA     		add	r2, sp, #52
 1704 07dc 2046     		mov	r0, r4
 1705 07de 0293     		str	r3, [sp, #8]
 1706 07e0 2946     		mov	r1, r5
 1707 07e2 0396     		str	r6, [sp, #12]
 1708 07e4 CDF810A0 		str	sl, [sp, #16]
 1709 07e8 7244     		add	r2, r2, lr
 1710 07ea 0123     		movs	r3, #1
 1711 07ec CDF818C0 		str	ip, [sp, #24]
 1712 07f0 CDF820E0 		str	lr, [sp, #32]
 1713 07f4 FFF7FEFF 		bl	GLCD_Text
 1714              	.LVL203:
1266:../Source Files/lpc_ssp_glcd.c **** 					u_val %= div_val;
 1715              		.loc 1 1266 0
 1716 07f8 DDF818C0 		ldr	ip, [sp, #24]
 1717 07fc 0898     		ldr	r0, [sp, #32]
1267:../Source Files/lpc_ssp_glcd.c **** 					div_val /= base;
 1718              		.loc 1 1267 0
 1719 07fe 0799     		ldr	r1, [sp, #28]
1265:../Source Files/lpc_ssp_glcd.c **** 					x=x+5*size+1;
 1720              		.loc 1 1265 0
 1721 0800 4C44     		add	r4, r9, r4
 1722              	.LVL204:
1266:../Source Files/lpc_ssp_glcd.c **** 					u_val %= div_val;
 1723              		.loc 1 1266 0
 1724 0802 0BFB10CC 		mls	ip, fp, r0, ip
1267:../Source Files/lpc_ssp_glcd.c **** 					div_val /= base;
 1725              		.loc 1 1267 0
 1726 0806 BBFBF1FB 		udiv	fp, fp, r1
 1727              	.LVL205:
1265:../Source Files/lpc_ssp_glcd.c **** 					x=x+5*size+1;
 1728              		.loc 1 1265 0
 1729 080a 24B2     		sxth	r4, r4
 1730              	.LVL206:
1268:../Source Files/lpc_ssp_glcd.c **** 				}while(div_val);
 1731              		.loc 1 1268 0
 1732 080c BBF1000F 		cmp	fp, #0
 1733 0810 3FF48FAE 		beq	.L90
 1734              	.LVL207:
 1735              	.L108:
1259:../Source Files/lpc_ssp_glcd.c **** 				    if(x+5*size >= 320)          // Performs character wrapping
 1736              		.loc 1 1259 0
 1737 0814 E019     		adds	r0, r4, r7
 1738 0816 B0F5A07F 		cmp	r0, #320
 1739 081a D7DB     		blt	.L105
 1740              	.LVL208:
1262:../Source Files/lpc_ssp_glcd.c **** 				       y += 7*size + 1;                 // Set y at next position down
 1741              		.loc 1 1262 0
 1742 081c 08EB0501 		add	r1, r8, r5
 1743 0820 0DB2     		sxth	r5, r1
 1744              	.LVL209:
1261:../Source Files/lpc_ssp_glcd.c **** 				       x = 0;                           // Set x at far left position
 1745              		.loc 1 1261 0
 1746 0822 0024     		movs	r4, #0
 1747 0824 D2E7     		b	.L105
 1748              	.LVL210:
 1749              	.L112:
1272:../Source Files/lpc_ssp_glcd.c **** }
 1750              		.loc 1 1272 0
 1751 0826 27B0     		add	sp, sp, #156
 1752 0828 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1753              	.L124:
 1754              		.align	2
 1755              	.L123:
 1756 082c 00150000 		.word	.LANCHOR3+1032
 1757              		.cfi_endproc
 1758              	.LFE82:
 1760              		.align	1
 1761              		.global	GLCD_Line
 1762              		.thumb
 1763              		.thumb_func
 1765              	GLCD_Line:
 1766              	.LFB76:
 617:../Source Files/lpc_ssp_glcd.c **** {
 1767              		.loc 1 617 0
 1768              		.cfi_startproc
 1769              		@ args = 4, pretend = 0, frame = 16
 1770              		@ frame_needed = 0, uses_anonymous_args = 0
 1771              	.LVL211:
 1772 0830 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1773              	.LCFI16:
 1774              		.cfi_def_cfa_offset 36
 1775              		.cfi_offset 4, -36
 1776              		.cfi_offset 5, -32
 1777              		.cfi_offset 6, -28
 1778              		.cfi_offset 7, -24
 1779              		.cfi_offset 8, -20
 1780              		.cfi_offset 9, -16
 1781              		.cfi_offset 10, -12
 1782              		.cfi_offset 11, -8
 1783              		.cfi_offset 14, -4
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1784              		.loc 1 621 0
 1785 0834 141A     		subs	r4, r2, r0
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1786              		.loc 1 622 0
 1787 0836 5E1A     		subs	r6, r3, r1
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1788              		.loc 1 621 0
 1789 0838 24B2     		sxth	r4, r4
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1790              		.loc 1 622 0
 1791 083a 36B2     		sxth	r6, r6
 621:../Source Files/lpc_ssp_glcd.c **** 	dx = abs((int16_t)(x2 - x1));
 1792              		.loc 1 621 0
 1793 083c 002C     		cmp	r4, #0
 1794 083e B8BF     		it	lt
 1795 0840 6442     		rsblt	r4, r4, #0
 1796              	.LVL212:
 622:../Source Files/lpc_ssp_glcd.c **** 	dy = abs((int16_t)(y2 - y1));
 1797              		.loc 1 622 0
 1798 0842 002E     		cmp	r6, #0
 1799 0844 B8BF     		it	lt
 1800 0846 7642     		rsblt	r6, r6, #0
 1801              	.LVL213:
 627:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 1802              		.loc 1 627 0
 1803 0848 4FF6FF75 		movw	r5, #65535
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1804              		.loc 1 636 0
 1805 084c 24B2     		sxth	r4, r4
 1806              	.LVL214:
 1807 084e 36B2     		sxth	r6, r6
 1808              	.LVL215:
 617:../Source Files/lpc_ssp_glcd.c **** {
 1809              		.loc 1 617 0
 1810 0850 85B0     		sub	sp, sp, #20
 1811              	.LCFI17:
 1812              		.cfi_def_cfa_offset 56
 627:../Source Files/lpc_ssp_glcd.c **** 		addx = -1;
 1813              		.loc 1 627 0
 1814 0852 9042     		cmp	r0, r2
 1815 0854 CCBF     		ite	gt
 1816 0856 2F46     		movgt	r7, r5
 1817 0858 0127     		movle	r7, #1
 1818              	.LVL216:
 631:../Source Files/lpc_ssp_glcd.c **** 		addy = -1;
 1819              		.loc 1 631 0
 1820 085a 9942     		cmp	r1, r3
 1821 085c CCBF     		ite	gt
 1822 085e A846     		movgt	r8, r5
 1823 0860 4FF00108 		movle	r8, #1
 1824              	.LVL217:
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1825              		.loc 1 636 0
 1826 0864 B442     		cmp	r4, r6
 617:../Source Files/lpc_ssp_glcd.c **** {
 1827              		.loc 1 617 0
 1828 0866 BDF83890 		ldrh	r9, [sp, #56]
 636:../Source Files/lpc_ssp_glcd.c **** 	if(dx >= dy)
 1829              		.loc 1 636 0
 1830 086a 29DB     		blt	.L128
 638:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 1831              		.loc 1 638 0
 1832 086c 4FEA460B 		lsl	fp, r6, #1
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1833              		.loc 1 651 0
 1834 0870 361B     		subs	r6, r6, r4
 1835 0872 7300     		lsls	r3, r6, #1
 1836              	.LVL218:
 638:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dy - dx;
 1837              		.loc 1 638 0
 1838 0874 C4EB0B05 		rsb	r5, r4, fp
 1839              	.LVL219:
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1840              		.loc 1 651 0
 1841 0878 0393     		str	r3, [sp, #12]
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1842              		.loc 1 640 0
 1843 087a 8A46     		mov	sl, r1
 1844 087c 0026     		movs	r6, #0
 1845              	.LVL220:
 1846              	.L129:
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1847              		.loc 1 640 0 is_stmt 0 discriminator 1
 1848 087e A642     		cmp	r6, r4
 1849 0880 47DC     		bgt	.L125
 1850              	.L132:
 642:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 1851              		.loc 1 642 0 is_stmt 1
 1852 0882 1FFA8AF3 		uxth	r3, sl
 1853 0886 1FFA80FE 		uxth	lr, r0
 1854 088a 1946     		mov	r1, r3
 1855 088c 7046     		mov	r0, lr
 1856              	.LVL221:
 1857 088e 4A46     		mov	r2, r9
 1858 0890 0193     		str	r3, [sp, #4]
 1859 0892 CDF808E0 		str	lr, [sp, #8]
 1860 0896 FFF7FEFF 		bl	GLCD_PutPixel
 1861              	.LVL222:
 1862 089a DDF808C0 		ldr	ip, [sp, #8]
 644:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 1863              		.loc 1 644 0
 1864 089e 002D     		cmp	r5, #0
 1865 08a0 0CEB0701 		add	r1, ip, r7
 1866 08a4 019B     		ldr	r3, [sp, #4]
 1867 08a6 02DA     		bge	.L130
 646:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy;
 1868              		.loc 1 646 0
 1869 08a8 5D44     		add	r5, r5, fp
 1870              	.LVL223:
 647:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1871              		.loc 1 647 0
 1872 08aa 88B2     		uxth	r0, r1
 1873              	.LVL224:
 1874 08ac 06E0     		b	.L131
 1875              	.LVL225:
 1876              	.L130:
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1877              		.loc 1 651 0
 1878 08ae 0398     		ldr	r0, [sp, #12]
 653:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1879              		.loc 1 653 0
 1880 08b0 03EB080A 		add	sl, r3, r8
 1881              	.LVL226:
 651:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dy - 2*dx;
 1882              		.loc 1 651 0
 1883 08b4 2D18     		adds	r5, r5, r0
 1884              	.LVL227:
 653:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1885              		.loc 1 653 0
 1886 08b6 1FFA8AFA 		uxth	sl, sl
 652:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1887              		.loc 1 652 0
 1888 08ba 88B2     		uxth	r0, r1
 1889              	.LVL228:
 1890              	.L131:
 640:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dx; ++i)
 1891              		.loc 1 640 0
 1892 08bc 0136     		adds	r6, r6, #1
 1893              	.LVL229:
 1894 08be DEE7     		b	.L129
 1895              	.LVL230:
 1896              	.L128:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1897              		.loc 1 672 0
 1898 08c0 A21B     		subs	r2, r4, r6
 1899              	.LVL231:
 659:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 1900              		.loc 1 659 0
 1901 08c2 4FEA440A 		lsl	sl, r4, #1
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1902              		.loc 1 672 0
 1903 08c6 5300     		lsls	r3, r2, #1
 1904              	.LVL232:
 659:../Source Files/lpc_ssp_glcd.c **** 		P = 2*dx - dy;
 1905              		.loc 1 659 0
 1906 08c8 C6EB0A05 		rsb	r5, r6, sl
 1907              	.LVL233:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1908              		.loc 1 672 0
 1909 08cc 0393     		str	r3, [sp, #12]
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1910              		.loc 1 661 0
 1911 08ce 8346     		mov	fp, r0
 1912 08d0 0024     		movs	r4, #0
 1913              	.LVL234:
 1914              	.L133:
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1915              		.loc 1 661 0 is_stmt 0 discriminator 1
 1916 08d2 B442     		cmp	r4, r6
 1917 08d4 1DDC     		bgt	.L125
 1918              	.L136:
 663:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x, y, color);
 1919              		.loc 1 663 0 is_stmt 1
 1920 08d6 1FFA81FC 		uxth	ip, r1
 1921 08da 1FFA8BF3 		uxth	r3, fp
 1922 08de 6146     		mov	r1, ip
 1923              	.LVL235:
 1924 08e0 1846     		mov	r0, r3
 1925 08e2 4A46     		mov	r2, r9
 1926 08e4 CDF808C0 		str	ip, [sp, #8]
 1927 08e8 0193     		str	r3, [sp, #4]
 1928 08ea FFF7FEFF 		bl	GLCD_PutPixel
 1929              	.LVL236:
 1930 08ee DDF808C0 		ldr	ip, [sp, #8]
 665:../Source Files/lpc_ssp_glcd.c **** 			if(P < 0)
 1931              		.loc 1 665 0
 1932 08f2 002D     		cmp	r5, #0
 1933 08f4 0CEB0801 		add	r1, ip, r8
 1934 08f8 0198     		ldr	r0, [sp, #4]
 1935 08fa 01DA     		bge	.L134
 667:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx;
 1936              		.loc 1 667 0
 1937 08fc 5544     		add	r5, r5, sl
 1938              	.LVL237:
 1939 08fe 05E0     		b	.L140
 1940              	.L134:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1941              		.loc 1 672 0
 1942 0900 039A     		ldr	r2, [sp, #12]
 673:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1943              		.loc 1 673 0
 1944 0902 00EB070B 		add	fp, r0, r7
 1945              	.LVL238:
 672:../Source Files/lpc_ssp_glcd.c **** 				P += 2*dx - 2*dy;
 1946              		.loc 1 672 0
 1947 0906 AD18     		adds	r5, r5, r2
 1948              	.LVL239:
 673:../Source Files/lpc_ssp_glcd.c **** 				x += addx;
 1949              		.loc 1 673 0
 1950 0908 1FFA8BFB 		uxth	fp, fp
 1951              	.L140:
 1952              	.LVL240:
 674:../Source Files/lpc_ssp_glcd.c **** 				y += addy;
 1953              		.loc 1 674 0
 1954 090c 89B2     		uxth	r1, r1
 1955              	.LVL241:
 661:../Source Files/lpc_ssp_glcd.c **** 		for(i=0; i<=dy; ++i)
 1956              		.loc 1 661 0
 1957 090e 0134     		adds	r4, r4, #1
 1958              	.LVL242:
 1959 0910 DFE7     		b	.L133
 1960              	.LVL243:
 1961              	.L125:
 678:../Source Files/lpc_ssp_glcd.c **** }
 1962              		.loc 1 678 0
 1963 0912 05B0     		add	sp, sp, #20
 1964 0914 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1965              		.cfi_endproc
 1966              	.LFE76:
 1968              		.align	1
 1969              		.global	GLCD_LBar
 1970              		.thumb
 1971              		.thumb_func
 1973              	GLCD_LBar:
 1974              	.LFB84:
1311:../Source Files/lpc_ssp_glcd.c **** {
 1975              		.loc 1 1311 0
 1976              		.cfi_startproc
 1977              		@ args = 8, pretend = 0, frame = 0
 1978              		@ frame_needed = 0, uses_anonymous_args = 0
 1979              	.LVL244:
 1980 0918 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1981              	.LCFI18:
 1982              		.cfi_def_cfa_offset 40
 1983              		.cfi_offset 0, -40
 1984              		.cfi_offset 1, -36
 1985              		.cfi_offset 2, -32
 1986              		.cfi_offset 4, -28
 1987              		.cfi_offset 5, -24
 1988              		.cfi_offset 6, -20
 1989              		.cfi_offset 7, -16
 1990              		.cfi_offset 8, -12
 1991              		.cfi_offset 9, -8
 1992              		.cfi_offset 14, -4
1311:../Source Files/lpc_ssp_glcd.c **** {
 1993              		.loc 1 1311 0
 1994 091c 9DF82860 		ldrb	r6, [sp, #40]	@ zero_extendqisi2
 1995 0920 1446     		mov	r4, r2
 1996 0922 1D46     		mov	r5, r3
 1997 0924 BDF82C70 		ldrh	r7, [sp, #44]
1314:../Source Files/lpc_ssp_glcd.c **** 	if(dec)
 1998              		.loc 1 1314 0
 1999 0928 0EB1     		cbz	r6, .L142
1316:../Source Files/lpc_ssp_glcd.c **** 		y_diff=y+(per);
 2000              		.loc 1 1316 0
 2001 092a 9B18     		adds	r3, r3, r2
 2002              	.LVL245:
 2003 092c 00E0     		b	.L155
 2004              	.LVL246:
 2005              	.L142:
1320:../Source Files/lpc_ssp_glcd.c **** 		y_diff=y-(per);
 2006              		.loc 1 1320 0
 2007 092e D31A     		subs	r3, r2, r3
 2008              	.LVL247:
 2009              	.L155:
 2010 0930 9BB2     		uxth	r3, r3
 2011              	.LVL248:
1323:../Source Files/lpc_ssp_glcd.c **** 	if((y_diff>=20) && (index<=10) && !dec)
 2012              		.loc 1 1323 0
 2013 0932 1AB2     		sxth	r2, r3
 2014              	.LVL249:
 2015 0934 132A     		cmp	r2, #19
 2016 0936 1DDD     		ble	.L144
1323:../Source Files/lpc_ssp_glcd.c **** 	if((y_diff>=20) && (index<=10) && !dec)
 2017              		.loc 1 1323 0 is_stmt 0 discriminator 1
 2018 0938 0A28     		cmp	r0, #10
 2019 093a 1BDC     		bgt	.L144
 2020 093c 002E     		cmp	r6, #0
 2021 093e 3AD1     		bne	.L145
1327:../Source Files/lpc_ssp_glcd.c **** 			x1 = 30+(index*26)-(width-(width/2));
 2022              		.loc 1 1327 0 is_stmt 1
 2023 0940 1A22     		movs	r2, #26
 2024 0942 5043     		muls	r0, r2, r0
 2025              	.LVL250:
 2026 0944 1E30     		adds	r0, r0, #30
 2027 0946 00EB5103 		add	r3, r0, r1, lsr #1
 2028              	.LVL251:
 2029 094a 98B2     		uxth	r0, r3
 2030 094c 411A     		subs	r1, r0, r1
 2031              	.LVL252:
 2032 094e 1FFA81F8 		uxth	r8, r1
1328:../Source Files/lpc_ssp_glcd.c **** 			x2 = x1+width;
 2033              		.loc 1 1328 0
 2034 0952 1FFA80F9 		uxth	r9, r0
 2035              	.L146:
1325:../Source Files/lpc_ssp_glcd.c **** 		for(h=0;h<=per;h++)
 2036              		.loc 1 1325 0 discriminator 1
 2037 0956 32B2     		sxth	r2, r6
 2038 0958 AA42     		cmp	r2, r5
 2039 095a 2EDC     		bgt	.L141
 2040              	.L147:
 2041              	.LVL253:
1310:../Source Files/lpc_ssp_glcd.c **** void GLCD_LBar(int16_t index, uint8_t width, int16_t y, int16_t per, Bool dec,uint16_t color)
 2042              		.loc 1 1310 0 discriminator 2
 2043 095c A31B     		subs	r3, r4, r6
1329:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x1,y-h,x2,y-h,color);
 2044              		.loc 1 1329 0 discriminator 2
 2045 095e 19B2     		sxth	r1, r3
 2046 0960 0097     		str	r7, [sp, #0]
 2047 0962 0FFA88F0 		sxth	r0, r8
 2048 0966 0FFA89F2 		sxth	r2, r9
 2049 096a 0B46     		mov	r3, r1
 2050 096c FFF7FEFF 		bl	GLCD_Line
 2051              	.LVL254:
 2052 0970 0136     		adds	r6, r6, #1
 2053 0972 F0E7     		b	.L146
 2054              	.LVL255:
 2055              	.L144:
1332:../Source Files/lpc_ssp_glcd.c **** 	else if(dec && (y_diff<=219) && (index<=10))
 2056              		.loc 1 1332 0
 2057 0974 0EB3     		cbz	r6, .L141
1332:../Source Files/lpc_ssp_glcd.c **** 	else if(dec && (y_diff<=219) && (index<=10))
 2058              		.loc 1 1332 0 is_stmt 0 discriminator 1
 2059 0976 1BB2     		sxth	r3, r3
 2060              	.LVL256:
 2061 0978 DB2B     		cmp	r3, #219
 2062 097a 1EDC     		bgt	.L141
 2063 097c 0A28     		cmp	r0, #10
 2064              	.L156:
 2065 097e 1CDC     		bgt	.L141
1336:../Source Files/lpc_ssp_glcd.c **** 			x1 = 30+(index*26)-(width-(width/2));
 2066              		.loc 1 1336 0 is_stmt 1 discriminator 1
 2067 0980 1A26     		movs	r6, #26
 2068 0982 7043     		muls	r0, r6, r0
 2069              	.LVL257:
 2070 0984 1E30     		adds	r0, r0, #30
 2071 0986 00EB5100 		add	r0, r0, r1, lsr #1
 2072 098a 82B2     		uxth	r2, r0
 2073 098c 511A     		subs	r1, r2, r1
 2074              	.LVL258:
 2075 098e 1FFA81F8 		uxth	r8, r1
1337:../Source Files/lpc_ssp_glcd.c **** 			x2 = x1+width;
 2076              		.loc 1 1337 0 discriminator 1
 2077 0992 1FFA82F9 		uxth	r9, r2
 2078 0996 0026     		movs	r6, #0
 2079              	.L149:
1334:../Source Files/lpc_ssp_glcd.c **** 		for(h=0;h<=per;h++)
 2080              		.loc 1 1334 0 discriminator 1
 2081 0998 33B2     		sxth	r3, r6
 2082 099a AB42     		cmp	r3, r5
 2083 099c 0DDC     		bgt	.L141
 2084              	.L150:
1310:../Source Files/lpc_ssp_glcd.c **** void GLCD_LBar(int16_t index, uint8_t width, int16_t y, int16_t per, Bool dec,uint16_t color)
 2085              		.loc 1 1310 0 discriminator 2
 2086 099e 3019     		adds	r0, r6, r4
1338:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x1,y+h,x2,y+h,color);
 2087              		.loc 1 1338 0 discriminator 2
 2088 09a0 01B2     		sxth	r1, r0
 2089 09a2 0097     		str	r7, [sp, #0]
 2090 09a4 0FFA88F0 		sxth	r0, r8
 2091 09a8 0FFA89F2 		sxth	r2, r9
 2092 09ac 0B46     		mov	r3, r1
 2093 09ae FFF7FEFF 		bl	GLCD_Line
 2094              	.LVL259:
 2095 09b2 0136     		adds	r6, r6, #1
 2096 09b4 F0E7     		b	.L149
 2097              	.LVL260:
 2098              	.L145:
1332:../Source Files/lpc_ssp_glcd.c **** 	else if(dec && (y_diff<=219) && (index<=10))
 2099              		.loc 1 1332 0
 2100 09b6 DB2A     		cmp	r2, #219
 2101 09b8 E1E7     		b	.L156
 2102              	.LVL261:
 2103              	.L141:
1341:../Source Files/lpc_ssp_glcd.c **** }
 2104              		.loc 1 1341 0
 2105 09ba BDE8FE83 		pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
 2106              		.cfi_endproc
 2107              	.LFE84:
 2109              		.align	1
 2110              		.global	GLCD_Triangle
 2111              		.thumb
 2112              		.thumb_func
 2114              	GLCD_Triangle:
 2115              	.LFB79:
 794:../Source Files/lpc_ssp_glcd.c **** {
 2116              		.loc 1 794 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 48
 2119              		@ frame_needed = 0, uses_anonymous_args = 0
 2120              	.LVL262:
 2121 09be 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2122              	.LCFI19:
 2123              		.cfi_def_cfa_offset 36
 2124              		.cfi_offset 4, -36
 2125              		.cfi_offset 5, -32
 2126              		.cfi_offset 6, -28
 2127              		.cfi_offset 7, -24
 2128              		.cfi_offset 8, -20
 2129              		.cfi_offset 9, -16
 2130              		.cfi_offset 10, -12
 2131              		.cfi_offset 11, -8
 2132              		.cfi_offset 14, -4
 2133 09c2 8FB0     		sub	sp, sp, #60
 2134              	.LCFI20:
 2135              		.cfi_def_cfa_offset 96
 794:../Source Files/lpc_ssp_glcd.c **** {
 2136              		.loc 1 794 0
 2137 09c4 0693     		str	r3, [sp, #24]
 795:../Source Files/lpc_ssp_glcd.c ****     if(cfg->fill)
 2138              		.loc 1 795 0
 2139 09c6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2140              	.LVL263:
 794:../Source Files/lpc_ssp_glcd.c **** {
 2141              		.loc 1 794 0
 2142 09c8 0746     		mov	r7, r0
 2143 09ca 0D46     		mov	r5, r1
 2144 09cc 1646     		mov	r6, r2
 795:../Source Files/lpc_ssp_glcd.c ****     if(cfg->fill)
 2145              		.loc 1 795 0
 2146 09ce 002B     		cmp	r3, #0
 2147 09d0 00F03082 		beq	.L158
 2148              	.LVL264:
 2149              	.LBB16:
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 2150              		.loc 1 803 0
 2151 09d4 4488     		ldrh	r4, [r0, #2]
 2152 09d6 4A88     		ldrh	r2, [r1, #2]
 2153              	.LVL265:
 2154 09d8 20B2     		sxth	r0, r4
 2155              	.LVL266:
 2156 09da 11B2     		sxth	r1, r2
 2157              	.LVL267:
 2158 09dc 8842     		cmp	r0, r1
 2159 09de 14DD     		ble	.L159
 803:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p2->y) { SWAP(p1->y,p2->y); SWAP(p1->x,p2->x); }
 2160              		.loc 1 803 0 is_stmt 0 discriminator 1
 2161 09e0 82EA0403 		eor	r3, r2, r4
 2162 09e4 7B80     		strh	r3, [r7, #2]	@ movhi
 2163 09e6 6C88     		ldrh	r4, [r5, #2]
 2164 09e8 2888     		ldrh	r0, [r5, #0]
 2165 09ea 6340     		eors	r3, r3, r4
 2166 09ec 6B80     		strh	r3, [r5, #2]	@ movhi
 2167 09ee 7A88     		ldrh	r2, [r7, #2]
 2168 09f0 3988     		ldrh	r1, [r7, #0]
 2169 09f2 5340     		eors	r3, r3, r2
 2170 09f4 7B80     		strh	r3, [r7, #2]	@ movhi
 2171 09f6 80EA0103 		eor	r3, r0, r1
 2172 09fa 9CB2     		uxth	r4, r3
 2173 09fc 3C80     		strh	r4, [r7, #0]	@ movhi
 2174 09fe 2A88     		ldrh	r2, [r5, #0]
 2175 0a00 5440     		eors	r4, r4, r2
 2176 0a02 2C80     		strh	r4, [r5, #0]	@ movhi
 2177 0a04 3888     		ldrh	r0, [r7, #0]
 2178 0a06 4440     		eors	r4, r4, r0
 2179 0a08 3C80     		strh	r4, [r7, #0]	@ movhi
 2180              	.L159:
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 2181              		.loc 1 804 0 is_stmt 1
 2182 0a0a 7B88     		ldrh	r3, [r7, #2]
 2183 0a0c 7488     		ldrh	r4, [r6, #2]
 2184 0a0e 1AB2     		sxth	r2, r3
 2185 0a10 21B2     		sxth	r1, r4
 2186 0a12 8A42     		cmp	r2, r1
 2187 0a14 14DD     		ble	.L160
 804:../Source Files/lpc_ssp_glcd.c ****     	if (p1->y > p3->y) { SWAP(p1->y,p3->y); SWAP(p1->x,p3->x); }
 2188              		.loc 1 804 0 is_stmt 0 discriminator 1
 2189 0a16 84EA0300 		eor	r0, r4, r3
 2190 0a1a 7880     		strh	r0, [r7, #2]	@ movhi
 2191 0a1c 7388     		ldrh	r3, [r6, #2]
 2192 0a1e 3288     		ldrh	r2, [r6, #0]
 2193 0a20 5840     		eors	r0, r0, r3
 2194 0a22 7080     		strh	r0, [r6, #2]	@ movhi
 2195 0a24 7C88     		ldrh	r4, [r7, #2]
 2196 0a26 3988     		ldrh	r1, [r7, #0]
 2197 0a28 6040     		eors	r0, r0, r4
 2198 0a2a 7880     		strh	r0, [r7, #2]	@ movhi
 2199 0a2c 82EA0100 		eor	r0, r2, r1
 2200 0a30 83B2     		uxth	r3, r0
 2201 0a32 3B80     		strh	r3, [r7, #0]	@ movhi
 2202 0a34 3488     		ldrh	r4, [r6, #0]
 2203 0a36 6340     		eors	r3, r3, r4
 2204 0a38 3380     		strh	r3, [r6, #0]	@ movhi
 2205 0a3a 3A88     		ldrh	r2, [r7, #0]
 2206 0a3c 5340     		eors	r3, r3, r2
 2207 0a3e 3B80     		strh	r3, [r7, #0]	@ movhi
 2208              	.L160:
 805:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 2209              		.loc 1 805 0 is_stmt 1
 2210 0a40 6B88     		ldrh	r3, [r5, #2]
 2211 0a42 7488     		ldrh	r4, [r6, #2]
 2212 0a44 18B2     		sxth	r0, r3
 2213 0a46 21B2     		sxth	r1, r4
 2214 0a48 8842     		cmp	r0, r1
 2215 0a4a 13DD     		ble	.L161
 805:../Source Files/lpc_ssp_glcd.c ****     	if (p2->y > p3->y) { SWAP(p2->y,p3->y); SWAP(p2->x,p3->x); }
 2216              		.loc 1 805 0 is_stmt 0 discriminator 1
 2217 0a4c 6340     		eors	r3, r3, r4
 2218 0a4e 6B80     		strh	r3, [r5, #2]	@ movhi
 2219 0a50 7288     		ldrh	r2, [r6, #2]
 2220 0a52 3088     		ldrh	r0, [r6, #0]
 2221 0a54 5340     		eors	r3, r3, r2
 2222 0a56 7380     		strh	r3, [r6, #2]	@ movhi
 2223 0a58 6C88     		ldrh	r4, [r5, #2]
 2224 0a5a 2988     		ldrh	r1, [r5, #0]
 2225 0a5c 6340     		eors	r3, r3, r4
 2226 0a5e 6B80     		strh	r3, [r5, #2]	@ movhi
 2227 0a60 80EA0103 		eor	r3, r0, r1
 2228 0a64 9CB2     		uxth	r4, r3
 2229 0a66 2C80     		strh	r4, [r5, #0]	@ movhi
 2230 0a68 3288     		ldrh	r2, [r6, #0]
 2231 0a6a 5440     		eors	r4, r4, r2
 2232 0a6c 3480     		strh	r4, [r6, #0]	@ movhi
 2233 0a6e 2888     		ldrh	r0, [r5, #0]
 2234 0a70 4440     		eors	r4, r4, r0
 2235 0a72 2C80     		strh	r4, [r5, #0]	@ movhi
 2236              	.L161:
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 2237              		.loc 1 807 0 is_stmt 1
 2238 0a74 3988     		ldrh	r1, [r7, #0]
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 2239              		.loc 1 809 0
 2240 0a76 2A88     		ldrh	r2, [r5, #0]
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 2241              		.loc 1 807 0
 2242 0a78 8CB2     		uxth	r4, r1
 2243              	.LVL268:
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 2244              		.loc 1 809 0
 2245 0a7a 101B     		subs	r0, r2, r4
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 2246              		.loc 1 807 0
 2247 0a7c 7B88     		ldrh	r3, [r7, #2]
 809:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int16_t)(p2->x - p1->x);
 2248              		.loc 1 809 0
 2249 0a7e 82B2     		uxth	r2, r0
 2250 0a80 1FFA82F9 		uxth	r9, r2
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 2251              		.loc 1 807 0
 2252 0a84 1FFA83F8 		uxth	r8, r3
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 2253              		.loc 1 810 0
 2254 0a88 19F4004F 		tst	r9, #32768
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 2255              		.loc 1 807 0
 2256 0a8c CDF81480 		str	r8, [sp, #20]
 2257              	.LVL269:
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 2258              		.loc 1 810 0
 2259 0a90 08D0     		beq	.L202
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 2260              		.loc 1 810 0 is_stmt 0 discriminator 1
 2261 0a92 C2F10009 		rsb	r9, r2, #0
 2262 0a96 4FF6FF7C 		movw	ip, #65535
 2263 0a9a 1FFA89F9 		uxth	r9, r9
 2264              	.LVL270:
 2265 0a9e CDF820C0 		str	ip, [sp, #32]
 2266 0aa2 03E0     		b	.L162
 2267              	.LVL271:
 2268              	.L202:
 810:../Source Files/lpc_ssp_glcd.c ****     	if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 2269              		.loc 1 810 0
 2270 0aa4 4FF0010A 		mov	sl, #1
 2271 0aa8 CDF820A0 		str	sl, [sp, #32]
 2272              	.LVL272:
 2273              	.L162:
 811:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 2274              		.loc 1 811 0 is_stmt 1
 2275 0aac B5F802B0 		ldrh	fp, [r5, #2]
 2276 0ab0 DDF81480 		ldr	r8, [sp, #20]
 2277 0ab4 C8EB0B00 		rsb	r0, r8, fp
 2278 0ab8 82B2     		uxth	r2, r0
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 2279              		.loc 1 813 0
 2280 0aba 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 811:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int16_t)(p2->y - p1->y);
 2281              		.loc 1 811 0
 2282 0abc 0392     		str	r2, [sp, #12]
 2283              	.LVL273:
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 2284              		.loc 1 813 0
 2285 0abe 411A     		subs	r1, r0, r1
 2286              	.LVL274:
 2287 0ac0 4AB2     		sxtb	r2, r1
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 2288              		.loc 1 814 0
 2289 0ac2 11B2     		sxth	r1, r2
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 2290              		.loc 1 813 0
 2291 0ac4 1FFA82FA 		uxth	sl, r2
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 2292              		.loc 1 814 0
 2293 0ac8 0029     		cmp	r1, #0
 813:../Source Files/lpc_ssp_glcd.c ****     	dx2 = (int8_t)(p3->x - p1->x);
 2294              		.loc 1 813 0
 2295 0aca CDF810A0 		str	sl, [sp, #16]
 2296              	.LVL275:
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 2297              		.loc 1 814 0
 2298 0ace 07DA     		bge	.L203
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 2299              		.loc 1 814 0 is_stmt 0 discriminator 1
 2300 0ad0 5242     		negs	r2, r2
 2301              	.LVL276:
 2302 0ad2 90B2     		uxth	r0, r2
 2303 0ad4 4FF6FF78 		movw	r8, #65535
 2304 0ad8 0490     		str	r0, [sp, #16]
 2305              	.LVL277:
 2306 0ada CDF82880 		str	r8, [sp, #40]
 2307 0ade 03E0     		b	.L163
 2308              	.LVL278:
 2309              	.L203:
 814:../Source Files/lpc_ssp_glcd.c ****     	if(dx2<0) { dx2=-dx2; signx2=-1; } else signx2=1;
 2310              		.loc 1 814 0
 2311 0ae0 4FF0010C 		mov	ip, #1
 2312 0ae4 CDF828C0 		str	ip, [sp, #40]
 2313              	.LVL279:
 2314              	.L163:
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 2315              		.loc 1 815 0 is_stmt 1
 2316 0ae8 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 2317              		.loc 1 817 0
 2318 0aea DDF80CC0 		ldr	ip, [sp, #12]
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 2319              		.loc 1 815 0
 2320 0aee CA1A     		subs	r2, r1, r3
 2321 0af0 51B2     		sxtb	r1, r2
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 2322              		.loc 1 817 0
 2323 0af2 0FFA8CF8 		sxth	r8, ip
 2324 0af6 0FFA89F2 		sxth	r2, r9
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 2325              		.loc 1 815 0
 2326 0afa 1FFA81FA 		uxth	sl, r1
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 2327              		.loc 1 817 0
 2328 0afe 9045     		cmp	r8, r2
 815:../Source Files/lpc_ssp_glcd.c ****     	dy2 = (int8_t)(p3->y - p1->y);
 2329              		.loc 1 815 0
 2330 0b00 0846     		mov	r0, r1	@ movhi
 2331 0b02 CDF834A0 		str	sl, [sp, #52]
 2332              	.LVL280:
 817:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 2333              		.loc 1 817 0
 2334 0b06 0FDD     		ble	.L204
 819:../Source Files/lpc_ssp_glcd.c ****             SWAP(dx1,dy1);
 2335              		.loc 1 819 0
 2336 0b08 DDF80CA0 		ldr	sl, [sp, #12]
 2337 0b0c 89EA0A09 		eor	r9, r9, sl
 2338              	.LVL281:
 2339 0b10 89EA0A0C 		eor	ip, r9, sl
 2340 0b14 1FFA8CF8 		uxth	r8, ip
 2341 0b18 88EA0902 		eor	r2, r8, r9
 2342 0b1c 1FFA82F9 		uxth	r9, r2
 2343              	.LVL282:
 2344 0b20 CDF80C80 		str	r8, [sp, #12]
 2345              	.LVL283:
 820:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 2346              		.loc 1 820 0
 2347 0b24 0122     		movs	r2, #1
 2348              	.LVL284:
 2349 0b26 00E0     		b	.L225
 2350              	.LVL285:
 2351              	.L204:
 798:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 2352              		.loc 1 798 0
 2353 0b28 0022     		movs	r2, #0
 2354              	.LVL286:
 2355              	.L225:
 822:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 2356              		.loc 1 822 0
 2357 0b2a DDF810A0 		ldr	sl, [sp, #16]
 2358 0b2e 00B2     		sxth	r0, r0
 2359              	.LVL287:
 2360 0b30 0FFA8AFC 		sxth	ip, sl
 2361 0b34 6045     		cmp	r0, ip
 798:../Source Files/lpc_ssp_glcd.c ****     	Bool changed1 = FALSE;
 2362              		.loc 1 798 0
 2363 0b36 0792     		str	r2, [sp, #28]
 2364              	.LVL288:
 822:../Source Files/lpc_ssp_glcd.c ****     	if (dy2 > dx2)
 2365              		.loc 1 822 0
 2366 0b38 0DDD     		ble	.L205
 824:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 2367              		.loc 1 824 0
 2368 0b3a 8AEA0100 		eor	r0, sl, r1
 2369 0b3e 81B2     		uxth	r1, r0
 2370              	.LVL289:
 2371 0b40 81EA0A08 		eor	r8, r1, sl
 2372 0b44 88EA0100 		eor	r0, r8, r1
 2373              	.LVL290:
 2374 0b48 81B2     		uxth	r1, r0
 2375              	.LVL291:
 825:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 2376              		.loc 1 825 0
 2377 0b4a 0120     		movs	r0, #1
 824:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy2,dx2);
 2378              		.loc 1 824 0
 2379 0b4c CDF81080 		str	r8, [sp, #16]
 2380 0b50 0D91     		str	r1, [sp, #52]
 2381              	.LVL292:
 825:../Source Files/lpc_ssp_glcd.c ****     		changed2 = TRUE;
 2382              		.loc 1 825 0
 2383 0b52 0990     		str	r0, [sp, #36]
 2384 0b54 01E0     		b	.L165
 2385              	.LVL293:
 2386              	.L205:
 799:../Source Files/lpc_ssp_glcd.c ****     	Bool changed2 = FALSE;
 2387              		.loc 1 799 0
 2388 0b56 0021     		movs	r1, #0
 2389              	.LVL294:
 2390 0b58 0991     		str	r1, [sp, #36]
 2391              	.LVL295:
 2392              	.L165:
 828:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 2393              		.loc 1 828 0
 2394 0b5a DDF810A0 		ldr	sl, [sp, #16]
 830:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 2395              		.loc 1 830 0
 2396 0b5e 9B45     		cmp	fp, r3
 828:../Source Files/lpc_ssp_glcd.c ****     	e2 = (uint16_t)(dx2>>1);
 2397              		.loc 1 828 0
 2398 0b60 4AF34E01 		sbfx	r1, sl, #1, #15
 2399 0b64 1FFA81FC 		uxth	ip, r1
 2400              	.LVL296:
 830:../Source Files/lpc_ssp_glcd.c ****         if(p1->y==p2->y) goto next;
 2401              		.loc 1 830 0
 2402 0b68 00F09580 		beq	.L166
 831:../Source Files/lpc_ssp_glcd.c ****         e1 = (uint16_t)(dx1>>1);
 2403              		.loc 1 831 0
 2404 0b6c 49F34E03 		sbfx	r3, r9, #1, #15
 2405 0b70 1FFA83FA 		uxth	sl, r3
 2406              	.LVL297:
 2407              	.LBB17:
 807:../Source Files/lpc_ssp_glcd.c ****     	t1x=t2x=p1->x; y=p1->y;   // Starting points
 2408              		.loc 1 807 0
 2409 0b74 A046     		mov	r8, r4
 833:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 2410              		.loc 1 833 0
 2411 0b76 4FF0000B 		mov	fp, #0
 2412              	.LVL298:
 2413              	.L167:
 833:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i < dx1;)
 2414              		.loc 1 833 0 is_stmt 0 discriminator 1
 2415 0b7a 0FFA89F3 		sxth	r3, r9
 2416 0b7e 9B45     		cmp	fp, r3
 2417 0b80 80F28980 		bge	.L166
 2418              	.L181:
 2419              	.LVL299:
 836:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 2420              		.loc 1 836 0 is_stmt 1
 2421 0b84 A045     		cmp	r8, r4
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 2422              		.loc 1 839 0
 2423 0b86 4FF0000E 		mov	lr, #0
 836:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 2424              		.loc 1 836 0
 2425 0b8a 39BF     		ittee	cc
 2426 0b8c 2246     		movcc	r2, r4
 2427 0b8e 4146     		movcc	r1, r8
 2428 0b90 4246     		movcs	r2, r8
 2429 0b92 2146     		movcs	r1, r4
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 2430              		.loc 1 839 0
 2431 0b94 CDF82CE0 		str	lr, [sp, #44]
 2432              	.LVL300:
 2433              	.L169:
 839:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 2434              		.loc 1 839 0 is_stmt 0 discriminator 1
 2435 0b98 9B45     		cmp	fp, r3
 2436 0b9a 08DA     		bge	.L172
 2437              	.L175:
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 2438              		.loc 1 842 0 is_stmt 1
 2439 0b9c 0398     		ldr	r0, [sp, #12]
 841:../Source Files/lpc_ssp_glcd.c ****     			i++;
 2440              		.loc 1 841 0
 2441 0b9e 0BF1010B 		add	fp, fp, #1
 2442              	.LVL301:
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 2443              		.loc 1 842 0
 2444 0ba2 8244     		add	sl, sl, r0
 2445              	.LVL302:
 841:../Source Files/lpc_ssp_glcd.c ****     			i++;
 2446              		.loc 1 841 0
 2447 0ba4 5FFA8BFB 		uxtb	fp, fp
 2448              	.LVL303:
 842:../Source Files/lpc_ssp_glcd.c ****     			e1 += dy1;
 2449              		.loc 1 842 0
 2450 0ba8 1FFA8AFA 		uxth	sl, sl
 2451              	.LVL304:
 843:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 2452              		.loc 1 843 0
 2453 0bac 0FE0     		b	.L170
 2454              	.LVL305:
 2455              	.L172:
 2456 0bae 0023     		movs	r3, #0
 2457 0bb0 0C93     		str	r3, [sp, #48]
 2458 0bb2 2DE0     		b	.L173
 2459              	.LVL306:
 2460              	.L174:
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 2461              		.loc 1 846 0
 2462 0bb4 0798     		ldr	r0, [sp, #28]
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2463              		.loc 1 793 0
 2464 0bb6 C9EB0A0A 		rsb	sl, r9, sl
 2465              	.LVL307:
 2466 0bba 1FFA8AFA 		uxth	sl, sl
 2467              	.LVL308:
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 2468              		.loc 1 846 0
 2469 0bbe 0028     		cmp	r0, #0
 2470 0bc0 F5D0     		beq	.L172
 2471              	.L171:
 846:../Source Files/lpc_ssp_glcd.c ****        	   	   	   if (changed1) t1xp=signx1;//t1x += signx1;
 2472              		.loc 1 846 0 is_stmt 0 discriminator 1
 2473 0bc2 DDF820E0 		ldr	lr, [sp, #32]
 2474 0bc6 1FFA8EFE 		uxth	lr, lr
 2475 0bca CDF82CE0 		str	lr, [sp, #44]
 2476              	.LVL309:
 2477              	.L170:
 843:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 2478              		.loc 1 843 0 is_stmt 1 discriminator 1
 2479 0bce 9A45     		cmp	sl, r3
 2480 0bd0 F0DA     		bge	.L174
 849:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 2481              		.loc 1 849 0
 2482 0bd2 0798     		ldr	r0, [sp, #28]
 2483 0bd4 0028     		cmp	r0, #0
 2484 0bd6 EAD1     		bne	.L172
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2485              		.loc 1 793 0
 2486 0bd8 DDF820E0 		ldr	lr, [sp, #32]
 2487 0bdc F044     		add	r8, r8, lr
 2488              	.LVL310:
 2489 0bde 1FFA88F8 		uxth	r8, r8
 2490              	.LVL311:
 2491 0be2 D9E7     		b	.L169
 2492              	.LVL312:
 2493              	.L178:
 2494 0be4 DDF810E0 		ldr	lr, [sp, #16]
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 2495              		.loc 1 861 0
 2496 0be8 0998     		ldr	r0, [sp, #36]
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2497              		.loc 1 793 0
 2498 0bea CEEB0C03 		rsb	r3, lr, ip
 2499 0bee 1FFA83FC 		uxth	ip, r3
 2500              	.LVL313:
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 2501              		.loc 1 861 0
 2502 0bf2 98B1     		cbz	r0, .L177
 861:../Source Files/lpc_ssp_glcd.c ****     				if (changed2) t2xp=signx2;//t2x += signx2;
 2503              		.loc 1 861 0 is_stmt 0 discriminator 1
 2504 0bf4 0A98     		ldr	r0, [sp, #40]
 2505 0bf6 83B2     		uxth	r3, r0
 2506              	.LVL314:
 2507 0bf8 0C93     		str	r3, [sp, #48]
 2508              	.LVL315:
 2509              	.L176:
 858:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 2510              		.loc 1 858 0 is_stmt 1 discriminator 1
 2511 0bfa DDF810E0 		ldr	lr, [sp, #16]
 2512 0bfe 0FFA8EF0 		sxth	r0, lr
 2513 0c02 8445     		cmp	ip, r0
 2514 0c04 EEDA     		bge	.L178
 864:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 2515              		.loc 1 864 0
 2516 0c06 099B     		ldr	r3, [sp, #36]
 2517 0c08 43B9     		cbnz	r3, .L177
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2518              		.loc 1 793 0
 2519 0c0a 0A98     		ldr	r0, [sp, #40]
 2520 0c0c 2418     		adds	r4, r4, r0
 2521              	.LVL316:
 2522 0c0e A4B2     		uxth	r4, r4
 2523              	.LVL317:
 2524              	.L173:
 857:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 2525              		.loc 1 857 0
 2526 0c10 0D98     		ldr	r0, [sp, #52]
 2527 0c12 0CEB0003 		add	r3, ip, r0
 2528 0c16 1FFA83FC 		uxth	ip, r3
 2529              	.LVL318:
 858:../Source Files/lpc_ssp_glcd.c ****     			while (e2 >= dx2)
 2530              		.loc 1 858 0
 2531 0c1a EEE7     		b	.L176
 2532              	.LVL319:
 2533              	.L177:
 870:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 2534              		.loc 1 870 0
 2535 0c1c DDF814E0 		ldr	lr, [sp, #20]
 2536 0c20 069B     		ldr	r3, [sp, #24]
 2537 0c22 8845     		cmp	r8, r1
 2538 0c24 38BF     		it	cc
 2539 0c26 4146     		movcc	r1, r8
 2540 0c28 9045     		cmp	r8, r2
 2541 0c2a 28BF     		it	cs
 2542 0c2c 4246     		movcs	r2, r8
 2543 0c2e 88B2     		uxth	r0, r1
 2544              	.LVL320:
 2545 0c30 92B2     		uxth	r2, r2
 2546              	.LVL321:
 2547 0c32 0FFA8EF1 		sxth	r1, lr
 2548 0c36 B3F804E0 		ldrh	lr, [r3, #4]
 2549 0c3a A042     		cmp	r0, r4
 2550 0c3c 28BF     		it	cs
 2551 0c3e 2046     		movcs	r0, r4
 2552              	.LVL322:
 2553 0c40 A242     		cmp	r2, r4
 2554 0c42 38BF     		it	cc
 2555 0c44 2246     		movcc	r2, r4
 2556              	.LVL323:
 2557 0c46 0B46     		mov	r3, r1
 2558 0c48 CDF800E0 		str	lr, [sp, #0]
 2559 0c4c 00B2     		sxth	r0, r0
 2560 0c4e 12B2     		sxth	r2, r2
 2561 0c50 CDF808C0 		str	ip, [sp, #8]
 2562 0c54 FFF7FEFF 		bl	GLCD_Line
 2563              	.LVL324:
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 2564              		.loc 1 873 0
 2565 0c58 0799     		ldr	r1, [sp, #28]
 2566 0c5a DDF808C0 		ldr	ip, [sp, #8]
 2567 0c5e 19B9     		cbnz	r1, .L179
 873:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 2568              		.loc 1 873 0 is_stmt 0 discriminator 1
 2569 0c60 0898     		ldr	r0, [sp, #32]
 2570 0c62 8044     		add	r8, r8, r0
 2571              	.LVL325:
 2572 0c64 1FFA88F8 		uxth	r8, r8
 2573              	.LVL326:
 2574              	.L179:
 874:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 2575              		.loc 1 874 0 is_stmt 1
 2576 0c68 0B9A     		ldr	r2, [sp, #44]
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2577              		.loc 1 875 0
 2578 0c6a 0999     		ldr	r1, [sp, #36]
 874:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 2579              		.loc 1 874 0
 2580 0c6c 08EB0203 		add	r3, r8, r2
 2581 0c70 1FFA83F8 		uxth	r8, r3
 2582              	.LVL327:
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2583              		.loc 1 875 0
 2584 0c74 11B9     		cbnz	r1, .L180
 875:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2585              		.loc 1 875 0 is_stmt 0 discriminator 1
 2586 0c76 0A98     		ldr	r0, [sp, #40]
 2587 0c78 2418     		adds	r4, r4, r0
 2588              	.LVL328:
 2589 0c7a A4B2     		uxth	r4, r4
 2590              	.LVL329:
 2591              	.L180:
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2592              		.loc 1 877 0 is_stmt 1
 2593 0c7c 059B     		ldr	r3, [sp, #20]
 2594              	.LVL330:
 876:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 2595              		.loc 1 876 0
 2596 0c7e 0C99     		ldr	r1, [sp, #48]
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2597              		.loc 1 877 0
 2598 0c80 581C     		adds	r0, r3, #1
 876:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 2599              		.loc 1 876 0
 2600 0c82 6218     		adds	r2, r4, r1
 2601 0c84 94B2     		uxth	r4, r2
 2602              	.LVL331:
 877:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2603              		.loc 1 877 0
 2604 0c86 82B2     		uxth	r2, r0
 2605              	.LVL332:
 2606 0c88 0592     		str	r2, [sp, #20]
 878:../Source Files/lpc_ssp_glcd.c ****     		if(y==p2->y) break;
 2607              		.loc 1 878 0
 2608 0c8a B5F90230 		ldrsh	r3, [r5, #2]
 2609 0c8e 059A     		ldr	r2, [sp, #20]
 2610 0c90 9A42     		cmp	r2, r3
 2611 0c92 7FF472AF 		bne	.L167
 2612              	.LVL333:
 2613              	.L166:
 2614              	.LBE17:
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 2615              		.loc 1 882 0
 2616 0c96 3178     		ldrb	r1, [r6, #0]	@ zero_extendqisi2
 2617 0c98 B5F800A0 		ldrh	sl, [r5, #0]
 2618 0c9c CAEB0102 		rsb	r2, sl, r1
 2619 0ca0 50B2     		sxtb	r0, r2
 2620 0ca2 01B2     		sxth	r1, r0
 2621 0ca4 0029     		cmp	r1, #0
 2622 0ca6 1FFA80F9 		uxth	r9, r0
 2623              	.LVL334:
 2624 0caa 07DA     		bge	.L210
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 2625              		.loc 1 882 0 is_stmt 0 discriminator 1
 2626 0cac C0F10009 		rsb	r9, r0, #0
 2627 0cb0 4FF6FF70 		movw	r0, #65535
 2628              	.LVL335:
 2629 0cb4 1FFA89F9 		uxth	r9, r9
 2630              	.LVL336:
 2631 0cb8 0790     		str	r0, [sp, #28]
 2632 0cba 01E0     		b	.L182
 2633              	.LVL337:
 2634              	.L210:
 882:../Source Files/lpc_ssp_glcd.c ****     	dx1 = (int8_t)(p3->x - p2->x); if(dx1<0) { dx1=-dx1; signx1=-1; } else signx1=1;
 2635              		.loc 1 882 0
 2636 0cbc 0122     		movs	r2, #1
 2637 0cbe 0792     		str	r2, [sp, #28]
 2638              	.LVL338:
 2639              	.L182:
 883:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 2640              		.loc 1 883 0 is_stmt 1
 2641 0cc0 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 2642 0cc2 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 884:../Source Files/lpc_ssp_glcd.c ****     	t1x=p2->x;
 2643              		.loc 1 884 0
 2644 0cc4 1FFA8AF8 		uxth	r8, sl
 883:../Source Files/lpc_ssp_glcd.c ****     	dy1 = (int8_t)(p3->y - p2->y);
 2645              		.loc 1 883 0
 2646 0cc8 CA1A     		subs	r2, r1, r3
 2647 0cca 50B2     		sxtb	r0, r2
 2648 0ccc 81B2     		uxth	r1, r0
 2649 0cce 0C91     		str	r1, [sp, #48]
 2650              	.LVL339:
 886:../Source Files/lpc_ssp_glcd.c ****     	if (dy1 > dx1)
 2651              		.loc 1 886 0
 2652 0cd0 02B2     		sxth	r2, r0
 2653 0cd2 0FFA89F1 		sxth	r1, r9
 2654 0cd6 8A42     		cmp	r2, r1
 2655 0cd8 0BDD     		ble	.L211
 888:../Source Files/lpc_ssp_glcd.c ****             SWAP(dy1,dx1);
 2656              		.loc 1 888 0
 2657 0cda 89EA0002 		eor	r2, r9, r0
 2658 0cde 93B2     		uxth	r3, r2
 2659              	.LVL340:
 2660 0ce0 83EA0909 		eor	r9, r3, r9
 2661              	.LVL341:
 2662 0ce4 89EA0300 		eor	r0, r9, r3
 2663 0ce8 82B2     		uxth	r2, r0
 2664              	.LVL342:
 2665 0cea 0C92     		str	r2, [sp, #48]
 2666              	.LVL343:
 889:../Source Files/lpc_ssp_glcd.c ****     		changed1 = TRUE;
 2667              		.loc 1 889 0
 2668 0cec 0122     		movs	r2, #1
 2669 0cee 0392     		str	r2, [sp, #12]
 2670 0cf0 01E0     		b	.L183
 2671              	.LVL344:
 2672              	.L211:
 890:../Source Files/lpc_ssp_glcd.c ****     	} else changed1=FALSE;
 2673              		.loc 1 890 0
 2674 0cf2 0020     		movs	r0, #0
 2675              	.LVL345:
 2676 0cf4 0390     		str	r0, [sp, #12]
 2677              	.LVL346:
 2678              	.L183:
 892:../Source Files/lpc_ssp_glcd.c ****     	e1 = (uint8_t)(dx1>>1);
 2679              		.loc 1 892 0
 2680 0cf6 C9F3470B 		ubfx	fp, r9, #1, #8
 2681              	.LVL347:
 2682              	.LBB18:
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 2683              		.loc 1 894 0
 2684 0cfa 4FF0000A 		mov	sl, #0
 2685              	.LVL348:
 2686              	.L184:
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 2687              		.loc 1 894 0 is_stmt 0 discriminator 1
 2688 0cfe 0FFA89F3 		sxth	r3, r9
 2689 0d02 9A45     		cmp	sl, r3
 2690 0d04 00F38D80 		bgt	.L200
 2691              	.L199:
 2692              	.LVL349:
 897:../Source Files/lpc_ssp_glcd.c ****     		if(t1x<t2x) { minx=t1x; maxx=t2x; }
 2693              		.loc 1 897 0 is_stmt 1
 2694 0d08 A045     		cmp	r8, r4
 2695 0d0a 39BF     		ittee	cc
 2696 0d0c 2246     		movcc	r2, r4
 2697 0d0e 4146     		movcc	r1, r8
 2698 0d10 4246     		movcs	r2, r8
 2699 0d12 2146     		movcs	r1, r4
 2700              	.LVL350:
 2701              	.L224:
 900:../Source Files/lpc_ssp_glcd.c ****     		while(i<dx1)
 2702              		.loc 1 900 0 discriminator 1
 2703 0d14 9A45     		cmp	sl, r3
 2704 0d16 12DA     		bge	.L227
 2705              	.L191:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2706              		.loc 1 793 0
 2707 0d18 DDF830E0 		ldr	lr, [sp, #48]
 2708 0d1c 0BEB0E00 		add	r0, fp, lr
 2709 0d20 1FFA80FB 		uxth	fp, r0
 2710              	.LVL351:
 903:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e1 >= dx1)
 2711              		.loc 1 903 0
 2712 0d24 9B45     		cmp	fp, r3
 2713 0d26 08DB     		blt	.L187
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 2714              		.loc 1 906 0
 2715 0d28 039B     		ldr	r3, [sp, #12]
 905:../Source Files/lpc_ssp_glcd.c ****     				e1 -= dx1;
 2716              		.loc 1 905 0
 2717 0d2a C9EB0B00 		rsb	r0, r9, fp
 2718              	.LVL352:
 2719 0d2e 1FFA80FB 		uxth	fp, r0
 2720              	.LVL353:
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 2721              		.loc 1 906 0
 2722 0d32 3BB1     		cbz	r3, .L213
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 2723              		.loc 1 906 0 is_stmt 0 discriminator 1
 2724 0d34 079B     		ldr	r3, [sp, #28]
 2725 0d36 9BB2     		uxth	r3, r3
 2726 0d38 02E0     		b	.L226
 2727              	.L187:
 2728              	.LVL354:
 909:../Source Files/lpc_ssp_glcd.c ****     			if (changed1) break;
 2729              		.loc 1 909 0 is_stmt 1
 2730 0d3a 0398     		ldr	r0, [sp, #12]
 2731 0d3c 58B1     		cbz	r0, .L189
 2732              	.LVL355:
 2733              	.L227:
 2734 0d3e 0023     		movs	r3, #0
 2735              	.L226:
 2736 0d40 0893     		str	r3, [sp, #32]
 2737 0d42 01E0     		b	.L188
 2738              	.LVL356:
 2739              	.L213:
 906:../Source Files/lpc_ssp_glcd.c ****        	   	   	   	if (changed1) { t1xp=signx1; break; }//t1x += signx1;
 2740              		.loc 1 906 0
 2741 0d44 0398     		ldr	r0, [sp, #12]
 2742              	.LVL357:
 2743 0d46 0890     		str	r0, [sp, #32]
 2744              	.LVL358:
 2745              	.L188:
 915:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 2746              		.loc 1 915 0 discriminator 1
 2747 0d48 4FF0000E 		mov	lr, #0
 2748 0d4c B6F90030 		ldrsh	r3, [r6, #0]
 2749 0d50 CDF82CE0 		str	lr, [sp, #44]
 2750 0d54 22E0     		b	.L190
 2751              	.LVL359:
 2752              	.L189:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2753              		.loc 1 793 0
 2754 0d56 0798     		ldr	r0, [sp, #28]
 911:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 2755              		.loc 1 911 0
 2756 0d58 0AF1010A 		add	sl, sl, #1
 2757              	.LVL360:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2758              		.loc 1 793 0
 2759 0d5c 8044     		add	r8, r8, r0
 2760              	.LVL361:
 2761 0d5e 1FFA88F8 		uxth	r8, r8
 2762              	.LVL362:
 911:../Source Files/lpc_ssp_glcd.c ****     			if(i<dx1) i++;
 2763              		.loc 1 911 0
 2764 0d62 5FFA8AFA 		uxtb	sl, sl
 2765              	.LVL363:
 2766 0d66 D5E7     		b	.L224
 2767              	.LVL364:
 2768              	.L194:
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2769              		.loc 1 793 0
 2770 0d68 DDF810E0 		ldr	lr, [sp, #16]
 2771 0d6c CEEB0C00 		rsb	r0, lr, ip
 2772 0d70 1FFA80FC 		uxth	ip, r0
 2773              	.LVL365:
 921:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 2774              		.loc 1 921 0
 2775 0d74 0998     		ldr	r0, [sp, #36]
 2776              	.LVL366:
 2777 0d76 D0B1     		cbz	r0, .L193
 921:../Source Files/lpc_ssp_glcd.c ****     				if(changed2) t2xp=signx2;
 2778              		.loc 1 921 0 is_stmt 0 discriminator 1
 2779 0d78 DDF828E0 		ldr	lr, [sp, #40]
 2780 0d7c 1FFA8EFE 		uxth	lr, lr
 2781 0d80 CDF82CE0 		str	lr, [sp, #44]
 2782              	.LVL367:
 2783              	.L192:
 918:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 2784              		.loc 1 918 0 is_stmt 1 discriminator 1
 2785 0d84 DDF810E0 		ldr	lr, [sp, #16]
 2786 0d88 0FFA8EF0 		sxth	r0, lr
 2787 0d8c 8445     		cmp	ip, r0
 2788 0d8e EBDA     		bge	.L194
 924:../Source Files/lpc_ssp_glcd.c ****     			if (changed2)     break;
 2789              		.loc 1 924 0
 2790 0d90 0998     		ldr	r0, [sp, #36]
 2791 0d92 60B9     		cbnz	r0, .L193
 793:../Source Files/lpc_ssp_glcd.c **** void GLCD_Triangle(COORDINATE_Type *p1, COORDINATE_Type *p2, COORDINATE_Type *p3,COLORCFG_Type *cfg
 2792              		.loc 1 793 0
 2793 0d94 DDF828E0 		ldr	lr, [sp, #40]
 2794 0d98 7444     		add	r4, r4, lr
 2795              	.LVL368:
 2796 0d9a A4B2     		uxth	r4, r4
 2797              	.LVL369:
 2798              	.L190:
 915:../Source Files/lpc_ssp_glcd.c ****     		while (t2x!=p3->x)
 2799              		.loc 1 915 0 discriminator 1
 2800 0d9c 9C42     		cmp	r4, r3
 2801 0d9e 06D0     		beq	.L193
 2802              	.L195:
 917:../Source Files/lpc_ssp_glcd.c ****     			e2 += dy2;
 2803              		.loc 1 917 0
 2804 0da0 DDF834E0 		ldr	lr, [sp, #52]
 2805 0da4 0CEB0E00 		add	r0, ip, lr
 2806 0da8 1FFA80FC 		uxth	ip, r0
 2807              	.LVL370:
 918:../Source Files/lpc_ssp_glcd.c ****     	   	   	while (e2 >= dx2)
 2808              		.loc 1 918 0
 2809 0dac EAE7     		b	.L192
 2810              	.LVL371:
 2811              	.L193:
 931:../Source Files/lpc_ssp_glcd.c ****     		GLCD_Line(minx,y,maxx,y,cfg->fill_color);    // Draw line from min to max points found on the
 2812              		.loc 1 931 0
 2813 0dae 059B     		ldr	r3, [sp, #20]
 2814 0db0 8845     		cmp	r8, r1
 2815 0db2 38BF     		it	cc
 2816 0db4 4146     		movcc	r1, r8
 2817 0db6 88B2     		uxth	r0, r1
 2818              	.LVL372:
 2819 0db8 19B2     		sxth	r1, r3
 2820 0dba 069B     		ldr	r3, [sp, #24]
 2821 0dbc 9045     		cmp	r8, r2
 2822 0dbe 28BF     		it	cs
 2823 0dc0 4246     		movcs	r2, r8
 2824 0dc2 B3F804E0 		ldrh	lr, [r3, #4]
 2825 0dc6 92B2     		uxth	r2, r2
 2826              	.LVL373:
 2827 0dc8 A042     		cmp	r0, r4
 2828 0dca 28BF     		it	cs
 2829 0dcc 2046     		movcs	r0, r4
 2830              	.LVL374:
 2831 0dce A242     		cmp	r2, r4
 2832 0dd0 38BF     		it	cc
 2833 0dd2 2246     		movcc	r2, r4
 2834              	.LVL375:
 2835 0dd4 0B46     		mov	r3, r1
 2836 0dd6 CDF800E0 		str	lr, [sp, #0]
 2837 0dda 00B2     		sxth	r0, r0
 2838 0ddc 12B2     		sxth	r2, r2
 2839 0dde CDF808C0 		str	ip, [sp, #8]
 2840 0de2 FFF7FEFF 		bl	GLCD_Line
 2841              	.LVL376:
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 2842              		.loc 1 933 0
 2843 0de6 0399     		ldr	r1, [sp, #12]
 2844 0de8 DDF808C0 		ldr	ip, [sp, #8]
 2845 0dec 19B9     		cbnz	r1, .L196
 933:../Source Files/lpc_ssp_glcd.c ****     		if(!changed1) t1x += signx1;
 2846              		.loc 1 933 0 is_stmt 0 discriminator 1
 2847 0dee 0798     		ldr	r0, [sp, #28]
 2848 0df0 8044     		add	r8, r8, r0
 2849              	.LVL377:
 2850 0df2 1FFA88F8 		uxth	r8, r8
 2851              	.LVL378:
 2852              	.L196:
 934:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 2853              		.loc 1 934 0 is_stmt 1
 2854 0df6 089A     		ldr	r2, [sp, #32]
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2855              		.loc 1 935 0
 2856 0df8 0999     		ldr	r1, [sp, #36]
 934:../Source Files/lpc_ssp_glcd.c ****     		t1x+=t1xp;
 2857              		.loc 1 934 0
 2858 0dfa 08EB0203 		add	r3, r8, r2
 2859 0dfe 1FFA83F8 		uxth	r8, r3
 2860              	.LVL379:
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2861              		.loc 1 935 0
 2862 0e02 11B9     		cbnz	r1, .L197
 935:../Source Files/lpc_ssp_glcd.c ****     		if(!changed2) t2x += signx2;
 2863              		.loc 1 935 0 is_stmt 0 discriminator 1
 2864 0e04 0A98     		ldr	r0, [sp, #40]
 2865 0e06 2418     		adds	r4, r4, r0
 2866              	.LVL380:
 2867 0e08 A4B2     		uxth	r4, r4
 2868              	.LVL381:
 2869              	.L197:
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2870              		.loc 1 937 0 is_stmt 1
 2871 0e0a 059B     		ldr	r3, [sp, #20]
 2872              	.LVL382:
 936:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 2873              		.loc 1 936 0
 2874 0e0c 0B99     		ldr	r1, [sp, #44]
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2875              		.loc 1 937 0
 2876 0e0e 581C     		adds	r0, r3, #1
 936:../Source Files/lpc_ssp_glcd.c ****     		t2x+=t2xp;
 2877              		.loc 1 936 0
 2878 0e10 6218     		adds	r2, r4, r1
 2879 0e12 94B2     		uxth	r4, r2
 2880              	.LVL383:
 937:../Source Files/lpc_ssp_glcd.c ****         	y += 1;
 2881              		.loc 1 937 0
 2882 0e14 82B2     		uxth	r2, r0
 2883              	.LVL384:
 2884 0e16 0592     		str	r2, [sp, #20]
 938:../Source Files/lpc_ssp_glcd.c ****     		if(y>p3->y) break;
 2885              		.loc 1 938 0
 2886 0e18 B6F90230 		ldrsh	r3, [r6, #2]
 2887 0e1c 059A     		ldr	r2, [sp, #20]
 2888 0e1e 9A42     		cmp	r2, r3
 2889 0e20 03DD     		ble	.L198
 2890              	.LVL385:
 2891              	.L200:
 2892              	.LBE18:
 940:../Source Files/lpc_ssp_glcd.c ****     	cfg->fill = NO;
 2893              		.loc 1 940 0
 2894 0e22 069C     		ldr	r4, [sp, #24]
 2895 0e24 0021     		movs	r1, #0
 2896 0e26 2170     		strb	r1, [r4, #0]
 2897 0e28 04E0     		b	.L158
 2898              	.LVL386:
 2899              	.L198:
 2900              	.LBB19:
 894:../Source Files/lpc_ssp_glcd.c ****     	for (uint8_t i = 0; i<=dx1; i++)
 2901              		.loc 1 894 0
 2902 0e2a 0AF1010A 		add	sl, sl, #1
 2903              	.LVL387:
 2904 0e2e 5FFA8AFA 		uxtb	sl, sl
 2905              	.LVL388:
 2906 0e32 64E7     		b	.L184
 2907              	.LVL389:
 2908              	.L158:
 2909              	.LBE19:
 2910              	.LBE16:
 944:../Source Files/lpc_ssp_glcd.c **** 	if(!cfg->fill && cfg->bndry)
 2911              		.loc 1 944 0
 2912 0e34 069C     		ldr	r4, [sp, #24]
 2913 0e36 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 2914 0e38 40BB     		cbnz	r0, .L157
 944:../Source Files/lpc_ssp_glcd.c **** 	if(!cfg->fill && cfg->bndry)
 2915              		.loc 1 944 0 is_stmt 0 discriminator 1
 2916 0e3a 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 2917 0e3c 33B3     		cbz	r3, .L157
 946:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p2->y, cfg->bcolor);
 2918              		.loc 1 946 0 is_stmt 1
 2919 0e3e B4F802E0 		ldrh	lr, [r4, #2]
 2920 0e42 B7F90000 		ldrsh	r0, [r7, #0]
 2921 0e46 B7F90210 		ldrsh	r1, [r7, #2]
 2922 0e4a B5F90020 		ldrsh	r2, [r5, #0]
 2923 0e4e B5F90230 		ldrsh	r3, [r5, #2]
 2924 0e52 CDF800E0 		str	lr, [sp, #0]
 2925 0e56 FFF7FEFF 		bl	GLCD_Line
 2926              	.LVL390:
 947:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p3->x, p3->y, cfg->bcolor);
 2927              		.loc 1 947 0
 2928 0e5a B7F90000 		ldrsh	r0, [r7, #0]
 2929 0e5e B7F90210 		ldrsh	r1, [r7, #2]
 2930 0e62 069F     		ldr	r7, [sp, #24]
 2931              	.LVL391:
 2932 0e64 B6F90020 		ldrsh	r2, [r6, #0]
 2933 0e68 7C88     		ldrh	r4, [r7, #2]
 2934 0e6a B6F90230 		ldrsh	r3, [r6, #2]
 2935 0e6e 0094     		str	r4, [sp, #0]
 2936 0e70 FFF7FEFF 		bl	GLCD_Line
 2937              	.LVL392:
 948:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p2->y, p3->x, p3->y, cfg->bcolor);
 2938              		.loc 1 948 0
 2939 0e74 7C88     		ldrh	r4, [r7, #2]
 2940 0e76 B5F90000 		ldrsh	r0, [r5, #0]
 2941 0e7a B5F90210 		ldrsh	r1, [r5, #2]
 2942 0e7e B6F90020 		ldrsh	r2, [r6, #0]
 2943 0e82 B6F90230 		ldrsh	r3, [r6, #2]
 2944 0e86 0094     		str	r4, [sp, #0]
 2945 0e88 FFF7FEFF 		bl	GLCD_Line
 2946              	.LVL393:
 2947              	.L157:
 950:../Source Files/lpc_ssp_glcd.c **** }
 2948              		.loc 1 950 0
 2949 0e8c 0FB0     		add	sp, sp, #60
 2950 0e8e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2951              		.cfi_endproc
 2952              	.LFE79:
 2954              		.align	1
 2955              		.global	Show_BarGraph
 2956              		.thumb
 2957              		.thumb_func
 2959              	Show_BarGraph:
 2960              	.LFB85:
1350:../Source Files/lpc_ssp_glcd.c **** {
 2961              		.loc 1 1350 0
 2962              		.cfi_startproc
 2963              		@ args = 0, pretend = 0, frame = 24
 2964              		@ frame_needed = 0, uses_anonymous_args = 0
 2965 0e92 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2966              	.LCFI21:
 2967              		.cfi_def_cfa_offset 36
 2968              		.cfi_offset 4, -36
 2969              		.cfi_offset 5, -32
 2970              		.cfi_offset 6, -28
 2971              		.cfi_offset 7, -24
 2972              		.cfi_offset 8, -20
 2973              		.cfi_offset 9, -16
 2974              		.cfi_offset 10, -12
 2975              		.cfi_offset 11, -8
 2976              		.cfi_offset 14, -4
1356:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(30,5,30,238,Black);
 2977              		.loc 1 1356 0
 2978 0e96 1E20     		movs	r0, #30
1350:../Source Files/lpc_ssp_glcd.c **** {
 2979              		.loc 1 1350 0
 2980 0e98 89B0     		sub	sp, sp, #36
 2981              	.LCFI22:
 2982              		.cfi_def_cfa_offset 72
1356:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(30,5,30,238,Black);
 2983              		.loc 1 1356 0
 2984 0e9a 0024     		movs	r4, #0
 2985 0e9c 0246     		mov	r2, r0
 2986 0e9e 0094     		str	r4, [sp, #0]
 2987 0ea0 0521     		movs	r1, #5
 2988 0ea2 EE23     		movs	r3, #238
 2989 0ea4 FFF7FEFF 		bl	GLCD_Line
 2990              	.LVL394:
1357:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Line(1,220,315,220,Black);
 2991              		.loc 1 1357 0
 2992 0ea8 40F23B1B 		movw	fp, #315
 2993 0eac DC21     		movs	r1, #220
 2994 0eae 0B46     		mov	r3, r1
 2995 0eb0 0094     		str	r4, [sp, #0]
 2996 0eb2 0120     		movs	r0, #1
 2997 0eb4 5A46     		mov	r2, fp
 2998 0eb6 FFF7FEFF 		bl	GLCD_Line
 2999              	.LVL395:
1359:../Source Files/lpc_ssp_glcd.c **** 	gprintf(22,5,1,Black,"Y");
 3000              		.loc 1 1359 0
 3001 0eba 614B     		ldr	r3, .L236
 3002 0ebc 0521     		movs	r1, #5
 3003 0ebe 0093     		str	r3, [sp, #0]
 3004 0ec0 0122     		movs	r2, #1
 3005 0ec2 2346     		mov	r3, r4
 3006 0ec4 1620     		movs	r0, #22
 3007 0ec6 FFF7FEFF 		bl	gprintf
 3008              	.LVL396:
1360:../Source Files/lpc_ssp_glcd.c **** 	gprintf(310,225,1,Black,"X");
 3009              		.loc 1 1360 0
 3010 0eca 5E48     		ldr	r0, .L236+4
 3011 0ecc 2346     		mov	r3, r4
 3012 0ece 0090     		str	r0, [sp, #0]
 3013 0ed0 E121     		movs	r1, #225
 3014 0ed2 0122     		movs	r2, #1
 3015 0ed4 4FF49B70 		mov	r0, #310
 3016 0ed8 FFF7FEFF 		bl	gprintf
 3017              	.LVL397:
1361:../Source Files/lpc_ssp_glcd.c **** 	gprintf(50,5,1,Black,"X=ADC-CH  Y=VAL  Y-MAX=4095  Y-UNIT=40.95");
 3018              		.loc 1 1361 0
 3019 0edc 5A49     		ldr	r1, .L236+8
 3020 0ede 2346     		mov	r3, r4
 3021 0ee0 0091     		str	r1, [sp, #0]
 3022 0ee2 0122     		movs	r2, #1
 3023 0ee4 0521     		movs	r1, #5
 3024 0ee6 3220     		movs	r0, #50
 3025 0ee8 FFF7FEFF 		bl	gprintf
 3026              	.LVL398:
1366:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 5;
 3027              		.loc 1 1366 0
 3028 0eec 0522     		movs	r2, #5
1371:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 3029              		.loc 1 1371 0
 3030 0eee 0125     		movs	r5, #1
1365:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
 3031              		.loc 1 1365 0
 3032 0ef0 4FF01E0A 		mov	sl, #30
1367:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
 3033              		.loc 1 1367 0
 3034 0ef4 4FF01C09 		mov	r9, #28
1368:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 10;
 3035              		.loc 1 1368 0
 3036 0ef8 0A27     		movs	r7, #10
1369:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
 3037              		.loc 1 1369 0
 3038 0efa 4FF02008 		mov	r8, #32
1366:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 5;
 3039              		.loc 1 1366 0
 3040 0efe ADF80E20 		strh	r2, [sp, #14]	@ movhi
1374:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3041              		.loc 1 1374 0
 3042 0f02 03A8     		add	r0, sp, #12
 3043 0f04 04A9     		add	r1, sp, #16
 3044 0f06 05AA     		add	r2, sp, #20
 3045 0f08 06AB     		add	r3, sp, #24
1365:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
 3046              		.loc 1 1365 0
 3047 0f0a ADF80CA0 		strh	sl, [sp, #12]	@ movhi
1367:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
 3048              		.loc 1 1367 0
 3049 0f0e ADF81090 		strh	r9, [sp, #16]	@ movhi
1369:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
 3050              		.loc 1 1369 0
 3051 0f12 ADF81480 		strh	r8, [sp, #20]	@ movhi
1371:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 3052              		.loc 1 1371 0
 3053 0f16 8DF81850 		strb	r5, [sp, #24]
1372:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 3054              		.loc 1 1372 0
 3055 0f1a 8DF81940 		strb	r4, [sp, #25]
1373:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 3056              		.loc 1 1373 0
 3057 0f1e ADF81C40 		strh	r4, [sp, #28]	@ movhi
1368:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 10;
 3058              		.loc 1 1368 0
 3059 0f22 ADF81270 		strh	r7, [sp, #18]	@ movhi
1370:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 10;
 3060              		.loc 1 1370 0
 3061 0f26 ADF81670 		strh	r7, [sp, #22]	@ movhi
1374:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3062              		.loc 1 1374 0
 3063 0f2a FFF7FEFF 		bl	GLCD_Triangle
 3064              	.LVL399:
1380:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 233;
 3065              		.loc 1 1380 0
 3066 0f2e E920     		movs	r0, #233
1378:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 238;
 3067              		.loc 1 1378 0
 3068 0f30 EE23     		movs	r3, #238
 3069 0f32 ADF80E30 		strh	r3, [sp, #14]	@ movhi
1380:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 233;
 3070              		.loc 1 1380 0
 3071 0f36 ADF81200 		strh	r0, [sp, #18]	@ movhi
1382:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 233;
 3072              		.loc 1 1382 0
 3073 0f3a ADF81600 		strh	r0, [sp, #22]	@ movhi
1386:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3074              		.loc 1 1386 0
 3075 0f3e 04A9     		add	r1, sp, #16
 3076 0f40 03A8     		add	r0, sp, #12
 3077 0f42 05AA     		add	r2, sp, #20
 3078 0f44 06AB     		add	r3, sp, #24
1377:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 30;
 3079              		.loc 1 1377 0
 3080 0f46 ADF80CA0 		strh	sl, [sp, #12]	@ movhi
1379:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 28;
 3081              		.loc 1 1379 0
 3082 0f4a ADF81090 		strh	r9, [sp, #16]	@ movhi
1381:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 32;
 3083              		.loc 1 1381 0
 3084 0f4e ADF81480 		strh	r8, [sp, #20]	@ movhi
1383:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 3085              		.loc 1 1383 0
 3086 0f52 8DF81850 		strb	r5, [sp, #24]
1384:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 3087              		.loc 1 1384 0
 3088 0f56 8DF81940 		strb	r4, [sp, #25]
1385:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 3089              		.loc 1 1385 0
 3090 0f5a ADF81C40 		strh	r4, [sp, #28]	@ movhi
1386:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3091              		.loc 1 1386 0
 3092 0f5e FFF7FEFF 		bl	GLCD_Triangle
 3093              	.LVL400:
1392:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 6;
 3094              		.loc 1 1392 0
 3095 0f62 0621     		movs	r1, #6
1391:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
 3096              		.loc 1 1391 0
 3097 0f64 4FF0DC0A 		mov	sl, #220
1392:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 6;
 3098              		.loc 1 1392 0
 3099 0f68 ADF81010 		strh	r1, [sp, #16]	@ movhi
1393:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
 3100              		.loc 1 1393 0
 3101 0f6c 4FF0DA09 		mov	r9, #218
1394:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 6;
 3102              		.loc 1 1394 0
 3103 0f70 ADF81410 		strh	r1, [sp, #20]	@ movhi
1395:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
 3104              		.loc 1 1395 0
 3105 0f74 4FF0DE08 		mov	r8, #222
1399:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3106              		.loc 1 1399 0
 3107 0f78 03A8     		add	r0, sp, #12
 3108 0f7a 04A9     		add	r1, sp, #16
 3109 0f7c 05AA     		add	r2, sp, #20
 3110 0f7e 06AB     		add	r3, sp, #24
1390:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 1;
 3111              		.loc 1 1390 0
 3112 0f80 ADF80C50 		strh	r5, [sp, #12]	@ movhi
1396:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 3113              		.loc 1 1396 0
 3114 0f84 8DF81850 		strb	r5, [sp, #24]
1397:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 3115              		.loc 1 1397 0
 3116 0f88 8DF81940 		strb	r4, [sp, #25]
1398:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 3117              		.loc 1 1398 0
 3118 0f8c ADF81C40 		strh	r4, [sp, #28]	@ movhi
1391:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
 3119              		.loc 1 1391 0
 3120 0f90 ADF80EA0 		strh	sl, [sp, #14]	@ movhi
1393:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
 3121              		.loc 1 1393 0
 3122 0f94 ADF81290 		strh	r9, [sp, #18]	@ movhi
1395:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
 3123              		.loc 1 1395 0
 3124 0f98 ADF81680 		strh	r8, [sp, #22]	@ movhi
1399:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3125              		.loc 1 1399 0
 3126 0f9c FFF7FEFF 		bl	GLCD_Triangle
 3127              	.LVL401:
1404:../Source Files/lpc_ssp_glcd.c **** 	point2.x = 310;
 3128              		.loc 1 1404 0
 3129 0fa0 4FF49B72 		mov	r2, #310
 3130 0fa4 ADF81020 		strh	r2, [sp, #16]	@ movhi
1406:../Source Files/lpc_ssp_glcd.c **** 	point3.x = 310;
 3131              		.loc 1 1406 0
 3132 0fa8 ADF81420 		strh	r2, [sp, #20]	@ movhi
1411:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3133              		.loc 1 1411 0
 3134 0fac 03A8     		add	r0, sp, #12
 3135 0fae 04A9     		add	r1, sp, #16
 3136 0fb0 05AA     		add	r2, sp, #20
 3137 0fb2 06AB     		add	r3, sp, #24
1408:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill = YES;
 3138              		.loc 1 1408 0
 3139 0fb4 8DF81850 		strb	r5, [sp, #24]
1409:../Source Files/lpc_ssp_glcd.c **** 	tricfg.bndry= NO;
 3140              		.loc 1 1409 0
 3141 0fb8 8DF81940 		strb	r4, [sp, #25]
1410:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 3142              		.loc 1 1410 0
 3143 0fbc ADF81C40 		strh	r4, [sp, #28]	@ movhi
1402:../Source Files/lpc_ssp_glcd.c **** 	point1.x = 315;
 3144              		.loc 1 1402 0
 3145 0fc0 ADF80CB0 		strh	fp, [sp, #12]	@ movhi
1403:../Source Files/lpc_ssp_glcd.c **** 	point1.y = 220;
 3146              		.loc 1 1403 0
 3147 0fc4 ADF80EA0 		strh	sl, [sp, #14]	@ movhi
1405:../Source Files/lpc_ssp_glcd.c **** 	point2.y = 218;
 3148              		.loc 1 1405 0
 3149 0fc8 ADF81290 		strh	r9, [sp, #18]	@ movhi
1407:../Source Files/lpc_ssp_glcd.c **** 	point3.y = 222;
 3150              		.loc 1 1407 0
 3151 0fcc ADF81680 		strh	r8, [sp, #22]	@ movhi
1411:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Triangle(&point1,&point2,&point3,&tricfg);
 3152              		.loc 1 1411 0
 3153 0fd0 FFF7FEFF 		bl	GLCD_Triangle
 3154              	.LVL402:
1414:../Source Files/lpc_ssp_glcd.c **** 	gprintf(0,225,1,Black,"(0,0)");
 3155              		.loc 1 1414 0
 3156 0fd4 1D4B     		ldr	r3, .L236+12
 3157 0fd6 2046     		mov	r0, r4
 3158 0fd8 0093     		str	r3, [sp, #0]
 3159 0fda 2A46     		mov	r2, r5
 3160 0fdc 2346     		mov	r3, r4
 3161 0fde E121     		movs	r1, #225
 3162 0fe0 FFF7FEFF 		bl	gprintf
 3163              	.LVL403:
1373:../Source Files/lpc_ssp_glcd.c **** 	tricfg.fill_color=Black;
 3164              		.loc 1 1373 0
 3165 0fe4 2646     		mov	r6, r4	@ movhi
1414:../Source Files/lpc_ssp_glcd.c **** 	gprintf(0,225,1,Black,"(0,0)");
 3166              		.loc 1 1414 0
 3167 0fe6 3D46     		mov	r5, r7
1415:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=1; y_scale>=20; y_scale=y_scale-20,i++)
 3168              		.loc 1 1415 0
 3169 0fe8 C824     		movs	r4, #200
 3170              	.LVL404:
 3171              	.L231:
1417:../Source Files/lpc_ssp_glcd.c **** 		if(y_scale!=20)
 3172              		.loc 1 1417 0
 3173 0fea 142C     		cmp	r4, #20
 3174 0fec 05D0     		beq	.L229
1419:../Source Files/lpc_ssp_glcd.c **** 			gprintf(14,y_scale,1,Black,"%d02",i*10);
 3175              		.loc 1 1419 0
 3176 0fee 184B     		ldr	r3, .L236+16
 3177 0ff0 0E20     		movs	r0, #14
 3178 0ff2 8DE82800 		stmia	sp, {r3, r5}
 3179 0ff6 21B2     		sxth	r1, r4
 3180 0ff8 04E0     		b	.L235
 3181              	.L229:
1423:../Source Files/lpc_ssp_glcd.c **** 			gprintf(10,y_scale,1,Black,"%d03",i*10);
 3182              		.loc 1 1423 0
 3183 0ffa 164B     		ldr	r3, .L236+20
 3184 0ffc 0A20     		movs	r0, #10
 3185 0ffe 8DE82800 		stmia	sp, {r3, r5}
 3186 1002 2146     		mov	r1, r4
 3187              	.L235:
1415:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=1; y_scale>=20; y_scale=y_scale-20,i++)
 3188              		.loc 1 1415 0
 3189 1004 143C     		subs	r4, r4, #20
1423:../Source Files/lpc_ssp_glcd.c **** 			gprintf(10,y_scale,1,Black,"%d03",i*10);
 3190              		.loc 1 1423 0
 3191 1006 0122     		movs	r2, #1
 3192 1008 0023     		movs	r3, #0
1415:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=1; y_scale>=20; y_scale=y_scale-20,i++)
 3193              		.loc 1 1415 0
 3194 100a A4B2     		uxth	r4, r4
1423:../Source Files/lpc_ssp_glcd.c **** 			gprintf(10,y_scale,1,Black,"%d03",i*10);
 3195              		.loc 1 1423 0
 3196 100c FFF7FEFF 		bl	gprintf
 3197              	.LVL405:
 3198 1010 0A35     		adds	r5, r5, #10
1415:../Source Files/lpc_ssp_glcd.c **** 	for(y_scale=200,i=1; y_scale>=20; y_scale=y_scale-20,i++)
 3199              		.loc 1 1415 0
 3200 1012 002C     		cmp	r4, #0
 3201 1014 E9D1     		bne	.L231
 3202 1016 0125     		movs	r5, #1
 3203 1018 3824     		movs	r4, #56
 3204              	.LVL406:
 3205              	.L232:
1429:../Source Files/lpc_ssp_glcd.c **** 		gprintf(x_scale,225,1,Black,"%d02",i);
 3206              		.loc 1 1429 0 discriminator 2
 3207 101a 0D4B     		ldr	r3, .L236+16
 3208 101c 20B2     		sxth	r0, r4
1427:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=1; x_scale<=300; x_scale=x_scale+26,i++)
 3209              		.loc 1 1427 0 discriminator 2
 3210 101e 1A34     		adds	r4, r4, #26
1429:../Source Files/lpc_ssp_glcd.c **** 		gprintf(x_scale,225,1,Black,"%d02",i);
 3211              		.loc 1 1429 0 discriminator 2
 3212 1020 8DE82800 		stmia	sp, {r3, r5}
 3213 1024 E121     		movs	r1, #225
 3214 1026 0122     		movs	r2, #1
 3215 1028 0023     		movs	r3, #0
1427:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=1; x_scale<=300; x_scale=x_scale+26,i++)
 3216              		.loc 1 1427 0 discriminator 2
 3217 102a A4B2     		uxth	r4, r4
1429:../Source Files/lpc_ssp_glcd.c **** 		gprintf(x_scale,225,1,Black,"%d02",i);
 3218              		.loc 1 1429 0 discriminator 2
 3219 102c FFF7FEFF 		bl	gprintf
 3220              	.LVL407:
 3221 1030 0135     		adds	r5, r5, #1
1427:../Source Files/lpc_ssp_glcd.c **** 	for(x_scale=56,i=1; x_scale<=300; x_scale=x_scale+26,i++)
 3222              		.loc 1 1427 0 discriminator 2
 3223 1032 B4F59E7F 		cmp	r4, #316
 3224 1036 F0D1     		bne	.L232
1431:../Source Files/lpc_ssp_glcd.c **** }
 3225              		.loc 1 1431 0
 3226 1038 09B0     		add	sp, sp, #36
 3227 103a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 3228              	.L237:
 3229 103e 00BF     		.align	2
 3230              	.L236:
 3231 1040 11000000 		.word	.LC1
 3232 1044 13000000 		.word	.LC2
 3233 1048 15000000 		.word	.LC3
 3234 104c 3F000000 		.word	.LC4
 3235 1050 45000000 		.word	.LC5
 3236 1054 4A000000 		.word	.LC6
 3237              		.cfi_endproc
 3238              	.LFE85:
 3240              		.align	1
 3241              		.global	GLCD_Frame
 3242              		.thumb
 3243              		.thumb_func
 3245              	GLCD_Frame:
 3246              	.LFB78:
 748:../Source Files/lpc_ssp_glcd.c **** {
 3247              		.loc 1 748 0
 3248              		.cfi_startproc
 3249              		@ args = 4, pretend = 0, frame = 0
 3250              		@ frame_needed = 0, uses_anonymous_args = 0
 3251              	.LVL408:
 3252 1058 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 3253              	.LCFI23:
 3254              		.cfi_def_cfa_offset 40
 3255              		.cfi_offset 0, -40
 3256              		.cfi_offset 1, -36
 3257              		.cfi_offset 2, -32
 3258              		.cfi_offset 4, -28
 3259              		.cfi_offset 5, -24
 3260              		.cfi_offset 6, -20
 3261              		.cfi_offset 7, -16
 3262              		.cfi_offset 8, -12
 3263              		.cfi_offset 9, -8
 3264              		.cfi_offset 14, -4
 748:../Source Files/lpc_ssp_glcd.c **** {
 3265              		.loc 1 748 0
 3266 105c BDF82880 		ldrh	r8, [sp, #40]
 3267 1060 0546     		mov	r5, r0
 3268 1062 0C46     		mov	r4, r1
 3269 1064 9146     		mov	r9, r2
 3270 1066 1F46     		mov	r7, r3
 3271 1068 96B2     		uxth	r6, r2
 3272              	.LVL409:
 3273              	.L239:
 753:../Source Files/lpc_ssp_glcd.c **** 	while(fw)
 3274              		.loc 1 753 0 discriminator 1
 3275 106a 002E     		cmp	r6, #0
 3276 106c 58D0     		beq	.L244
 3277              	.L242:
 3278 106e 6988     		ldrh	r1, [r5, #2]
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 3279              		.loc 1 755 0
 3280 1070 33B2     		sxth	r3, r6
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 3281              		.loc 1 757 0
 3282 1072 7218     		adds	r2, r6, r1
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 3283              		.loc 1 755 0
 3284 1074 4B45     		cmp	r3, r9
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 3285              		.loc 1 757 0
 3286 1076 11B2     		sxth	r1, r2
 3287 1078 B5F90000 		ldrsh	r0, [r5, #0]
 3288 107c B4F90020 		ldrsh	r2, [r4, #0]
 755:../Source Files/lpc_ssp_glcd.c **** 		if(fw < frame_width)
 3289              		.loc 1 755 0
 3290 1080 26DA     		bge	.L240
 757:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, fill_color);      // Draw the interior 4 sides
 3291              		.loc 1 757 0
 3292 1082 0B46     		mov	r3, r1
 3293 1084 CDF80080 		str	r8, [sp, #0]
 3294 1088 FFF7FEFF 		bl	GLCD_Line
 3295              	.LVL410:
 758:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, fill_color);
 3296              		.loc 1 758 0
 3297 108c 6188     		ldrh	r1, [r4, #2]
 3298 108e B5F90000 		ldrsh	r0, [r5, #0]
 3299 1092 8A1B     		subs	r2, r1, r6
 3300 1094 11B2     		sxth	r1, r2
 3301 1096 0B46     		mov	r3, r1
 3302 1098 B4F90020 		ldrsh	r2, [r4, #0]
 3303 109c CDF80080 		str	r8, [sp, #0]
 3304 10a0 FFF7FEFF 		bl	GLCD_Line
 3305              	.LVL411:
 759:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, fill_color);
 3306              		.loc 1 759 0
 3307 10a4 2888     		ldrh	r0, [r5, #0]
 3308 10a6 B5F90210 		ldrsh	r1, [r5, #2]
 3309 10aa 3318     		adds	r3, r6, r0
 3310 10ac 18B2     		sxth	r0, r3
 3311 10ae 0246     		mov	r2, r0
 3312 10b0 B4F90230 		ldrsh	r3, [r4, #2]
 3313 10b4 CDF80080 		str	r8, [sp, #0]
 3314 10b8 FFF7FEFF 		bl	GLCD_Line
 3315              	.LVL412:
 760:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, fill_color);
 3316              		.loc 1 760 0
 3317 10bc 2188     		ldrh	r1, [r4, #0]
 3318 10be B4F90230 		ldrsh	r3, [r4, #2]
 3319 10c2 8A1B     		subs	r2, r1, r6
 3320 10c4 10B2     		sxth	r0, r2
 3321 10c6 B5F90210 		ldrsh	r1, [r5, #2]
 3322 10ca CDF80080 		str	r8, [sp, #0]
 3323 10ce 21E0     		b	.L243
 3324              	.L240:
 765:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p1->y+fw, p2->x, p1->y+fw, color);      // inner border 4 sides
 3325              		.loc 1 765 0
 3326 10d0 0B46     		mov	r3, r1
 3327 10d2 0097     		str	r7, [sp, #0]
 3328 10d4 FFF7FEFF 		bl	GLCD_Line
 3329              	.LVL413:
 766:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x, p2->y-fw, p2->x, p2->y-fw, color);
 3330              		.loc 1 766 0
 3331 10d8 6088     		ldrh	r0, [r4, #2]
 3332 10da B4F90020 		ldrsh	r2, [r4, #0]
 3333 10de 831B     		subs	r3, r0, r6
 3334 10e0 19B2     		sxth	r1, r3
 3335 10e2 0B46     		mov	r3, r1
 3336 10e4 B5F90000 		ldrsh	r0, [r5, #0]
 3337 10e8 0097     		str	r7, [sp, #0]
 3338 10ea FFF7FEFF 		bl	GLCD_Line
 3339              	.LVL414:
 767:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p1->x+fw, p1->y, p1->x+fw, p2->y, color);
 3340              		.loc 1 767 0
 3341 10ee 2988     		ldrh	r1, [r5, #0]
 3342 10f0 B4F90230 		ldrsh	r3, [r4, #2]
 3343 10f4 7218     		adds	r2, r6, r1
 3344 10f6 10B2     		sxth	r0, r2
 3345 10f8 B5F90210 		ldrsh	r1, [r5, #2]
 3346 10fc 0246     		mov	r2, r0
 3347 10fe 0097     		str	r7, [sp, #0]
 3348 1100 FFF7FEFF 		bl	GLCD_Line
 3349              	.LVL415:
 768:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(p2->x-fw, p1->y, p2->x-fw, p2->y, color);
 3350              		.loc 1 768 0
 3351 1104 2088     		ldrh	r0, [r4, #0]
 3352 1106 B5F90210 		ldrsh	r1, [r5, #2]
 3353 110a 831B     		subs	r3, r0, r6
 3354 110c 18B2     		sxth	r0, r3
 3355 110e B4F90230 		ldrsh	r3, [r4, #2]
 3356 1112 0097     		str	r7, [sp, #0]
 3357              	.L243:
 3358 1114 0246     		mov	r2, r0
 3359 1116 013E     		subs	r6, r6, #1
 3360 1118 FFF7FEFF 		bl	GLCD_Line
 3361              	.LVL416:
 3362 111c B6B2     		uxth	r6, r6
 3363 111e A4E7     		b	.L239
 3364              	.L244:
 775:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 3365              		.loc 1 775 0
 3366 1120 B5F90210 		ldrsh	r1, [r5, #2]
 3367 1124 B5F90000 		ldrsh	r0, [r5, #0]
 3368 1128 B4F90020 		ldrsh	r2, [r4, #0]
 3369 112c 0B46     		mov	r3, r1
 3370 112e 0097     		str	r7, [sp, #0]
 3371 1130 FFF7FEFF 		bl	GLCD_Line
 3372              	.LVL417:
 776:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 3373              		.loc 1 776 0
 3374 1134 B4F90210 		ldrsh	r1, [r4, #2]
 3375 1138 B5F90000 		ldrsh	r0, [r5, #0]
 3376 113c B4F90020 		ldrsh	r2, [r4, #0]
 3377 1140 0B46     		mov	r3, r1
 3378 1142 0097     		str	r7, [sp, #0]
 3379 1144 FFF7FEFF 		bl	GLCD_Line
 3380              	.LVL418:
 777:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 3381              		.loc 1 777 0
 3382 1148 B5F90000 		ldrsh	r0, [r5, #0]
 3383 114c B5F90210 		ldrsh	r1, [r5, #2]
 3384 1150 B4F90230 		ldrsh	r3, [r4, #2]
 3385 1154 0246     		mov	r2, r0
 3386 1156 0097     		str	r7, [sp, #0]
 3387 1158 FFF7FEFF 		bl	GLCD_Line
 3388              	.LVL419:
 778:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 3389              		.loc 1 778 0
 3390 115c B4F90000 		ldrsh	r0, [r4, #0]
 3391 1160 B5F90210 		ldrsh	r1, [r5, #2]
 3392 1164 B4F90230 		ldrsh	r3, [r4, #2]
 3393 1168 0246     		mov	r2, r0
 3394 116a 0A97     		str	r7, [sp, #40]
 780:../Source Files/lpc_ssp_glcd.c **** }
 3395              		.loc 1 780 0
 3396 116c 03B0     		add	sp, sp, #12
 3397 116e BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 778:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 3398              		.loc 1 778 0
 3399 1172 FFF7FEBF 		b	GLCD_Line
 3400              	.LVL420:
 3401              		.cfi_endproc
 3402              	.LFE78:
 3404              		.align	1
 3405              		.global	GLCD_Circle
 3406              		.thumb
 3407              		.thumb_func
 3409              	GLCD_Circle:
 3410              	.LFB80:
 962:../Source Files/lpc_ssp_glcd.c **** {
 3411              		.loc 1 962 0
 3412              		.cfi_startproc
 3413              		@ args = 0, pretend = 0, frame = 32
 3414              		@ frame_needed = 0, uses_anonymous_args = 0
 3415              	.LVL421:
 3416 1176 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 3417              	.LCFI24:
 3418              		.cfi_def_cfa_offset 36
 3419              		.cfi_offset 4, -36
 3420              		.cfi_offset 5, -32
 3421              		.cfi_offset 6, -28
 3422              		.cfi_offset 7, -24
 3423              		.cfi_offset 8, -20
 3424              		.cfi_offset 9, -16
 3425              		.cfi_offset 10, -12
 3426              		.cfi_offset 11, -8
 3427              		.cfi_offset 14, -4
 3428 117a 1C46     		mov	r4, r3
 3429 117c 8BB0     		sub	sp, sp, #44
 3430              	.LCFI25:
 3431              		.cfi_def_cfa_offset 80
 3432              	.LVL422:
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 3433              		.loc 1 966 0
 3434 117e C2F10103 		rsb	r3, r2, #1
 3435              	.LVL423:
 962:../Source Files/lpc_ssp_glcd.c **** {
 3436              		.loc 1 962 0
 3437 1182 0890     		str	r0, [sp, #32]
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 3438              		.loc 1 966 0
 3439 1184 98B2     		uxth	r0, r3
 3440              	.LVL424:
 962:../Source Files/lpc_ssp_glcd.c **** {
 3441              		.loc 1 962 0
 3442 1186 0991     		str	r1, [sp, #36]
 3443 1188 0792     		str	r2, [sp, #28]
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 3444              		.loc 1 966 0
 3445 118a 0690     		str	r0, [sp, #24]
 3446              	.LVL425:
 3447 118c 0746     		mov	r7, r0
 965:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 3448              		.loc 1 965 0
 3449 118e 1646     		mov	r6, r2
 966:../Source Files/lpc_ssp_glcd.c **** 	P = 1 - radius;
 3450              		.loc 1 966 0
 3451 1190 0025     		movs	r5, #0
 3452              	.LVL426:
 3453              	.L249:
 970:../Source Files/lpc_ssp_glcd.c **** 		if(cfg->fill)
 3454              		.loc 1 970 0
 3455 1192 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 3456 1194 0029     		cmp	r1, #0
 3457 1196 47D0     		beq	.L246
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 3458              		.loc 1 972 0
 3459 1198 089A     		ldr	r2, [sp, #32]
 3460 119a 0998     		ldr	r0, [sp, #36]
 3461 119c 1FFA82F9 		uxth	r9, r2
 3462 11a0 1FFA80F8 		uxth	r8, r0
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3463              		.loc 1 961 0
 3464 11a4 ABB2     		uxth	r3, r5
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 3465              		.loc 1 972 0
 3466 11a6 1FFA86FA 		uxth	sl, r6
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3467              		.loc 1 961 0
 3468 11aa C3EB090C 		rsb	ip, r3, r9
 3469 11ae 03EB090B 		add	fp, r3, r9
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 3470              		.loc 1 972 0
 3471 11b2 A288     		ldrh	r2, [r4, #4]
 3472 11b4 0AEB0801 		add	r1, sl, r8
 3473 11b8 0FFA8CFE 		sxth	lr, ip
 3474 11bc 09B2     		sxth	r1, r1
 3475 11be 0FFA8BFB 		sxth	fp, fp
 3476 11c2 7046     		mov	r0, lr
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3477              		.loc 1 961 0
 3478 11c4 0593     		str	r3, [sp, #20]
 972:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y+b, x+a, y+b, cfg->fill_color);
 3479              		.loc 1 972 0
 3480 11c6 0092     		str	r2, [sp, #0]
 3481 11c8 0B46     		mov	r3, r1
 3482 11ca 5A46     		mov	r2, fp
 3483 11cc CDF80CE0 		str	lr, [sp, #12]
 3484 11d0 FFF7FEFF 		bl	GLCD_Line
 3485              	.LVL427:
 973:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-a, y-b, x+a, y-b, cfg->fill_color);
 3486              		.loc 1 973 0
 3487 11d4 CAEB0803 		rsb	r3, sl, r8
 3488 11d8 A088     		ldrh	r0, [r4, #4]
 3489 11da DDF80CC0 		ldr	ip, [sp, #12]
 3490 11de 19B2     		sxth	r1, r3
 3491 11e0 5A46     		mov	r2, fp
 3492 11e2 0B46     		mov	r3, r1
 3493 11e4 0090     		str	r0, [sp, #0]
 3494 11e6 6046     		mov	r0, ip
 3495 11e8 FFF7FEFF 		bl	GLCD_Line
 3496              	.LVL428:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3497              		.loc 1 961 0
 3498 11ec 0599     		ldr	r1, [sp, #20]
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, cfg->fill_color);
 3499              		.loc 1 974 0
 3500 11ee A388     		ldrh	r3, [r4, #4]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3501              		.loc 1 961 0
 3502 11f0 01EB0802 		add	r2, r1, r8
 974:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y+a, x+b, y+a, cfg->fill_color);
 3503              		.loc 1 974 0
 3504 11f4 CAEB090B 		rsb	fp, sl, r9
 3505 11f8 D144     		add	r9, sl, r9
 3506 11fa 11B2     		sxth	r1, r2
 3507 11fc 0FFA8BFB 		sxth	fp, fp
 3508 1200 0FFA89F9 		sxth	r9, r9
 3509 1204 0093     		str	r3, [sp, #0]
 3510 1206 5846     		mov	r0, fp
 3511 1208 0B46     		mov	r3, r1
 3512 120a 4A46     		mov	r2, r9
 3513 120c FFF7FEFF 		bl	GLCD_Line
 3514              	.LVL429:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3515              		.loc 1 961 0
 3516 1210 0598     		ldr	r0, [sp, #20]
 975:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, cfg->fill_color);
 3517              		.loc 1 975 0
 3518 1212 A288     		ldrh	r2, [r4, #4]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3519              		.loc 1 961 0
 3520 1214 C0EB0808 		rsb	r8, r0, r8
 975:../Source Files/lpc_ssp_glcd.c **** 			GLCD_Line(x-b, y-a, x+b, y-a, cfg->fill_color);
 3521              		.loc 1 975 0
 3522 1218 0FFA88F1 		sxth	r1, r8
 3523 121c 0092     		str	r2, [sp, #0]
 3524 121e 5846     		mov	r0, fp
 3525 1220 4A46     		mov	r2, r9
 3526 1222 0B46     		mov	r3, r1
 3527 1224 FFF7FEFF 		bl	GLCD_Line
 3528              	.LVL430:
 3529              	.L246:
 978:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 3530              		.loc 1 978 0
 3531 1228 3A04     		lsls	r2, r7, #16
 3532 122a 07D5     		bpl	.L247
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3533              		.loc 1 961 0
 3534 122c ABB2     		uxth	r3, r5
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 3535              		.loc 1 979 0
 3536 122e 0337     		adds	r7, r7, #3
 3537              	.LVL431:
 3538 1230 07EB4300 		add	r0, r7, r3, lsl #1
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3539              		.loc 1 961 0
 3540 1234 5A1C     		adds	r2, r3, #1
 979:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 3541              		.loc 1 979 0
 3542 1236 87B2     		uxth	r7, r0
 3543              	.LVL432:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3544              		.loc 1 961 0
 3545 1238 91B2     		uxth	r1, r2
 3546              	.LVL433:
 3547 123a 09E0     		b	.L248
 3548              	.LVL434:
 3549              	.L247:
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 3550              		.loc 1 981 0
 3551 123c 31B2     		sxth	r1, r6
 3552 123e 0537     		adds	r7, r7, #5
 3553              	.LVL435:
 3554 1240 6B1A     		subs	r3, r5, r1
 3555 1242 07EB4300 		add	r0, r7, r3, lsl #1
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3556              		.loc 1 961 0
 3557 1246 6A1C     		adds	r2, r5, #1
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 3558              		.loc 1 981 0
 3559 1248 013E     		subs	r6, r6, #1
 3560              	.LVL436:
 3561 124a 87B2     		uxth	r7, r0
 3562              	.LVL437:
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3563              		.loc 1 961 0
 3564 124c 91B2     		uxth	r1, r2
 3565              	.LVL438:
 981:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 3566              		.loc 1 981 0
 3567 124e B6B2     		uxth	r6, r6
 3568              	.LVL439:
 3569              	.L248:
 982:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 3570              		.loc 1 982 0
 3571 1250 09B2     		sxth	r1, r1
 3572              	.LVL440:
 3573 1252 33B2     		sxth	r3, r6
 3574 1254 0135     		adds	r5, r5, #1
 3575 1256 9942     		cmp	r1, r3
 3576 1258 9BDD     		ble	.L249
 984:../Source Files/lpc_ssp_glcd.c **** 	cfg->fill = NO;
 3577              		.loc 1 984 0
 3578 125a 0025     		movs	r5, #0
 986:../Source Files/lpc_ssp_glcd.c **** 	b = radius;
 3579              		.loc 1 986 0
 3580 125c 079E     		ldr	r6, [sp, #28]
 3581              	.LVL441:
 984:../Source Files/lpc_ssp_glcd.c **** 	cfg->fill = NO;
 3582              		.loc 1 984 0
 3583 125e 2570     		strb	r5, [r4, #0]
 3584              	.LVL442:
 3585              	.L253:
 990:../Source Files/lpc_ssp_glcd.c **** 		if(!cfg->fill && cfg->bndry)
 3586              		.loc 1 990 0
 3587 1260 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 3588 1262 0028     		cmp	r0, #0
 3589 1264 57D1     		bne	.L250
 990:../Source Files/lpc_ssp_glcd.c **** 		if(!cfg->fill && cfg->bndry)
 3590              		.loc 1 990 0 is_stmt 0 discriminator 1
 3591 1266 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 3592 1268 002A     		cmp	r2, #0
 3593 126a 54D0     		beq	.L250
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 3594              		.loc 1 992 0 is_stmt 1
 3595 126c 089F     		ldr	r7, [sp, #32]
 3596 126e 0998     		ldr	r0, [sp, #36]
 3597 1270 1FFA87FA 		uxth	sl, r7
 3598 1274 1FFA80F8 		uxth	r8, r0
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3599              		.loc 1 961 0
 3600 1278 1FFA85F9 		uxth	r9, r5
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 3601              		.loc 1 992 0
 3602 127c B7B2     		uxth	r7, r6
 3603 127e 07EB080E 		add	lr, r7, r8
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3604              		.loc 1 961 0
 3605 1282 09EB0A01 		add	r1, r9, sl
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 3606              		.loc 1 992 0
 3607 1286 1FFA8EFC 		uxth	ip, lr
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3608              		.loc 1 961 0
 3609 128a 8BB2     		uxth	r3, r1
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 3610              		.loc 1 992 0
 3611 128c 1846     		mov	r0, r3
 3612 128e 6146     		mov	r1, ip
 3613 1290 6288     		ldrh	r2, [r4, #2]
 3614 1292 CDF80CC0 		str	ip, [sp, #12]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3615              		.loc 1 961 0
 3616 1296 0793     		str	r3, [sp, #28]
 992:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, b+y, cfg->bcolor);
 3617              		.loc 1 992 0
 3618 1298 FFF7FEFF 		bl	GLCD_PutPixel
 3619              	.LVL443:
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 3620              		.loc 1 993 0
 3621 129c 07EB0A02 		add	r2, r7, sl
 3622 12a0 91B2     		uxth	r1, r2
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3623              		.loc 1 961 0
 3624 12a2 09EB0803 		add	r3, r9, r8
 3625 12a6 9BB2     		uxth	r3, r3
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 3626              		.loc 1 993 0
 3627 12a8 0591     		str	r1, [sp, #20]
 3628 12aa 0598     		ldr	r0, [sp, #20]
 3629 12ac 1946     		mov	r1, r3
 3630 12ae 6288     		ldrh	r2, [r4, #2]
 3631 12b0 0493     		str	r3, [sp, #16]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3632              		.loc 1 961 0
 3633 12b2 C9EB0A0B 		rsb	fp, r9, sl
 993:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, a+y, cfg->bcolor);
 3634              		.loc 1 993 0
 3635 12b6 FFF7FEFF 		bl	GLCD_PutPixel
 3636              	.LVL444:
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, cfg->bcolor);
 3637              		.loc 1 994 0
 3638 12ba DDF80CC0 		ldr	ip, [sp, #12]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3639              		.loc 1 961 0
 3640 12be 1FFA8BFB 		uxth	fp, fp
 994:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, b+y, cfg->bcolor);
 3641              		.loc 1 994 0
 3642 12c2 6146     		mov	r1, ip
 3643 12c4 5846     		mov	r0, fp
 3644 12c6 6288     		ldrh	r2, [r4, #2]
 3645 12c8 FFF7FEFF 		bl	GLCD_PutPixel
 3646              	.LVL445:
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 3647              		.loc 1 995 0
 3648 12cc C7EB0A0A 		rsb	sl, r7, sl
 3649 12d0 049A     		ldr	r2, [sp, #16]
 3650 12d2 1FFA8AFA 		uxth	sl, sl
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3651              		.loc 1 961 0
 3652 12d6 C9EB0809 		rsb	r9, r9, r8
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 3653              		.loc 1 995 0
 3654 12da 1146     		mov	r1, r2
 3655 12dc 5046     		mov	r0, sl
 3656 12de 6288     		ldrh	r2, [r4, #2]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3657              		.loc 1 961 0
 3658 12e0 1FFA89F9 		uxth	r9, r9
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 3659              		.loc 1 997 0
 3660 12e4 C7EB0807 		rsb	r7, r7, r8
 995:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, a+y, cfg->bcolor);
 3661              		.loc 1 995 0
 3662 12e8 FFF7FEFF 		bl	GLCD_PutPixel
 3663              	.LVL446:
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 3664              		.loc 1 997 0
 3665 12ec BFB2     		uxth	r7, r7
 996:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(b+x, y-a, cfg->bcolor);
 3666              		.loc 1 996 0
 3667 12ee 0598     		ldr	r0, [sp, #20]
 3668 12f0 4946     		mov	r1, r9
 3669 12f2 6288     		ldrh	r2, [r4, #2]
 3670 12f4 FFF7FEFF 		bl	GLCD_PutPixel
 3671              	.LVL447:
 997:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(a+x, y-b, cfg->bcolor);
 3672              		.loc 1 997 0
 3673 12f8 0798     		ldr	r0, [sp, #28]
 3674 12fa 3946     		mov	r1, r7
 3675 12fc 6288     		ldrh	r2, [r4, #2]
 3676 12fe FFF7FEFF 		bl	GLCD_PutPixel
 3677              	.LVL448:
 998:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-a, y-b, cfg->bcolor);
 3678              		.loc 1 998 0
 3679 1302 5846     		mov	r0, fp
 3680 1304 3946     		mov	r1, r7
 3681 1306 6288     		ldrh	r2, [r4, #2]
 3682 1308 FFF7FEFF 		bl	GLCD_PutPixel
 3683              	.LVL449:
 999:../Source Files/lpc_ssp_glcd.c **** 			GLCD_PutPixel(x-b, y-a, cfg->bcolor);
 3684              		.loc 1 999 0
 3685 130c 5046     		mov	r0, sl
 3686 130e 4946     		mov	r1, r9
 3687 1310 6288     		ldrh	r2, [r4, #2]
 3688 1312 FFF7FEFF 		bl	GLCD_PutPixel
 3689              	.LVL450:
 3690              	.L250:
1002:../Source Files/lpc_ssp_glcd.c **** 		if(P < 0)
 3691              		.loc 1 1002 0
 3692 1316 0698     		ldr	r0, [sp, #24]
 3693 1318 0304     		lsls	r3, r0, #16
 3694 131a 09D5     		bpl	.L251
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 3695              		.loc 1 1003 0
 3696 131c 069A     		ldr	r2, [sp, #24]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3697              		.loc 1 961 0
 3698 131e A9B2     		uxth	r1, r5
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 3699              		.loc 1 1003 0
 3700 1320 D31C     		adds	r3, r2, #3
 3701 1322 03EB4100 		add	r0, r3, r1, lsl #1
 3702 1326 82B2     		uxth	r2, r0
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3703              		.loc 1 961 0
 3704 1328 0131     		adds	r1, r1, #1
1003:../Source Files/lpc_ssp_glcd.c **** 			P+= 3 + 2*a++;
 3705              		.loc 1 1003 0
 3706 132a 0692     		str	r2, [sp, #24]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3707              		.loc 1 961 0
 3708 132c 88B2     		uxth	r0, r1
 3709              	.LVL451:
 3710 132e 0BE0     		b	.L252
 3711              	.LVL452:
 3712              	.L251:
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 3713              		.loc 1 1005 0
 3714 1330 0699     		ldr	r1, [sp, #24]
 3715 1332 33B2     		sxth	r3, r6
 3716 1334 E81A     		subs	r0, r5, r3
 3717 1336 4A1D     		adds	r2, r1, #5
 3718 1338 02EB4001 		add	r1, r2, r0, lsl #1
 3719 133c 8AB2     		uxth	r2, r1
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3720              		.loc 1 961 0
 3721 133e 6B1C     		adds	r3, r5, #1
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 3722              		.loc 1 1005 0
 3723 1340 013E     		subs	r6, r6, #1
 3724              	.LVL453:
 3725 1342 0692     		str	r2, [sp, #24]
 961:../Source Files/lpc_ssp_glcd.c **** void GLCD_Circle(int16_t x, int16_t y, int16_t radius,COLORCFG_Type *cfg)
 3726              		.loc 1 961 0
 3727 1344 98B2     		uxth	r0, r3
 3728              	.LVL454:
1005:../Source Files/lpc_ssp_glcd.c **** 			P+= 5 + 2*(a++ - b--);
 3729              		.loc 1 1005 0
 3730 1346 B6B2     		uxth	r6, r6
 3731              	.LVL455:
 3732              	.L252:
1006:../Source Files/lpc_ssp_glcd.c **** 	} while(a <= b);
 3733              		.loc 1 1006 0
 3734 1348 03B2     		sxth	r3, r0
 3735 134a 30B2     		sxth	r0, r6
 3736              	.LVL456:
 3737 134c 0135     		adds	r5, r5, #1
 3738 134e 8342     		cmp	r3, r0
 3739 1350 86DD     		ble	.L253
1007:../Source Files/lpc_ssp_glcd.c **** }
 3740              		.loc 1 1007 0
 3741 1352 0BB0     		add	sp, sp, #44
 3742 1354 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 3743              		.cfi_endproc
 3744              	.LFE80:
 3746              		.align	1
 3747              		.global	GLCD_Window
 3748              		.thumb
 3749              		.thumb_func
 3751              	GLCD_Window:
 3752              	.LFB58:
 133:../Source Files/lpc_ssp_glcd.c **** {
 3753              		.loc 1 133 0
 3754              		.cfi_startproc
 3755              		@ args = 0, pretend = 0, frame = 0
 3756              		@ frame_needed = 0, uses_anonymous_args = 0
 3757              	.LVL457:
 3758 1358 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3759              	.LCFI26:
 3760              		.cfi_def_cfa_offset 24
 3761              		.cfi_offset 3, -24
 3762              		.cfi_offset 4, -20
 3763              		.cfi_offset 5, -16
 3764              		.cfi_offset 6, -12
 3765              		.cfi_offset 7, -8
 3766              		.cfi_offset 14, -4
 133:../Source Files/lpc_ssp_glcd.c **** {
 3767              		.loc 1 133 0
 3768 135a 0546     		mov	r5, r0
 134:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 3769              		.loc 1 134 0
 3770 135c 4520     		movs	r0, #69
 3771              	.LVL458:
 133:../Source Files/lpc_ssp_glcd.c **** {
 3772              		.loc 1 133 0
 3773 135e 0C46     		mov	r4, r1
 3774 1360 1646     		mov	r6, r2
 3775 1362 1F46     		mov	r7, r3
 134:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x45);      /* Horizontal GRAM Start Address      */
 3776              		.loc 1 134 0
 3777 1364 FFF7FEFF 		bl	Write_Command_Glcd
 3778              	.LVL459:
 135:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);
 3779              		.loc 1 135 0
 3780 1368 2846     		mov	r0, r5
 3781 136a FFF7FEFF 		bl	Write_Data_Glcd
 3782              	.LVL460:
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 3783              		.loc 1 138 0
 3784 136e 013D     		subs	r5, r5, #1
 137:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x46);      /* Horizontal GRAM End   Address (-1) */
 3785              		.loc 1 137 0
 3786 1370 4620     		movs	r0, #70
 3787 1372 FFF7FEFF 		bl	Write_Command_Glcd
 3788              	.LVL461:
 138:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x+w-1);
 3789              		.loc 1 138 0
 3790 1376 7019     		adds	r0, r6, r5
 3791 1378 80B2     		uxth	r0, r0
 3792 137a FFF7FEFF 		bl	Write_Data_Glcd
 3793              	.LVL462:
 140:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM Start Address      */
 3794              		.loc 1 140 0
 3795 137e 4420     		movs	r0, #68
 3796 1380 FFF7FEFF 		bl	Write_Command_Glcd
 3797              	.LVL463:
 141:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);
 3798              		.loc 1 141 0
 3799 1384 2046     		mov	r0, r4
 3800 1386 FFF7FEFF 		bl	Write_Data_Glcd
 3801              	.LVL464:
 143:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x44);      /* Vertical   GRAM End   Address (-1) */
 3802              		.loc 1 143 0
 3803 138a 4420     		movs	r0, #68
 3804 138c FFF7FEFF 		bl	Write_Command_Glcd
 3805              	.LVL465:
 144:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 3806              		.loc 1 144 0
 3807 1390 013C     		subs	r4, r4, #1
 3808 1392 3F19     		adds	r7, r7, r4
 3809 1394 3902     		lsls	r1, r7, #8
 3810 1396 01F47F40 		and	r0, r1, #65280
 145:../Source Files/lpc_ssp_glcd.c **** }
 3811              		.loc 1 145 0
 3812 139a BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 144:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd((y+h-1)<<8);
 3813              		.loc 1 144 0
 3814 139e FFF7FEBF 		b	Write_Data_Glcd
 3815              	.LVL466:
 3816              		.cfi_endproc
 3817              	.LFE58:
 3819              		.align	1
 3820              		.global	GLCD_Display_String
 3821              		.thumb
 3822              		.thumb_func
 3824              	GLCD_Display_String:
 3825              	.LFB71:
 473:../Source Files/lpc_ssp_glcd.c **** {
 3826              		.loc 1 473 0
 3827              		.cfi_startproc
 3828              		@ args = 0, pretend = 0, frame = 0
 3829              		@ frame_needed = 0, uses_anonymous_args = 0
 3830              	.LVL467:
 3831 13a2 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3832              	.LCFI27:
 3833              		.cfi_def_cfa_offset 24
 3834              		.cfi_offset 3, -24
 3835              		.cfi_offset 4, -20
 3836              		.cfi_offset 5, -16
 3837              		.cfi_offset 6, -12
 3838              		.cfi_offset 7, -8
 3839              		.cfi_offset 14, -4
 473:../Source Files/lpc_ssp_glcd.c **** {
 3840              		.loc 1 473 0
 3841 13a4 0746     		mov	r7, r0
 474:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 3842              		.loc 1 474 0
 3843 13a6 0020     		movs	r0, #0
 3844              	.LVL468:
 473:../Source Files/lpc_ssp_glcd.c **** {
 3845              		.loc 1 473 0
 3846 13a8 0E46     		mov	r6, r1
 3847 13aa 1546     		mov	r5, r2
 474:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 3848              		.loc 1 474 0
 3849 13ac 0146     		mov	r1, r0
 3850              	.LVL469:
 3851 13ae 4FF4A072 		mov	r2, #320
 3852              	.LVL470:
 3853 13b2 F023     		movs	r3, #240
 3854 13b4 FFF7FEFF 		bl	GLCD_Window
 3855              	.LVL471:
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 3856              		.loc 1 475 0
 3857 13b8 0024     		movs	r4, #0
 3858              	.LVL472:
 3859              	.L264:
 472:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 3860              		.loc 1 472 0 discriminator 1
 3861 13ba 3119     		adds	r1, r6, r4
 3862 13bc 0134     		adds	r4, r4, #1
 3863 13be 2B19     		adds	r3, r5, r4
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 3864              		.loc 1 475 0 discriminator 1
 3865 13c0 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
 472:../Source Files/lpc_ssp_glcd.c **** void GLCD_Display_String (uint16_t ln, uint16_t col, uchar *s)
 3866              		.loc 1 472 0 discriminator 1
 3867 13c4 89B2     		uxth	r1, r1
 3868              	.LVL473:
 475:../Source Files/lpc_ssp_glcd.c **** 	while (*s)
 3869              		.loc 1 475 0 discriminator 1
 3870 13c6 1AB1     		cbz	r2, .L266
 3871              	.L265:
 3872              	.LVL474:
 477:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Display_Char(ln, col++, *s++);
 3873              		.loc 1 477 0
 3874 13c8 3846     		mov	r0, r7
 3875 13ca FFF7FEFF 		bl	GLCD_Display_Char
 3876              	.LVL475:
 3877 13ce F4E7     		b	.L264
 3878              	.LVL476:
 3879              	.L266:
 479:../Source Files/lpc_ssp_glcd.c **** }
 3880              		.loc 1 479 0
 3881 13d0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3882              		.cfi_endproc
 3883              	.LFE71:
 3885              		.align	1
 3886              		.global	GLCD_ClearLn
 3887              		.thumb
 3888              		.thumb_func
 3890              	GLCD_ClearLn:
 3891              	.LFB72:
 488:../Source Files/lpc_ssp_glcd.c **** {
 3892              		.loc 1 488 0
 3893              		.cfi_startproc
 3894              		@ args = 0, pretend = 0, frame = 0
 3895              		@ frame_needed = 0, uses_anonymous_args = 0
 3896              	.LVL477:
 3897 13d2 10B5     		push	{r4, lr}
 3898              	.LCFI28:
 3899              		.cfi_def_cfa_offset 8
 3900              		.cfi_offset 4, -8
 3901              		.cfi_offset 14, -4
 488:../Source Files/lpc_ssp_glcd.c **** {
 3902              		.loc 1 488 0
 3903 13d4 0446     		mov	r4, r0
 489:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window(0,0,320,240);  // Window Max
 3904              		.loc 1 489 0
 3905 13d6 0020     		movs	r0, #0
 3906              	.LVL478:
 3907 13d8 0146     		mov	r1, r0
 3908 13da 4FF4A072 		mov	r2, #320
 3909 13de F023     		movs	r3, #240
 3910 13e0 FFF7FEFF 		bl	GLCD_Window
 3911              	.LVL479:
 490:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 3912              		.loc 1 490 0
 3913 13e4 034A     		ldr	r2, .L268
 3914 13e6 2046     		mov	r0, r4
 3915 13e8 0021     		movs	r1, #0
 491:../Source Files/lpc_ssp_glcd.c **** }
 3916              		.loc 1 491 0
 3917 13ea BDE81040 		pop	{r4, lr}
 490:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Display_String(ln, 0, "                    ");
 3918              		.loc 1 490 0
 3919 13ee FFF7FEBF 		b	GLCD_Display_String
 3920              	.LVL480:
 3921              	.L269:
 3922 13f2 00BF     		.align	2
 3923              	.L268:
 3924 13f4 4F000000 		.word	.LC7
 3925              		.cfi_endproc
 3926              	.LFE72:
 3928              		.align	1
 3929              		.global	GLCD_Clear
 3930              		.thumb
 3931              		.thumb_func
 3933              	GLCD_Clear:
 3934              	.LFB68:
 379:../Source Files/lpc_ssp_glcd.c **** {
 3935              		.loc 1 379 0
 3936              		.cfi_startproc
 3937              		@ args = 0, pretend = 0, frame = 0
 3938              		@ frame_needed = 0, uses_anonymous_args = 0
 3939              	.LVL481:
 3940 13f8 38B5     		push	{r3, r4, r5, lr}
 3941              	.LCFI29:
 3942              		.cfi_def_cfa_offset 16
 3943              		.cfi_offset 3, -16
 3944              		.cfi_offset 4, -12
 3945              		.cfi_offset 5, -8
 3946              		.cfi_offset 14, -4
 379:../Source Files/lpc_ssp_glcd.c **** {
 3947              		.loc 1 379 0
 3948 13fa 0546     		mov	r5, r0
 382:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (0,0,320,240);    // Window Max
 3949              		.loc 1 382 0
 3950 13fc 0020     		movs	r0, #0
 3951              	.LVL482:
 3952 13fe 0146     		mov	r1, r0
 3953 1400 4FF4A072 		mov	r2, #320
 3954 1404 F023     		movs	r3, #240
 3955 1406 FFF7FEFF 		bl	GLCD_Window
 3956              	.LVL483:
 384:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);     /* GDDRAM Horizontal */
 3957              		.loc 1 384 0
 3958 140a 4E20     		movs	r0, #78
 3959 140c FFF7FEFF 		bl	Write_Command_Glcd
 3960              	.LVL484:
 385:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 3961              		.loc 1 385 0
 3962 1410 0020     		movs	r0, #0
 3963 1412 FFF7FEFF 		bl	Write_Data_Glcd
 3964              	.LVL485:
 387:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);     /* GDDRAM Vertical */
 3965              		.loc 1 387 0
 3966 1416 4F20     		movs	r0, #79
 3967 1418 FFF7FEFF 		bl	Write_Command_Glcd
 3968              	.LVL486:
 388:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0);
 3969              		.loc 1 388 0
 3970 141c 0020     		movs	r0, #0
 3971 141e FFF7FEFF 		bl	Write_Data_Glcd
 3972              	.LVL487:
 390:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);
 3973              		.loc 1 390 0
 3974 1422 2220     		movs	r0, #34
 3975 1424 FFF7FEFF 		bl	Write_Command_Glcd
 3976              	.LVL488:
 391:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 3977              		.loc 1 391 0
 3978 1428 FEF7EAFD 		bl	wr_dat_start
 3979              	.LVL489:
 3980 142c 4FF49634 		mov	r4, #76800
 3981              	.LVL490:
 3982              	.L271:
 393:../Source Files/lpc_ssp_glcd.c **** 		wr_dat_only(color);
 3983              		.loc 1 393 0 discriminator 2
 3984 1430 2846     		mov	r0, r5
 3985 1432 FEF7F9FD 		bl	wr_dat_only
 3986              	.LVL491:
 392:../Source Files/lpc_ssp_glcd.c **** 	for(i = 0; i < (WIDTH*HEIGHT); i++)
 3987              		.loc 1 392 0 discriminator 2
 3988 1436 013C     		subs	r4, r4, #1
 3989 1438 FAD1     		bne	.L271
 395:../Source Files/lpc_ssp_glcd.c **** }
 3990              		.loc 1 395 0
 3991 143a BDE83840 		pop	{r3, r4, r5, lr}
 394:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 3992              		.loc 1 394 0
 3993 143e FEF7EDBD 		b	wr_dat_stop
 3994              	.LVL492:
 3995              		.cfi_endproc
 3996              	.LFE68:
 3998              		.align	1
 3999              		.global	GLCD_Set_Loc
 4000              		.thumb
 4001              		.thumb_func
 4003              	GLCD_Set_Loc:
 4004              	.LFB59:
 157:../Source Files/lpc_ssp_glcd.c **** {
 4005              		.loc 1 157 0
 4006              		.cfi_startproc
 4007              		@ args = 0, pretend = 0, frame = 0
 4008              		@ frame_needed = 0, uses_anonymous_args = 0
 4009              	.LVL493:
 4010 1442 38B5     		push	{r3, r4, r5, lr}
 4011              	.LCFI30:
 4012              		.cfi_def_cfa_offset 16
 4013              		.cfi_offset 3, -16
 4014              		.cfi_offset 4, -12
 4015              		.cfi_offset 5, -8
 4016              		.cfi_offset 14, -4
 157:../Source Files/lpc_ssp_glcd.c **** {
 4017              		.loc 1 157 0
 4018 1444 0C46     		mov	r4, r1
 4019 1446 0546     		mov	r5, r0
 158:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Window (x,y,w,h);
 4020              		.loc 1 158 0
 4021 1448 FFF7FEFF 		bl	GLCD_Window
 4022              	.LVL494:
 160:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // GDDRAM Horizontal
 4023              		.loc 1 160 0
 4024 144c 4E20     		movs	r0, #78
 4025 144e FFF7FEFF 		bl	Write_Command_Glcd
 4026              	.LVL495:
 161:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(x);       // Page 58 of SSD2119 datasheet
 4027              		.loc 1 161 0
 4028 1452 2846     		mov	r0, r5
 4029 1454 FFF7FEFF 		bl	Write_Data_Glcd
 4030              	.LVL496:
 163:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // GDDRAM Vertical
 4031              		.loc 1 163 0
 4032 1458 4F20     		movs	r0, #79
 4033 145a FFF7FEFF 		bl	Write_Command_Glcd
 4034              	.LVL497:
 164:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(y);       // Page 58 of SSD2119 datasheet
 4035              		.loc 1 164 0
 4036 145e 2046     		mov	r0, r4
 4037 1460 FFF7FEFF 		bl	Write_Data_Glcd
 4038              	.LVL498:
 166:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 4039              		.loc 1 166 0
 4040 1464 2220     		movs	r0, #34
 167:../Source Files/lpc_ssp_glcd.c **** }
 4041              		.loc 1 167 0
 4042 1466 BDE83840 		pop	{r3, r4, r5, lr}
 166:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 4043              		.loc 1 166 0
 4044 146a FFF7FEBF 		b	Write_Command_Glcd
 4045              	.LVL499:
 4046              		.cfi_endproc
 4047              	.LFE59:
 4049              		.align	1
 4050              		.global	GLCD_Window_Fill
 4051              		.thumb
 4052              		.thumb_func
 4054              	GLCD_Window_Fill:
 4055              	.LFB75:
 591:../Source Files/lpc_ssp_glcd.c **** {
 4056              		.loc 1 591 0
 4057              		.cfi_startproc
 4058              		@ args = 4, pretend = 0, frame = 0
 4059              		@ frame_needed = 0, uses_anonymous_args = 0
 4060              	.LVL500:
 4061 146e 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4062              	.LCFI31:
 4063              		.cfi_def_cfa_offset 24
 4064              		.cfi_offset 4, -24
 4065              		.cfi_offset 5, -20
 4066              		.cfi_offset 6, -16
 4067              		.cfi_offset 7, -12
 4068              		.cfi_offset 8, -8
 4069              		.cfi_offset 14, -4
 591:../Source Files/lpc_ssp_glcd.c **** {
 4070              		.loc 1 591 0
 4071 1472 1746     		mov	r7, r2
 4072 1474 1E46     		mov	r6, r3
 4073 1476 BDF81880 		ldrh	r8, [sp, #24]
 594:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 4074              		.loc 1 594 0
 4075 147a FFF7FEFF 		bl	GLCD_Set_Loc
 4076              	.LVL501:
 596:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 4077              		.loc 1 596 0
 4078 147e FEF7BFFD 		bl	wr_dat_start
 4079              	.LVL502:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 4080              		.loc 1 597 0
 4081 1482 0024     		movs	r4, #0
 4082              	.LVL503:
 4083              	.L275:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 4084              		.loc 1 597 0 is_stmt 0 discriminator 1
 4085 1484 B442     		cmp	r4, r6
 4086 1486 09D2     		bcs	.L279
 4087              	.L278:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 4088              		.loc 1 597 0
 4089 1488 0025     		movs	r5, #0
 4090              	.L277:
 4091              	.LVL504:
 599:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 4092              		.loc 1 599 0 is_stmt 1 discriminator 1
 4093 148a BD42     		cmp	r5, r7
 4094 148c 04D2     		bcs	.L280
 4095              	.L276:
 601:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(color);
 4096              		.loc 1 601 0 discriminator 2
 4097 148e 4046     		mov	r0, r8
 4098 1490 FEF7CAFD 		bl	wr_dat_only
 4099              	.LVL505:
 599:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 4100              		.loc 1 599 0 discriminator 2
 4101 1494 0135     		adds	r5, r5, #1
 4102              	.LVL506:
 4103 1496 F8E7     		b	.L277
 4104              	.L280:
 597:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 4105              		.loc 1 597 0
 4106 1498 0134     		adds	r4, r4, #1
 4107              	.LVL507:
 4108 149a F3E7     		b	.L275
 4109              	.LVL508:
 4110              	.L279:
 605:../Source Files/lpc_ssp_glcd.c **** }
 4111              		.loc 1 605 0
 4112 149c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 604:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 4113              		.loc 1 604 0
 4114 14a0 FEF7BCBD 		b	wr_dat_stop
 4115              	.LVL509:
 4116              		.cfi_endproc
 4117              	.LFE75:
 4119              		.align	1
 4120              		.global	GLCD_Bar
 4121              		.thumb
 4122              		.thumb_func
 4124              	GLCD_Bar:
 4125              	.LFB83:
1284:../Source Files/lpc_ssp_glcd.c **** {
 4126              		.loc 1 1284 0
 4127              		.cfi_startproc
 4128              		@ args = 0, pretend = 0, frame = 0
 4129              		@ frame_needed = 0, uses_anonymous_args = 0
 4130              	.LVL510:
1293:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
 4131              		.loc 1 1293 0
 4132 14a4 642A     		cmp	r2, #100
1284:../Source Files/lpc_ssp_glcd.c **** {
 4133              		.loc 1 1284 0
 4134 14a6 37B5     		push	{r0, r1, r2, r4, r5, lr}
 4135              	.LCFI32:
 4136              		.cfi_def_cfa_offset 24
 4137              		.cfi_offset 0, -24
 4138              		.cfi_offset 1, -20
 4139              		.cfi_offset 2, -16
 4140              		.cfi_offset 4, -12
 4141              		.cfi_offset 5, -8
 4142              		.cfi_offset 14, -4
1284:../Source Files/lpc_ssp_glcd.c **** {
 4143              		.loc 1 1284 0
 4144 14a8 0C46     		mov	r4, r1
 4145 14aa 1D46     		mov	r5, r3
1293:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
 4146              		.loc 1 1293 0
 4147 14ac 12DC     		bgt	.L281
1293:../Source Files/lpc_ssp_glcd.c **** 	if((per<=100) && (index<=10))
 4148              		.loc 1 1293 0 is_stmt 0 discriminator 1
 4149 14ae 0A28     		cmp	r0, #10
 4150 14b0 10DC     		bgt	.L281
1295:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Window_Fill(30+(index*26)-(width-(width/2)),220-(per*2),width,per*2,color);
 4151              		.loc 1 1295 0 is_stmt 1
 4152 14b2 1A23     		movs	r3, #26
 4153              	.LVL511:
 4154 14b4 5843     		muls	r0, r3, r0
 4155              	.LVL512:
 4156 14b6 1E30     		adds	r0, r0, #30
 4157 14b8 00EB5100 		add	r0, r0, r1, lsr #1
 4158 14bc 401A     		subs	r0, r0, r1
 4159 14be C2F16E01 		rsb	r1, r2, #110
 4160              	.LVL513:
 4161 14c2 4B00     		lsls	r3, r1, #1
 4162 14c4 5200     		lsls	r2, r2, #1
 4163              	.LVL514:
 4164 14c6 99B2     		uxth	r1, r3
 4165 14c8 0095     		str	r5, [sp, #0]
 4166 14ca 93B2     		uxth	r3, r2
 4167 14cc 80B2     		uxth	r0, r0
 4168 14ce 2246     		mov	r2, r4
 4169 14d0 FFF7FEFF 		bl	GLCD_Window_Fill
 4170              	.LVL515:
 4171              	.L281:
1297:../Source Files/lpc_ssp_glcd.c **** }
 4172              		.loc 1 1297 0
 4173 14d4 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 4174              		.cfi_endproc
 4175              	.LFE83:
 4177              		.align	1
 4178              		.global	GLCD_Rect
 4179              		.thumb
 4180              		.thumb_func
 4182              	GLCD_Rect:
 4183              	.LFB77:
 691:../Source Files/lpc_ssp_glcd.c **** {
 4184              		.loc 1 691 0
 4185              		.cfi_startproc
 4186              		@ args = 4, pretend = 0, frame = 0
 4187              		@ frame_needed = 0, uses_anonymous_args = 0
 4188              	.LVL516:
 4189 14d6 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 4190              	.LCFI33:
 4191              		.cfi_def_cfa_offset 32
 4192              		.cfi_offset 0, -32
 4193              		.cfi_offset 1, -28
 4194              		.cfi_offset 4, -24
 4195              		.cfi_offset 5, -20
 4196              		.cfi_offset 6, -16
 4197              		.cfi_offset 7, -12
 4198              		.cfi_offset 8, -8
 4199              		.cfi_offset 14, -4
 691:../Source Files/lpc_ssp_glcd.c **** {
 4200              		.loc 1 691 0
 4201 14da 0C46     		mov	r4, r1
 4202 14dc 0546     		mov	r5, r0
 4203 14de 9846     		mov	r8, r3
 4204 14e0 BDF82010 		ldrh	r1, [sp, #32]
 4205              	.LVL517:
 694:../Source Files/lpc_ssp_glcd.c **** 	if(fill)
 4206              		.loc 1 694 0
 4207 14e4 002A     		cmp	r2, #0
 4208 14e6 41D0     		beq	.L284
 696:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 4209              		.loc 1 696 0
 4210 14e8 B0F800E0 		ldrh	lr, [r0, #0]
 4211 14ec 2288     		ldrh	r2, [r4, #0]
 4212              	.LVL518:
 4213 14ee 0FFA8EF3 		sxth	r3, lr
 4214              	.LVL519:
 4215 14f2 10B2     		sxth	r0, r2
 4216              	.LVL520:
 4217 14f4 6788     		ldrh	r7, [r4, #2]
 4218 14f6 6E88     		ldrh	r6, [r5, #2]
 4219 14f8 9842     		cmp	r0, r3
 698:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 4220              		.loc 1 698 0
 4221 14fa 38B2     		sxth	r0, r7
 4222 14fc 33B2     		sxth	r3, r6
 696:../Source Files/lpc_ssp_glcd.c **** 		if(p2->x > p1->x)
 4223              		.loc 1 696 0
 4224 14fe 13DD     		ble	.L285
 698:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 4225              		.loc 1 698 0
 4226 1500 9842     		cmp	r0, r3
 4227 1502 1FFA8EFC 		uxth	ip, lr
 4228 1506 07DD     		ble	.L286
 4229              	.LVL521:
 701:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 4230              		.loc 1 701 0
 4231 1508 B6B2     		uxth	r6, r6
 4232              	.LVL522:
 700:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 4233              		.loc 1 700 0
 4234 150a 013A     		subs	r2, r2, #1
 4235              	.LVL523:
 702:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p1->y+1,width-1,height-1,fill_color);
 4236              		.loc 1 702 0
 4237 150c 0CF10100 		add	r0, ip, #1
 4238 1510 731C     		adds	r3, r6, #1
 4239 1512 CCEB0202 		rsb	r2, ip, r2
 4240              	.LVL524:
 4241 1516 11E0     		b	.L293
 4242              	.LVL525:
 4243              	.L286:
 707:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 4244              		.loc 1 707 0
 4245 1518 BFB2     		uxth	r7, r7
 4246              	.LVL526:
 706:../Source Files/lpc_ssp_glcd.c **** 				width = p2->x - p1->x;
 4247              		.loc 1 706 0
 4248 151a 013A     		subs	r2, r2, #1
 4249              	.LVL527:
 708:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p1->x+1,p2->y+1,width-1,height-1,fill_color);
 4250              		.loc 1 708 0
 4251 151c 0CF10100 		add	r0, ip, #1
 4252 1520 7B1C     		adds	r3, r7, #1
 4253 1522 CCEB0202 		rsb	r2, ip, r2
 4254 1526 18E0     		b	.L291
 4255              	.LVL528:
 4256              	.L285:
 713:../Source Files/lpc_ssp_glcd.c **** 			if(p2->y > p1->y)
 4257              		.loc 1 713 0
 4258 1528 9842     		cmp	r0, r3
 4259 152a 92B2     		uxth	r2, r2
 4260 152c 0EDD     		ble	.L287
 4261              	.LVL529:
 716:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 4262              		.loc 1 716 0
 4263 152e B6B2     		uxth	r6, r6
 4264              	.LVL530:
 715:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 4265              		.loc 1 715 0
 4266 1530 0EF1FF3E 		add	lr, lr, #-1
 4267              	.LVL531:
 717:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 4268              		.loc 1 717 0
 4269 1534 501C     		adds	r0, r2, #1
 4270 1536 731C     		adds	r3, r6, #1
 4271 1538 C2EB0E02 		rsb	r2, r2, lr
 4272              	.LVL532:
 4273              	.L293:
 716:../Source Files/lpc_ssp_glcd.c **** 				height = p2->y - p1->y;
 4274              		.loc 1 716 0
 4275 153c 013F     		subs	r7, r7, #1
 717:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p1->y+1,width-1,height-1,fill_color);
 4276              		.loc 1 717 0
 4277 153e BE1B     		subs	r6, r7, r6
 4278 1540 0091     		str	r1, [sp, #0]
 4279 1542 80B2     		uxth	r0, r0
 4280 1544 99B2     		uxth	r1, r3
 4281 1546 92B2     		uxth	r2, r2
 4282 1548 B3B2     		uxth	r3, r6
 4283 154a 0DE0     		b	.L292
 4284              	.L287:
 4285              	.LVL533:
 722:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 4286              		.loc 1 722 0
 4287 154c BFB2     		uxth	r7, r7
 4288              	.LVL534:
 721:../Source Files/lpc_ssp_glcd.c **** 				width = p1->x - p2->x;
 4289              		.loc 1 721 0
 4290 154e 0EF1FF3C 		add	ip, lr, #-1
 723:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 4291              		.loc 1 723 0
 4292 1552 501C     		adds	r0, r2, #1
 4293 1554 7B1C     		adds	r3, r7, #1
 4294 1556 C2EB0C02 		rsb	r2, r2, ip
 4295              	.LVL535:
 4296              	.L291:
 722:../Source Files/lpc_ssp_glcd.c **** 				height = p1->y - p2->y;
 4297              		.loc 1 722 0
 4298 155a 013E     		subs	r6, r6, #1
 723:../Source Files/lpc_ssp_glcd.c **** 				GLCD_Window_Fill(p2->x+1,p2->y+1,width-1,height-1,fill_color);
 4299              		.loc 1 723 0
 4300 155c F71B     		subs	r7, r6, r7
 4301 155e 0091     		str	r1, [sp, #0]
 4302 1560 80B2     		uxth	r0, r0
 4303 1562 99B2     		uxth	r1, r3
 4304 1564 92B2     		uxth	r2, r2
 4305 1566 BBB2     		uxth	r3, r7
 4306              	.L292:
 4307 1568 FFF7FEFF 		bl	GLCD_Window_Fill
 4308              	.LVL536:
 4309              	.L284:
 730:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p2->x, p1->y, color);      // Draw the outer border 4 sides
 4310              		.loc 1 730 0
 4311 156c B5F90210 		ldrsh	r1, [r5, #2]
 4312 1570 B5F90000 		ldrsh	r0, [r5, #0]
 4313 1574 B4F90020 		ldrsh	r2, [r4, #0]
 4314 1578 0B46     		mov	r3, r1
 4315 157a CDF80080 		str	r8, [sp, #0]
 4316 157e FFF7FEFF 		bl	GLCD_Line
 4317              	.LVL537:
 731:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p2->y, p2->x, p2->y, color);
 4318              		.loc 1 731 0
 4319 1582 B4F90210 		ldrsh	r1, [r4, #2]
 4320 1586 B5F90000 		ldrsh	r0, [r5, #0]
 4321 158a B4F90020 		ldrsh	r2, [r4, #0]
 4322 158e 0B46     		mov	r3, r1
 4323 1590 CDF80080 		str	r8, [sp, #0]
 4324 1594 FFF7FEFF 		bl	GLCD_Line
 4325              	.LVL538:
 732:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p1->x, p1->y, p1->x, p2->y, color);
 4326              		.loc 1 732 0
 4327 1598 B5F90000 		ldrsh	r0, [r5, #0]
 4328 159c B5F90210 		ldrsh	r1, [r5, #2]
 4329 15a0 B4F90230 		ldrsh	r3, [r4, #2]
 4330 15a4 0246     		mov	r2, r0
 4331 15a6 CDF80080 		str	r8, [sp, #0]
 4332 15aa FFF7FEFF 		bl	GLCD_Line
 4333              	.LVL539:
 733:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 4334              		.loc 1 733 0
 4335 15ae B4F90000 		ldrsh	r0, [r4, #0]
 4336 15b2 B5F90210 		ldrsh	r1, [r5, #2]
 4337 15b6 B4F90230 		ldrsh	r3, [r4, #2]
 4338 15ba 0246     		mov	r2, r0
 4339 15bc CDF82080 		str	r8, [sp, #32]
 735:../Source Files/lpc_ssp_glcd.c **** }
 4340              		.loc 1 735 0
 4341 15c0 02B0     		add	sp, sp, #8
 4342 15c2 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 733:../Source Files/lpc_ssp_glcd.c **** 		GLCD_Line(p2->x, p1->y, p2->x, p2->y, color);
 4343              		.loc 1 733 0
 4344 15c6 FFF7FEBF 		b	GLCD_Line
 4345              	.LVL540:
 4346              		.cfi_endproc
 4347              	.LFE77:
 4349              		.align	1
 4350              		.global	GLCD_Bitmap
 4351              		.thumb
 4352              		.thumb_func
 4354              	GLCD_Bitmap:
 4355              	.LFB74:
 560:../Source Files/lpc_ssp_glcd.c **** {
 4356              		.loc 1 560 0
 4357              		.cfi_startproc
 4358              		@ args = 4, pretend = 0, frame = 0
 4359              		@ frame_needed = 0, uses_anonymous_args = 0
 4360              	.LVL541:
 4361 15ca 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 4362              	.LCFI34:
 4363              		.cfi_def_cfa_offset 32
 4364              		.cfi_offset 4, -32
 4365              		.cfi_offset 5, -28
 4366              		.cfi_offset 6, -24
 4367              		.cfi_offset 7, -20
 4368              		.cfi_offset 8, -16
 4369              		.cfi_offset 9, -12
 4370              		.cfi_offset 10, -8
 4371              		.cfi_offset 14, -4
 560:../Source Files/lpc_ssp_glcd.c **** {
 4372              		.loc 1 560 0
 4373 15ce DDF82080 		ldr	r8, [sp, #32]
 4374 15d2 1746     		mov	r7, r2
 4375 15d4 9946     		mov	r9, r3
 563:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (x,y,w,h);
 4376              		.loc 1 563 0
 4377 15d6 FFF7FEFF 		bl	GLCD_Set_Loc
 4378              	.LVL542:
 565:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_start();
 4379              		.loc 1 565 0
 4380 15da FEF711FD 		bl	wr_dat_start
 4381              	.LVL543:
 566:../Source Files/lpc_ssp_glcd.c **** 	k = 16;
 4382              		.loc 1 566 0
 4383 15de 1025     		movs	r5, #16
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 4384              		.loc 1 567 0
 4385 15e0 0026     		movs	r6, #0
 4386              	.LVL544:
 4387              	.L295:
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 4388              		.loc 1 567 0 is_stmt 0 discriminator 1
 4389 15e2 4E45     		cmp	r6, r9
 4390 15e4 0DD2     		bcs	.L297
 559:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 4391              		.loc 1 559 0 is_stmt 1
 4392 15e6 08EB450A 		add	sl, r8, r5, lsl #1
 4393 15ea 0024     		movs	r4, #0
 4394              	.LVL545:
 4395              	.L298:
 569:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 4396              		.loc 1 569 0 discriminator 1
 4397 15ec BC42     		cmp	r4, r7
 4398 15ee 05D2     		bcs	.L299
 4399              	.L296:
 571:../Source Files/lpc_ssp_glcd.c **** 			wr_dat_only(bitmap[k++]);
 4400              		.loc 1 571 0 discriminator 2
 4401 15f0 3AF81400 		ldrh	r0, [sl, r4, lsl #1]
 4402 15f4 FEF718FD 		bl	wr_dat_only
 4403              	.LVL546:
 569:../Source Files/lpc_ssp_glcd.c **** 		for (i = 0; i < w; i++)
 4404              		.loc 1 569 0 discriminator 2
 4405 15f8 0134     		adds	r4, r4, #1
 4406              	.LVL547:
 4407 15fa F7E7     		b	.L298
 4408              	.L299:
 559:../Source Files/lpc_ssp_glcd.c **** void GLCD_Bitmap (uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t *bitmap)
 4409              		.loc 1 559 0
 4410 15fc ED19     		adds	r5, r5, r7
 567:../Source Files/lpc_ssp_glcd.c **** 	for (j = 0; j < h; j++)
 4411              		.loc 1 567 0
 4412 15fe 0136     		adds	r6, r6, #1
 4413              	.LVL548:
 4414 1600 EFE7     		b	.L295
 4415              	.LVL549:
 4416              	.L297:
 575:../Source Files/lpc_ssp_glcd.c **** }
 4417              		.loc 1 575 0
 4418 1602 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 574:../Source Files/lpc_ssp_glcd.c **** 	wr_dat_stop();
 4419              		.loc 1 574 0
 4420 1606 FEF709BD 		b	wr_dat_stop
 4421              	.LVL550:
 4422              		.cfi_endproc
 4423              	.LFE74:
 4425              		.align	1
 4426              		.global	GLCD_Display_Home
 4427              		.thumb
 4428              		.thumb_func
 4430              	GLCD_Display_Home:
 4431              	.LFB60:
 176:../Source Files/lpc_ssp_glcd.c **** {
 4432              		.loc 1 176 0
 4433              		.cfi_startproc
 4434              		@ args = 0, pretend = 0, frame = 0
 4435              		@ frame_needed = 0, uses_anonymous_args = 0
 4436              		@ link register save eliminated.
 177:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 4437              		.loc 1 177 0
 4438 160a 0020     		movs	r0, #0
 4439 160c 0146     		mov	r1, r0
 4440 160e 4FF4A072 		mov	r2, #320
 4441 1612 F023     		movs	r3, #240
 178:../Source Files/lpc_ssp_glcd.c **** }
 4442              		.loc 1 178 0
 177:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Set_Loc (0,0,320,240);
 4443              		.loc 1 177 0
 4444 1614 FFF7FEBF 		b	GLCD_Set_Loc
 4445              	.LVL551:
 4446              		.cfi_endproc
 4447              	.LFE60:
 4449              		.align	1
 4450              		.global	GLCD_Driver_OutCtrl
 4451              		.thumb
 4452              		.thumb_func
 4454              	GLCD_Driver_OutCtrl:
 4455              	.LFB57:
  96:../Source Files/lpc_ssp_glcd.c **** {
 4456              		.loc 1 96 0
 4457              		.cfi_startproc
 4458              		@ args = 0, pretend = 0, frame = 0
 4459              		@ frame_needed = 0, uses_anonymous_args = 0
 4460              	.LVL552:
 4461 1618 10B5     		push	{r4, lr}
 4462              	.LCFI35:
 4463              		.cfi_def_cfa_offset 8
 4464              		.cfi_offset 4, -8
 4465              		.cfi_offset 14, -4
  96:../Source Files/lpc_ssp_glcd.c **** {
 4466              		.loc 1 96 0
 4467 161a 0446     		mov	r4, r0
  97:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x01);    // Driver Output Control
 4468              		.loc 1 97 0
 4469 161c 0120     		movs	r0, #1
 4470              	.LVL553:
 4471 161e FFF7FEFF 		bl	Write_Command_Glcd
 4472              	.LVL554:
  99:../Source Files/lpc_ssp_glcd.c **** 	switch (drv)
 4473              		.loc 1 99 0
 4474 1622 032C     		cmp	r4, #3
 4475 1624 12D8     		bhi	.L301
 4476 1626 DFE804F0 		tbb	[pc, r4]
 4477              	.L307:
 4478 162a 02       		.byte	(.L303-.L307)/2
 4479 162b 05       		.byte	(.L304-.L307)/2
 4480 162c 08       		.byte	(.L305-.L307)/2
 4481 162d 0B       		.byte	(.L306-.L307)/2
 4482              		.align	1
 4483              	.L303:
 102:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x72EF);       // Page 36-39 of SSD2119 datasheet
 4484              		.loc 1 102 0
 4485 162e 47F2EF20 		movw	r0, #29423
 4486 1632 07E0     		b	.L308
 4487              	.L304:
 106:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x70EF);       // Page 36-39 of SSD2119 datasheet
 4488              		.loc 1 106 0
 4489 1634 47F2EF00 		movw	r0, #28911
 4490 1638 04E0     		b	.L308
 4491              	.L305:
 110:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x32EF);       // Page 36-39 of SSD2119 datasheet
 4492              		.loc 1 110 0
 4493 163a 43F2EF20 		movw	r0, #13039
 4494 163e 01E0     		b	.L308
 4495              	.L306:
 114:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 4496              		.loc 1 114 0
 4497 1640 43F2EF00 		movw	r0, #12527
 4498              	.L308:
 120:../Source Files/lpc_ssp_glcd.c **** }
 4499              		.loc 1 120 0
 4500 1644 BDE81040 		pop	{r4, lr}
 114:../Source Files/lpc_ssp_glcd.c **** 		Write_Data_Glcd(0x30EF);       // Page 36-39 of SSD2119 datasheet
 4501              		.loc 1 114 0
 4502 1648 FFF7FEBF 		b	Write_Data_Glcd
 4503              	.LVL555:
 4504              	.L301:
 4505 164c 10BD     		pop	{r4, pc}
 4506              		.cfi_endproc
 4507              	.LFE57:
 4509              		.align	1
 4510              		.global	GLCD_Init
 4511              		.thumb
 4512              		.thumb_func
 4514              	GLCD_Init:
 4515              	.LFB61:
 187:../Source Files/lpc_ssp_glcd.c **** {
 4516              		.loc 1 187 0
 4517              		.cfi_startproc
 4518              		@ args = 0, pretend = 0, frame = 0
 4519              		@ frame_needed = 0, uses_anonymous_args = 0
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 4520              		.loc 1 188 0
 4521 164e 0121     		movs	r1, #1
 187:../Source Files/lpc_ssp_glcd.c **** {
 4522              		.loc 1 187 0
 4523 1650 10B5     		push	{r4, lr}
 4524              	.LCFI36:
 4525              		.cfi_def_cfa_offset 8
 4526              		.cfi_offset 4, -8
 4527              		.cfi_offset 14, -4
 188:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_RS, 1);   // RS as output
 4528              		.loc 1 188 0
 4529 1652 0220     		movs	r0, #2
 4530 1654 0A46     		mov	r2, r1
 4531 1656 FFF7FEFF 		bl	GPIO_SetDir
 4532              	.LVL556:
 189:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(0, LCD_RST, 1);  // Reset as Output
 4533              		.loc 1 189 0
 4534 165a 0020     		movs	r0, #0
 4535 165c 2021     		movs	r1, #32
 4536 165e 0122     		movs	r2, #1
 4537 1660 FFF7FEFF 		bl	GPIO_SetDir
 4538              	.LVL557:
 190:../Source Files/lpc_ssp_glcd.c **** 	GPIO_SetDir(2, LCD_BK, 1);   // Backlight as output
 4539              		.loc 1 190 0
 4540 1664 4FF48071 		mov	r1, #256
 4541 1668 0122     		movs	r2, #1
 4542 166a 0220     		movs	r0, #2
 4543 166c FFF7FEFF 		bl	GPIO_SetDir
 4544              	.LVL558:
 192:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 4545              		.loc 1 192 0
 4546 1670 0220     		movs	r0, #2
 4547 1672 FFF7FEFF 		bl	delay_ms
 4548              	.LVL559:
 193:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Reset();                // Reset GLCD
 4549              		.loc 1 193 0
 4550 1676 FFF7FEFF 		bl	GLCD_Reset
 4551              	.LVL560:
 194:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Backlight(ENABLE);
 4552              		.loc 1 194 0
 4553 167a 0120     		movs	r0, #1
 4554 167c FFF7FEFF 		bl	GLCD_Backlight
 4555              	.LVL561:
 195:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(2);
 4556              		.loc 1 195 0
 4557 1680 0220     		movs	r0, #2
 4558 1682 FFF7FEFF 		bl	delay_ms
 4559              	.LVL562:
 197:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x28);    // VCOM OTP
 4560              		.loc 1 197 0
 4561 1686 2820     		movs	r0, #40
 4562 1688 FFF7FEFF 		bl	Write_Command_Glcd
 4563              	.LVL563:
 198:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0006);     // Page 55-56 of SSD2119 datasheet
 4564              		.loc 1 198 0
 4565 168c 0620     		movs	r0, #6
 4566 168e FFF7FEFF 		bl	Write_Data_Glcd
 4567              	.LVL564:
 200:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x00);    // start Oscillator
 4568              		.loc 1 200 0
 4569 1692 0020     		movs	r0, #0
 4570 1694 FFF7FEFF 		bl	Write_Command_Glcd
 4571              	.LVL565:
 201:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0001);     // Page 36 of SSD2119 datasheet
 4572              		.loc 1 201 0
 4573 1698 0120     		movs	r0, #1
 4574 169a FFF7FEFF 		bl	Write_Data_Glcd
 4575              	.LVL566:
 203:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x10);    // Sleep mode
 4576              		.loc 1 203 0
 4577 169e 1020     		movs	r0, #16
 4578 16a0 FFF7FEFF 		bl	Write_Command_Glcd
 4579              	.LVL567:
 204:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 4580              		.loc 1 204 0
 4581 16a4 0020     		movs	r0, #0
 4582 16a6 FFF7FEFF 		bl	Write_Data_Glcd
 4583              	.LVL568:
 206:../Source Files/lpc_ssp_glcd.c **** 	GLCD_Driver_OutCtrl (TOP_LEFT);
 4584              		.loc 1 206 0
 4585 16aa 0020     		movs	r0, #0
 4586 16ac FFF7FEFF 		bl	GLCD_Driver_OutCtrl
 4587              	.LVL569:
 208:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x02);    // LCD Driving Waveform Control
 4588              		.loc 1 208 0
 4589 16b0 0220     		movs	r0, #2
 4590 16b2 FFF7FEFF 		bl	Write_Command_Glcd
 4591              	.LVL570:
 209:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0600);     // Page 40-42 of SSD2119 datasheet
 4592              		.loc 1 209 0
 4593 16b6 4FF4C060 		mov	r0, #1536
 4594 16ba FFF7FEFF 		bl	Write_Data_Glcd
 4595              	.LVL571:
 211:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x03);    // Power Control 1
 4596              		.loc 1 211 0
 4597 16be 0320     		movs	r0, #3
 4598 16c0 FFF7FEFF 		bl	Write_Command_Glcd
 4599              	.LVL572:
 212:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6A38);     // Page 43-44 of SSD2119 datasheet 6A38
 4600              		.loc 1 212 0
 4601 16c4 46F63820 		movw	r0, #27192
 4602 16c8 FFF7FEFF 		bl	Write_Data_Glcd
 4603              	.LVL573:
 214:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x11);    // Entry Mode
 4604              		.loc 1 214 0
 4605 16cc 1120     		movs	r0, #17
 4606 16ce FFF7FEFF 		bl	Write_Command_Glcd
 4607              	.LVL574:
 215:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x6870);     // Page 50-52 of SSD2119 datasheet
 4608              		.loc 1 215 0
 4609 16d2 46F67000 		movw	r0, #26736
 4610 16d6 FFF7FEFF 		bl	Write_Data_Glcd
 4611              	.LVL575:
 217:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0F);    // Gate Scan Position
 4612              		.loc 1 217 0
 4613 16da 0F20     		movs	r0, #15
 4614 16dc FFF7FEFF 		bl	Write_Command_Glcd
 4615              	.LVL576:
 218:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 49 of SSD2119 datasheet
 4616              		.loc 1 218 0
 4617 16e0 0020     		movs	r0, #0
 4618 16e2 FFF7FEFF 		bl	Write_Data_Glcd
 4619              	.LVL577:
 220:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0B);    // Frame Cycle Control
 4620              		.loc 1 220 0
 4621 16e6 0B20     		movs	r0, #11
 4622 16e8 FFF7FEFF 		bl	Write_Command_Glcd
 4623              	.LVL578:
 221:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x5308);     // Page 45 of SSD2119 datasheet
 4624              		.loc 1 221 0
 4625 16ec 45F20830 		movw	r0, #21256
 4626 16f0 FFF7FEFF 		bl	Write_Data_Glcd
 4627              	.LVL579:
 223:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0C);    // Power Control 2
 4628              		.loc 1 223 0
 4629 16f4 0C20     		movs	r0, #12
 4630 16f6 FFF7FEFF 		bl	Write_Command_Glcd
 4631              	.LVL580:
 224:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0003);     // Page 47 of SSD2119 datasheet
 4632              		.loc 1 224 0
 4633 16fa 0320     		movs	r0, #3
 4634 16fc FFF7FEFF 		bl	Write_Data_Glcd
 4635              	.LVL581:
 226:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0D);    // Power Control 3
 4636              		.loc 1 226 0
 4637 1700 0D20     		movs	r0, #13
 4638 1702 FFF7FEFF 		bl	Write_Command_Glcd
 4639              	.LVL582:
 227:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x000A);     // Page 48 of SSD2119 datasheet
 4640              		.loc 1 227 0
 4641 1706 0A20     		movs	r0, #10
 4642 1708 FFF7FEFF 		bl	Write_Data_Glcd
 4643              	.LVL583:
 229:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x0E);    // Power Control 4
 4644              		.loc 1 229 0
 4645 170c 0E20     		movs	r0, #14
 4646 170e FFF7FEFF 		bl	Write_Command_Glcd
 4647              	.LVL584:
 230:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x2E00);     // Page 48 of SSD2119 datasheet
 4648              		.loc 1 230 0
 4649 1712 4FF43850 		mov	r0, #11776
 4650 1716 FFF7FEFF 		bl	Write_Data_Glcd
 4651              	.LVL585:
 232:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x1E);    // Power Control 5
 4652              		.loc 1 232 0
 4653 171a 1E20     		movs	r0, #30
 4654 171c FFF7FEFF 		bl	Write_Command_Glcd
 4655              	.LVL586:
 233:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x00BE);     // Page 53 of SSD2119 datasheet
 4656              		.loc 1 233 0
 4657 1720 BE20     		movs	r0, #190
 4658 1722 FFF7FEFF 		bl	Write_Data_Glcd
 4659              	.LVL587:
 235:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x25);    // Frame Frequency Control
 4660              		.loc 1 235 0
 4661 1726 2520     		movs	r0, #37
 4662 1728 FFF7FEFF 		bl	Write_Command_Glcd
 4663              	.LVL588:
 236:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x8000);     // Page 53 of SSD2119 datasheet  8000
 4664              		.loc 1 236 0
 4665 172c 4FF40040 		mov	r0, #32768
 4666 1730 FFF7FEFF 		bl	Write_Data_Glcd
 4667              	.LVL589:
 238:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x26);    // Analog setting
 4668              		.loc 1 238 0
 4669 1734 2620     		movs	r0, #38
 4670 1736 FFF7FEFF 		bl	Write_Command_Glcd
 4671              	.LVL590:
 239:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x7800);     // Page 54 of SSD2119 datasheet
 4672              		.loc 1 239 0
 4673 173a 4FF4F040 		mov	r0, #30720
 4674 173e FFF7FEFF 		bl	Write_Data_Glcd
 4675              	.LVL591:
 241:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4E);    // Ram Address Set
 4676              		.loc 1 241 0
 4677 1742 4E20     		movs	r0, #78
 4678 1744 FFF7FEFF 		bl	Write_Command_Glcd
 4679              	.LVL592:
 242:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 4680              		.loc 1 242 0
 4681 1748 0020     		movs	r0, #0
 4682 174a FFF7FEFF 		bl	Write_Data_Glcd
 4683              	.LVL593:
 244:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x4F);    // Ram Address Set
 4684              		.loc 1 244 0
 4685 174e 4F20     		movs	r0, #79
 4686 1750 FFF7FEFF 		bl	Write_Command_Glcd
 4687              	.LVL594:
 245:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);     // Page 58 of SSD2119 datasheet
 4688              		.loc 1 245 0
 4689 1754 0020     		movs	r0, #0
 4690 1756 FFF7FEFF 		bl	Write_Data_Glcd
 4691              	.LVL595:
 247:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x12);    // Sleep mode
 4692              		.loc 1 247 0
 4693 175a 1220     		movs	r0, #18
 4694 175c FFF7FEFF 		bl	Write_Command_Glcd
 4695              	.LVL596:
 248:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x08D9);     // Page 49 of SSD2119 datasheet
 4696              		.loc 1 248 0
 4697 1760 40F6D900 		movw	r0, #2265
 4698 1764 FFF7FEFF 		bl	Write_Data_Glcd
 4699              	.LVL597:
 251:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x30);
 4700              		.loc 1 251 0
 4701 1768 3020     		movs	r0, #48
 4702 176a FFF7FEFF 		bl	Write_Command_Glcd
 4703              	.LVL598:
 252:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0000);
 4704              		.loc 1 252 0
 4705 176e 0020     		movs	r0, #0
 4706 1770 FFF7FEFF 		bl	Write_Data_Glcd
 4707              	.LVL599:
 254:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x31);
 4708              		.loc 1 254 0
 4709 1774 3120     		movs	r0, #49
 4710 1776 FFF7FEFF 		bl	Write_Command_Glcd
 4711              	.LVL600:
 255:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0104);
 4712              		.loc 1 255 0
 4713 177a 4FF48270 		mov	r0, #260
 4714 177e FFF7FEFF 		bl	Write_Data_Glcd
 4715              	.LVL601:
 257:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x32);
 4716              		.loc 1 257 0
 4717 1782 3220     		movs	r0, #50
 4718 1784 FFF7FEFF 		bl	Write_Command_Glcd
 4719              	.LVL602:
 258:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0100);
 4720              		.loc 1 258 0
 4721 1788 4FF48070 		mov	r0, #256
 4722 178c FFF7FEFF 		bl	Write_Data_Glcd
 4723              	.LVL603:
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 4724              		.loc 1 261 0
 4725 1790 40F20534 		movw	r4, #773
 260:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x33);
 4726              		.loc 1 260 0
 4727 1794 3320     		movs	r0, #51
 4728 1796 FFF7FEFF 		bl	Write_Command_Glcd
 4729              	.LVL604:
 261:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 4730              		.loc 1 261 0
 4731 179a 2046     		mov	r0, r4
 4732 179c FFF7FEFF 		bl	Write_Data_Glcd
 4733              	.LVL605:
 263:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x34);
 4734              		.loc 1 263 0
 4735 17a0 3420     		movs	r0, #52
 4736 17a2 FFF7FEFF 		bl	Write_Command_Glcd
 4737              	.LVL606:
 264:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0505);
 4738              		.loc 1 264 0
 4739 17a6 40F20550 		movw	r0, #1285
 4740 17aa FFF7FEFF 		bl	Write_Data_Glcd
 4741              	.LVL607:
 266:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x35);
 4742              		.loc 1 266 0
 4743 17ae 3520     		movs	r0, #53
 4744 17b0 FFF7FEFF 		bl	Write_Command_Glcd
 4745              	.LVL608:
 267:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0305);
 4746              		.loc 1 267 0
 4747 17b4 2046     		mov	r0, r4
 4748 17b6 FFF7FEFF 		bl	Write_Data_Glcd
 4749              	.LVL609:
 269:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x36);
 4750              		.loc 1 269 0
 4751 17ba 3620     		movs	r0, #54
 4752 17bc FFF7FEFF 		bl	Write_Command_Glcd
 4753              	.LVL610:
 270:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0707);
 4754              		.loc 1 270 0
 4755 17c0 40F20770 		movw	r0, #1799
 4756 17c4 FFF7FEFF 		bl	Write_Data_Glcd
 4757              	.LVL611:
 272:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x37);
 4758              		.loc 1 272 0
 4759 17c8 3720     		movs	r0, #55
 4760 17ca FFF7FEFF 		bl	Write_Command_Glcd
 4761              	.LVL612:
 273:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0300);
 4762              		.loc 1 273 0
 4763 17ce 4FF44070 		mov	r0, #768
 4764 17d2 FFF7FEFF 		bl	Write_Data_Glcd
 4765              	.LVL613:
 275:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3A);
 4766              		.loc 1 275 0
 4767 17d6 3A20     		movs	r0, #58
 4768 17d8 FFF7FEFF 		bl	Write_Command_Glcd
 4769              	.LVL614:
 276:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x1200);
 4770              		.loc 1 276 0
 4771 17dc 4FF49050 		mov	r0, #4608
 4772 17e0 FFF7FEFF 		bl	Write_Data_Glcd
 4773              	.LVL615:
 278:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x3B);
 4774              		.loc 1 278 0
 4775 17e4 3B20     		movs	r0, #59
 4776 17e6 FFF7FEFF 		bl	Write_Command_Glcd
 4777              	.LVL616:
 279:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0800);
 4778              		.loc 1 279 0
 4779 17ea 4FF40060 		mov	r0, #2048
 4780 17ee FFF7FEFF 		bl	Write_Data_Glcd
 4781              	.LVL617:
 281:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x07);      // Display Control
 4782              		.loc 1 281 0
 4783 17f2 0720     		movs	r0, #7
 4784 17f4 FFF7FEFF 		bl	Write_Command_Glcd
 4785              	.LVL618:
 282:../Source Files/lpc_ssp_glcd.c **** 	Write_Data_Glcd(0x0033);       // Page 45 of SSD2119 datasheet
 4786              		.loc 1 282 0
 4787 17f8 3320     		movs	r0, #51
 4788 17fa FFF7FEFF 		bl	Write_Data_Glcd
 4789              	.LVL619:
 284:../Source Files/lpc_ssp_glcd.c **** 	delay_ms(5);
 4790              		.loc 1 284 0
 4791 17fe 0520     		movs	r0, #5
 4792 1800 FFF7FEFF 		bl	delay_ms
 4793              	.LVL620:
 286:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 4794              		.loc 1 286 0
 4795 1804 2220     		movs	r0, #34
 287:../Source Files/lpc_ssp_glcd.c **** }
 4796              		.loc 1 287 0
 4797 1806 BDE81040 		pop	{r4, lr}
 286:../Source Files/lpc_ssp_glcd.c **** 	Write_Command_Glcd(0x22);    // RAM data write/read
 4798              		.loc 1 286 0
 4799 180a FFF7FEBF 		b	Write_Command_Glcd
 4800              	.LVL621:
 4801              		.cfi_endproc
 4802              	.LFE61:
 4804              		.global	default5x7
 4805              		.global	Font_24x16
 4806              		.comm	I2C_Rx_Buf,64,1
 4807              		.comm	I2C_Tx_Buf,64,1
 4808              		.comm	Rx_Buf1,64,1
 4809              		.comm	Tx_Buf1,64,1
 4810              		.comm	TxIntStat,1,1
 4811              		.comm	rb,528,4
 4812              		.comm	EscFlag,2,2
 4813              		.section	.rodata
 4814              		.align	1
 4815              		.set	.LANCHOR2,. + 0
 4816              		.set	.LANCHOR3,. + 4344
 4819              	Font_24x16:
 4820 0000 0000     		.short	0
 4821 0002 0000     		.short	0
 4822 0004 0000     		.short	0
 4823 0006 0000     		.short	0
 4824 0008 0000     		.short	0
 4825 000a 0000     		.short	0
 4826 000c 0000     		.short	0
 4827 000e 0000     		.short	0
 4828 0010 0000     		.short	0
 4829 0012 0000     		.short	0
 4830 0014 0000     		.short	0
 4831 0016 0000     		.short	0
 4832 0018 0000     		.short	0
 4833 001a 0000     		.short	0
 4834 001c 0000     		.short	0
 4835 001e 0000     		.short	0
 4836 0020 0000     		.short	0
 4837 0022 0000     		.short	0
 4838 0024 0000     		.short	0
 4839 0026 0000     		.short	0
 4840 0028 0000     		.short	0
 4841 002a 0000     		.short	0
 4842 002c 0000     		.short	0
 4843 002e 0000     		.short	0
 4844 0030 0000     		.short	0
 4845 0032 8001     		.short	384
 4846 0034 8001     		.short	384
 4847 0036 8001     		.short	384
 4848 0038 8001     		.short	384
 4849 003a 8001     		.short	384
 4850 003c 8001     		.short	384
 4851 003e 8001     		.short	384
 4852 0040 8001     		.short	384
 4853 0042 8001     		.short	384
 4854 0044 8001     		.short	384
 4855 0046 8001     		.short	384
 4856 0048 8001     		.short	384
 4857 004a 8001     		.short	384
 4858 004c 0000     		.short	0
 4859 004e 0000     		.short	0
 4860 0050 8001     		.short	384
 4861 0052 8001     		.short	384
 4862 0054 0000     		.short	0
 4863 0056 0000     		.short	0
 4864 0058 0000     		.short	0
 4865 005a 0000     		.short	0
 4866 005c 0000     		.short	0
 4867 005e 0000     		.short	0
 4868 0060 0000     		.short	0
 4869 0062 0000     		.short	0
 4870 0064 CC00     		.short	204
 4871 0066 CC00     		.short	204
 4872 0068 CC00     		.short	204
 4873 006a CC00     		.short	204
 4874 006c CC00     		.short	204
 4875 006e CC00     		.short	204
 4876 0070 0000     		.short	0
 4877 0072 0000     		.short	0
 4878 0074 0000     		.short	0
 4879 0076 0000     		.short	0
 4880 0078 0000     		.short	0
 4881 007a 0000     		.short	0
 4882 007c 0000     		.short	0
 4883 007e 0000     		.short	0
 4884 0080 0000     		.short	0
 4885 0082 0000     		.short	0
 4886 0084 0000     		.short	0
 4887 0086 0000     		.short	0
 4888 0088 0000     		.short	0
 4889 008a 0000     		.short	0
 4890 008c 0000     		.short	0
 4891 008e 0000     		.short	0
 4892 0090 0000     		.short	0
 4893 0092 0000     		.short	0
 4894 0094 0000     		.short	0
 4895 0096 0000     		.short	0
 4896 0098 0000     		.short	0
 4897 009a 0000     		.short	0
 4898 009c 600C     		.short	3168
 4899 009e 600C     		.short	3168
 4900 00a0 600C     		.short	3168
 4901 00a2 3006     		.short	1584
 4902 00a4 3006     		.short	1584
 4903 00a6 FE1F     		.short	8190
 4904 00a8 FE1F     		.short	8190
 4905 00aa 3006     		.short	1584
 4906 00ac 3807     		.short	1848
 4907 00ae 1803     		.short	792
 4908 00b0 FE1F     		.short	8190
 4909 00b2 FE1F     		.short	8190
 4910 00b4 1803     		.short	792
 4911 00b6 1803     		.short	792
 4912 00b8 8C01     		.short	396
 4913 00ba 8C01     		.short	396
 4914 00bc 8C01     		.short	396
 4915 00be 0000     		.short	0
 4916 00c0 0000     		.short	0
 4917 00c2 8000     		.short	128
 4918 00c4 E003     		.short	992
 4919 00c6 F80F     		.short	4088
 4920 00c8 9C0E     		.short	3740
 4921 00ca 8C1C     		.short	7308
 4922 00cc 8C18     		.short	6284
 4923 00ce 8C00     		.short	140
 4924 00d0 9800     		.short	152
 4925 00d2 F801     		.short	504
 4926 00d4 E007     		.short	2016
 4927 00d6 800E     		.short	3712
 4928 00d8 801C     		.short	7296
 4929 00da 8C18     		.short	6284
 4930 00dc 8C18     		.short	6284
 4931 00de 9C18     		.short	6300
 4932 00e0 B80C     		.short	3256
 4933 00e2 F00F     		.short	4080
 4934 00e4 E003     		.short	992
 4935 00e6 8000     		.short	128
 4936 00e8 8000     		.short	128
 4937 00ea 0000     		.short	0
 4938 00ec 0000     		.short	0
 4939 00ee 0000     		.short	0
 4940 00f0 0000     		.short	0
 4941 00f2 0000     		.short	0
 4942 00f4 0000     		.short	0
 4943 00f6 0E18     		.short	6158
 4944 00f8 1B0C     		.short	3099
 4945 00fa 110C     		.short	3089
 4946 00fc 1106     		.short	1553
 4947 00fe 1106     		.short	1553
 4948 0100 1103     		.short	785
 4949 0102 1103     		.short	785
 4950 0104 9B01     		.short	411
 4951 0106 8E01     		.short	398
 4952 0108 C038     		.short	14528
 4953 010a C06C     		.short	27840
 4954 010c 6044     		.short	17504
 4955 010e 6044     		.short	17504
 4956 0110 3044     		.short	17456
 4957 0112 3044     		.short	17456
 4958 0114 1844     		.short	17432
 4959 0116 186C     		.short	27672
 4960 0118 0C38     		.short	14348
 4961 011a 0000     		.short	0
 4962 011c 0000     		.short	0
 4963 011e 0000     		.short	0
 4964 0120 0000     		.short	0
 4965 0122 E001     		.short	480
 4966 0124 F003     		.short	1008
 4967 0126 3807     		.short	1848
 4968 0128 1806     		.short	1560
 4969 012a 1806     		.short	1560
 4970 012c 3003     		.short	816
 4971 012e F001     		.short	496
 4972 0130 F000     		.short	240
 4973 0132 F800     		.short	248
 4974 0134 9C31     		.short	12700
 4975 0136 0E33     		.short	13070
 4976 0138 061E     		.short	7686
 4977 013a 061C     		.short	7174
 4978 013c 061C     		.short	7174
 4979 013e 063F     		.short	16134
 4980 0140 FC73     		.short	29692
 4981 0142 F021     		.short	8688
 4982 0144 0000     		.short	0
 4983 0146 0000     		.short	0
 4984 0148 0000     		.short	0
 4985 014a 0000     		.short	0
 4986 014c 0000     		.short	0
 4987 014e 0000     		.short	0
 4988 0150 0000     		.short	0
 4989 0152 0000     		.short	0
 4990 0154 0C00     		.short	12
 4991 0156 0C00     		.short	12
 4992 0158 0C00     		.short	12
 4993 015a 0C00     		.short	12
 4994 015c 0C00     		.short	12
 4995 015e 0C00     		.short	12
 4996 0160 0000     		.short	0
 4997 0162 0000     		.short	0
 4998 0164 0000     		.short	0
 4999 0166 0000     		.short	0
 5000 0168 0000     		.short	0
 5001 016a 0000     		.short	0
 5002 016c 0000     		.short	0
 5003 016e 0000     		.short	0
 5004 0170 0000     		.short	0
 5005 0172 0000     		.short	0
 5006 0174 0000     		.short	0
 5007 0176 0000     		.short	0
 5008 0178 0000     		.short	0
 5009 017a 0000     		.short	0
 5010 017c 0000     		.short	0
 5011 017e 0000     		.short	0
 5012 0180 0000     		.short	0
 5013 0182 0002     		.short	512
 5014 0184 0003     		.short	768
 5015 0186 8001     		.short	384
 5016 0188 C000     		.short	192
 5017 018a C000     		.short	192
 5018 018c 6000     		.short	96
 5019 018e 6000     		.short	96
 5020 0190 3000     		.short	48
 5021 0192 3000     		.short	48
 5022 0194 3000     		.short	48
 5023 0196 3000     		.short	48
 5024 0198 3000     		.short	48
 5025 019a 3000     		.short	48
 5026 019c 3000     		.short	48
 5027 019e 3000     		.short	48
 5028 01a0 6000     		.short	96
 5029 01a2 6000     		.short	96
 5030 01a4 C000     		.short	192
 5031 01a6 C000     		.short	192
 5032 01a8 8001     		.short	384
 5033 01aa 0003     		.short	768
 5034 01ac 0002     		.short	512
 5035 01ae 0000     		.short	0
 5036 01b0 0000     		.short	0
 5037 01b2 2000     		.short	32
 5038 01b4 6000     		.short	96
 5039 01b6 C000     		.short	192
 5040 01b8 8001     		.short	384
 5041 01ba 8001     		.short	384
 5042 01bc 0003     		.short	768
 5043 01be 0003     		.short	768
 5044 01c0 0006     		.short	1536
 5045 01c2 0006     		.short	1536
 5046 01c4 0006     		.short	1536
 5047 01c6 0006     		.short	1536
 5048 01c8 0006     		.short	1536
 5049 01ca 0006     		.short	1536
 5050 01cc 0006     		.short	1536
 5051 01ce 0006     		.short	1536
 5052 01d0 0003     		.short	768
 5053 01d2 0003     		.short	768
 5054 01d4 8001     		.short	384
 5055 01d6 8001     		.short	384
 5056 01d8 C000     		.short	192
 5057 01da 6000     		.short	96
 5058 01dc 2000     		.short	32
 5059 01de 0000     		.short	0
 5060 01e0 0000     		.short	0
 5061 01e2 0000     		.short	0
 5062 01e4 0000     		.short	0
 5063 01e6 0000     		.short	0
 5064 01e8 0000     		.short	0
 5065 01ea 0000     		.short	0
 5066 01ec C000     		.short	192
 5067 01ee C000     		.short	192
 5068 01f0 D806     		.short	1752
 5069 01f2 F807     		.short	2040
 5070 01f4 E001     		.short	480
 5071 01f6 3003     		.short	816
 5072 01f8 3807     		.short	1848
 5073 01fa 0000     		.short	0
 5074 01fc 0000     		.short	0
 5075 01fe 0000     		.short	0
 5076 0200 0000     		.short	0
 5077 0202 0000     		.short	0
 5078 0204 0000     		.short	0
 5079 0206 0000     		.short	0
 5080 0208 0000     		.short	0
 5081 020a 0000     		.short	0
 5082 020c 0000     		.short	0
 5083 020e 0000     		.short	0
 5084 0210 0000     		.short	0
 5085 0212 0000     		.short	0
 5086 0214 0000     		.short	0
 5087 0216 0000     		.short	0
 5088 0218 0000     		.short	0
 5089 021a 0000     		.short	0
 5090 021c 8001     		.short	384
 5091 021e 8001     		.short	384
 5092 0220 8001     		.short	384
 5093 0222 8001     		.short	384
 5094 0224 8001     		.short	384
 5095 0226 FC3F     		.short	16380
 5096 0228 FC3F     		.short	16380
 5097 022a 8001     		.short	384
 5098 022c 8001     		.short	384
 5099 022e 8001     		.short	384
 5100 0230 8001     		.short	384
 5101 0232 8001     		.short	384
 5102 0234 0000     		.short	0
 5103 0236 0000     		.short	0
 5104 0238 0000     		.short	0
 5105 023a 0000     		.short	0
 5106 023c 0000     		.short	0
 5107 023e 0000     		.short	0
 5108 0240 0000     		.short	0
 5109 0242 0000     		.short	0
 5110 0244 0000     		.short	0
 5111 0246 0000     		.short	0
 5112 0248 0000     		.short	0
 5113 024a 0000     		.short	0
 5114 024c 0000     		.short	0
 5115 024e 0000     		.short	0
 5116 0250 0000     		.short	0
 5117 0252 0000     		.short	0
 5118 0254 0000     		.short	0
 5119 0256 0000     		.short	0
 5120 0258 0000     		.short	0
 5121 025a 0000     		.short	0
 5122 025c 0000     		.short	0
 5123 025e 0000     		.short	0
 5124 0260 0000     		.short	0
 5125 0262 8001     		.short	384
 5126 0264 8001     		.short	384
 5127 0266 0001     		.short	256
 5128 0268 0001     		.short	256
 5129 026a 8000     		.short	128
 5130 026c 0000     		.short	0
 5131 026e 0000     		.short	0
 5132 0270 0000     		.short	0
 5133 0272 0000     		.short	0
 5134 0274 0000     		.short	0
 5135 0276 0000     		.short	0
 5136 0278 0000     		.short	0
 5137 027a 0000     		.short	0
 5138 027c 0000     		.short	0
 5139 027e 0000     		.short	0
 5140 0280 0000     		.short	0
 5141 0282 0000     		.short	0
 5142 0284 0000     		.short	0
 5143 0286 0000     		.short	0
 5144 0288 E007     		.short	2016
 5145 028a E007     		.short	2016
 5146 028c 0000     		.short	0
 5147 028e 0000     		.short	0
 5148 0290 0000     		.short	0
 5149 0292 0000     		.short	0
 5150 0294 0000     		.short	0
 5151 0296 0000     		.short	0
 5152 0298 0000     		.short	0
 5153 029a 0000     		.short	0
 5154 029c 0000     		.short	0
 5155 029e 0000     		.short	0
 5156 02a0 0000     		.short	0
 5157 02a2 0000     		.short	0
 5158 02a4 0000     		.short	0
 5159 02a6 0000     		.short	0
 5160 02a8 0000     		.short	0
 5161 02aa 0000     		.short	0
 5162 02ac 0000     		.short	0
 5163 02ae 0000     		.short	0
 5164 02b0 0000     		.short	0
 5165 02b2 0000     		.short	0
 5166 02b4 0000     		.short	0
 5167 02b6 0000     		.short	0
 5168 02b8 0000     		.short	0
 5169 02ba 0000     		.short	0
 5170 02bc 0000     		.short	0
 5171 02be 0000     		.short	0
 5172 02c0 0000     		.short	0
 5173 02c2 C000     		.short	192
 5174 02c4 C000     		.short	192
 5175 02c6 0000     		.short	0
 5176 02c8 0000     		.short	0
 5177 02ca 0000     		.short	0
 5178 02cc 0000     		.short	0
 5179 02ce 0000     		.short	0
 5180 02d0 0000     		.short	0
 5181 02d2 000C     		.short	3072
 5182 02d4 000C     		.short	3072
 5183 02d6 0006     		.short	1536
 5184 02d8 0006     		.short	1536
 5185 02da 0006     		.short	1536
 5186 02dc 0003     		.short	768
 5187 02de 0003     		.short	768
 5188 02e0 0003     		.short	768
 5189 02e2 8003     		.short	896
 5190 02e4 8001     		.short	384
 5191 02e6 8001     		.short	384
 5192 02e8 8001     		.short	384
 5193 02ea C000     		.short	192
 5194 02ec C000     		.short	192
 5195 02ee C000     		.short	192
 5196 02f0 6000     		.short	96
 5197 02f2 6000     		.short	96
 5198 02f4 0000     		.short	0
 5199 02f6 0000     		.short	0
 5200 02f8 0000     		.short	0
 5201 02fa 0000     		.short	0
 5202 02fc 0000     		.short	0
 5203 02fe 0000     		.short	0
 5204 0300 0000     		.short	0
 5205 0302 E003     		.short	992
 5206 0304 F007     		.short	2032
 5207 0306 380E     		.short	3640
 5208 0308 180C     		.short	3096
 5209 030a 0C18     		.short	6156
 5210 030c 0C18     		.short	6156
 5211 030e 0C18     		.short	6156
 5212 0310 0C18     		.short	6156
 5213 0312 0C18     		.short	6156
 5214 0314 0C18     		.short	6156
 5215 0316 0C18     		.short	6156
 5216 0318 0C18     		.short	6156
 5217 031a 0C18     		.short	6156
 5218 031c 180C     		.short	3096
 5219 031e 380E     		.short	3640
 5220 0320 F007     		.short	2032
 5221 0322 E003     		.short	992
 5222 0324 0000     		.short	0
 5223 0326 0000     		.short	0
 5224 0328 0000     		.short	0
 5225 032a 0000     		.short	0
 5226 032c 0000     		.short	0
 5227 032e 0000     		.short	0
 5228 0330 0000     		.short	0
 5229 0332 0001     		.short	256
 5230 0334 8001     		.short	384
 5231 0336 C001     		.short	448
 5232 0338 F001     		.short	496
 5233 033a 9801     		.short	408
 5234 033c 8801     		.short	392
 5235 033e 8001     		.short	384
 5236 0340 8001     		.short	384
 5237 0342 8001     		.short	384
 5238 0344 8001     		.short	384
 5239 0346 8001     		.short	384
 5240 0348 8001     		.short	384
 5241 034a 8001     		.short	384
 5242 034c 8001     		.short	384
 5243 034e 8001     		.short	384
 5244 0350 8001     		.short	384
 5245 0352 8001     		.short	384
 5246 0354 0000     		.short	0
 5247 0356 0000     		.short	0
 5248 0358 0000     		.short	0
 5249 035a 0000     		.short	0
 5250 035c 0000     		.short	0
 5251 035e 0000     		.short	0
 5252 0360 0000     		.short	0
 5253 0362 E003     		.short	992
 5254 0364 F80F     		.short	4088
 5255 0366 180C     		.short	3096
 5256 0368 0C18     		.short	6156
 5257 036a 0C18     		.short	6156
 5258 036c 0018     		.short	6144
 5259 036e 0018     		.short	6144
 5260 0370 000C     		.short	3072
 5261 0372 0006     		.short	1536
 5262 0374 0003     		.short	768
 5263 0376 8001     		.short	384
 5264 0378 C000     		.short	192
 5265 037a 6000     		.short	96
 5266 037c 3000     		.short	48
 5267 037e 1800     		.short	24
 5268 0380 FC1F     		.short	8188
 5269 0382 FC1F     		.short	8188
 5270 0384 0000     		.short	0
 5271 0386 0000     		.short	0
 5272 0388 0000     		.short	0
 5273 038a 0000     		.short	0
 5274 038c 0000     		.short	0
 5275 038e 0000     		.short	0
 5276 0390 0000     		.short	0
 5277 0392 E001     		.short	480
 5278 0394 F807     		.short	2040
 5279 0396 180E     		.short	3608
 5280 0398 0C0C     		.short	3084
 5281 039a 0C0C     		.short	3084
 5282 039c 000C     		.short	3072
 5283 039e 0006     		.short	1536
 5284 03a0 C003     		.short	960
 5285 03a2 C007     		.short	1984
 5286 03a4 000C     		.short	3072
 5287 03a6 0018     		.short	6144
 5288 03a8 0018     		.short	6144
 5289 03aa 0C18     		.short	6156
 5290 03ac 0C18     		.short	6156
 5291 03ae 180C     		.short	3096
 5292 03b0 F807     		.short	2040
 5293 03b2 E003     		.short	992
 5294 03b4 0000     		.short	0
 5295 03b6 0000     		.short	0
 5296 03b8 0000     		.short	0
 5297 03ba 0000     		.short	0
 5298 03bc 0000     		.short	0
 5299 03be 0000     		.short	0
 5300 03c0 0000     		.short	0
 5301 03c2 000C     		.short	3072
 5302 03c4 000E     		.short	3584
 5303 03c6 000F     		.short	3840
 5304 03c8 000F     		.short	3840
 5305 03ca 800D     		.short	3456
 5306 03cc C00C     		.short	3264
 5307 03ce 600C     		.short	3168
 5308 03d0 600C     		.short	3168
 5309 03d2 300C     		.short	3120
 5310 03d4 180C     		.short	3096
 5311 03d6 0C0C     		.short	3084
 5312 03d8 FC3F     		.short	16380
 5313 03da FC3F     		.short	16380
 5314 03dc 000C     		.short	3072
 5315 03de 000C     		.short	3072
 5316 03e0 000C     		.short	3072
 5317 03e2 000C     		.short	3072
 5318 03e4 0000     		.short	0
 5319 03e6 0000     		.short	0
 5320 03e8 0000     		.short	0
 5321 03ea 0000     		.short	0
 5322 03ec 0000     		.short	0
 5323 03ee 0000     		.short	0
 5324 03f0 0000     		.short	0
 5325 03f2 F80F     		.short	4088
 5326 03f4 F80F     		.short	4088
 5327 03f6 1800     		.short	24
 5328 03f8 1800     		.short	24
 5329 03fa 0C00     		.short	12
 5330 03fc EC03     		.short	1004
 5331 03fe FC07     		.short	2044
 5332 0400 1C0E     		.short	3612
 5333 0402 001C     		.short	7168
 5334 0404 0018     		.short	6144
 5335 0406 0018     		.short	6144
 5336 0408 0018     		.short	6144
 5337 040a 0C18     		.short	6156
 5338 040c 1C0C     		.short	3100
 5339 040e 180E     		.short	3608
 5340 0410 F807     		.short	2040
 5341 0412 E003     		.short	992
 5342 0414 0000     		.short	0
 5343 0416 0000     		.short	0
 5344 0418 0000     		.short	0
 5345 041a 0000     		.short	0
 5346 041c 0000     		.short	0
 5347 041e 0000     		.short	0
 5348 0420 0000     		.short	0
 5349 0422 C007     		.short	1984
 5350 0424 F00F     		.short	4080
 5351 0426 381C     		.short	7224
 5352 0428 1818     		.short	6168
 5353 042a 1800     		.short	24
 5354 042c 0C00     		.short	12
 5355 042e CC03     		.short	972
 5356 0430 EC0F     		.short	4076
 5357 0432 3C0E     		.short	3644
 5358 0434 1C1C     		.short	7196
 5359 0436 0C18     		.short	6156
 5360 0438 0C18     		.short	6156
 5361 043a 0C18     		.short	6156
 5362 043c 181C     		.short	7192
 5363 043e 380E     		.short	3640
 5364 0440 F007     		.short	2032
 5365 0442 E003     		.short	992
 5366 0444 0000     		.short	0
 5367 0446 0000     		.short	0
 5368 0448 0000     		.short	0
 5369 044a 0000     		.short	0
 5370 044c 0000     		.short	0
 5371 044e 0000     		.short	0
 5372 0450 0000     		.short	0
 5373 0452 FC1F     		.short	8188
 5374 0454 FC1F     		.short	8188
 5375 0456 000C     		.short	3072
 5376 0458 0006     		.short	1536
 5377 045a 0006     		.short	1536
 5378 045c 0003     		.short	768
 5379 045e 8003     		.short	896
 5380 0460 8001     		.short	384
 5381 0462 C001     		.short	448
 5382 0464 C000     		.short	192
 5383 0466 E000     		.short	224
 5384 0468 6000     		.short	96
 5385 046a 6000     		.short	96
 5386 046c 7000     		.short	112
 5387 046e 3000     		.short	48
 5388 0470 3000     		.short	48
 5389 0472 3000     		.short	48
 5390 0474 0000     		.short	0
 5391 0476 0000     		.short	0
 5392 0478 0000     		.short	0
 5393 047a 0000     		.short	0
 5394 047c 0000     		.short	0
 5395 047e 0000     		.short	0
 5396 0480 0000     		.short	0
 5397 0482 E003     		.short	992
 5398 0484 F007     		.short	2032
 5399 0486 380E     		.short	3640
 5400 0488 180C     		.short	3096
 5401 048a 180C     		.short	3096
 5402 048c 180C     		.short	3096
 5403 048e 3806     		.short	1592
 5404 0490 F007     		.short	2032
 5405 0492 F007     		.short	2032
 5406 0494 180C     		.short	3096
 5407 0496 0C18     		.short	6156
 5408 0498 0C18     		.short	6156
 5409 049a 0C18     		.short	6156
 5410 049c 0C18     		.short	6156
 5411 049e 380C     		.short	3128
 5412 04a0 F80F     		.short	4088
 5413 04a2 E003     		.short	992
 5414 04a4 0000     		.short	0
 5415 04a6 0000     		.short	0
 5416 04a8 0000     		.short	0
 5417 04aa 0000     		.short	0
 5418 04ac 0000     		.short	0
 5419 04ae 0000     		.short	0
 5420 04b0 0000     		.short	0
 5421 04b2 E003     		.short	992
 5422 04b4 F007     		.short	2032
 5423 04b6 380E     		.short	3640
 5424 04b8 1C0C     		.short	3100
 5425 04ba 0C18     		.short	6156
 5426 04bc 0C18     		.short	6156
 5427 04be 0C18     		.short	6156
 5428 04c0 1C1C     		.short	7196
 5429 04c2 381E     		.short	7736
 5430 04c4 F81B     		.short	7160
 5431 04c6 E019     		.short	6624
 5432 04c8 0018     		.short	6144
 5433 04ca 000C     		.short	3072
 5434 04cc 000C     		.short	3072
 5435 04ce 1C0E     		.short	3612
 5436 04d0 F807     		.short	2040
 5437 04d2 F001     		.short	496
 5438 04d4 0000     		.short	0
 5439 04d6 0000     		.short	0
 5440 04d8 0000     		.short	0
 5441 04da 0000     		.short	0
 5442 04dc 0000     		.short	0
 5443 04de 0000     		.short	0
 5444 04e0 0000     		.short	0
 5445 04e2 0000     		.short	0
 5446 04e4 0000     		.short	0
 5447 04e6 0000     		.short	0
 5448 04e8 0000     		.short	0
 5449 04ea 0000     		.short	0
 5450 04ec 8001     		.short	384
 5451 04ee 8001     		.short	384
 5452 04f0 0000     		.short	0
 5453 04f2 0000     		.short	0
 5454 04f4 0000     		.short	0
 5455 04f6 0000     		.short	0
 5456 04f8 0000     		.short	0
 5457 04fa 0000     		.short	0
 5458 04fc 0000     		.short	0
 5459 04fe 0000     		.short	0
 5460 0500 8001     		.short	384
 5461 0502 8001     		.short	384
 5462 0504 0000     		.short	0
 5463 0506 0000     		.short	0
 5464 0508 0000     		.short	0
 5465 050a 0000     		.short	0
 5466 050c 0000     		.short	0
 5467 050e 0000     		.short	0
 5468 0510 0000     		.short	0
 5469 0512 0000     		.short	0
 5470 0514 0000     		.short	0
 5471 0516 0000     		.short	0
 5472 0518 0000     		.short	0
 5473 051a 0000     		.short	0
 5474 051c 8001     		.short	384
 5475 051e 8001     		.short	384
 5476 0520 0000     		.short	0
 5477 0522 0000     		.short	0
 5478 0524 0000     		.short	0
 5479 0526 0000     		.short	0
 5480 0528 0000     		.short	0
 5481 052a 0000     		.short	0
 5482 052c 0000     		.short	0
 5483 052e 0000     		.short	0
 5484 0530 8001     		.short	384
 5485 0532 8001     		.short	384
 5486 0534 0001     		.short	256
 5487 0536 0001     		.short	256
 5488 0538 8000     		.short	128
 5489 053a 0000     		.short	0
 5490 053c 0000     		.short	0
 5491 053e 0000     		.short	0
 5492 0540 0000     		.short	0
 5493 0542 0000     		.short	0
 5494 0544 0000     		.short	0
 5495 0546 0000     		.short	0
 5496 0548 0000     		.short	0
 5497 054a 0000     		.short	0
 5498 054c 0000     		.short	0
 5499 054e 0000     		.short	0
 5500 0550 0010     		.short	4096
 5501 0552 001C     		.short	7168
 5502 0554 800F     		.short	3968
 5503 0556 E003     		.short	992
 5504 0558 F800     		.short	248
 5505 055a 1800     		.short	24
 5506 055c F800     		.short	248
 5507 055e E003     		.short	992
 5508 0560 800F     		.short	3968
 5509 0562 001C     		.short	7168
 5510 0564 0010     		.short	4096
 5511 0566 0000     		.short	0
 5512 0568 0000     		.short	0
 5513 056a 0000     		.short	0
 5514 056c 0000     		.short	0
 5515 056e 0000     		.short	0
 5516 0570 0000     		.short	0
 5517 0572 0000     		.short	0
 5518 0574 0000     		.short	0
 5519 0576 0000     		.short	0
 5520 0578 0000     		.short	0
 5521 057a 0000     		.short	0
 5522 057c 0000     		.short	0
 5523 057e 0000     		.short	0
 5524 0580 F81F     		.short	8184
 5525 0582 0000     		.short	0
 5526 0584 0000     		.short	0
 5527 0586 0000     		.short	0
 5528 0588 F81F     		.short	8184
 5529 058a 0000     		.short	0
 5530 058c 0000     		.short	0
 5531 058e 0000     		.short	0
 5532 0590 0000     		.short	0
 5533 0592 0000     		.short	0
 5534 0594 0000     		.short	0
 5535 0596 0000     		.short	0
 5536 0598 0000     		.short	0
 5537 059a 0000     		.short	0
 5538 059c 0000     		.short	0
 5539 059e 0000     		.short	0
 5540 05a0 0000     		.short	0
 5541 05a2 0000     		.short	0
 5542 05a4 0000     		.short	0
 5543 05a6 0000     		.short	0
 5544 05a8 0000     		.short	0
 5545 05aa 0000     		.short	0
 5546 05ac 0000     		.short	0
 5547 05ae 0000     		.short	0
 5548 05b0 0800     		.short	8
 5549 05b2 3800     		.short	56
 5550 05b4 F001     		.short	496
 5551 05b6 C007     		.short	1984
 5552 05b8 001F     		.short	7936
 5553 05ba 0018     		.short	6144
 5554 05bc 001F     		.short	7936
 5555 05be C007     		.short	1984
 5556 05c0 F001     		.short	496
 5557 05c2 3800     		.short	56
 5558 05c4 0800     		.short	8
 5559 05c6 0000     		.short	0
 5560 05c8 0000     		.short	0
 5561 05ca 0000     		.short	0
 5562 05cc 0000     		.short	0
 5563 05ce 0000     		.short	0
 5564 05d0 0000     		.short	0
 5565 05d2 E003     		.short	992
 5566 05d4 F80F     		.short	4088
 5567 05d6 180C     		.short	3096
 5568 05d8 0C18     		.short	6156
 5569 05da 0C18     		.short	6156
 5570 05dc 0018     		.short	6144
 5571 05de 000C     		.short	3072
 5572 05e0 0006     		.short	1536
 5573 05e2 0003     		.short	768
 5574 05e4 8001     		.short	384
 5575 05e6 C000     		.short	192
 5576 05e8 C000     		.short	192
 5577 05ea C000     		.short	192
 5578 05ec 0000     		.short	0
 5579 05ee 0000     		.short	0
 5580 05f0 C000     		.short	192
 5581 05f2 C000     		.short	192
 5582 05f4 0000     		.short	0
 5583 05f6 0000     		.short	0
 5584 05f8 0000     		.short	0
 5585 05fa 0000     		.short	0
 5586 05fc 0000     		.short	0
 5587 05fe 0000     		.short	0
 5588 0600 0000     		.short	0
 5589 0602 0000     		.short	0
 5590 0604 E007     		.short	2016
 5591 0606 1818     		.short	6168
 5592 0608 0420     		.short	8196
 5593 060a C229     		.short	10690
 5594 060c 224A     		.short	18978
 5595 060e 1144     		.short	17425
 5596 0610 0944     		.short	17417
 5597 0612 0944     		.short	17417
 5598 0614 0944     		.short	17417
 5599 0616 0922     		.short	8713
 5600 0618 1113     		.short	4881
 5601 061a E20C     		.short	3298
 5602 061c 0240     		.short	16386
 5603 061e 0420     		.short	8196
 5604 0620 1818     		.short	6168
 5605 0622 E007     		.short	2016
 5606 0624 0000     		.short	0
 5607 0626 0000     		.short	0
 5608 0628 0000     		.short	0
 5609 062a 0000     		.short	0
 5610 062c 0000     		.short	0
 5611 062e 0000     		.short	0
 5612 0630 0000     		.short	0
 5613 0632 8003     		.short	896
 5614 0634 8003     		.short	896
 5615 0636 C006     		.short	1728
 5616 0638 C006     		.short	1728
 5617 063a C006     		.short	1728
 5618 063c 600C     		.short	3168
 5619 063e 600C     		.short	3168
 5620 0640 3018     		.short	6192
 5621 0642 3018     		.short	6192
 5622 0644 3018     		.short	6192
 5623 0646 F83F     		.short	16376
 5624 0648 F83F     		.short	16376
 5625 064a 1C70     		.short	28700
 5626 064c 0C60     		.short	24588
 5627 064e 0C60     		.short	24588
 5628 0650 06C0     		.short	-16378
 5629 0652 06C0     		.short	-16378
 5630 0654 0000     		.short	0
 5631 0656 0000     		.short	0
 5632 0658 0000     		.short	0
 5633 065a 0000     		.short	0
 5634 065c 0000     		.short	0
 5635 065e 0000     		.short	0
 5636 0660 0000     		.short	0
 5637 0662 FC03     		.short	1020
 5638 0664 FC0F     		.short	4092
 5639 0666 0C0C     		.short	3084
 5640 0668 0C18     		.short	6156
 5641 066a 0C18     		.short	6156
 5642 066c 0C18     		.short	6156
 5643 066e 0C0C     		.short	3084
 5644 0670 FC07     		.short	2044
 5645 0672 FC0F     		.short	4092
 5646 0674 0C18     		.short	6156
 5647 0676 0C30     		.short	12300
 5648 0678 0C30     		.short	12300
 5649 067a 0C30     		.short	12300
 5650 067c 0C30     		.short	12300
 5651 067e 0C18     		.short	6156
 5652 0680 FC1F     		.short	8188
 5653 0682 FC07     		.short	2044
 5654 0684 0000     		.short	0
 5655 0686 0000     		.short	0
 5656 0688 0000     		.short	0
 5657 068a 0000     		.short	0
 5658 068c 0000     		.short	0
 5659 068e 0000     		.short	0
 5660 0690 0000     		.short	0
 5661 0692 C007     		.short	1984
 5662 0694 F01F     		.short	8176
 5663 0696 3838     		.short	14392
 5664 0698 1C30     		.short	12316
 5665 069a 0C70     		.short	28684
 5666 069c 0660     		.short	24582
 5667 069e 0600     		.short	6
 5668 06a0 0600     		.short	6
 5669 06a2 0600     		.short	6
 5670 06a4 0600     		.short	6
 5671 06a6 0600     		.short	6
 5672 06a8 0600     		.short	6
 5673 06aa 0660     		.short	24582
 5674 06ac 0C70     		.short	28684
 5675 06ae 1C30     		.short	12316
 5676 06b0 F01F     		.short	8176
 5677 06b2 E007     		.short	2016
 5678 06b4 0000     		.short	0
 5679 06b6 0000     		.short	0
 5680 06b8 0000     		.short	0
 5681 06ba 0000     		.short	0
 5682 06bc 0000     		.short	0
 5683 06be 0000     		.short	0
 5684 06c0 0000     		.short	0
 5685 06c2 FE03     		.short	1022
 5686 06c4 FE0F     		.short	4094
 5687 06c6 060E     		.short	3590
 5688 06c8 0618     		.short	6150
 5689 06ca 0618     		.short	6150
 5690 06cc 0630     		.short	12294
 5691 06ce 0630     		.short	12294
 5692 06d0 0630     		.short	12294
 5693 06d2 0630     		.short	12294
 5694 06d4 0630     		.short	12294
 5695 06d6 0630     		.short	12294
 5696 06d8 0630     		.short	12294
 5697 06da 0618     		.short	6150
 5698 06dc 0618     		.short	6150
 5699 06de 060E     		.short	3590
 5700 06e0 FE0F     		.short	4094
 5701 06e2 FE03     		.short	1022
 5702 06e4 0000     		.short	0
 5703 06e6 0000     		.short	0
 5704 06e8 0000     		.short	0
 5705 06ea 0000     		.short	0
 5706 06ec 0000     		.short	0
 5707 06ee 0000     		.short	0
 5708 06f0 0000     		.short	0
 5709 06f2 FC3F     		.short	16380
 5710 06f4 FC3F     		.short	16380
 5711 06f6 0C00     		.short	12
 5712 06f8 0C00     		.short	12
 5713 06fa 0C00     		.short	12
 5714 06fc 0C00     		.short	12
 5715 06fe 0C00     		.short	12
 5716 0700 FC1F     		.short	8188
 5717 0702 FC1F     		.short	8188
 5718 0704 0C00     		.short	12
 5719 0706 0C00     		.short	12
 5720 0708 0C00     		.short	12
 5721 070a 0C00     		.short	12
 5722 070c 0C00     		.short	12
 5723 070e 0C00     		.short	12
 5724 0710 FC3F     		.short	16380
 5725 0712 FC3F     		.short	16380
 5726 0714 0000     		.short	0
 5727 0716 0000     		.short	0
 5728 0718 0000     		.short	0
 5729 071a 0000     		.short	0
 5730 071c 0000     		.short	0
 5731 071e 0000     		.short	0
 5732 0720 0000     		.short	0
 5733 0722 F83F     		.short	16376
 5734 0724 F83F     		.short	16376
 5735 0726 1800     		.short	24
 5736 0728 1800     		.short	24
 5737 072a 1800     		.short	24
 5738 072c 1800     		.short	24
 5739 072e 1800     		.short	24
 5740 0730 F81F     		.short	8184
 5741 0732 F81F     		.short	8184
 5742 0734 1800     		.short	24
 5743 0736 1800     		.short	24
 5744 0738 1800     		.short	24
 5745 073a 1800     		.short	24
 5746 073c 1800     		.short	24
 5747 073e 1800     		.short	24
 5748 0740 1800     		.short	24
 5749 0742 1800     		.short	24
 5750 0744 0000     		.short	0
 5751 0746 0000     		.short	0
 5752 0748 0000     		.short	0
 5753 074a 0000     		.short	0
 5754 074c 0000     		.short	0
 5755 074e 0000     		.short	0
 5756 0750 0000     		.short	0
 5757 0752 E00F     		.short	4064
 5758 0754 F83F     		.short	16376
 5759 0756 3C78     		.short	30780
 5760 0758 0E60     		.short	24590
 5761 075a 06E0     		.short	-8186
 5762 075c 07C0     		.short	-16377
 5763 075e 0300     		.short	3
 5764 0760 0300     		.short	3
 5765 0762 03FE     		.short	-509
 5766 0764 03FE     		.short	-509
 5767 0766 03C0     		.short	-16381
 5768 0768 07C0     		.short	-16377
 5769 076a 06C0     		.short	-16378
 5770 076c 0EC0     		.short	-16370
 5771 076e 3CF0     		.short	-4036
 5772 0770 F83F     		.short	16376
 5773 0772 E00F     		.short	4064
 5774 0774 0000     		.short	0
 5775 0776 0000     		.short	0
 5776 0778 0000     		.short	0
 5777 077a 0000     		.short	0
 5778 077c 0000     		.short	0
 5779 077e 0000     		.short	0
 5780 0780 0000     		.short	0
 5781 0782 0C30     		.short	12300
 5782 0784 0C30     		.short	12300
 5783 0786 0C30     		.short	12300
 5784 0788 0C30     		.short	12300
 5785 078a 0C30     		.short	12300
 5786 078c 0C30     		.short	12300
 5787 078e 0C30     		.short	12300
 5788 0790 FC3F     		.short	16380
 5789 0792 FC3F     		.short	16380
 5790 0794 0C30     		.short	12300
 5791 0796 0C30     		.short	12300
 5792 0798 0C30     		.short	12300
 5793 079a 0C30     		.short	12300
 5794 079c 0C30     		.short	12300
 5795 079e 0C30     		.short	12300
 5796 07a0 0C30     		.short	12300
 5797 07a2 0C30     		.short	12300
 5798 07a4 0000     		.short	0
 5799 07a6 0000     		.short	0
 5800 07a8 0000     		.short	0
 5801 07aa 0000     		.short	0
 5802 07ac 0000     		.short	0
 5803 07ae 0000     		.short	0
 5804 07b0 0000     		.short	0
 5805 07b2 8001     		.short	384
 5806 07b4 8001     		.short	384
 5807 07b6 8001     		.short	384
 5808 07b8 8001     		.short	384
 5809 07ba 8001     		.short	384
 5810 07bc 8001     		.short	384
 5811 07be 8001     		.short	384
 5812 07c0 8001     		.short	384
 5813 07c2 8001     		.short	384
 5814 07c4 8001     		.short	384
 5815 07c6 8001     		.short	384
 5816 07c8 8001     		.short	384
 5817 07ca 8001     		.short	384
 5818 07cc 8001     		.short	384
 5819 07ce 8001     		.short	384
 5820 07d0 8001     		.short	384
 5821 07d2 8001     		.short	384
 5822 07d4 0000     		.short	0
 5823 07d6 0000     		.short	0
 5824 07d8 0000     		.short	0
 5825 07da 0000     		.short	0
 5826 07dc 0000     		.short	0
 5827 07de 0000     		.short	0
 5828 07e0 0000     		.short	0
 5829 07e2 0006     		.short	1536
 5830 07e4 0006     		.short	1536
 5831 07e6 0006     		.short	1536
 5832 07e8 0006     		.short	1536
 5833 07ea 0006     		.short	1536
 5834 07ec 0006     		.short	1536
 5835 07ee 0006     		.short	1536
 5836 07f0 0006     		.short	1536
 5837 07f2 0006     		.short	1536
 5838 07f4 0006     		.short	1536
 5839 07f6 0006     		.short	1536
 5840 07f8 0006     		.short	1536
 5841 07fa 1806     		.short	1560
 5842 07fc 1806     		.short	1560
 5843 07fe 3807     		.short	1848
 5844 0800 F003     		.short	1008
 5845 0802 E001     		.short	480
 5846 0804 0000     		.short	0
 5847 0806 0000     		.short	0
 5848 0808 0000     		.short	0
 5849 080a 0000     		.short	0
 5850 080c 0000     		.short	0
 5851 080e 0000     		.short	0
 5852 0810 0000     		.short	0
 5853 0812 0630     		.short	12294
 5854 0814 0618     		.short	6150
 5855 0816 060C     		.short	3078
 5856 0818 0606     		.short	1542
 5857 081a 0603     		.short	774
 5858 081c 8601     		.short	390
 5859 081e C600     		.short	198
 5860 0820 6600     		.short	102
 5861 0822 7600     		.short	118
 5862 0824 DE00     		.short	222
 5863 0826 8E01     		.short	398
 5864 0828 0603     		.short	774
 5865 082a 0606     		.short	1542
 5866 082c 060C     		.short	3078
 5867 082e 0618     		.short	6150
 5868 0830 0630     		.short	12294
 5869 0832 0660     		.short	24582
 5870 0834 0000     		.short	0
 5871 0836 0000     		.short	0
 5872 0838 0000     		.short	0
 5873 083a 0000     		.short	0
 5874 083c 0000     		.short	0
 5875 083e 0000     		.short	0
 5876 0840 0000     		.short	0
 5877 0842 1800     		.short	24
 5878 0844 1800     		.short	24
 5879 0846 1800     		.short	24
 5880 0848 1800     		.short	24
 5881 084a 1800     		.short	24
 5882 084c 1800     		.short	24
 5883 084e 1800     		.short	24
 5884 0850 1800     		.short	24
 5885 0852 1800     		.short	24
 5886 0854 1800     		.short	24
 5887 0856 1800     		.short	24
 5888 0858 1800     		.short	24
 5889 085a 1800     		.short	24
 5890 085c 1800     		.short	24
 5891 085e 1800     		.short	24
 5892 0860 F81F     		.short	8184
 5893 0862 F81F     		.short	8184
 5894 0864 0000     		.short	0
 5895 0866 0000     		.short	0
 5896 0868 0000     		.short	0
 5897 086a 0000     		.short	0
 5898 086c 0000     		.short	0
 5899 086e 0000     		.short	0
 5900 0870 0000     		.short	0
 5901 0872 0EE0     		.short	-8178
 5902 0874 1EF0     		.short	-4066
 5903 0876 1EF0     		.short	-4066
 5904 0878 1EF0     		.short	-4066
 5905 087a 36D8     		.short	-10186
 5906 087c 36D8     		.short	-10186
 5907 087e 36D8     		.short	-10186
 5908 0880 36D8     		.short	-10186
 5909 0882 66CC     		.short	-13210
 5910 0884 66CC     		.short	-13210
 5911 0886 66CC     		.short	-13210
 5912 0888 C6C6     		.short	-14650
 5913 088a C6C6     		.short	-14650
 5914 088c C6C6     		.short	-14650
 5915 088e C6C6     		.short	-14650
 5916 0890 86C3     		.short	-15482
 5917 0892 86C3     		.short	-15482
 5918 0894 0000     		.short	0
 5919 0896 0000     		.short	0
 5920 0898 0000     		.short	0
 5921 089a 0000     		.short	0
 5922 089c 0000     		.short	0
 5923 089e 0000     		.short	0
 5924 08a0 0000     		.short	0
 5925 08a2 0C30     		.short	12300
 5926 08a4 1C30     		.short	12316
 5927 08a6 3C30     		.short	12348
 5928 08a8 3C30     		.short	12348
 5929 08aa 6C30     		.short	12396
 5930 08ac 6C30     		.short	12396
 5931 08ae CC30     		.short	12492
 5932 08b0 CC30     		.short	12492
 5933 08b2 8C31     		.short	12684
 5934 08b4 0C33     		.short	13068
 5935 08b6 0C33     		.short	13068
 5936 08b8 0C36     		.short	13836
 5937 08ba 0C36     		.short	13836
 5938 08bc 0C3C     		.short	15372
 5939 08be 0C3C     		.short	15372
 5940 08c0 0C38     		.short	14348
 5941 08c2 0C30     		.short	12300
 5942 08c4 0000     		.short	0
 5943 08c6 0000     		.short	0
 5944 08c8 0000     		.short	0
 5945 08ca 0000     		.short	0
 5946 08cc 0000     		.short	0
 5947 08ce 0000     		.short	0
 5948 08d0 0000     		.short	0
 5949 08d2 E007     		.short	2016
 5950 08d4 F81F     		.short	8184
 5951 08d6 1C38     		.short	14364
 5952 08d8 0E70     		.short	28686
 5953 08da 0660     		.short	24582
 5954 08dc 03C0     		.short	-16381
 5955 08de 03C0     		.short	-16381
 5956 08e0 03C0     		.short	-16381
 5957 08e2 03C0     		.short	-16381
 5958 08e4 03C0     		.short	-16381
 5959 08e6 03C0     		.short	-16381
 5960 08e8 03C0     		.short	-16381
 5961 08ea 0660     		.short	24582
 5962 08ec 0E70     		.short	28686
 5963 08ee 1C38     		.short	14364
 5964 08f0 F81F     		.short	8184
 5965 08f2 E007     		.short	2016
 5966 08f4 0000     		.short	0
 5967 08f6 0000     		.short	0
 5968 08f8 0000     		.short	0
 5969 08fa 0000     		.short	0
 5970 08fc 0000     		.short	0
 5971 08fe 0000     		.short	0
 5972 0900 0000     		.short	0
 5973 0902 FC0F     		.short	4092
 5974 0904 FC1F     		.short	8188
 5975 0906 0C38     		.short	14348
 5976 0908 0C30     		.short	12300
 5977 090a 0C30     		.short	12300
 5978 090c 0C30     		.short	12300
 5979 090e 0C30     		.short	12300
 5980 0910 0C18     		.short	6156
 5981 0912 FC1F     		.short	8188
 5982 0914 FC07     		.short	2044
 5983 0916 0C00     		.short	12
 5984 0918 0C00     		.short	12
 5985 091a 0C00     		.short	12
 5986 091c 0C00     		.short	12
 5987 091e 0C00     		.short	12
 5988 0920 0C00     		.short	12
 5989 0922 0C00     		.short	12
 5990 0924 0000     		.short	0
 5991 0926 0000     		.short	0
 5992 0928 0000     		.short	0
 5993 092a 0000     		.short	0
 5994 092c 0000     		.short	0
 5995 092e 0000     		.short	0
 5996 0930 0000     		.short	0
 5997 0932 E007     		.short	2016
 5998 0934 F81F     		.short	8184
 5999 0936 1C38     		.short	14364
 6000 0938 0E70     		.short	28686
 6001 093a 0660     		.short	24582
 6002 093c 03E0     		.short	-8189
 6003 093e 03C0     		.short	-16381
 6004 0940 03C0     		.short	-16381
 6005 0942 03C0     		.short	-16381
 6006 0944 03C0     		.short	-16381
 6007 0946 03C0     		.short	-16381
 6008 0948 07E0     		.short	-8185
 6009 094a 0663     		.short	25350
 6010 094c 0E3F     		.short	16142
 6011 094e 1C3C     		.short	15388
 6012 0950 F83F     		.short	16376
 6013 0952 E0F7     		.short	-2080
 6014 0954 00C0     		.short	-16384
 6015 0956 0000     		.short	0
 6016 0958 0000     		.short	0
 6017 095a 0000     		.short	0
 6018 095c 0000     		.short	0
 6019 095e 0000     		.short	0
 6020 0960 0000     		.short	0
 6021 0962 FE0F     		.short	4094
 6022 0964 FE1F     		.short	8190
 6023 0966 0638     		.short	14342
 6024 0968 0630     		.short	12294
 6025 096a 0630     		.short	12294
 6026 096c 0630     		.short	12294
 6027 096e 0638     		.short	14342
 6028 0970 FE1F     		.short	8190
 6029 0972 FE07     		.short	2046
 6030 0974 0603     		.short	774
 6031 0976 0606     		.short	1542
 6032 0978 060C     		.short	3078
 6033 097a 0618     		.short	6150
 6034 097c 0618     		.short	6150
 6035 097e 0630     		.short	12294
 6036 0980 0630     		.short	12294
 6037 0982 0660     		.short	24582
 6038 0984 0000     		.short	0
 6039 0986 0000     		.short	0
 6040 0988 0000     		.short	0
 6041 098a 0000     		.short	0
 6042 098c 0000     		.short	0
 6043 098e 0000     		.short	0
 6044 0990 0000     		.short	0
 6045 0992 E003     		.short	992
 6046 0994 F80F     		.short	4088
 6047 0996 1C0C     		.short	3100
 6048 0998 0C18     		.short	6156
 6049 099a 0C18     		.short	6156
 6050 099c 0C00     		.short	12
 6051 099e 1C00     		.short	28
 6052 09a0 F803     		.short	1016
 6053 09a2 E00F     		.short	4064
 6054 09a4 001E     		.short	7680
 6055 09a6 0038     		.short	14336
 6056 09a8 0630     		.short	12294
 6057 09aa 0630     		.short	12294
 6058 09ac 0E30     		.short	12302
 6059 09ae 1C1C     		.short	7196
 6060 09b0 F80F     		.short	4088
 6061 09b2 E007     		.short	2016
 6062 09b4 0000     		.short	0
 6063 09b6 0000     		.short	0
 6064 09b8 0000     		.short	0
 6065 09ba 0000     		.short	0
 6066 09bc 0000     		.short	0
 6067 09be 0000     		.short	0
 6068 09c0 0000     		.short	0
 6069 09c2 FE7F     		.short	32766
 6070 09c4 FE7F     		.short	32766
 6071 09c6 8001     		.short	384
 6072 09c8 8001     		.short	384
 6073 09ca 8001     		.short	384
 6074 09cc 8001     		.short	384
 6075 09ce 8001     		.short	384
 6076 09d0 8001     		.short	384
 6077 09d2 8001     		.short	384
 6078 09d4 8001     		.short	384
 6079 09d6 8001     		.short	384
 6080 09d8 8001     		.short	384
 6081 09da 8001     		.short	384
 6082 09dc 8001     		.short	384
 6083 09de 8001     		.short	384
 6084 09e0 8001     		.short	384
 6085 09e2 8001     		.short	384
 6086 09e4 0000     		.short	0
 6087 09e6 0000     		.short	0
 6088 09e8 0000     		.short	0
 6089 09ea 0000     		.short	0
 6090 09ec 0000     		.short	0
 6091 09ee 0000     		.short	0
 6092 09f0 0000     		.short	0
 6093 09f2 0C30     		.short	12300
 6094 09f4 0C30     		.short	12300
 6095 09f6 0C30     		.short	12300
 6096 09f8 0C30     		.short	12300
 6097 09fa 0C30     		.short	12300
 6098 09fc 0C30     		.short	12300
 6099 09fe 0C30     		.short	12300
 6100 0a00 0C30     		.short	12300
 6101 0a02 0C30     		.short	12300
 6102 0a04 0C30     		.short	12300
 6103 0a06 0C30     		.short	12300
 6104 0a08 0C30     		.short	12300
 6105 0a0a 0C30     		.short	12300
 6106 0a0c 0C30     		.short	12300
 6107 0a0e 1818     		.short	6168
 6108 0a10 F81F     		.short	8184
 6109 0a12 E007     		.short	2016
 6110 0a14 0000     		.short	0
 6111 0a16 0000     		.short	0
 6112 0a18 0000     		.short	0
 6113 0a1a 0000     		.short	0
 6114 0a1c 0000     		.short	0
 6115 0a1e 0000     		.short	0
 6116 0a20 0000     		.short	0
 6117 0a22 0360     		.short	24579
 6118 0a24 0630     		.short	12294
 6119 0a26 0630     		.short	12294
 6120 0a28 0630     		.short	12294
 6121 0a2a 0C18     		.short	6156
 6122 0a2c 0C18     		.short	6156
 6123 0a2e 0C18     		.short	6156
 6124 0a30 180C     		.short	3096
 6125 0a32 180C     		.short	3096
 6126 0a34 380E     		.short	3640
 6127 0a36 3006     		.short	1584
 6128 0a38 3006     		.short	1584
 6129 0a3a 7007     		.short	1904
 6130 0a3c 6003     		.short	864
 6131 0a3e 6003     		.short	864
 6132 0a40 C001     		.short	448
 6133 0a42 C001     		.short	448
 6134 0a44 0000     		.short	0
 6135 0a46 0000     		.short	0
 6136 0a48 0000     		.short	0
 6137 0a4a 0000     		.short	0
 6138 0a4c 0000     		.short	0
 6139 0a4e 0000     		.short	0
 6140 0a50 0000     		.short	0
 6141 0a52 0360     		.short	24579
 6142 0a54 C361     		.short	25027
 6143 0a56 C361     		.short	25027
 6144 0a58 C361     		.short	25027
 6145 0a5a 6633     		.short	13158
 6146 0a5c 6633     		.short	13158
 6147 0a5e 6633     		.short	13158
 6148 0a60 6633     		.short	13158
 6149 0a62 6633     		.short	13158
 6150 0a64 6633     		.short	13158
 6151 0a66 6C1B     		.short	7020
 6152 0a68 6C1B     		.short	7020
 6153 0a6a 6C1B     		.short	7020
 6154 0a6c 2C1A     		.short	6700
 6155 0a6e 3C1E     		.short	7740
 6156 0a70 380E     		.short	3640
 6157 0a72 380E     		.short	3640
 6158 0a74 0000     		.short	0
 6159 0a76 0000     		.short	0
 6160 0a78 0000     		.short	0
 6161 0a7a 0000     		.short	0
 6162 0a7c 0000     		.short	0
 6163 0a7e 0000     		.short	0
 6164 0a80 0000     		.short	0
 6165 0a82 0FE0     		.short	-8177
 6166 0a84 0C70     		.short	28684
 6167 0a86 1830     		.short	12312
 6168 0a88 3018     		.short	6192
 6169 0a8a 700C     		.short	3184
 6170 0a8c 600E     		.short	3680
 6171 0a8e C007     		.short	1984
 6172 0a90 8003     		.short	896
 6173 0a92 8003     		.short	896
 6174 0a94 C003     		.short	960
 6175 0a96 E006     		.short	1760
 6176 0a98 700C     		.short	3184
 6177 0a9a 301C     		.short	7216
 6178 0a9c 1818     		.short	6168
 6179 0a9e 0C30     		.short	12300
 6180 0aa0 0E60     		.short	24590
 6181 0aa2 07E0     		.short	-8185
 6182 0aa4 0000     		.short	0
 6183 0aa6 0000     		.short	0
 6184 0aa8 0000     		.short	0
 6185 0aaa 0000     		.short	0
 6186 0aac 0000     		.short	0
 6187 0aae 0000     		.short	0
 6188 0ab0 0000     		.short	0
 6189 0ab2 03C0     		.short	-16381
 6190 0ab4 0660     		.short	24582
 6191 0ab6 0C30     		.short	12300
 6192 0ab8 1C38     		.short	14364
 6193 0aba 3818     		.short	6200
 6194 0abc 300C     		.short	3120
 6195 0abe 6006     		.short	1632
 6196 0ac0 E007     		.short	2016
 6197 0ac2 C003     		.short	960
 6198 0ac4 8001     		.short	384
 6199 0ac6 8001     		.short	384
 6200 0ac8 8001     		.short	384
 6201 0aca 8001     		.short	384
 6202 0acc 8001     		.short	384
 6203 0ace 8001     		.short	384
 6204 0ad0 8001     		.short	384
 6205 0ad2 8001     		.short	384
 6206 0ad4 0000     		.short	0
 6207 0ad6 0000     		.short	0
 6208 0ad8 0000     		.short	0
 6209 0ada 0000     		.short	0
 6210 0adc 0000     		.short	0
 6211 0ade 0000     		.short	0
 6212 0ae0 0000     		.short	0
 6213 0ae2 FC7F     		.short	32764
 6214 0ae4 FC7F     		.short	32764
 6215 0ae6 0060     		.short	24576
 6216 0ae8 0030     		.short	12288
 6217 0aea 0018     		.short	6144
 6218 0aec 000C     		.short	3072
 6219 0aee 0006     		.short	1536
 6220 0af0 0003     		.short	768
 6221 0af2 8001     		.short	384
 6222 0af4 C000     		.short	192
 6223 0af6 6000     		.short	96
 6224 0af8 3000     		.short	48
 6225 0afa 1800     		.short	24
 6226 0afc 0C00     		.short	12
 6227 0afe 0600     		.short	6
 6228 0b00 FE7F     		.short	32766
 6229 0b02 FE7F     		.short	32766
 6230 0b04 0000     		.short	0
 6231 0b06 0000     		.short	0
 6232 0b08 0000     		.short	0
 6233 0b0a 0000     		.short	0
 6234 0b0c 0000     		.short	0
 6235 0b0e 0000     		.short	0
 6236 0b10 0000     		.short	0
 6237 0b12 E003     		.short	992
 6238 0b14 E003     		.short	992
 6239 0b16 6000     		.short	96
 6240 0b18 6000     		.short	96
 6241 0b1a 6000     		.short	96
 6242 0b1c 6000     		.short	96
 6243 0b1e 6000     		.short	96
 6244 0b20 6000     		.short	96
 6245 0b22 6000     		.short	96
 6246 0b24 6000     		.short	96
 6247 0b26 6000     		.short	96
 6248 0b28 6000     		.short	96
 6249 0b2a 6000     		.short	96
 6250 0b2c 6000     		.short	96
 6251 0b2e 6000     		.short	96
 6252 0b30 6000     		.short	96
 6253 0b32 6000     		.short	96
 6254 0b34 6000     		.short	96
 6255 0b36 6000     		.short	96
 6256 0b38 6000     		.short	96
 6257 0b3a E003     		.short	992
 6258 0b3c E003     		.short	992
 6259 0b3e 0000     		.short	0
 6260 0b40 0000     		.short	0
 6261 0b42 3000     		.short	48
 6262 0b44 3000     		.short	48
 6263 0b46 6000     		.short	96
 6264 0b48 6000     		.short	96
 6265 0b4a 6000     		.short	96
 6266 0b4c C000     		.short	192
 6267 0b4e C000     		.short	192
 6268 0b50 C000     		.short	192
 6269 0b52 C001     		.short	448
 6270 0b54 8001     		.short	384
 6271 0b56 8001     		.short	384
 6272 0b58 8001     		.short	384
 6273 0b5a 0003     		.short	768
 6274 0b5c 0003     		.short	768
 6275 0b5e 0003     		.short	768
 6276 0b60 0006     		.short	1536
 6277 0b62 0006     		.short	1536
 6278 0b64 0000     		.short	0
 6279 0b66 0000     		.short	0
 6280 0b68 0000     		.short	0
 6281 0b6a 0000     		.short	0
 6282 0b6c 0000     		.short	0
 6283 0b6e 0000     		.short	0
 6284 0b70 0000     		.short	0
 6285 0b72 E003     		.short	992
 6286 0b74 E003     		.short	992
 6287 0b76 0003     		.short	768
 6288 0b78 0003     		.short	768
 6289 0b7a 0003     		.short	768
 6290 0b7c 0003     		.short	768
 6291 0b7e 0003     		.short	768
 6292 0b80 0003     		.short	768
 6293 0b82 0003     		.short	768
 6294 0b84 0003     		.short	768
 6295 0b86 0003     		.short	768
 6296 0b88 0003     		.short	768
 6297 0b8a 0003     		.short	768
 6298 0b8c 0003     		.short	768
 6299 0b8e 0003     		.short	768
 6300 0b90 0003     		.short	768
 6301 0b92 0003     		.short	768
 6302 0b94 0003     		.short	768
 6303 0b96 0003     		.short	768
 6304 0b98 0003     		.short	768
 6305 0b9a E003     		.short	992
 6306 0b9c E003     		.short	992
 6307 0b9e 0000     		.short	0
 6308 0ba0 0000     		.short	0
 6309 0ba2 0000     		.short	0
 6310 0ba4 C001     		.short	448
 6311 0ba6 C001     		.short	448
 6312 0ba8 6003     		.short	864
 6313 0baa 6003     		.short	864
 6314 0bac 6003     		.short	864
 6315 0bae 3006     		.short	1584
 6316 0bb0 3006     		.short	1584
 6317 0bb2 180C     		.short	3096
 6318 0bb4 180C     		.short	3096
 6319 0bb6 0000     		.short	0
 6320 0bb8 0000     		.short	0
 6321 0bba 0000     		.short	0
 6322 0bbc 0000     		.short	0
 6323 0bbe 0000     		.short	0
 6324 0bc0 0000     		.short	0
 6325 0bc2 0000     		.short	0
 6326 0bc4 0000     		.short	0
 6327 0bc6 0000     		.short	0
 6328 0bc8 0000     		.short	0
 6329 0bca 0000     		.short	0
 6330 0bcc 0000     		.short	0
 6331 0bce 0000     		.short	0
 6332 0bd0 0000     		.short	0
 6333 0bd2 0000     		.short	0
 6334 0bd4 0000     		.short	0
 6335 0bd6 0000     		.short	0
 6336 0bd8 0000     		.short	0
 6337 0bda 0000     		.short	0
 6338 0bdc 0000     		.short	0
 6339 0bde 0000     		.short	0
 6340 0be0 0000     		.short	0
 6341 0be2 0000     		.short	0
 6342 0be4 0000     		.short	0
 6343 0be6 0000     		.short	0
 6344 0be8 0000     		.short	0
 6345 0bea 0000     		.short	0
 6346 0bec 0000     		.short	0
 6347 0bee 0000     		.short	0
 6348 0bf0 0000     		.short	0
 6349 0bf2 FFFF     		.short	-1
 6350 0bf4 FFFF     		.short	-1
 6351 0bf6 0000     		.short	0
 6352 0bf8 0000     		.short	0
 6353 0bfa 0000     		.short	0
 6354 0bfc 0000     		.short	0
 6355 0bfe 0000     		.short	0
 6356 0c00 0000     		.short	0
 6357 0c02 0C00     		.short	12
 6358 0c04 0C00     		.short	12
 6359 0c06 0C00     		.short	12
 6360 0c08 0C00     		.short	12
 6361 0c0a 0C00     		.short	12
 6362 0c0c 0C00     		.short	12
 6363 0c0e 0000     		.short	0
 6364 0c10 0000     		.short	0
 6365 0c12 0000     		.short	0
 6366 0c14 0000     		.short	0
 6367 0c16 0000     		.short	0
 6368 0c18 0000     		.short	0
 6369 0c1a 0000     		.short	0
 6370 0c1c 0000     		.short	0
 6371 0c1e 0000     		.short	0
 6372 0c20 0000     		.short	0
 6373 0c22 0000     		.short	0
 6374 0c24 0000     		.short	0
 6375 0c26 0000     		.short	0
 6376 0c28 0000     		.short	0
 6377 0c2a 0000     		.short	0
 6378 0c2c 0000     		.short	0
 6379 0c2e 0000     		.short	0
 6380 0c30 0000     		.short	0
 6381 0c32 0000     		.short	0
 6382 0c34 0000     		.short	0
 6383 0c36 0000     		.short	0
 6384 0c38 0000     		.short	0
 6385 0c3a 0000     		.short	0
 6386 0c3c F003     		.short	1008
 6387 0c3e F807     		.short	2040
 6388 0c40 1C0C     		.short	3100
 6389 0c42 0C0C     		.short	3084
 6390 0c44 000F     		.short	3840
 6391 0c46 F00F     		.short	4080
 6392 0c48 F80C     		.short	3320
 6393 0c4a 0C0C     		.short	3084
 6394 0c4c 0C0C     		.short	3084
 6395 0c4e 1C0F     		.short	3868
 6396 0c50 F80F     		.short	4088
 6397 0c52 F018     		.short	6384
 6398 0c54 0000     		.short	0
 6399 0c56 0000     		.short	0
 6400 0c58 0000     		.short	0
 6401 0c5a 0000     		.short	0
 6402 0c5c 0000     		.short	0
 6403 0c5e 0000     		.short	0
 6404 0c60 0000     		.short	0
 6405 0c62 1800     		.short	24
 6406 0c64 1800     		.short	24
 6407 0c66 1800     		.short	24
 6408 0c68 1800     		.short	24
 6409 0c6a 1800     		.short	24
 6410 0c6c D803     		.short	984
 6411 0c6e F80F     		.short	4088
 6412 0c70 380C     		.short	3128
 6413 0c72 1818     		.short	6168
 6414 0c74 1818     		.short	6168
 6415 0c76 1818     		.short	6168
 6416 0c78 1818     		.short	6168
 6417 0c7a 1818     		.short	6168
 6418 0c7c 1818     		.short	6168
 6419 0c7e 380C     		.short	3128
 6420 0c80 F80F     		.short	4088
 6421 0c82 D803     		.short	984
 6422 0c84 0000     		.short	0
 6423 0c86 0000     		.short	0
 6424 0c88 0000     		.short	0
 6425 0c8a 0000     		.short	0
 6426 0c8c 0000     		.short	0
 6427 0c8e 0000     		.short	0
 6428 0c90 0000     		.short	0
 6429 0c92 0000     		.short	0
 6430 0c94 0000     		.short	0
 6431 0c96 0000     		.short	0
 6432 0c98 0000     		.short	0
 6433 0c9a 0000     		.short	0
 6434 0c9c C003     		.short	960
 6435 0c9e F007     		.short	2032
 6436 0ca0 300E     		.short	3632
 6437 0ca2 180C     		.short	3096
 6438 0ca4 1800     		.short	24
 6439 0ca6 1800     		.short	24
 6440 0ca8 1800     		.short	24
 6441 0caa 1800     		.short	24
 6442 0cac 180C     		.short	3096
 6443 0cae 300E     		.short	3632
 6444 0cb0 F007     		.short	2032
 6445 0cb2 C003     		.short	960
 6446 0cb4 0000     		.short	0
 6447 0cb6 0000     		.short	0
 6448 0cb8 0000     		.short	0
 6449 0cba 0000     		.short	0
 6450 0cbc 0000     		.short	0
 6451 0cbe 0000     		.short	0
 6452 0cc0 0000     		.short	0
 6453 0cc2 0018     		.short	6144
 6454 0cc4 0018     		.short	6144
 6455 0cc6 0018     		.short	6144
 6456 0cc8 0018     		.short	6144
 6457 0cca 0018     		.short	6144
 6458 0ccc C01B     		.short	7104
 6459 0cce F01F     		.short	8176
 6460 0cd0 301C     		.short	7216
 6461 0cd2 1818     		.short	6168
 6462 0cd4 1818     		.short	6168
 6463 0cd6 1818     		.short	6168
 6464 0cd8 1818     		.short	6168
 6465 0cda 1818     		.short	6168
 6466 0cdc 1818     		.short	6168
 6467 0cde 301C     		.short	7216
 6468 0ce0 F01F     		.short	8176
 6469 0ce2 C01B     		.short	7104
 6470 0ce4 0000     		.short	0
 6471 0ce6 0000     		.short	0
 6472 0ce8 0000     		.short	0
 6473 0cea 0000     		.short	0
 6474 0cec 0000     		.short	0
 6475 0cee 0000     		.short	0
 6476 0cf0 0000     		.short	0
 6477 0cf2 0000     		.short	0
 6478 0cf4 0000     		.short	0
 6479 0cf6 0000     		.short	0
 6480 0cf8 0000     		.short	0
 6481 0cfa 0000     		.short	0
 6482 0cfc C003     		.short	960
 6483 0cfe F00F     		.short	4080
 6484 0d00 300C     		.short	3120
 6485 0d02 1818     		.short	6168
 6486 0d04 F81F     		.short	8184
 6487 0d06 F81F     		.short	8184
 6488 0d08 1800     		.short	24
 6489 0d0a 1800     		.short	24
 6490 0d0c 3818     		.short	6200
 6491 0d0e 301C     		.short	7216
 6492 0d10 F00F     		.short	4080
 6493 0d12 C007     		.short	1984
 6494 0d14 0000     		.short	0
 6495 0d16 0000     		.short	0
 6496 0d18 0000     		.short	0
 6497 0d1a 0000     		.short	0
 6498 0d1c 0000     		.short	0
 6499 0d1e 0000     		.short	0
 6500 0d20 0000     		.short	0
 6501 0d22 800F     		.short	3968
 6502 0d24 C00F     		.short	4032
 6503 0d26 C000     		.short	192
 6504 0d28 C000     		.short	192
 6505 0d2a C000     		.short	192
 6506 0d2c F007     		.short	2032
 6507 0d2e F007     		.short	2032
 6508 0d30 C000     		.short	192
 6509 0d32 C000     		.short	192
 6510 0d34 C000     		.short	192
 6511 0d36 C000     		.short	192
 6512 0d38 C000     		.short	192
 6513 0d3a C000     		.short	192
 6514 0d3c C000     		.short	192
 6515 0d3e C000     		.short	192
 6516 0d40 C000     		.short	192
 6517 0d42 C000     		.short	192
 6518 0d44 0000     		.short	0
 6519 0d46 0000     		.short	0
 6520 0d48 0000     		.short	0
 6521 0d4a 0000     		.short	0
 6522 0d4c 0000     		.short	0
 6523 0d4e 0000     		.short	0
 6524 0d50 0000     		.short	0
 6525 0d52 0000     		.short	0
 6526 0d54 0000     		.short	0
 6527 0d56 0000     		.short	0
 6528 0d58 0000     		.short	0
 6529 0d5a 0000     		.short	0
 6530 0d5c E00D     		.short	3552
 6531 0d5e F80F     		.short	4088
 6532 0d60 180E     		.short	3608
 6533 0d62 0C0C     		.short	3084
 6534 0d64 0C0C     		.short	3084
 6535 0d66 0C0C     		.short	3084
 6536 0d68 0C0C     		.short	3084
 6537 0d6a 0C0C     		.short	3084
 6538 0d6c 0C0C     		.short	3084
 6539 0d6e 180E     		.short	3608
 6540 0d70 F80F     		.short	4088
 6541 0d72 E00D     		.short	3552
 6542 0d74 000C     		.short	3072
 6543 0d76 0C0C     		.short	3084
 6544 0d78 1C06     		.short	1564
 6545 0d7a F807     		.short	2040
 6546 0d7c F001     		.short	496
 6547 0d7e 0000     		.short	0
 6548 0d80 0000     		.short	0
 6549 0d82 1800     		.short	24
 6550 0d84 1800     		.short	24
 6551 0d86 1800     		.short	24
 6552 0d88 1800     		.short	24
 6553 0d8a 1800     		.short	24
 6554 0d8c D807     		.short	2008
 6555 0d8e F80F     		.short	4088
 6556 0d90 381C     		.short	7224
 6557 0d92 1818     		.short	6168
 6558 0d94 1818     		.short	6168
 6559 0d96 1818     		.short	6168
 6560 0d98 1818     		.short	6168
 6561 0d9a 1818     		.short	6168
 6562 0d9c 1818     		.short	6168
 6563 0d9e 1818     		.short	6168
 6564 0da0 1818     		.short	6168
 6565 0da2 1818     		.short	6168
 6566 0da4 0000     		.short	0
 6567 0da6 0000     		.short	0
 6568 0da8 0000     		.short	0
 6569 0daa 0000     		.short	0
 6570 0dac 0000     		.short	0
 6571 0dae 0000     		.short	0
 6572 0db0 0000     		.short	0
 6573 0db2 C000     		.short	192
 6574 0db4 C000     		.short	192
 6575 0db6 0000     		.short	0
 6576 0db8 0000     		.short	0
 6577 0dba 0000     		.short	0
 6578 0dbc C000     		.short	192
 6579 0dbe C000     		.short	192
 6580 0dc0 C000     		.short	192
 6581 0dc2 C000     		.short	192
 6582 0dc4 C000     		.short	192
 6583 0dc6 C000     		.short	192
 6584 0dc8 C000     		.short	192
 6585 0dca C000     		.short	192
 6586 0dcc C000     		.short	192
 6587 0dce C000     		.short	192
 6588 0dd0 C000     		.short	192
 6589 0dd2 C000     		.short	192
 6590 0dd4 0000     		.short	0
 6591 0dd6 0000     		.short	0
 6592 0dd8 0000     		.short	0
 6593 0dda 0000     		.short	0
 6594 0ddc 0000     		.short	0
 6595 0dde 0000     		.short	0
 6596 0de0 0000     		.short	0
 6597 0de2 C000     		.short	192
 6598 0de4 C000     		.short	192
 6599 0de6 0000     		.short	0
 6600 0de8 0000     		.short	0
 6601 0dea 0000     		.short	0
 6602 0dec C000     		.short	192
 6603 0dee C000     		.short	192
 6604 0df0 C000     		.short	192
 6605 0df2 C000     		.short	192
 6606 0df4 C000     		.short	192
 6607 0df6 C000     		.short	192
 6608 0df8 C000     		.short	192
 6609 0dfa C000     		.short	192
 6610 0dfc C000     		.short	192
 6611 0dfe C000     		.short	192
 6612 0e00 C000     		.short	192
 6613 0e02 C000     		.short	192
 6614 0e04 C000     		.short	192
 6615 0e06 C000     		.short	192
 6616 0e08 C000     		.short	192
 6617 0e0a F800     		.short	248
 6618 0e0c 7800     		.short	120
 6619 0e0e 0000     		.short	0
 6620 0e10 0000     		.short	0
 6621 0e12 0C00     		.short	12
 6622 0e14 0C00     		.short	12
 6623 0e16 0C00     		.short	12
 6624 0e18 0C00     		.short	12
 6625 0e1a 0C00     		.short	12
 6626 0e1c 0C0C     		.short	3084
 6627 0e1e 0C06     		.short	1548
 6628 0e20 0C03     		.short	780
 6629 0e22 8C01     		.short	396
 6630 0e24 CC00     		.short	204
 6631 0e26 6C00     		.short	108
 6632 0e28 FC00     		.short	252
 6633 0e2a 9C01     		.short	412
 6634 0e2c 8C03     		.short	908
 6635 0e2e 0C03     		.short	780
 6636 0e30 0C06     		.short	1548
 6637 0e32 0C0C     		.short	3084
 6638 0e34 0000     		.short	0
 6639 0e36 0000     		.short	0
 6640 0e38 0000     		.short	0
 6641 0e3a 0000     		.short	0
 6642 0e3c 0000     		.short	0
 6643 0e3e 0000     		.short	0
 6644 0e40 0000     		.short	0
 6645 0e42 C000     		.short	192
 6646 0e44 C000     		.short	192
 6647 0e46 C000     		.short	192
 6648 0e48 C000     		.short	192
 6649 0e4a C000     		.short	192
 6650 0e4c C000     		.short	192
 6651 0e4e C000     		.short	192
 6652 0e50 C000     		.short	192
 6653 0e52 C000     		.short	192
 6654 0e54 C000     		.short	192
 6655 0e56 C000     		.short	192
 6656 0e58 C000     		.short	192
 6657 0e5a C000     		.short	192
 6658 0e5c C000     		.short	192
 6659 0e5e C000     		.short	192
 6660 0e60 C000     		.short	192
 6661 0e62 C000     		.short	192
 6662 0e64 0000     		.short	0
 6663 0e66 0000     		.short	0
 6664 0e68 0000     		.short	0
 6665 0e6a 0000     		.short	0
 6666 0e6c 0000     		.short	0
 6667 0e6e 0000     		.short	0
 6668 0e70 0000     		.short	0
 6669 0e72 0000     		.short	0
 6670 0e74 0000     		.short	0
 6671 0e76 0000     		.short	0
 6672 0e78 0000     		.short	0
 6673 0e7a 0000     		.short	0
 6674 0e7c 7C3C     		.short	15484
 6675 0e7e FF7E     		.short	32511
 6676 0e80 C7E3     		.short	-7225
 6677 0e82 83C1     		.short	-15997
 6678 0e84 83C1     		.short	-15997
 6679 0e86 83C1     		.short	-15997
 6680 0e88 83C1     		.short	-15997
 6681 0e8a 83C1     		.short	-15997
 6682 0e8c 83C1     		.short	-15997
 6683 0e8e 83C1     		.short	-15997
 6684 0e90 83C1     		.short	-15997
 6685 0e92 83C1     		.short	-15997
 6686 0e94 0000     		.short	0
 6687 0e96 0000     		.short	0
 6688 0e98 0000     		.short	0
 6689 0e9a 0000     		.short	0
 6690 0e9c 0000     		.short	0
 6691 0e9e 0000     		.short	0
 6692 0ea0 0000     		.short	0
 6693 0ea2 0000     		.short	0
 6694 0ea4 0000     		.short	0
 6695 0ea6 0000     		.short	0
 6696 0ea8 0000     		.short	0
 6697 0eaa 0000     		.short	0
 6698 0eac 9807     		.short	1944
 6699 0eae F80F     		.short	4088
 6700 0eb0 381C     		.short	7224
 6701 0eb2 1818     		.short	6168
 6702 0eb4 1818     		.short	6168
 6703 0eb6 1818     		.short	6168
 6704 0eb8 1818     		.short	6168
 6705 0eba 1818     		.short	6168
 6706 0ebc 1818     		.short	6168
 6707 0ebe 1818     		.short	6168
 6708 0ec0 1818     		.short	6168
 6709 0ec2 1818     		.short	6168
 6710 0ec4 0000     		.short	0
 6711 0ec6 0000     		.short	0
 6712 0ec8 0000     		.short	0
 6713 0eca 0000     		.short	0
 6714 0ecc 0000     		.short	0
 6715 0ece 0000     		.short	0
 6716 0ed0 0000     		.short	0
 6717 0ed2 0000     		.short	0
 6718 0ed4 0000     		.short	0
 6719 0ed6 0000     		.short	0
 6720 0ed8 0000     		.short	0
 6721 0eda 0000     		.short	0
 6722 0edc C003     		.short	960
 6723 0ede F00F     		.short	4080
 6724 0ee0 300C     		.short	3120
 6725 0ee2 1818     		.short	6168
 6726 0ee4 1818     		.short	6168
 6727 0ee6 1818     		.short	6168
 6728 0ee8 1818     		.short	6168
 6729 0eea 1818     		.short	6168
 6730 0eec 1818     		.short	6168
 6731 0eee 300C     		.short	3120
 6732 0ef0 F00F     		.short	4080
 6733 0ef2 C003     		.short	960
 6734 0ef4 0000     		.short	0
 6735 0ef6 0000     		.short	0
 6736 0ef8 0000     		.short	0
 6737 0efa 0000     		.short	0
 6738 0efc 0000     		.short	0
 6739 0efe 0000     		.short	0
 6740 0f00 0000     		.short	0
 6741 0f02 0000     		.short	0
 6742 0f04 0000     		.short	0
 6743 0f06 0000     		.short	0
 6744 0f08 0000     		.short	0
 6745 0f0a 0000     		.short	0
 6746 0f0c D803     		.short	984
 6747 0f0e F80F     		.short	4088
 6748 0f10 380C     		.short	3128
 6749 0f12 1818     		.short	6168
 6750 0f14 1818     		.short	6168
 6751 0f16 1818     		.short	6168
 6752 0f18 1818     		.short	6168
 6753 0f1a 1818     		.short	6168
 6754 0f1c 1818     		.short	6168
 6755 0f1e 380C     		.short	3128
 6756 0f20 F80F     		.short	4088
 6757 0f22 D803     		.short	984
 6758 0f24 1800     		.short	24
 6759 0f26 1800     		.short	24
 6760 0f28 1800     		.short	24
 6761 0f2a 1800     		.short	24
 6762 0f2c 1800     		.short	24
 6763 0f2e 0000     		.short	0
 6764 0f30 0000     		.short	0
 6765 0f32 0000     		.short	0
 6766 0f34 0000     		.short	0
 6767 0f36 0000     		.short	0
 6768 0f38 0000     		.short	0
 6769 0f3a 0000     		.short	0
 6770 0f3c C01B     		.short	7104
 6771 0f3e F01F     		.short	8176
 6772 0f40 301C     		.short	7216
 6773 0f42 1818     		.short	6168
 6774 0f44 1818     		.short	6168
 6775 0f46 1818     		.short	6168
 6776 0f48 1818     		.short	6168
 6777 0f4a 1818     		.short	6168
 6778 0f4c 1818     		.short	6168
 6779 0f4e 301C     		.short	7216
 6780 0f50 F01F     		.short	8176
 6781 0f52 C01B     		.short	7104
 6782 0f54 0018     		.short	6144
 6783 0f56 0018     		.short	6144
 6784 0f58 0018     		.short	6144
 6785 0f5a 0018     		.short	6144
 6786 0f5c 0018     		.short	6144
 6787 0f5e 0000     		.short	0
 6788 0f60 0000     		.short	0
 6789 0f62 0000     		.short	0
 6790 0f64 0000     		.short	0
 6791 0f66 0000     		.short	0
 6792 0f68 0000     		.short	0
 6793 0f6a 0000     		.short	0
 6794 0f6c B007     		.short	1968
 6795 0f6e F003     		.short	1008
 6796 0f70 7000     		.short	112
 6797 0f72 3000     		.short	48
 6798 0f74 3000     		.short	48
 6799 0f76 3000     		.short	48
 6800 0f78 3000     		.short	48
 6801 0f7a 3000     		.short	48
 6802 0f7c 3000     		.short	48
 6803 0f7e 3000     		.short	48
 6804 0f80 3000     		.short	48
 6805 0f82 3000     		.short	48
 6806 0f84 0000     		.short	0
 6807 0f86 0000     		.short	0
 6808 0f88 0000     		.short	0
 6809 0f8a 0000     		.short	0
 6810 0f8c 0000     		.short	0
 6811 0f8e 0000     		.short	0
 6812 0f90 0000     		.short	0
 6813 0f92 0000     		.short	0
 6814 0f94 0000     		.short	0
 6815 0f96 0000     		.short	0
 6816 0f98 0000     		.short	0
 6817 0f9a 0000     		.short	0
 6818 0f9c E003     		.short	992
 6819 0f9e F003     		.short	1008
 6820 0fa0 380E     		.short	3640
 6821 0fa2 180C     		.short	3096
 6822 0fa4 3800     		.short	56
 6823 0fa6 F003     		.short	1008
 6824 0fa8 C007     		.short	1984
 6825 0faa 000C     		.short	3072
 6826 0fac 180C     		.short	3096
 6827 0fae 380E     		.short	3640
 6828 0fb0 F007     		.short	2032
 6829 0fb2 E003     		.short	992
 6830 0fb4 0000     		.short	0
 6831 0fb6 0000     		.short	0
 6832 0fb8 0000     		.short	0
 6833 0fba 0000     		.short	0
 6834 0fbc 0000     		.short	0
 6835 0fbe 0000     		.short	0
 6836 0fc0 0000     		.short	0
 6837 0fc2 0000     		.short	0
 6838 0fc4 8000     		.short	128
 6839 0fc6 C000     		.short	192
 6840 0fc8 C000     		.short	192
 6841 0fca C000     		.short	192
 6842 0fcc F007     		.short	2032
 6843 0fce F007     		.short	2032
 6844 0fd0 C000     		.short	192
 6845 0fd2 C000     		.short	192
 6846 0fd4 C000     		.short	192
 6847 0fd6 C000     		.short	192
 6848 0fd8 C000     		.short	192
 6849 0fda C000     		.short	192
 6850 0fdc C000     		.short	192
 6851 0fde C000     		.short	192
 6852 0fe0 C007     		.short	1984
 6853 0fe2 8007     		.short	1920
 6854 0fe4 0000     		.short	0
 6855 0fe6 0000     		.short	0
 6856 0fe8 0000     		.short	0
 6857 0fea 0000     		.short	0
 6858 0fec 0000     		.short	0
 6859 0fee 0000     		.short	0
 6860 0ff0 0000     		.short	0
 6861 0ff2 0000     		.short	0
 6862 0ff4 0000     		.short	0
 6863 0ff6 0000     		.short	0
 6864 0ff8 0000     		.short	0
 6865 0ffa 0000     		.short	0
 6866 0ffc 1818     		.short	6168
 6867 0ffe 1818     		.short	6168
 6868 1000 1818     		.short	6168
 6869 1002 1818     		.short	6168
 6870 1004 1818     		.short	6168
 6871 1006 1818     		.short	6168
 6872 1008 1818     		.short	6168
 6873 100a 1818     		.short	6168
 6874 100c 1818     		.short	6168
 6875 100e 381C     		.short	7224
 6876 1010 F01F     		.short	8176
 6877 1012 E019     		.short	6624
 6878 1014 0000     		.short	0
 6879 1016 0000     		.short	0
 6880 1018 0000     		.short	0
 6881 101a 0000     		.short	0
 6882 101c 0000     		.short	0
 6883 101e 0000     		.short	0
 6884 1020 0000     		.short	0
 6885 1022 0000     		.short	0
 6886 1024 0000     		.short	0
 6887 1026 0000     		.short	0
 6888 1028 0000     		.short	0
 6889 102a 0000     		.short	0
 6890 102c 0C18     		.short	6156
 6891 102e 180C     		.short	3096
 6892 1030 180C     		.short	3096
 6893 1032 180C     		.short	3096
 6894 1034 3006     		.short	1584
 6895 1036 3006     		.short	1584
 6896 1038 3006     		.short	1584
 6897 103a 6003     		.short	864
 6898 103c 6003     		.short	864
 6899 103e 6003     		.short	864
 6900 1040 C001     		.short	448
 6901 1042 C001     		.short	448
 6902 1044 0000     		.short	0
 6903 1046 0000     		.short	0
 6904 1048 0000     		.short	0
 6905 104a 0000     		.short	0
 6906 104c 0000     		.short	0
 6907 104e 0000     		.short	0
 6908 1050 0000     		.short	0
 6909 1052 0000     		.short	0
 6910 1054 0000     		.short	0
 6911 1056 0000     		.short	0
 6912 1058 0000     		.short	0
 6913 105a 0000     		.short	0
 6914 105c C141     		.short	16833
 6915 105e C141     		.short	16833
 6916 1060 C361     		.short	25027
 6917 1062 6363     		.short	25443
 6918 1064 6363     		.short	25443
 6919 1066 6363     		.short	25443
 6920 1068 3636     		.short	13878
 6921 106a 3636     		.short	13878
 6922 106c 3636     		.short	13878
 6923 106e 1C1C     		.short	7196
 6924 1070 1C1C     		.short	7196
 6925 1072 1C1C     		.short	7196
 6926 1074 0000     		.short	0
 6927 1076 0000     		.short	0
 6928 1078 0000     		.short	0
 6929 107a 0000     		.short	0
 6930 107c 0000     		.short	0
 6931 107e 0000     		.short	0
 6932 1080 0000     		.short	0
 6933 1082 0000     		.short	0
 6934 1084 0000     		.short	0
 6935 1086 0000     		.short	0
 6936 1088 0000     		.short	0
 6937 108a 0000     		.short	0
 6938 108c 1C38     		.short	14364
 6939 108e 381C     		.short	7224
 6940 1090 300C     		.short	3120
 6941 1092 6006     		.short	1632
 6942 1094 C003     		.short	960
 6943 1096 C003     		.short	960
 6944 1098 C003     		.short	960
 6945 109a C003     		.short	960
 6946 109c 6006     		.short	1632
 6947 109e 300C     		.short	3120
 6948 10a0 381C     		.short	7224
 6949 10a2 1C38     		.short	14364
 6950 10a4 0000     		.short	0
 6951 10a6 0000     		.short	0
 6952 10a8 0000     		.short	0
 6953 10aa 0000     		.short	0
 6954 10ac 0000     		.short	0
 6955 10ae 0000     		.short	0
 6956 10b0 0000     		.short	0
 6957 10b2 0000     		.short	0
 6958 10b4 0000     		.short	0
 6959 10b6 0000     		.short	0
 6960 10b8 0000     		.short	0
 6961 10ba 0000     		.short	0
 6962 10bc 1830     		.short	12312
 6963 10be 3018     		.short	6192
 6964 10c0 3018     		.short	6192
 6965 10c2 7018     		.short	6256
 6966 10c4 600C     		.short	3168
 6967 10c6 600C     		.short	3168
 6968 10c8 E00C     		.short	3296
 6969 10ca C006     		.short	1728
 6970 10cc C006     		.short	1728
 6971 10ce 8003     		.short	896
 6972 10d0 8003     		.short	896
 6973 10d2 8003     		.short	896
 6974 10d4 8001     		.short	384
 6975 10d6 8001     		.short	384
 6976 10d8 C001     		.short	448
 6977 10da F000     		.short	240
 6978 10dc 7000     		.short	112
 6979 10de 0000     		.short	0
 6980 10e0 0000     		.short	0
 6981 10e2 0000     		.short	0
 6982 10e4 0000     		.short	0
 6983 10e6 0000     		.short	0
 6984 10e8 0000     		.short	0
 6985 10ea 0000     		.short	0
 6986 10ec FC1F     		.short	8188
 6987 10ee FC1F     		.short	8188
 6988 10f0 000C     		.short	3072
 6989 10f2 0006     		.short	1536
 6990 10f4 0003     		.short	768
 6991 10f6 8001     		.short	384
 6992 10f8 C000     		.short	192
 6993 10fa 6000     		.short	96
 6994 10fc 3000     		.short	48
 6995 10fe 1800     		.short	24
 6996 1100 FC1F     		.short	8188
 6997 1102 FC1F     		.short	8188
 6998 1104 0000     		.short	0
 6999 1106 0000     		.short	0
 7000 1108 0000     		.short	0
 7001 110a 0000     		.short	0
 7002 110c 0000     		.short	0
 7003 110e 0000     		.short	0
 7004 1110 0000     		.short	0
 7005 1112 0003     		.short	768
 7006 1114 8001     		.short	384
 7007 1116 C000     		.short	192
 7008 1118 C000     		.short	192
 7009 111a C000     		.short	192
 7010 111c C000     		.short	192
 7011 111e C000     		.short	192
 7012 1120 C000     		.short	192
 7013 1122 6000     		.short	96
 7014 1124 6000     		.short	96
 7015 1126 3000     		.short	48
 7016 1128 6000     		.short	96
 7017 112a 4000     		.short	64
 7018 112c C000     		.short	192
 7019 112e C000     		.short	192
 7020 1130 C000     		.short	192
 7021 1132 C000     		.short	192
 7022 1134 C000     		.short	192
 7023 1136 C000     		.short	192
 7024 1138 8001     		.short	384
 7025 113a 0003     		.short	768
 7026 113c 0000     		.short	0
 7027 113e 0000     		.short	0
 7028 1140 0000     		.short	0
 7029 1142 8001     		.short	384
 7030 1144 8001     		.short	384
 7031 1146 8001     		.short	384
 7032 1148 8001     		.short	384
 7033 114a 8001     		.short	384
 7034 114c 8001     		.short	384
 7035 114e 8001     		.short	384
 7036 1150 8001     		.short	384
 7037 1152 8001     		.short	384
 7038 1154 8001     		.short	384
 7039 1156 8001     		.short	384
 7040 1158 8001     		.short	384
 7041 115a 8001     		.short	384
 7042 115c 8001     		.short	384
 7043 115e 8001     		.short	384
 7044 1160 8001     		.short	384
 7045 1162 8001     		.short	384
 7046 1164 8001     		.short	384
 7047 1166 8001     		.short	384
 7048 1168 8001     		.short	384
 7049 116a 8001     		.short	384
 7050 116c 8001     		.short	384
 7051 116e 0000     		.short	0
 7052 1170 0000     		.short	0
 7053 1172 6000     		.short	96
 7054 1174 C000     		.short	192
 7055 1176 C001     		.short	448
 7056 1178 8001     		.short	384
 7057 117a 8001     		.short	384
 7058 117c 8001     		.short	384
 7059 117e 8001     		.short	384
 7060 1180 8001     		.short	384
 7061 1182 0003     		.short	768
 7062 1184 0003     		.short	768
 7063 1186 0006     		.short	1536
 7064 1188 0003     		.short	768
 7065 118a 0001     		.short	256
 7066 118c 8001     		.short	384
 7067 118e 8001     		.short	384
 7068 1190 8001     		.short	384
 7069 1192 8001     		.short	384
 7070 1194 8001     		.short	384
 7071 1196 8001     		.short	384
 7072 1198 C000     		.short	192
 7073 119a 6000     		.short	96
 7074 119c 0000     		.short	0
 7075 119e 0000     		.short	0
 7076 11a0 0000     		.short	0
 7077 11a2 0000     		.short	0
 7078 11a4 0000     		.short	0
 7079 11a6 0000     		.short	0
 7080 11a8 0000     		.short	0
 7081 11aa 0000     		.short	0
 7082 11ac 0000     		.short	0
 7083 11ae 0000     		.short	0
 7084 11b0 F010     		.short	4336
 7085 11b2 F81F     		.short	8184
 7086 11b4 080F     		.short	3848
 7087 11b6 0000     		.short	0
 7088 11b8 0000     		.short	0
 7089 11ba 0000     		.short	0
 7090 11bc 0000     		.short	0
 7091 11be 0000     		.short	0
 7092 11c0 0000     		.short	0
 7093 11c2 0000     		.short	0
 7094 11c4 0000     		.short	0
 7095 11c6 0000     		.short	0
 7096 11c8 0000     		.short	0
 7097 11ca 0000     		.short	0
 7098 11cc 0000     		.short	0
 7099 11ce 0000     		.short	0
 7100 11d0 0000     		.short	0
 7101 11d2 0000     		.short	0
 7102 11d4 0000     		.short	0
 7103 11d6 0000     		.short	0
 7104 11d8 0000     		.short	0
 7105 11da 0000     		.short	0
 7106 11dc 0000     		.short	0
 7107 11de 0000     		.short	0
 7108 11e0 0000     		.short	0
 7109 11e2 0000     		.short	0
 7110 11e4 0000     		.short	0
 7111 11e6 0000     		.short	0
 7112 11e8 0000     		.short	0
 7113 11ea 0000     		.short	0
 7114 11ec 0000     		.short	0
 7115 11ee 0000     		.short	0
 7116 11f0 0000     		.short	0
 7117 11f2 0000     		.short	0
 7118 11f4 0000     		.short	0
 7119 11f6 0000     		.short	0
 7120 11f8 0000     		.short	0
 7121 11fa 0000     		.short	0
 7122 11fc 0000     		.short	0
 7123 11fe 0000     		.short	0
 7124 1200 0000     		.short	0
 7125 1202 0000     		.short	0
 7126 1204 0000     		.short	0
 7127 1206 0000     		.short	0
 7128 1208 0000     		.short	0
 7129 120a C003     		.short	960
 7130 120c 300C     		.short	3120
 7131 120e 0810     		.short	4104
 7132 1210 0420     		.short	8196
 7133 1212 0420     		.short	8196
 7134 1214 0240     		.short	16386
 7135 1216 0240     		.short	16386
 7136 1218 0240     		.short	16386
 7137 121a 0240     		.short	16386
 7138 121c 0240     		.short	16386
 7139 121e 0420     		.short	8196
 7140 1220 0420     		.short	8196
 7141 1222 0810     		.short	4104
 7142 1224 300C     		.short	3120
 7143 1226 C003     		.short	960
 7144 1228 0000     		.short	0
 7145 122a 0000     		.short	0
 7146 122c 0000     		.short	0
 7147 122e 0000     		.short	0
 7148 1230 0000     		.short	0
 7149 1232 0000     		.short	0
 7150 1234 0000     		.short	0
 7151 1236 0000     		.short	0
 7152 1238 0000     		.short	0
 7153 123a C003     		.short	960
 7154 123c F00F     		.short	4080
 7155 123e F81F     		.short	8184
 7156 1240 FC3F     		.short	16380
 7157 1242 FC3F     		.short	16380
 7158 1244 FE7F     		.short	32766
 7159 1246 FE7F     		.short	32766
 7160 1248 FE7F     		.short	32766
 7161 124a FE7F     		.short	32766
 7162 124c FE7F     		.short	32766
 7163 124e FC3F     		.short	16380
 7164 1250 FC3F     		.short	16380
 7165 1252 F81F     		.short	8184
 7166 1254 F00F     		.short	4080
 7167 1256 C003     		.short	960
 7168 1258 0000     		.short	0
 7169 125a 0000     		.short	0
 7170 125c 0000     		.short	0
 7171 125e 0000     		.short	0
 7172 1260 0000     		.short	0
 7173 1262 0000     		.short	0
 7174 1264 0000     		.short	0
 7175 1266 0000     		.short	0
 7176 1268 0000     		.short	0
 7177 126a 0000     		.short	0
 7178 126c 0000     		.short	0
 7179 126e E007     		.short	2016
 7180 1270 F00F     		.short	4080
 7181 1272 1818     		.short	6168
 7182 1274 1818     		.short	6168
 7183 1276 1818     		.short	6168
 7184 1278 1818     		.short	6168
 7185 127a 1818     		.short	6168
 7186 127c 1818     		.short	6168
 7187 127e F00F     		.short	4080
 7188 1280 E007     		.short	2016
 7189 1282 0000     		.short	0
 7190 1284 0000     		.short	0
 7191 1286 0000     		.short	0
 7192 1288 0000     		.short	0
 7193 128a 0000     		.short	0
 7194 128c 0000     		.short	0
 7195 128e 0000     		.short	0
 7196 1290 0000     		.short	0
 7197 1292 0000     		.short	0
 7198 1294 0000     		.short	0
 7199 1296 0000     		.short	0
 7200 1298 0000     		.short	0
 7201 129a 0000     		.short	0
 7202 129c 0000     		.short	0
 7203 129e E007     		.short	2016
 7204 12a0 F00F     		.short	4080
 7205 12a2 F81F     		.short	8184
 7206 12a4 F81F     		.short	8184
 7207 12a6 F81F     		.short	8184
 7208 12a8 F81F     		.short	8184
 7209 12aa F81F     		.short	8184
 7210 12ac F81F     		.short	8184
 7211 12ae F00F     		.short	4080
 7212 12b0 E007     		.short	2016
 7213 12b2 0000     		.short	0
 7214 12b4 0000     		.short	0
 7215 12b6 0000     		.short	0
 7216 12b8 0000     		.short	0
 7217 12ba 0000     		.short	0
 7218 12bc 0000     		.short	0
 7219 12be 0000     		.short	0
 7220 12c0 0000     		.short	0
 7221 12c2 0000     		.short	0
 7222 12c4 0000     		.short	0
 7223 12c6 0000     		.short	0
 7224 12c8 0000     		.short	0
 7225 12ca 0000     		.short	0
 7226 12cc 0000     		.short	0
 7227 12ce 0000     		.short	0
 7228 12d0 0000     		.short	0
 7229 12d2 0000     		.short	0
 7230 12d4 0000     		.short	0
 7231 12d6 0000     		.short	0
 7232 12d8 8001     		.short	384
 7233 12da C003     		.short	960
 7234 12dc 6006     		.short	1632
 7235 12de 300C     		.short	3120
 7236 12e0 1818     		.short	6168
 7237 12e2 1818     		.short	6168
 7238 12e4 F81F     		.short	8184
 7239 12e6 F81F     		.short	8184
 7240 12e8 0000     		.short	0
 7241 12ea 0000     		.short	0
 7242 12ec 0000     		.short	0
 7243 12ee 0000     		.short	0
 7244 12f0 0000     		.short	0
 7245 12f2 0000     		.short	0
 7246 12f4 0000     		.short	0
 7247 12f6 0000     		.short	0
 7248 12f8 0000     		.short	0
 7249 12fa 0000     		.short	0
 7250 12fc 0000     		.short	0
 7251 12fe 0000     		.short	0
 7252 1300 0000     		.short	0
 7253 1302 0000     		.short	0
 7254 1304 0000     		.short	0
 7255 1306 0000     		.short	0
 7256 1308 8001     		.short	384
 7257 130a C003     		.short	960
 7258 130c E007     		.short	2016
 7259 130e F00F     		.short	4080
 7260 1310 F81F     		.short	8184
 7261 1312 F81F     		.short	8184
 7262 1314 F81F     		.short	8184
 7263 1316 F81F     		.short	8184
 7264 1318 0000     		.short	0
 7265 131a 0000     		.short	0
 7266 131c 0000     		.short	0
 7267 131e 0000     		.short	0
 7268 1320 0000     		.short	0
 7269 1322 0000     		.short	0
 7270 1324 0000     		.short	0
 7271 1326 0000     		.short	0
 7272 1328 F81F     		.short	8184
 7273 132a F81F     		.short	8184
 7274 132c 1818     		.short	6168
 7275 132e 1818     		.short	6168
 7276 1330 300C     		.short	3120
 7277 1332 6006     		.short	1632
 7278 1334 C003     		.short	960
 7279 1336 8001     		.short	384
 7280 1338 0000     		.short	0
 7281 133a 0000     		.short	0
 7282 133c 0000     		.short	0
 7283 133e 0000     		.short	0
 7284 1340 0000     		.short	0
 7285 1342 0000     		.short	0
 7286 1344 0000     		.short	0
 7287 1346 0000     		.short	0
 7288 1348 0000     		.short	0
 7289 134a 0000     		.short	0
 7290 134c 0000     		.short	0
 7291 134e 0000     		.short	0
 7292 1350 0000     		.short	0
 7293 1352 0000     		.short	0
 7294 1354 0000     		.short	0
 7295 1356 0000     		.short	0
 7296 1358 F81F     		.short	8184
 7297 135a F81F     		.short	8184
 7298 135c F81F     		.short	8184
 7299 135e F81F     		.short	8184
 7300 1360 F00F     		.short	4080
 7301 1362 E007     		.short	2016
 7302 1364 C003     		.short	960
 7303 1366 8001     		.short	384
 7304 1368 0000     		.short	0
 7305 136a 0000     		.short	0
 7306 136c 0000     		.short	0
 7307 136e 0000     		.short	0
 7308 1370 0000     		.short	0
 7309 1372 0000     		.short	0
 7310 1374 0000     		.short	0
 7311 1376 0000     		.short	0
 7312 1378 0000     		.short	0
 7313 137a 0000     		.short	0
 7314 137c 0000     		.short	0
 7315 137e 0000     		.short	0
 7316 1380 0000     		.short	0
 7317 1382 0000     		.short	0
 7318 1384 0000     		.short	0
 7319 1386 0000     		.short	0
 7320 1388 0000     		.short	0
 7321 138a 0000     		.short	0
 7322 138c 0000     		.short	0
 7323 138e E001     		.short	480
 7324 1390 F001     		.short	496
 7325 1392 9801     		.short	408
 7326 1394 8C01     		.short	396
 7327 1396 8601     		.short	390
 7328 1398 8601     		.short	390
 7329 139a 8C01     		.short	396
 7330 139c 9801     		.short	408
 7331 139e F001     		.short	496
 7332 13a0 E001     		.short	480
 7333 13a2 0000     		.short	0
 7334 13a4 0000     		.short	0
 7335 13a6 0000     		.short	0
 7336 13a8 0000     		.short	0
 7337 13aa 0000     		.short	0
 7338 13ac 0000     		.short	0
 7339 13ae 0000     		.short	0
 7340 13b0 0000     		.short	0
 7341 13b2 0000     		.short	0
 7342 13b4 0000     		.short	0
 7343 13b6 0000     		.short	0
 7344 13b8 0000     		.short	0
 7345 13ba 0000     		.short	0
 7346 13bc 0000     		.short	0
 7347 13be E001     		.short	480
 7348 13c0 F001     		.short	496
 7349 13c2 F801     		.short	504
 7350 13c4 FC01     		.short	508
 7351 13c6 FE01     		.short	510
 7352 13c8 FE01     		.short	510
 7353 13ca FC01     		.short	508
 7354 13cc F801     		.short	504
 7355 13ce F001     		.short	496
 7356 13d0 E001     		.short	480
 7357 13d2 0000     		.short	0
 7358 13d4 0000     		.short	0
 7359 13d6 0000     		.short	0
 7360 13d8 0000     		.short	0
 7361 13da 0000     		.short	0
 7362 13dc 0000     		.short	0
 7363 13de 0000     		.short	0
 7364 13e0 0000     		.short	0
 7365 13e2 0000     		.short	0
 7366 13e4 0000     		.short	0
 7367 13e6 0000     		.short	0
 7368 13e8 0000     		.short	0
 7369 13ea 0000     		.short	0
 7370 13ec 0000     		.short	0
 7371 13ee 8007     		.short	1920
 7372 13f0 800F     		.short	3968
 7373 13f2 8019     		.short	6528
 7374 13f4 8031     		.short	12672
 7375 13f6 8061     		.short	24960
 7376 13f8 8061     		.short	24960
 7377 13fa 8031     		.short	12672
 7378 13fc 8019     		.short	6528
 7379 13fe 800F     		.short	3968
 7380 1400 8007     		.short	1920
 7381 1402 0000     		.short	0
 7382 1404 0000     		.short	0
 7383 1406 0000     		.short	0
 7384 1408 0000     		.short	0
 7385 140a 0000     		.short	0
 7386 140c 0000     		.short	0
 7387 140e 0000     		.short	0
 7388 1410 0000     		.short	0
 7389 1412 0000     		.short	0
 7390 1414 0000     		.short	0
 7391 1416 0000     		.short	0
 7392 1418 0000     		.short	0
 7393 141a 0000     		.short	0
 7394 141c 0000     		.short	0
 7395 141e 8007     		.short	1920
 7396 1420 800F     		.short	3968
 7397 1422 801F     		.short	8064
 7398 1424 803F     		.short	16256
 7399 1426 807F     		.short	32640
 7400 1428 807F     		.short	32640
 7401 142a 803F     		.short	16256
 7402 142c 801F     		.short	8064
 7403 142e 800F     		.short	3968
 7404 1430 8007     		.short	1920
 7405 1432 0000     		.short	0
 7406 1434 0000     		.short	0
 7407 1436 0000     		.short	0
 7408 1438 0000     		.short	0
 7409 143a 0000     		.short	0
 7410 143c 0000     		.short	0
 7411 143e 0000     		.short	0
 7412 1440 0000     		.short	0
 7413 1442 C001     		.short	448
 7414 1444 2002     		.short	544
 7415 1446 2002     		.short	544
 7416 1448 4001     		.short	320
 7417 144a 3006     		.short	1584
 7418 144c 0808     		.short	2056
 7419 144e 0808     		.short	2056
 7420 1450 0808     		.short	2056
 7421 1452 0808     		.short	2056
 7422 1454 0808     		.short	2056
 7423 1456 0808     		.short	2056
 7424 1458 0808     		.short	2056
 7425 145a 2002     		.short	544
 7426 145c 2002     		.short	544
 7427 145e 2002     		.short	544
 7428 1460 2002     		.short	544
 7429 1462 2002     		.short	544
 7430 1464 2002     		.short	544
 7431 1466 2002     		.short	544
 7432 1468 2002     		.short	544
 7433 146a 2002     		.short	544
 7434 146c 2002     		.short	544
 7435 146e 0000     		.short	0
 7436 1470 0000     		.short	0
 7437 1472 C001     		.short	448
 7438 1474 E003     		.short	992
 7439 1476 E003     		.short	992
 7440 1478 C001     		.short	448
 7441 147a F007     		.short	2032
 7442 147c D80D     		.short	3544
 7443 147e D80D     		.short	3544
 7444 1480 D80D     		.short	3544
 7445 1482 D80D     		.short	3544
 7446 1484 D80D     		.short	3544
 7447 1486 D80D     		.short	3544
 7448 1488 D80D     		.short	3544
 7449 148a 6003     		.short	864
 7450 148c 6003     		.short	864
 7451 148e 6003     		.short	864
 7452 1490 6003     		.short	864
 7453 1492 6003     		.short	864
 7454 1494 6003     		.short	864
 7455 1496 6003     		.short	864
 7456 1498 6003     		.short	864
 7457 149a 6003     		.short	864
 7458 149c 6003     		.short	864
 7459 149e 0000     		.short	0
 7460 14a0 0000     		.short	0
 7461 14a2 C001     		.short	448
 7462 14a4 2002     		.short	544
 7463 14a6 2002     		.short	544
 7464 14a8 4001     		.short	320
 7465 14aa 3006     		.short	1584
 7466 14ac 0808     		.short	2056
 7467 14ae 0808     		.short	2056
 7468 14b0 0808     		.short	2056
 7469 14b2 0410     		.short	4100
 7470 14b4 0220     		.short	8194
 7471 14b6 0220     		.short	8194
 7472 14b8 4001     		.short	320
 7473 14ba 2002     		.short	544
 7474 14bc 2002     		.short	544
 7475 14be 1004     		.short	1040
 7476 14c0 0808     		.short	2056
 7477 14c2 0808     		.short	2056
 7478 14c4 0410     		.short	4100
 7479 14c6 0410     		.short	4100
 7480 14c8 0420     		.short	8196
 7481 14ca 0440     		.short	16388
 7482 14cc 0000     		.short	0
 7483 14ce 0000     		.short	0
 7484 14d0 0000     		.short	0
 7485 14d2 C001     		.short	448
 7486 14d4 E003     		.short	992
 7487 14d6 E003     		.short	992
 7488 14d8 C001     		.short	448
 7489 14da F007     		.short	2032
 7490 14dc D80D     		.short	3544
 7491 14de D80D     		.short	3544
 7492 14e0 D80D     		.short	3544
 7493 14e2 CC19     		.short	6604
 7494 14e4 C631     		.short	12742
 7495 14e6 C261     		.short	25026
 7496 14e8 C001     		.short	448
 7497 14ea 6003     		.short	864
 7498 14ec 6003     		.short	864
 7499 14ee 7006     		.short	1648
 7500 14f0 380C     		.short	3128
 7501 14f2 180C     		.short	3096
 7502 14f4 0C18     		.short	6156
 7503 14f6 0C18     		.short	6156
 7504 14f8 0C30     		.short	12300
 7505 14fa 0C60     		.short	24588
 7506 14fc 0000     		.short	0
 7507 14fe 0000     		.short	0
 7510              	default5x7:
 7511 1500 00       		.byte	0
 7512 1501 00       		.byte	0
 7513 1502 00       		.byte	0
 7514 1503 00       		.byte	0
 7515 1504 00       		.byte	0
 7516 1505 00       		.byte	0
 7517 1506 00       		.byte	0
 7518 1507 5F       		.byte	95
 7519 1508 00       		.byte	0
 7520 1509 00       		.byte	0
 7521 150a 00       		.byte	0
 7522 150b 03       		.byte	3
 7523 150c 00       		.byte	0
 7524 150d 03       		.byte	3
 7525 150e 00       		.byte	0
 7526 150f 14       		.byte	20
 7527 1510 3E       		.byte	62
 7528 1511 14       		.byte	20
 7529 1512 3E       		.byte	62
 7530 1513 14       		.byte	20
 7531 1514 24       		.byte	36
 7532 1515 2A       		.byte	42
 7533 1516 7F       		.byte	127
 7534 1517 2A       		.byte	42
 7535 1518 12       		.byte	18
 7536 1519 43       		.byte	67
 7537 151a 33       		.byte	51
 7538 151b 08       		.byte	8
 7539 151c 66       		.byte	102
 7540 151d 61       		.byte	97
 7541 151e 36       		.byte	54
 7542 151f 49       		.byte	73
 7543 1520 55       		.byte	85
 7544 1521 22       		.byte	34
 7545 1522 50       		.byte	80
 7546 1523 00       		.byte	0
 7547 1524 05       		.byte	5
 7548 1525 03       		.byte	3
 7549 1526 00       		.byte	0
 7550 1527 00       		.byte	0
 7551 1528 00       		.byte	0
 7552 1529 1C       		.byte	28
 7553 152a 22       		.byte	34
 7554 152b 41       		.byte	65
 7555 152c 00       		.byte	0
 7556 152d 00       		.byte	0
 7557 152e 41       		.byte	65
 7558 152f 22       		.byte	34
 7559 1530 1C       		.byte	28
 7560 1531 00       		.byte	0
 7561 1532 14       		.byte	20
 7562 1533 08       		.byte	8
 7563 1534 3E       		.byte	62
 7564 1535 08       		.byte	8
 7565 1536 14       		.byte	20
 7566 1537 08       		.byte	8
 7567 1538 08       		.byte	8
 7568 1539 3E       		.byte	62
 7569 153a 08       		.byte	8
 7570 153b 08       		.byte	8
 7571 153c 00       		.byte	0
 7572 153d 50       		.byte	80
 7573 153e 30       		.byte	48
 7574 153f 00       		.byte	0
 7575 1540 00       		.byte	0
 7576 1541 08       		.byte	8
 7577 1542 08       		.byte	8
 7578 1543 08       		.byte	8
 7579 1544 08       		.byte	8
 7580 1545 08       		.byte	8
 7581 1546 00       		.byte	0
 7582 1547 60       		.byte	96
 7583 1548 60       		.byte	96
 7584 1549 00       		.byte	0
 7585 154a 00       		.byte	0
 7586 154b 20       		.byte	32
 7587 154c 10       		.byte	16
 7588 154d 08       		.byte	8
 7589 154e 04       		.byte	4
 7590 154f 02       		.byte	2
 7591 1550 3E       		.byte	62
 7592 1551 51       		.byte	81
 7593 1552 49       		.byte	73
 7594 1553 45       		.byte	69
 7595 1554 3E       		.byte	62
 7596 1555 04       		.byte	4
 7597 1556 02       		.byte	2
 7598 1557 7F       		.byte	127
 7599 1558 00       		.byte	0
 7600 1559 00       		.byte	0
 7601 155a 42       		.byte	66
 7602 155b 61       		.byte	97
 7603 155c 51       		.byte	81
 7604 155d 49       		.byte	73
 7605 155e 46       		.byte	70
 7606 155f 22       		.byte	34
 7607 1560 41       		.byte	65
 7608 1561 49       		.byte	73
 7609 1562 49       		.byte	73
 7610 1563 36       		.byte	54
 7611 1564 18       		.byte	24
 7612 1565 14       		.byte	20
 7613 1566 12       		.byte	18
 7614 1567 7F       		.byte	127
 7615 1568 10       		.byte	16
 7616 1569 27       		.byte	39
 7617 156a 45       		.byte	69
 7618 156b 45       		.byte	69
 7619 156c 45       		.byte	69
 7620 156d 39       		.byte	57
 7621 156e 3E       		.byte	62
 7622 156f 49       		.byte	73
 7623 1570 49       		.byte	73
 7624 1571 49       		.byte	73
 7625 1572 32       		.byte	50
 7626 1573 01       		.byte	1
 7627 1574 01       		.byte	1
 7628 1575 71       		.byte	113
 7629 1576 09       		.byte	9
 7630 1577 07       		.byte	7
 7631 1578 36       		.byte	54
 7632 1579 49       		.byte	73
 7633 157a 49       		.byte	73
 7634 157b 49       		.byte	73
 7635 157c 36       		.byte	54
 7636 157d 26       		.byte	38
 7637 157e 49       		.byte	73
 7638 157f 49       		.byte	73
 7639 1580 49       		.byte	73
 7640 1581 3E       		.byte	62
 7641 1582 00       		.byte	0
 7642 1583 36       		.byte	54
 7643 1584 36       		.byte	54
 7644 1585 00       		.byte	0
 7645 1586 00       		.byte	0
 7646 1587 00       		.byte	0
 7647 1588 56       		.byte	86
 7648 1589 36       		.byte	54
 7649 158a 00       		.byte	0
 7650 158b 00       		.byte	0
 7651 158c 08       		.byte	8
 7652 158d 14       		.byte	20
 7653 158e 22       		.byte	34
 7654 158f 41       		.byte	65
 7655 1590 00       		.byte	0
 7656 1591 14       		.byte	20
 7657 1592 14       		.byte	20
 7658 1593 14       		.byte	20
 7659 1594 14       		.byte	20
 7660 1595 14       		.byte	20
 7661 1596 00       		.byte	0
 7662 1597 41       		.byte	65
 7663 1598 22       		.byte	34
 7664 1599 14       		.byte	20
 7665 159a 08       		.byte	8
 7666 159b 02       		.byte	2
 7667 159c 01       		.byte	1
 7668 159d 51       		.byte	81
 7669 159e 09       		.byte	9
 7670 159f 06       		.byte	6
 7671 15a0 3E       		.byte	62
 7672 15a1 41       		.byte	65
 7673 15a2 59       		.byte	89
 7674 15a3 55       		.byte	85
 7675 15a4 5E       		.byte	94
 7676 15a5 7E       		.byte	126
 7677 15a6 09       		.byte	9
 7678 15a7 09       		.byte	9
 7679 15a8 09       		.byte	9
 7680 15a9 7E       		.byte	126
 7681 15aa 7F       		.byte	127
 7682 15ab 49       		.byte	73
 7683 15ac 49       		.byte	73
 7684 15ad 49       		.byte	73
 7685 15ae 36       		.byte	54
 7686 15af 3E       		.byte	62
 7687 15b0 41       		.byte	65
 7688 15b1 41       		.byte	65
 7689 15b2 41       		.byte	65
 7690 15b3 22       		.byte	34
 7691 15b4 7F       		.byte	127
 7692 15b5 41       		.byte	65
 7693 15b6 41       		.byte	65
 7694 15b7 41       		.byte	65
 7695 15b8 3E       		.byte	62
 7696 15b9 7F       		.byte	127
 7697 15ba 49       		.byte	73
 7698 15bb 49       		.byte	73
 7699 15bc 49       		.byte	73
 7700 15bd 41       		.byte	65
 7701 15be 7F       		.byte	127
 7702 15bf 09       		.byte	9
 7703 15c0 09       		.byte	9
 7704 15c1 09       		.byte	9
 7705 15c2 01       		.byte	1
 7706 15c3 3E       		.byte	62
 7707 15c4 41       		.byte	65
 7708 15c5 41       		.byte	65
 7709 15c6 49       		.byte	73
 7710 15c7 3A       		.byte	58
 7711 15c8 7F       		.byte	127
 7712 15c9 08       		.byte	8
 7713 15ca 08       		.byte	8
 7714 15cb 08       		.byte	8
 7715 15cc 7F       		.byte	127
 7716 15cd 00       		.byte	0
 7717 15ce 41       		.byte	65
 7718 15cf 7F       		.byte	127
 7719 15d0 41       		.byte	65
 7720 15d1 00       		.byte	0
 7721 15d2 30       		.byte	48
 7722 15d3 40       		.byte	64
 7723 15d4 40       		.byte	64
 7724 15d5 40       		.byte	64
 7725 15d6 3F       		.byte	63
 7726 15d7 7F       		.byte	127
 7727 15d8 08       		.byte	8
 7728 15d9 14       		.byte	20
 7729 15da 22       		.byte	34
 7730 15db 41       		.byte	65
 7731 15dc 7F       		.byte	127
 7732 15dd 40       		.byte	64
 7733 15de 40       		.byte	64
 7734 15df 40       		.byte	64
 7735 15e0 40       		.byte	64
 7736 15e1 7F       		.byte	127
 7737 15e2 02       		.byte	2
 7738 15e3 0C       		.byte	12
 7739 15e4 02       		.byte	2
 7740 15e5 7F       		.byte	127
 7741 15e6 7F       		.byte	127
 7742 15e7 02       		.byte	2
 7743 15e8 04       		.byte	4
 7744 15e9 08       		.byte	8
 7745 15ea 7F       		.byte	127
 7746 15eb 3E       		.byte	62
 7747 15ec 41       		.byte	65
 7748 15ed 41       		.byte	65
 7749 15ee 41       		.byte	65
 7750 15ef 3E       		.byte	62
 7751 15f0 7F       		.byte	127
 7752 15f1 09       		.byte	9
 7753 15f2 09       		.byte	9
 7754 15f3 09       		.byte	9
 7755 15f4 06       		.byte	6
 7756 15f5 1E       		.byte	30
 7757 15f6 21       		.byte	33
 7758 15f7 21       		.byte	33
 7759 15f8 21       		.byte	33
 7760 15f9 5E       		.byte	94
 7761 15fa 7F       		.byte	127
 7762 15fb 09       		.byte	9
 7763 15fc 09       		.byte	9
 7764 15fd 09       		.byte	9
 7765 15fe 76       		.byte	118
 7766 15ff 26       		.byte	38
 7767 1600 49       		.byte	73
 7768 1601 49       		.byte	73
 7769 1602 49       		.byte	73
 7770 1603 32       		.byte	50
 7771 1604 01       		.byte	1
 7772 1605 01       		.byte	1
 7773 1606 7F       		.byte	127
 7774 1607 01       		.byte	1
 7775 1608 01       		.byte	1
 7776 1609 3F       		.byte	63
 7777 160a 40       		.byte	64
 7778 160b 40       		.byte	64
 7779 160c 40       		.byte	64
 7780 160d 3F       		.byte	63
 7781 160e 1F       		.byte	31
 7782 160f 20       		.byte	32
 7783 1610 40       		.byte	64
 7784 1611 20       		.byte	32
 7785 1612 1F       		.byte	31
 7786 1613 7F       		.byte	127
 7787 1614 20       		.byte	32
 7788 1615 10       		.byte	16
 7789 1616 20       		.byte	32
 7790 1617 7F       		.byte	127
 7791 1618 41       		.byte	65
 7792 1619 22       		.byte	34
 7793 161a 1C       		.byte	28
 7794 161b 22       		.byte	34
 7795 161c 41       		.byte	65
 7796 161d 07       		.byte	7
 7797 161e 08       		.byte	8
 7798 161f 70       		.byte	112
 7799 1620 08       		.byte	8
 7800 1621 07       		.byte	7
 7801 1622 61       		.byte	97
 7802 1623 51       		.byte	81
 7803 1624 49       		.byte	73
 7804 1625 45       		.byte	69
 7805 1626 43       		.byte	67
 7806 1627 00       		.byte	0
 7807 1628 7F       		.byte	127
 7808 1629 41       		.byte	65
 7809 162a 00       		.byte	0
 7810 162b 00       		.byte	0
 7811 162c 02       		.byte	2
 7812 162d 04       		.byte	4
 7813 162e 08       		.byte	8
 7814 162f 10       		.byte	16
 7815 1630 20       		.byte	32
 7816 1631 00       		.byte	0
 7817 1632 00       		.byte	0
 7818 1633 41       		.byte	65
 7819 1634 7F       		.byte	127
 7820 1635 00       		.byte	0
 7821 1636 04       		.byte	4
 7822 1637 02       		.byte	2
 7823 1638 01       		.byte	1
 7824 1639 02       		.byte	2
 7825 163a 04       		.byte	4
 7826 163b 40       		.byte	64
 7827 163c 40       		.byte	64
 7828 163d 40       		.byte	64
 7829 163e 40       		.byte	64
 7830 163f 40       		.byte	64
 7831 1640 00       		.byte	0
 7832 1641 01       		.byte	1
 7833 1642 02       		.byte	2
 7834 1643 04       		.byte	4
 7835 1644 00       		.byte	0
 7836 1645 20       		.byte	32
 7837 1646 54       		.byte	84
 7838 1647 54       		.byte	84
 7839 1648 54       		.byte	84
 7840 1649 78       		.byte	120
 7841 164a 7F       		.byte	127
 7842 164b 44       		.byte	68
 7843 164c 44       		.byte	68
 7844 164d 44       		.byte	68
 7845 164e 38       		.byte	56
 7846 164f 38       		.byte	56
 7847 1650 44       		.byte	68
 7848 1651 44       		.byte	68
 7849 1652 44       		.byte	68
 7850 1653 44       		.byte	68
 7851 1654 38       		.byte	56
 7852 1655 44       		.byte	68
 7853 1656 44       		.byte	68
 7854 1657 44       		.byte	68
 7855 1658 7F       		.byte	127
 7856 1659 38       		.byte	56
 7857 165a 54       		.byte	84
 7858 165b 54       		.byte	84
 7859 165c 54       		.byte	84
 7860 165d 18       		.byte	24
 7861 165e 04       		.byte	4
 7862 165f 04       		.byte	4
 7863 1660 7E       		.byte	126
 7864 1661 05       		.byte	5
 7865 1662 05       		.byte	5
 7866 1663 08       		.byte	8
 7867 1664 54       		.byte	84
 7868 1665 54       		.byte	84
 7869 1666 54       		.byte	84
 7870 1667 3C       		.byte	60
 7871 1668 7F       		.byte	127
 7872 1669 08       		.byte	8
 7873 166a 04       		.byte	4
 7874 166b 04       		.byte	4
 7875 166c 78       		.byte	120
 7876 166d 00       		.byte	0
 7877 166e 44       		.byte	68
 7878 166f 7D       		.byte	125
 7879 1670 40       		.byte	64
 7880 1671 00       		.byte	0
 7881 1672 20       		.byte	32
 7882 1673 40       		.byte	64
 7883 1674 44       		.byte	68
 7884 1675 3D       		.byte	61
 7885 1676 00       		.byte	0
 7886 1677 7F       		.byte	127
 7887 1678 10       		.byte	16
 7888 1679 28       		.byte	40
 7889 167a 44       		.byte	68
 7890 167b 00       		.byte	0
 7891 167c 00       		.byte	0
 7892 167d 41       		.byte	65
 7893 167e 7F       		.byte	127
 7894 167f 40       		.byte	64
 7895 1680 00       		.byte	0
 7896 1681 7C       		.byte	124
 7897 1682 04       		.byte	4
 7898 1683 78       		.byte	120
 7899 1684 04       		.byte	4
 7900 1685 78       		.byte	120
 7901 1686 7C       		.byte	124
 7902 1687 08       		.byte	8
 7903 1688 04       		.byte	4
 7904 1689 04       		.byte	4
 7905 168a 78       		.byte	120
 7906 168b 38       		.byte	56
 7907 168c 44       		.byte	68
 7908 168d 44       		.byte	68
 7909 168e 44       		.byte	68
 7910 168f 38       		.byte	56
 7911 1690 7C       		.byte	124
 7912 1691 14       		.byte	20
 7913 1692 14       		.byte	20
 7914 1693 14       		.byte	20
 7915 1694 08       		.byte	8
 7916 1695 08       		.byte	8
 7917 1696 14       		.byte	20
 7918 1697 14       		.byte	20
 7919 1698 14       		.byte	20
 7920 1699 7C       		.byte	124
 7921 169a 00       		.byte	0
 7922 169b 7C       		.byte	124
 7923 169c 08       		.byte	8
 7924 169d 04       		.byte	4
 7925 169e 04       		.byte	4
 7926 169f 48       		.byte	72
 7927 16a0 54       		.byte	84
 7928 16a1 54       		.byte	84
 7929 16a2 54       		.byte	84
 7930 16a3 20       		.byte	32
 7931 16a4 04       		.byte	4
 7932 16a5 04       		.byte	4
 7933 16a6 3F       		.byte	63
 7934 16a7 44       		.byte	68
 7935 16a8 44       		.byte	68
 7936 16a9 3C       		.byte	60
 7937 16aa 40       		.byte	64
 7938 16ab 40       		.byte	64
 7939 16ac 20       		.byte	32
 7940 16ad 7C       		.byte	124
 7941 16ae 1C       		.byte	28
 7942 16af 20       		.byte	32
 7943 16b0 40       		.byte	64
 7944 16b1 20       		.byte	32
 7945 16b2 1C       		.byte	28
 7946 16b3 3C       		.byte	60
 7947 16b4 40       		.byte	64
 7948 16b5 30       		.byte	48
 7949 16b6 40       		.byte	64
 7950 16b7 3C       		.byte	60
 7951 16b8 44       		.byte	68
 7952 16b9 28       		.byte	40
 7953 16ba 10       		.byte	16
 7954 16bb 28       		.byte	40
 7955 16bc 44       		.byte	68
 7956 16bd 0C       		.byte	12
 7957 16be 50       		.byte	80
 7958 16bf 50       		.byte	80
 7959 16c0 50       		.byte	80
 7960 16c1 3C       		.byte	60
 7961 16c2 44       		.byte	68
 7962 16c3 64       		.byte	100
 7963 16c4 54       		.byte	84
 7964 16c5 4C       		.byte	76
 7965 16c6 44       		.byte	68
 7966 16c7 00       		.byte	0
 7967 16c8 08       		.byte	8
 7968 16c9 36       		.byte	54
 7969 16ca 41       		.byte	65
 7970 16cb 41       		.byte	65
 7971 16cc 00       		.byte	0
 7972 16cd 00       		.byte	0
 7973 16ce 7F       		.byte	127
 7974 16cf 00       		.byte	0
 7975 16d0 00       		.byte	0
 7976 16d1 41       		.byte	65
 7977 16d2 41       		.byte	65
 7978 16d3 36       		.byte	54
 7979 16d4 08       		.byte	8
 7980 16d5 00       		.byte	0
 7981 16d6 02       		.byte	2
 7982 16d7 01       		.byte	1
 7983 16d8 02       		.byte	2
 7984 16d9 04       		.byte	4
 7985 16da 02       		.byte	2
 7986 16db 00000000 		.space	5
 7986      00
 7987              		.section	.rodata.str1.1,"aMS",%progbits,1
 7988              	.LC0:
 7989 0000 30313233 		.ascii	"0123456789ABCDEF\000"
 7989      34353637 
 7989      38394142 
 7989      43444546 
 7989      00
 7990              	.LC1:
 7991 0011 5900     		.ascii	"Y\000"
 7992              	.LC2:
 7993 0013 5800     		.ascii	"X\000"
 7994              	.LC3:
 7995 0015 583D4144 		.ascii	"X=ADC-CH  Y=VAL  Y-MAX=4095  Y-UNIT=40.95\000"
 7995      432D4348 
 7995      2020593D 
 7995      56414C20 
 7995      20592D4D 
 7996              	.LC4:
 7997 003f 28302C30 		.ascii	"(0,0)\000"
 7997      2900
 7998              	.LC5:
 7999 0045 25643032 		.ascii	"%d02\000"
 7999      00
 8000              	.LC6:
 8001 004a 25643033 		.ascii	"%d03\000"
 8001      00
 8002              	.LC7:
 8003 004f 20202020 		.ascii	"                    \000"
 8003      20202020 
 8003      20202020 
 8003      20202020 
 8003      20202020 
 8004              		.data
 8005              		.align	1
 8006              		.set	.LANCHOR1,. + 0
 8009              	BackColor:
 8010 0000 FFFF     		.short	-1
 8011              		.bss
 8012              		.align	1
 8013              		.set	.LANCHOR0,. + 0
 8016              	TextColor:
 8017 0000 0000     		.space	2
 8018              		.text
 8019              	.Letext0:
 8020              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q2\\bin\\../lib/gcc/arm-none-eab
 8021              		.file 3 "../CM3 Core/LPC17xx.h"
 8022              		.file 4 "../Header Files/lpc_types.h"
 8023              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\4.7 2013q2\\bin\\../lib/gcc/arm-none-eab
 8024              		.file 6 "../Header Files/lpc17xx_uart.h"
 8025              		.file 7 "../Header Files/lpc17xx_ssp.h"
 8026              		.file 8 "../Header Files/lpc_ssp_glcd.h"
 8027              		.file 9 "<built-in>"
 8028              		.file 10 "../CM3 Core/core_cm3.h"
 8029              		.file 11 "../Header Files/lpc17xx_i2c.h"
 8030              		.file 12 "../Header Files/Font_24x16.h"
 8031              		.file 13 "../Header Files/Font_5x7.h"
 8032              		.file 14 "../Header Files/lpc17xx_gpio.h"
 8033              		.file 15 "../Header Files/lpc17xx_systick.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lpc_ssp_glcd.c
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:18     .text:00000000 $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:22     .text:00000000 wr_dat_start
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:52     .text:00000018 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:56     .text:0000001c $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:60     .text:0000001c wr_dat_stop
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:77     .text:00000024 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:81     .text:00000028 $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:85     .text:00000028 wr_dat_only
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:133    .text:00000048 $d
                            *COM*:00000040 Tx_Buf1
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:138    .text:00000050 $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:143    .text:00000050 GLCD_Backlight
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:178    .text:00000066 GLCD_Reset
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:223    .text:00000090 GLCD_SetTextColor
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:238    .text:00000098 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:242    .text:0000009c $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:247    .text:0000009c GLCD_SetBackColor
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:262    .text:000000a4 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:266    .text:000000a8 $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:271    .text:000000a8 Write_Command_Glcd
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:356    .text:00000100 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:360    .text:00000104 $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:365    .text:00000104 Write_Data_Glcd
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:438    .text:00000144 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:443    .text:0000014c $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:448    .text:0000014c GLCD_Bargraph
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:582    .text:000001f4 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:587    .text:000001fc $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:592    .text:000001fc GLCD_Draw_Char
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:715    .text:00000294 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:720    .text:0000029c $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:725    .text:0000029c GLCD_Display_Char
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:763    .text:000002c0 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:767    .text:000002c4 $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:772    .text:000002c4 GLCD_PutPixel
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:828    .text:000002f4 GLCD_Text
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:1063   .text:00000426 gprintf
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:1500   .text:000006b4 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:1508   .text:000006c8 $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:1756   .text:0000082c $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:1760   .text:00000830 $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:1765   .text:00000830 GLCD_Line
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:1973   .text:00000918 GLCD_LBar
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:2114   .text:000009be GLCD_Triangle
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:2959   .text:00000e92 Show_BarGraph
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:3231   .text:00001040 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:3240   .text:00001058 $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:3245   .text:00001058 GLCD_Frame
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:3409   .text:00001176 GLCD_Circle
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:3751   .text:00001358 GLCD_Window
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:3824   .text:000013a2 GLCD_Display_String
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:3890   .text:000013d2 GLCD_ClearLn
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:3924   .text:000013f4 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:3928   .text:000013f8 $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:3933   .text:000013f8 GLCD_Clear
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4003   .text:00001442 GLCD_Set_Loc
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4054   .text:0000146e GLCD_Window_Fill
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4124   .text:000014a4 GLCD_Bar
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4182   .text:000014d6 GLCD_Rect
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4354   .text:000015ca GLCD_Bitmap
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4430   .text:0000160a GLCD_Display_Home
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4454   .text:00001618 GLCD_Driver_OutCtrl
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4478   .text:0000162a $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4482   .text:0000162e $t
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4514   .text:0000164e GLCD_Init
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:7510   .rodata:00001500 default5x7
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4819   .rodata:00000000 Font_24x16
                            *COM*:00000040 I2C_Rx_Buf
                            *COM*:00000040 I2C_Tx_Buf
                            *COM*:00000040 Rx_Buf1
                            *COM*:00000001 TxIntStat
                            *COM*:00000210 rb
                            *COM*:00000002 EscFlag
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:4814   .rodata:00000000 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:8005   .data:00000000 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:8009   .data:00000000 BackColor
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:8012   .bss:00000000 $d
C:\Users\raghav\AppData\Local\Temp\cc9UejfZ.s:8016   .bss:00000000 TextColor
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.549b84bf9d8399e395ff8216fcbb3d69
                           .group:00000000 wm4.LPC17xx.h.27.964facdaadd4aa3f18ac78c8a78f0013
                           .group:00000000 wm4.core_cm3.h.32.3cac756d6e704b813781f82afd94fa5f
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.25.6beb15babd14c076008ec0890c26e21c
                           .group:00000000 wm4.core_cm3.h.83.1a3cb9afc687cf157efeddb3d5f3109e
                           .group:00000000 wm4.LPC17xx.h.953.82b7a9ed60bb594048bc8738cf1d3489
                           .group:00000000 wm4.lpc_types.h.32.72d58ce80fabd1a5430c6ec0500a090b
                           .group:00000000 wm4.lpc17xx_pinsel.h.30.767cda9b27a5c688cd97e5947d664047
                           .group:00000000 wm4.lpc17xx_clkpwr.h.30.8537d92ff6965961e80fda89ac5019f2
                           .group:00000000 wm4.lpc17xx_systick.h.30.9f34c15ae315a203fed1d933040ad7b9
                           .group:00000000 wm4.lpc17xx_gpio.h.30.0b884ee110dd20865784f12e1569ecf1
                           .group:00000000 wm4.lpc17xx_wdt.h.34.a2dcafab9849854019efb51f717a8129
                           .group:00000000 wm4.stdarg.h.31.b70f21342353634f7b44d85f85f13832
                           .group:00000000 wm4.lpc17xx_uart.h.58.dbba6e724b29a6214e9cafbaf3ee8a9e
                           .group:00000000 wm4.lpc17xx_ssp.h.48.cd045d667ab7b89d5d550d38997df61b
                           .group:00000000 wm4.lpc17xx_i2c.h.30.8ecc2351e7cba41135ba36b3ad45f764
                           .group:00000000 wm4.lpc_i2c_tsc2004.h.29.34082f268f216caa8d0bf2c0960ad4a6
                           .group:00000000 wm4.lpc_ssp_glcd.h.46.c050a23f7d3e575d1eafabe862fb4f95
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.Font_24x16.h.16.3819cadfc08710b0322707370d919056

UNDEFINED SYMBOLS
CS_Force1
GPIO_SetValue
SSP_ReadWrite
GPIO_ClearValue
delay_ms
memcpy
memset
GPIO_SetDir
